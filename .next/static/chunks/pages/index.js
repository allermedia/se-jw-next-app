/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/@sentry/browser/esm/client.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/client.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserClient\": function() { return /* binding */ BrowserClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n\n\n\n\n\n\n/**\n * Configuration options for the Sentry Browser SDK.\n * @see @sentry/types Options for more information.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nclass BrowserClient extends _sentry_core__WEBPACK_IMPORTED_MODULE_0__.BaseClient {\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n   constructor(options) {\n    const sdkSource = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.SENTRY_SDK_SOURCE || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getSDKSource)();\n\n    options._metadata = options._metadata || {};\n    options._metadata.sdk = options._metadata.sdk || {\n      name: 'sentry.javascript.browser',\n      packages: [\n        {\n          name: `${sdkSource}:@sentry/browser`,\n          version: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n        },\n      ],\n      version: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n    };\n\n    super(options);\n\n    if (options.sendClientReports && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document) {\n      _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.addEventListener('visibilitychange', () => {\n        if (_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.visibilityState === 'hidden') {\n          this._flushOutcomes();\n        }\n      });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromException(exception, hint) {\n    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromException)(this._options.stackParser, exception, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   eventFromMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level = 'info',\n    hint,\n  ) {\n    return (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_3__.eventFromMessage)(this._options.stackParser, message, level, hint, this._options.attachStacktrace);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint) {\n    // We only want to add the sentry event breadcrumb when the user has the breadcrumb integration installed and\n    // activated its `sentry` option.\n    // We also do not want to use the `Breadcrumbs` class here directly, because we do not want it to be included in\n    // bundles, if it is not used by the SDK.\n    // This all sadly is a bit ugly, but we currently don't have a \"pre-send\" hook on the integrations so we do it this\n    // way for now.\n    const breadcrumbIntegration = this.getIntegrationById(_integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_4__.BREADCRUMB_INTEGRATION_ID) ;\n    // We check for definedness of `addSentryBreadcrumb` in case users provided their own integration with id\n    // \"Breadcrumbs\" that does not have this function.\n    if (breadcrumbIntegration && breadcrumbIntegration.addSentryBreadcrumb) {\n      breadcrumbIntegration.addSentryBreadcrumb(event);\n    }\n\n    super.sendEvent(event, hint);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   _prepareEvent(event, hint, scope) {\n    event.platform = event.platform || 'javascript';\n    return super._prepareEvent(event, hint, scope);\n  }\n\n  /**\n   * Sends client reports as an envelope.\n   */\n   _flushOutcomes() {\n    const outcomes = this._clearOutcomes();\n\n    if (outcomes.length === 0) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('No outcomes to send');\n      return;\n    }\n\n    if (!this._dsn) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('No dsn provided, will not send outcomes');\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('Sending outcomes:', outcomes);\n\n    const url = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getEnvelopeEndpointWithUrlEncodedAuth)(this._dsn, this._options);\n    const envelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.createClientReportEnvelope)(outcomes, this._options.tunnel && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dsnToString)(this._dsn));\n\n    try {\n      const isRealNavigator = Object.prototype.toString.call(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator) === '[object Navigator]';\n      const hasSendBeacon = isRealNavigator && typeof _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator.sendBeacon === 'function';\n      // Make sure beacon is not used if user configures custom transport options\n      if (hasSendBeacon && !this._options.transportOptions) {\n        // Prevent illegal invocations - https://xgwang.me/posts/you-may-not-know-beacon/#it-may-throw-error%2C-be-sure-to-catch\n        const sendBeacon = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator.sendBeacon.bind(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator);\n        sendBeacon(url, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.serializeEnvelope)(envelope));\n      } else {\n        // If beacon is not supported or if they are using the tunnel option\n        // use our regular transport to send client reports to Sentry.\n        this._sendEnvelope(envelope);\n      }\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error(e);\n    }\n  }\n}\n\n\n//# sourceMappingURL=client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/client.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/eventbuilder.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/eventbuilder.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"eventFromError\": function() { return /* binding */ eventFromError; },\n/* harmony export */   \"eventFromException\": function() { return /* binding */ eventFromException; },\n/* harmony export */   \"eventFromMessage\": function() { return /* binding */ eventFromMessage; },\n/* harmony export */   \"eventFromPlainObject\": function() { return /* binding */ eventFromPlainObject; },\n/* harmony export */   \"eventFromString\": function() { return /* binding */ eventFromString; },\n/* harmony export */   \"eventFromUnknownInput\": function() { return /* binding */ eventFromUnknownInput; },\n/* harmony export */   \"exceptionFromError\": function() { return /* binding */ exceptionFromError; },\n/* harmony export */   \"parseStackFrames\": function() { return /* binding */ parseStackFrames; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/**\n * This function creates an exception from a JavaScript Error\n */\nfunction exceptionFromError(stackParser, ex) {\n  // Get the frames first since Opera can lose the stack if we touch anything else first\n  const frames = parseStackFrames(stackParser, ex);\n\n  const exception = {\n    type: ex && ex.name,\n    value: extractMessage(ex),\n  };\n\n  if (frames.length) {\n    exception.stacktrace = { frames };\n  }\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n\n/**\n * @hidden\n */\nfunction eventFromPlainObject(\n  stackParser,\n  exception,\n  syntheticException,\n  isUnhandledRejection,\n) {\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n  const client = hub.getClient();\n  const normalizeDepth = client && client.getOptions().normalizeDepth;\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception) ? exception.constructor.name : isUnhandledRejection ? 'UnhandledRejection' : 'Error',\n          value: `Non-Error ${\n            isUnhandledRejection ? 'promise rejection' : 'exception'\n          } captured with keys: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.extractExceptionKeysForMessage)(exception)}`,\n        },\n      ],\n    },\n    extra: {\n      __serialized__: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.normalizeToSize)(exception, normalizeDepth),\n    },\n  };\n\n  if (syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      // event.exception.values[0] has been set above\n      (event.exception ).values[0].stacktrace = { frames };\n    }\n  }\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromError(stackParser, ex) {\n  return {\n    exception: {\n      values: [exceptionFromError(stackParser, ex)],\n    },\n  };\n}\n\n/** Parses stack frames from an error */\nfunction parseStackFrames(\n  stackParser,\n  ex,\n) {\n  // Access and store the stacktrace property before doing ANYTHING\n  // else to it because Opera is not very good at providing it\n  // reliably in other circumstances.\n  const stacktrace = ex.stacktrace || ex.stack || '';\n\n  const popSize = getPopSize(ex);\n\n  try {\n    return stackParser(stacktrace, popSize);\n  } catch (e) {\n    // no-empty\n  }\n\n  return [];\n}\n\n// Based on our own mapping pattern - https://github.com/getsentry/sentry/blob/9f08305e09866c8bd6d0c24f5b0aabdd7dd6c59c/src/sentry/lang/javascript/errormapping.py#L83-L108\nconst reactMinifiedRegexp = /Minified React error #\\d+;/i;\n\nfunction getPopSize(ex) {\n  if (ex) {\n    if (typeof ex.framesToPop === 'number') {\n      return ex.framesToPop;\n    }\n\n    if (reactMinifiedRegexp.test(ex.message)) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * There are cases where stacktrace.message is an Event object\n * https://github.com/getsentry/sentry-javascript/issues/1949\n * In this specific case we try to extract stacktrace.message.error.message\n */\nfunction extractMessage(ex) {\n  const message = ex && ex.message;\n  if (!message) {\n    return 'No error message';\n  }\n  if (message.error && typeof message.error.message === 'string') {\n    return message.error.message;\n  }\n  return message;\n}\n\n/**\n * Creates an {@link Event} from all inputs to `captureException` and non-primitive inputs to `captureMessage`.\n * @hidden\n */\nfunction eventFromException(\n  stackParser,\n  exception,\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromUnknownInput(stackParser, exception, syntheticException, attachStacktrace);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionMechanism)(event); // defaults to { type: 'generic', handled: true }\n  event.level = 'error';\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.resolvedSyncPromise)(event);\n}\n\n/**\n * Builds and Event from a Message\n * @hidden\n */\nfunction eventFromMessage(\n  stackParser,\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  level = 'info',\n  hint,\n  attachStacktrace,\n) {\n  const syntheticException = (hint && hint.syntheticException) || undefined;\n  const event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n  event.level = level;\n  if (hint && hint.event_id) {\n    event.event_id = hint.event_id;\n  }\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.resolvedSyncPromise)(event);\n}\n\n/**\n * @hidden\n */\nfunction eventFromUnknownInput(\n  stackParser,\n  exception,\n  syntheticException,\n  attachStacktrace,\n  isUnhandledRejection,\n) {\n  let event;\n\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isErrorEvent)(exception ) && (exception ).error) {\n    // If it is an ErrorEvent with `error` property, extract it to get actual Error\n    const errorEvent = exception ;\n    return eventFromError(stackParser, errorEvent.error );\n  }\n\n  // If it is a `DOMError` (which is a legacy API, but still supported in some browsers) then we just extract the name\n  // and message, as it doesn't provide anything else. According to the spec, all `DOMExceptions` should also be\n  // `Error`s, but that's not the case in IE11, so in that case we treat it the same as we do a `DOMError`.\n  //\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n  // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n  // https://webidl.spec.whatwg.org/#es-DOMException-specialness\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(exception ) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMException)(exception )) {\n    const domException = exception ;\n\n    if ('stack' in (exception )) {\n      event = eventFromError(stackParser, exception );\n    } else {\n      const name = domException.name || ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isDOMError)(domException) ? 'DOMError' : 'DOMException');\n      const message = domException.message ? `${name}: ${domException.message}` : name;\n      event = eventFromString(stackParser, message, syntheticException, attachStacktrace);\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionTypeValue)(event, message);\n    }\n    if ('code' in domException) {\n      event.tags = { ...event.tags, 'DOMException.code': `${domException.code}` };\n    }\n\n    return event;\n  }\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isError)(exception)) {\n    // we have a real Error object, do nothing\n    return eventFromError(stackParser, exception);\n  }\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(exception) || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isEvent)(exception)) {\n    // If it's a plain object or an instance of `Event` (the built-in JS kind, not this SDK's `Event` type), serialize\n    // it manually. This will allow us to group events based on top-level keys which is much better than creating a new\n    // group on any key/value change.\n    const objectException = exception ;\n    event = eventFromPlainObject(stackParser, objectException, syntheticException, isUnhandledRejection);\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionMechanism)(event, {\n      synthetic: true,\n    });\n    return event;\n  }\n\n  // If none of previous checks were valid, then it means that it's not:\n  // - an instance of DOMError\n  // - an instance of DOMException\n  // - an instance of Event\n  // - an instance of Error\n  // - a valid ErrorEvent (one with an error property)\n  // - a plain Object\n  //\n  // So bail out and capture it as a simple message:\n  event = eventFromString(stackParser, exception , syntheticException, attachStacktrace);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionTypeValue)(event, `${exception}`, undefined);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionMechanism)(event, {\n    synthetic: true,\n  });\n\n  return event;\n}\n\n/**\n * @hidden\n */\nfunction eventFromString(\n  stackParser,\n  input,\n  syntheticException,\n  attachStacktrace,\n) {\n  const event = {\n    message: input,\n  };\n\n  if (attachStacktrace && syntheticException) {\n    const frames = parseStackFrames(stackParser, syntheticException);\n    if (frames.length) {\n      event.exception = {\n        values: [{ value: input, stacktrace: { frames } }],\n      };\n    }\n  }\n\n  return event;\n}\n\n\n//# sourceMappingURL=eventbuilder.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/eventbuilder.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/helpers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/helpers.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WINDOW\": function() { return /* binding */ WINDOW; },\n/* harmony export */   \"ignoreNextOnError\": function() { return /* binding */ ignoreNextOnError; },\n/* harmony export */   \"shouldIgnoreOnError\": function() { return /* binding */ shouldIgnoreOnError; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nlet ignoreOnError = 0;\n\n/**\n * @hidden\n */\nfunction shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n\n/**\n * @hidden\n */\nfunction ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError++;\n  setTimeout(() => {\n    ignoreOnError--;\n  });\n}\n\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap. It is generally safe to pass an unbound function, because the returned wrapper always\n * has a correct `this` context.\n * @returns The wrapped function.\n * @hidden\n */\nfunction wrap(\n  fn,\n  options\n\n = {},\n  before,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    const wrapper = fn.__sentry_wrapped__;\n    if (wrapper) {\n      return wrapper;\n    }\n\n    // We don't wanna wrap it twice\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  /* eslint-disable prefer-rest-params */\n  // It is important that `sentryWrapped` is not an arrow function to preserve the context of `this`\n  const sentryWrapped = function () {\n    const args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      const wrappedArguments = args.map((arg) => wrap(arg, options));\n\n      // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.withScope)((scope) => {\n        scope.addEventProcessor((event) => {\n          if (options.mechanism) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionTypeValue)(event, undefined, undefined);\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(event, options.mechanism);\n          }\n\n          event.extra = {\n            ...event.extra,\n            arguments: args,\n          };\n\n          return event;\n        });\n\n        (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(ex);\n      });\n\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n  try {\n    for (const property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.markFunctionWrapped)(sentryWrapped, fn);\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(fn, '__sentry_wrapped__', sentryWrapped);\n\n  // Restore original function name (not all browsers allow that)\n  try {\n    const descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name') ;\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get() {\n          return fn.name;\n        },\n      });\n    }\n    // eslint-disable-next-line no-empty\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n\n/**\n * All properties the report dialog supports\n */\n\n\n//# sourceMappingURL=helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9oZWxwZXJzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyRDtBQUNrRzs7QUFFN0osZUFBZSxxREFBVTs7QUFFekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSxrRUFBbUI7QUFDM0I7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjs7QUFFQSxNQUFNLHVEQUFTO0FBQ2Y7QUFDQTtBQUNBLFlBQVksb0VBQXFCO0FBQ2pDLFlBQVksb0VBQXFCO0FBQ2pDOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsU0FBUzs7QUFFVCxRQUFRLDhEQUFnQjtBQUN4QixPQUFPOztBQUVQO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGVBQWU7O0FBRW5CO0FBQ0E7QUFDQSxFQUFFLGtFQUFtQjs7QUFFckIsRUFBRSx1RUFBd0I7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0EsSUFBSTs7QUFFSjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFZ0U7QUFDaEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vaGVscGVycy5qcz8wYjViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdpdGhTY29wZSwgY2FwdHVyZUV4Y2VwdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBHTE9CQUxfT0JKLCBnZXRPcmlnaW5hbEZ1bmN0aW9uLCBtYXJrRnVuY3Rpb25XcmFwcGVkLCBhZGROb25FbnVtZXJhYmxlUHJvcGVydHksIGFkZEV4Y2VwdGlvblR5cGVWYWx1ZSwgYWRkRXhjZXB0aW9uTWVjaGFuaXNtIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFdJTkRPVyA9IEdMT0JBTF9PQkogO1xuXG5sZXQgaWdub3JlT25FcnJvciA9IDA7XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBzaG91bGRJZ25vcmVPbkVycm9yKCkge1xuICByZXR1cm4gaWdub3JlT25FcnJvciA+IDA7XG59XG5cbi8qKlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBpZ25vcmVOZXh0T25FcnJvcigpIHtcbiAgLy8gb25lcnJvciBzaG91bGQgdHJpZ2dlciBiZWZvcmUgc2V0VGltZW91dFxuICBpZ25vcmVPbkVycm9yKys7XG4gIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgIGlnbm9yZU9uRXJyb3ItLTtcbiAgfSk7XG59XG5cbi8qKlxuICogSW5zdHJ1bWVudHMgdGhlIGdpdmVuIGZ1bmN0aW9uIGFuZCBzZW5kcyBhbiBldmVudCB0byBTZW50cnkgZXZlcnkgdGltZSB0aGVcbiAqIGZ1bmN0aW9uIHRocm93cyBhbiBleGNlcHRpb24uXG4gKlxuICogQHBhcmFtIGZuIEEgZnVuY3Rpb24gdG8gd3JhcC4gSXQgaXMgZ2VuZXJhbGx5IHNhZmUgdG8gcGFzcyBhbiB1bmJvdW5kIGZ1bmN0aW9uLCBiZWNhdXNlIHRoZSByZXR1cm5lZCB3cmFwcGVyIGFsd2F5c1xuICogaGFzIGEgY29ycmVjdCBgdGhpc2AgY29udGV4dC5cbiAqIEByZXR1cm5zIFRoZSB3cmFwcGVkIGZ1bmN0aW9uLlxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiB3cmFwKFxuICBmbixcbiAgb3B0aW9uc1xuXG4gPSB7fSxcbiAgYmVmb3JlLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuKSB7XG4gIC8vIGZvciBmdXR1cmUgcmVhZGVycyB3aGF0IHRoaXMgZG9lcyBpcyB3cmFwIGEgZnVuY3Rpb24gYW5kIHRoZW4gY3JlYXRlXG4gIC8vIGEgYmktZGlyZWN0aW9uYWwgd3JhcHBpbmcgYmV0d2VlbiB0aGVtLlxuICAvL1xuICAvLyBleGFtcGxlOiB3cmFwcGVkID0gd3JhcChvcmlnaW5hbCk7XG4gIC8vICBvcmlnaW5hbC5fX3NlbnRyeV93cmFwcGVkX18gLT4gd3JhcHBlZFxuICAvLyAgd3JhcHBlZC5fX3NlbnRyeV9vcmlnaW5hbF9fIC0+IG9yaWdpbmFsXG5cbiAgaWYgKHR5cGVvZiBmbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBmbjtcbiAgfVxuXG4gIHRyeSB7XG4gICAgLy8gaWYgd2UncmUgZGVhbGluZyB3aXRoIGEgZnVuY3Rpb24gdGhhdCB3YXMgcHJldmlvdXNseSB3cmFwcGVkLCByZXR1cm5cbiAgICAvLyB0aGUgb3JpZ2luYWwgd3JhcHBlci5cbiAgICBjb25zdCB3cmFwcGVyID0gZm4uX19zZW50cnlfd3JhcHBlZF9fO1xuICAgIGlmICh3cmFwcGVyKSB7XG4gICAgICByZXR1cm4gd3JhcHBlcjtcbiAgICB9XG5cbiAgICAvLyBXZSBkb24ndCB3YW5uYSB3cmFwIGl0IHR3aWNlXG4gICAgaWYgKGdldE9yaWdpbmFsRnVuY3Rpb24oZm4pKSB7XG4gICAgICByZXR1cm4gZm47XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gSnVzdCBhY2Nlc3NpbmcgY3VzdG9tIHByb3BzIGluIHNvbWUgU2VsZW5pdW0gZW52aXJvbm1lbnRzXG4gICAgLy8gY2FuIGNhdXNlIGEgXCJQZXJtaXNzaW9uIGRlbmllZFwiIGV4Y2VwdGlvbiAoc2VlIHJhdmVuLWpzIzQ5NSkuXG4gICAgLy8gQmFpbCBvbiB3cmFwcGluZyBhbmQgcmV0dXJuIHRoZSBmdW5jdGlvbiBhcy1pcyAoZGVmZXJzIHRvIHdpbmRvdy5vbmVycm9yKS5cbiAgICByZXR1cm4gZm47XG4gIH1cblxuICAvKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItcmVzdC1wYXJhbXMgKi9cbiAgLy8gSXQgaXMgaW1wb3J0YW50IHRoYXQgYHNlbnRyeVdyYXBwZWRgIGlzIG5vdCBhbiBhcnJvdyBmdW5jdGlvbiB0byBwcmVzZXJ2ZSB0aGUgY29udGV4dCBvZiBgdGhpc2BcbiAgY29uc3Qgc2VudHJ5V3JhcHBlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtcblxuICAgIHRyeSB7XG4gICAgICBpZiAoYmVmb3JlICYmIHR5cGVvZiBiZWZvcmUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgYmVmb3JlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55LCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgICAgIGNvbnN0IHdyYXBwZWRBcmd1bWVudHMgPSBhcmdzLm1hcCgoYXJnKSA9PiB3cmFwKGFyZywgb3B0aW9ucykpO1xuXG4gICAgICAvLyBBdHRlbXB0IHRvIGludm9rZSB1c2VyLWxhbmQgZnVuY3Rpb25cbiAgICAgIC8vIE5PVEU6IElmIHlvdSBhcmUgYSBTZW50cnkgdXNlciwgYW5kIHlvdSBhcmUgc2VlaW5nIHRoaXMgc3RhY2sgZnJhbWUsIGl0XG4gICAgICAvLyAgICAgICBtZWFucyB0aGUgc2VudHJ5LmphdmFzY3JpcHQgU0RLIGNhdWdodCBhbiBlcnJvciBpbnZva2luZyB5b3VyIGFwcGxpY2F0aW9uIGNvZGUuIFRoaXNcbiAgICAgIC8vICAgICAgIGlzIGV4cGVjdGVkIGJlaGF2aW9yIGFuZCBOT1QgaW5kaWNhdGl2ZSBvZiBhIGJ1ZyB3aXRoIHNlbnRyeS5qYXZhc2NyaXB0LlxuICAgICAgcmV0dXJuIGZuLmFwcGx5KHRoaXMsIHdyYXBwZWRBcmd1bWVudHMpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICBpZ25vcmVOZXh0T25FcnJvcigpO1xuXG4gICAgICB3aXRoU2NvcGUoKHNjb3BlKSA9PiB7XG4gICAgICAgIHNjb3BlLmFkZEV2ZW50UHJvY2Vzc29yKChldmVudCkgPT4ge1xuICAgICAgICAgIGlmIChvcHRpb25zLm1lY2hhbmlzbSkge1xuICAgICAgICAgICAgYWRkRXhjZXB0aW9uVHlwZVZhbHVlKGV2ZW50LCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBhZGRFeGNlcHRpb25NZWNoYW5pc20oZXZlbnQsIG9wdGlvbnMubWVjaGFuaXNtKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBldmVudC5leHRyYSA9IHtcbiAgICAgICAgICAgIC4uLmV2ZW50LmV4dHJhLFxuICAgICAgICAgICAgYXJndW1lbnRzOiBhcmdzLFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNhcHR1cmVFeGNlcHRpb24oZXgpO1xuICAgICAgfSk7XG5cbiAgICAgIHRocm93IGV4O1xuICAgIH1cbiAgfTtcbiAgLyogZXNsaW50LWVuYWJsZSBwcmVmZXItcmVzdC1wYXJhbXMgKi9cblxuICAvLyBBY2Nlc3Npbmcgc29tZSBvYmplY3RzIG1heSB0aHJvd1xuICAvLyByZWY6IGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzExNjhcbiAgdHJ5IHtcbiAgICBmb3IgKGNvbnN0IHByb3BlcnR5IGluIGZuKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGZuLCBwcm9wZXJ0eSkpIHtcbiAgICAgICAgc2VudHJ5V3JhcHBlZFtwcm9wZXJ0eV0gPSBmbltwcm9wZXJ0eV07XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChfb08pIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcblxuICAvLyBTaWduYWwgdGhhdCB0aGlzIGZ1bmN0aW9uIGhhcyBiZWVuIHdyYXBwZWQvZmlsbGVkIGFscmVhZHlcbiAgLy8gZm9yIGJvdGggZGVidWdnaW5nIGFuZCB0byBwcmV2ZW50IGl0IHRvIGJlaW5nIHdyYXBwZWQvZmlsbGVkIHR3aWNlXG4gIG1hcmtGdW5jdGlvbldyYXBwZWQoc2VudHJ5V3JhcHBlZCwgZm4pO1xuXG4gIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eShmbiwgJ19fc2VudHJ5X3dyYXBwZWRfXycsIHNlbnRyeVdyYXBwZWQpO1xuXG4gIC8vIFJlc3RvcmUgb3JpZ2luYWwgZnVuY3Rpb24gbmFtZSAobm90IGFsbCBicm93c2VycyBhbGxvdyB0aGF0KVxuICB0cnkge1xuICAgIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNlbnRyeVdyYXBwZWQsICduYW1lJykgO1xuICAgIGlmIChkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSkge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNlbnRyeVdyYXBwZWQsICduYW1lJywge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgcmV0dXJuIGZuLm5hbWU7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWVtcHR5XG4gIH0gY2F0Y2ggKF9vTykge31cblxuICByZXR1cm4gc2VudHJ5V3JhcHBlZDtcbn1cblxuLyoqXG4gKiBBbGwgcHJvcGVydGllcyB0aGUgcmVwb3J0IGRpYWxvZyBzdXBwb3J0c1xuICovXG5cbmV4cG9ydCB7IFdJTkRPVywgaWdub3JlTmV4dE9uRXJyb3IsIHNob3VsZElnbm9yZU9uRXJyb3IsIHdyYXAgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlbHBlcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/helpers.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Breadcrumbs\": function() { return /* reexport safe */ _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_14__.Breadcrumbs; },\n/* harmony export */   \"BrowserClient\": function() { return /* reexport safe */ _client_js__WEBPACK_IMPORTED_MODULE_2__.BrowserClient; },\n/* harmony export */   \"BrowserProfilingIntegration\": function() { return /* reexport safe */ _profiling_integration_js__WEBPACK_IMPORTED_MODULE_11__.BrowserProfilingIntegration; },\n/* harmony export */   \"Dedupe\": function() { return /* reexport safe */ _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_17__.Dedupe; },\n/* harmony export */   \"FunctionToString\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.FunctionToString; },\n/* harmony export */   \"GlobalHandlers\": function() { return /* reexport safe */ _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_12__.GlobalHandlers; },\n/* harmony export */   \"HttpContext\": function() { return /* reexport safe */ _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_16__.HttpContext; },\n/* harmony export */   \"Hub\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Hub; },\n/* harmony export */   \"InboundFilters\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.InboundFilters; },\n/* harmony export */   \"Integrations\": function() { return /* binding */ INTEGRATIONS; },\n/* harmony export */   \"LinkedErrors\": function() { return /* reexport safe */ _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_15__.LinkedErrors; },\n/* harmony export */   \"Replay\": function() { return /* reexport safe */ _sentry_replay__WEBPACK_IMPORTED_MODULE_8__.Replay; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION; },\n/* harmony export */   \"Scope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Scope; },\n/* harmony export */   \"TryCatch\": function() { return /* reexport safe */ _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_13__.TryCatch; },\n/* harmony export */   \"WINDOW\": function() { return /* reexport safe */ _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW; },\n/* harmony export */   \"addBreadcrumb\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.addBreadcrumb; },\n/* harmony export */   \"addGlobalEventProcessor\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.addGlobalEventProcessor; },\n/* harmony export */   \"captureEvent\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException; },\n/* harmony export */   \"captureMessage\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureMessage; },\n/* harmony export */   \"chromeStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__.chromeStackLineParser; },\n/* harmony export */   \"close\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.close; },\n/* harmony export */   \"configureScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.configureScope; },\n/* harmony export */   \"createTransport\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.createTransport; },\n/* harmony export */   \"defaultIntegrations\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.defaultIntegrations; },\n/* harmony export */   \"defaultStackLineParsers\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__.defaultStackLineParsers; },\n/* harmony export */   \"defaultStackParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__.defaultStackParser; },\n/* harmony export */   \"eventFromException\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_6__.eventFromException; },\n/* harmony export */   \"eventFromMessage\": function() { return /* reexport safe */ _eventbuilder_js__WEBPACK_IMPORTED_MODULE_6__.eventFromMessage; },\n/* harmony export */   \"flush\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.flush; },\n/* harmony export */   \"forceLoad\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.forceLoad; },\n/* harmony export */   \"geckoStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__.geckoStackLineParser; },\n/* harmony export */   \"getCurrentHub\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub; },\n/* harmony export */   \"getHubFromCarrier\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getHubFromCarrier; },\n/* harmony export */   \"init\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.init; },\n/* harmony export */   \"lastEventId\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.lastEventId; },\n/* harmony export */   \"makeBrowserOfflineTransport\": function() { return /* reexport safe */ _transports_offline_js__WEBPACK_IMPORTED_MODULE_9__.makeBrowserOfflineTransport; },\n/* harmony export */   \"makeFetchTransport\": function() { return /* reexport safe */ _transports_fetch_js__WEBPACK_IMPORTED_MODULE_3__.makeFetchTransport; },\n/* harmony export */   \"makeMain\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.makeMain; },\n/* harmony export */   \"makeXHRTransport\": function() { return /* reexport safe */ _transports_xhr_js__WEBPACK_IMPORTED_MODULE_4__.makeXHRTransport; },\n/* harmony export */   \"onLoad\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.onLoad; },\n/* harmony export */   \"onProfilingStartRouteTransaction\": function() { return /* reexport safe */ _profiling_hubextensions_js__WEBPACK_IMPORTED_MODULE_10__.onProfilingStartRouteTransaction; },\n/* harmony export */   \"opera10StackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__.opera10StackLineParser; },\n/* harmony export */   \"opera11StackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__.opera11StackLineParser; },\n/* harmony export */   \"setContext\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setContext; },\n/* harmony export */   \"setExtra\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setExtras; },\n/* harmony export */   \"setTag\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setTag; },\n/* harmony export */   \"setTags\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setTags; },\n/* harmony export */   \"setUser\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.setUser; },\n/* harmony export */   \"showReportDialog\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.showReportDialog; },\n/* harmony export */   \"startTransaction\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.startTransaction; },\n/* harmony export */   \"winjsStackLineParser\": function() { return /* reexport safe */ _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__.winjsStackLineParser; },\n/* harmony export */   \"withScope\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.withScope; },\n/* harmony export */   \"wrap\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_7__.wrap; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client.js */ \"./node_modules/@sentry/browser/esm/client.js\");\n/* harmony import */ var _transports_fetch_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./transports/fetch.js */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n/* harmony import */ var _transports_xhr_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./transports/xhr.js */ \"./node_modules/@sentry/browser/esm/transports/xhr.js\");\n/* harmony import */ var _stack_parsers_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./stack-parsers.js */ \"./node_modules/@sentry/browser/esm/stack-parsers.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/browser/esm/sdk.js\");\n/* harmony import */ var _integrations_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./integrations/index.js */ \"./node_modules/@sentry/browser/esm/integrations/index.js\");\n/* harmony import */ var _sentry_replay__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/replay */ \"./node_modules/@sentry/replay/esm/index.js\");\n/* harmony import */ var _transports_offline_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./transports/offline.js */ \"./node_modules/@sentry/browser/esm/transports/offline.js\");\n/* harmony import */ var _profiling_hubextensions_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./profiling/hubextensions.js */ \"./node_modules/@sentry/browser/esm/profiling/hubextensions.js\");\n/* harmony import */ var _profiling_integration_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./profiling/integration.js */ \"./node_modules/@sentry/browser/esm/profiling/integration.js\");\n/* harmony import */ var _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./integrations/globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./integrations/trycatch.js */ \"./node_modules/@sentry/browser/esm/integrations/trycatch.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./integrations/httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./integrations/dedupe.js */ \"./node_modules/@sentry/browser/esm/integrations/dedupe.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet windowIntegrations = {};\n\n// This block is needed to add compatibility with the integrations packages when used with a CDN\nif (_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.Sentry && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.Sentry.Integrations) {\n  windowIntegrations = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.Sentry.Integrations;\n}\n\nconst INTEGRATIONS = {\n  ...windowIntegrations,\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_0__.Integrations,\n  ..._integrations_index_js__WEBPACK_IMPORTED_MODULE_18__,\n};\n// __ROLLUP_EXCLUDE_BROWSER_PROFILING_FROM_BUNDLES_END__\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBNEM7QUFDMFM7QUFDaFQ7QUFDQTtBQUNNO0FBQ2U7QUFDSjtBQUM2STtBQUMzSDtBQUNrRDtBQUMxRTtBQUNUO0FBQzhCO0FBQ1U7QUFDUDtBQUNQO0FBQ1o7QUFDTTtBQUNFO0FBQ0Y7QUFDVjs7QUFFbEQ7O0FBRUE7QUFDQSxJQUFJLHNEQUFhLElBQUksbUVBQTBCO0FBQy9DLHVCQUF1QixtRUFBMEI7QUFDakQ7O0FBRUE7QUFDQTtBQUNBLEtBQUssc0RBQVk7QUFDakIsS0FBSyxvREFBSztBQUNWO0FBQ0E7O0FBRXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL2luZGV4LmpzP2M1MDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW50ZWdyYXRpb25zIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmV4cG9ydCB7IEZ1bmN0aW9uVG9TdHJpbmcsIEh1YiwgSW5ib3VuZEZpbHRlcnMsIFNES19WRVJTSU9OLCBTY29wZSwgYWRkQnJlYWRjcnVtYiwgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IsIGNhcHR1cmVFdmVudCwgY2FwdHVyZUV4Y2VwdGlvbiwgY2FwdHVyZU1lc3NhZ2UsIGNvbmZpZ3VyZVNjb3BlLCBjcmVhdGVUcmFuc3BvcnQsIGdldEN1cnJlbnRIdWIsIGdldEh1YkZyb21DYXJyaWVyLCBtYWtlTWFpbiwgc2V0Q29udGV4dCwgc2V0RXh0cmEsIHNldEV4dHJhcywgc2V0VGFnLCBzZXRUYWdzLCBzZXRVc2VyLCBzdGFydFRyYW5zYWN0aW9uLCB3aXRoU2NvcGUgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCB7IFdJTkRPVyB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgeyBCcm93c2VyQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQuanMnO1xuZXhwb3J0IHsgbWFrZUZldGNoVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL2ZldGNoLmpzJztcbmV4cG9ydCB7IG1ha2VYSFJUcmFuc3BvcnQgfSBmcm9tICcuL3RyYW5zcG9ydHMveGhyLmpzJztcbmV4cG9ydCB7IGNocm9tZVN0YWNrTGluZVBhcnNlciwgZGVmYXVsdFN0YWNrTGluZVBhcnNlcnMsIGRlZmF1bHRTdGFja1BhcnNlciwgZ2Vja29TdGFja0xpbmVQYXJzZXIsIG9wZXJhMTBTdGFja0xpbmVQYXJzZXIsIG9wZXJhMTFTdGFja0xpbmVQYXJzZXIsIHdpbmpzU3RhY2tMaW5lUGFyc2VyIH0gZnJvbSAnLi9zdGFjay1wYXJzZXJzLmpzJztcbmV4cG9ydCB7IGV2ZW50RnJvbUV4Y2VwdGlvbiwgZXZlbnRGcm9tTWVzc2FnZSB9IGZyb20gJy4vZXZlbnRidWlsZGVyLmpzJztcbmV4cG9ydCB7IGNsb3NlLCBkZWZhdWx0SW50ZWdyYXRpb25zLCBmbHVzaCwgZm9yY2VMb2FkLCBpbml0LCBsYXN0RXZlbnRJZCwgb25Mb2FkLCBzaG93UmVwb3J0RGlhbG9nLCB3cmFwIH0gZnJvbSAnLi9zZGsuanMnO1xuaW1wb3J0ICogYXMgaW5kZXggZnJvbSAnLi9pbnRlZ3JhdGlvbnMvaW5kZXguanMnO1xuZXhwb3J0IHsgUmVwbGF5IH0gZnJvbSAnQHNlbnRyeS9yZXBsYXknO1xuZXhwb3J0IHsgbWFrZUJyb3dzZXJPZmZsaW5lVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL29mZmxpbmUuanMnO1xuZXhwb3J0IHsgb25Qcm9maWxpbmdTdGFydFJvdXRlVHJhbnNhY3Rpb24gfSBmcm9tICcuL3Byb2ZpbGluZy9odWJleHRlbnNpb25zLmpzJztcbmV4cG9ydCB7IEJyb3dzZXJQcm9maWxpbmdJbnRlZ3JhdGlvbiB9IGZyb20gJy4vcHJvZmlsaW5nL2ludGVncmF0aW9uLmpzJztcbmV4cG9ydCB7IEdsb2JhbEhhbmRsZXJzIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvZ2xvYmFsaGFuZGxlcnMuanMnO1xuZXhwb3J0IHsgVHJ5Q2F0Y2ggfSBmcm9tICcuL2ludGVncmF0aW9ucy90cnljYXRjaC5qcyc7XG5leHBvcnQgeyBCcmVhZGNydW1icyB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2JyZWFkY3J1bWJzLmpzJztcbmV4cG9ydCB7IExpbmtlZEVycm9ycyB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2xpbmtlZGVycm9ycy5qcyc7XG5leHBvcnQgeyBIdHRwQ29udGV4dCB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2h0dHBjb250ZXh0LmpzJztcbmV4cG9ydCB7IERlZHVwZSB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2RlZHVwZS5qcyc7XG5cbmxldCB3aW5kb3dJbnRlZ3JhdGlvbnMgPSB7fTtcblxuLy8gVGhpcyBibG9jayBpcyBuZWVkZWQgdG8gYWRkIGNvbXBhdGliaWxpdHkgd2l0aCB0aGUgaW50ZWdyYXRpb25zIHBhY2thZ2VzIHdoZW4gdXNlZCB3aXRoIGEgQ0ROXG5pZiAoV0lORE9XLlNlbnRyeSAmJiBXSU5ET1cuU2VudHJ5LkludGVncmF0aW9ucykge1xuICB3aW5kb3dJbnRlZ3JhdGlvbnMgPSBXSU5ET1cuU2VudHJ5LkludGVncmF0aW9ucztcbn1cblxuY29uc3QgSU5URUdSQVRJT05TID0ge1xuICAuLi53aW5kb3dJbnRlZ3JhdGlvbnMsXG4gIC4uLkludGVncmF0aW9ucyxcbiAgLi4uaW5kZXgsXG59O1xuLy8gX19ST0xMVVBfRVhDTFVERV9CUk9XU0VSX1BST0ZJTElOR19GUk9NX0JVTkRMRVNfRU5EX19cblxuZXhwb3J0IHsgSU5URUdSQVRJT05TIGFzIEludGVncmF0aW9ucyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BREADCRUMB_INTEGRATION_ID\": function() { return /* binding */ BREADCRUMB_INTEGRATION_ID; },\n/* harmony export */   \"Breadcrumbs\": function() { return /* binding */ Breadcrumbs; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** maxStringLength gets capped to prevent 100 breadcrumbs exceeding 1MB event payload size */\nconst MAX_ALLOWED_STRING_LENGTH = 1024;\n\nconst BREADCRUMB_INTEGRATION_ID = 'Breadcrumbs';\n\n/**\n * Default Breadcrumbs instrumentations\n * TODO: Deprecated - with v6, this will be renamed to `Instrument`\n */\nclass Breadcrumbs  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = BREADCRUMB_INTEGRATION_ID;}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Breadcrumbs.id;}\n\n  /**\n   * Options of the breadcrumbs integration.\n   */\n  // This field is public, because we use it in the browser client to check if the `sentry` option is enabled.\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {Breadcrumbs.prototype.__init.call(this);\n    this.options = {\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n   setupOnce() {\n    if (this.options.console) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('console', _consoleBreadcrumb);\n    }\n    if (this.options.dom) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('dom', _domBreadcrumb(this.options.dom));\n    }\n    if (this.options.xhr) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('xhr', _xhrBreadcrumb);\n    }\n    if (this.options.fetch) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('fetch', _fetchBreadcrumb);\n    }\n    if (this.options.history) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('history', _historyBreadcrumb);\n    }\n  }\n\n  /**\n   * Adds a breadcrumb for Sentry events or transactions if this option is enabled.\n   */\n   addSentryBreadcrumb(event) {\n    if (this.options.sentry) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n        {\n          category: `sentry.${event.type === 'transaction' ? 'transaction' : 'event'}`,\n          event_id: event.event_id,\n          level: event.level,\n          message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(event),\n        },\n        {\n          event,\n        },\n      );\n    }\n  }\n} Breadcrumbs.__initStatic();\n\n/**\n * A HOC that creaes a function that creates breadcrumbs from DOM API calls.\n * This is a HOC so that we get access to dom options in the closure.\n */\nfunction _domBreadcrumb(dom) {\n  function _innerDomBreadcrumb(handlerData) {\n    let target;\n    let keyAttrs = typeof dom === 'object' ? dom.serializeAttribute : undefined;\n\n    let maxStringLength =\n      typeof dom === 'object' && typeof dom.maxStringLength === 'number' ? dom.maxStringLength : undefined;\n    if (maxStringLength && maxStringLength > MAX_ALLOWED_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n          `\\`dom.maxStringLength\\` cannot exceed ${MAX_ALLOWED_STRING_LENGTH}, but a value of ${maxStringLength} was configured. Sentry will use ${MAX_ALLOWED_STRING_LENGTH} instead.`,\n        );\n      maxStringLength = MAX_ALLOWED_STRING_LENGTH;\n    }\n\n    if (typeof keyAttrs === 'string') {\n      keyAttrs = [keyAttrs];\n    }\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      const event = handlerData.event ;\n      target = _isEvent(event)\n        ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.htmlTreeAsString)(event.target, { keyAttrs, maxStringLength })\n        : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.htmlTreeAsString)(event, { keyAttrs, maxStringLength });\n    } catch (e) {\n      target = '<unknown>';\n    }\n\n    if (target.length === 0) {\n      return;\n    }\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n      {\n        category: `ui.${handlerData.name}`,\n        message: target,\n      },\n      {\n        event: handlerData.event,\n        name: handlerData.name,\n        global: handlerData.global,\n      },\n    );\n  }\n\n  return _innerDomBreadcrumb;\n}\n\n/**\n * Creates breadcrumbs from console API calls\n */\nfunction _consoleBreadcrumb(handlerData) {\n  // This is a hack to fix a Vue3-specific bug that causes an infinite loop of\n  // console warnings. This happens when a Vue template is rendered with\n  // an undeclared variable, which we try to stringify, ultimately causing\n  // Vue to issue another warning which repeats indefinitely.\n  // see: https://github.com/getsentry/sentry-javascript/pull/6010\n  // see: https://github.com/getsentry/sentry-javascript/issues/5916\n  for (let i = 0; i < handlerData.args.length; i++) {\n    if (handlerData.args[i] === 'ref=Ref<') {\n      handlerData.args[i + 1] = 'viewRef';\n      break;\n    }\n  }\n  const breadcrumb = {\n    category: 'console',\n    data: {\n      arguments: handlerData.args,\n      logger: 'console',\n    },\n    level: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.severityLevelFromString)(handlerData.level),\n    message: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(handlerData.args, ' '),\n  };\n\n  if (handlerData.level === 'assert') {\n    if (handlerData.args[0] === false) {\n      breadcrumb.message = `Assertion failed: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(handlerData.args.slice(1), ' ') || 'console.assert'}`;\n      breadcrumb.data.arguments = handlerData.args.slice(1);\n    } else {\n      // Don't capture a breadcrumb for passed assertions\n      return;\n    }\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(breadcrumb, {\n    input: handlerData.args,\n    level: handlerData.level,\n  });\n}\n\n/**\n * Creates breadcrumbs from XHR API calls\n */\nfunction _xhrBreadcrumb(handlerData) {\n  if (handlerData.endTimestamp) {\n    // We only capture complete, non-sentry requests\n    if (handlerData.xhr.__sentry_own_request__) {\n      return;\n    }\n\n    const { method, url, status_code, body } = handlerData.xhr.__sentry_xhr__ || {};\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n      {\n        category: 'xhr',\n        data: {\n          method,\n          url,\n          status_code,\n        },\n        type: 'http',\n      },\n      {\n        xhr: handlerData.xhr,\n        input: body,\n      },\n    );\n\n    return;\n  }\n}\n\n/**\n * Creates breadcrumbs from fetch API calls\n */\nfunction _fetchBreadcrumb(handlerData) {\n  // We only capture complete fetch requests\n  if (!handlerData.endTimestamp) {\n    return;\n  }\n\n  if (handlerData.fetchData.url.match(/sentry_key/) && handlerData.fetchData.method === 'POST') {\n    // We will not create breadcrumbs for fetch requests that contain `sentry_key` (internal sentry requests)\n    return;\n  }\n\n  if (handlerData.error) {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: handlerData.fetchData,\n        level: 'error',\n        type: 'http',\n      },\n      {\n        data: handlerData.error,\n        input: handlerData.args,\n      },\n    );\n  } else {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb(\n      {\n        category: 'fetch',\n        data: {\n          ...handlerData.fetchData,\n          status_code: handlerData.response && handlerData.response.status,\n        },\n        type: 'http',\n      },\n      {\n        input: handlerData.args,\n        response: handlerData.response,\n      },\n    );\n  }\n}\n\n/**\n * Creates breadcrumbs from history API calls\n */\nfunction _historyBreadcrumb(handlerData) {\n  let from = handlerData.from;\n  let to = handlerData.to;\n  const parsedLoc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(_helpers_js__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location.href);\n  let parsedFrom = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(from);\n  const parsedTo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseUrl)(to);\n\n  // Initial pushState doesn't provide `from` information\n  if (!parsedFrom.path) {\n    parsedFrom = parsedLoc;\n  }\n\n  // Use only the path component of the URL if the URL matches the current\n  // document (almost all the time when using pushState)\n  if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n    to = parsedTo.relative;\n  }\n  if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n    from = parsedFrom.relative;\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().addBreadcrumb({\n    category: 'navigation',\n    data: {\n      from,\n      to,\n    },\n  });\n}\n\nfunction _isEvent(event) {\n  return event && !!(event ).target;\n}\n\n\n//# sourceMappingURL=breadcrumbs.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/dedupe.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/dedupe.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dedupe\": function() { return /* binding */ Dedupe; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcessor = currentEvent => {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\n\n//# sourceMappingURL=dedupe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/dedupe.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/globalhandlers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/globalhandlers.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GlobalHandlers\": function() { return /* binding */ GlobalHandlers; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\n/** Global handlers */\nclass GlobalHandlers  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GlobalHandlers';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GlobalHandlers.id;}\n\n  /** JSDoc */\n\n  /**\n   * Stores references functions to installing handlers. Will set to undefined\n   * after they have been run so that they are not used twice.\n   */\n   __init2() {this._installFunc = {\n    onerror: _installGlobalOnErrorHandler,\n    onunhandledrejection: _installGlobalOnUnhandledRejectionHandler,\n  };}\n\n  /** JSDoc */\n   constructor(options) {GlobalHandlers.prototype.__init.call(this);GlobalHandlers.prototype.__init2.call(this);\n    this._options = {\n      onerror: true,\n      onunhandledrejection: true,\n      ...options,\n    };\n  }\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    Error.stackTraceLimit = 50;\n    const options = this._options;\n\n    // We can disable guard-for-in as we construct the options object above + do checks against\n    // `this._installFunc` for the property.\n    // eslint-disable-next-line guard-for-in\n    for (const key in options) {\n      const installFunc = this._installFunc[key ];\n      if (installFunc && options[key ]) {\n        globalHandlerLog(key);\n        installFunc();\n        this._installFunc[key ] = undefined;\n      }\n    }\n  }\n} GlobalHandlers.__initStatic();\n\n/** JSDoc */\nfunction _installGlobalOnErrorHandler() {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)(\n    'error',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (data) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      const { msg, url, line, column, error } = data;\n      if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.shouldIgnoreOnError)() || (error && error.__sentry_own_request__)) {\n        return;\n      }\n\n      const event =\n        error === undefined && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(msg)\n          ? _eventFromIncompleteOnError(msg, url, line, column)\n          : _enhanceEventWithInitialFrame(\n              (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_2__.eventFromUnknownInput)(stackParser, error || msg, undefined, attachStacktrace, false),\n              url,\n              line,\n              column,\n            );\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onerror');\n    },\n  );\n}\n\n/** JSDoc */\nfunction _installGlobalOnUnhandledRejectionHandler() {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)(\n    'unhandledrejection',\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (e) => {\n      const [hub, stackParser, attachStacktrace] = getHubAndOptions();\n      if (!hub.getIntegration(GlobalHandlers)) {\n        return;\n      }\n      let error = e;\n\n      // dig the object of the rejection out of known event types\n      try {\n        // PromiseRejectionEvents store the object of the rejection under 'reason'\n        // see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n        if ('reason' in e) {\n          error = e.reason;\n        }\n        // something, somewhere, (likely a browser extension) effectively casts PromiseRejectionEvents\n        // to CustomEvents, moving the `promise` and `reason` attributes of the PRE into\n        // the CustomEvent's `detail` attribute, since they're not part of CustomEvent's spec\n        // see https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent and\n        // https://github.com/getsentry/sentry-javascript/issues/2380\n        else if ('detail' in e && 'reason' in e.detail) {\n          error = e.detail.reason;\n        }\n      } catch (_oO) {\n        // no-empty\n      }\n\n      if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.shouldIgnoreOnError)() || (error && error.__sentry_own_request__)) {\n        return true;\n      }\n\n      const event = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPrimitive)(error)\n        ? _eventFromRejectionWithPrimitive(error)\n        : (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_2__.eventFromUnknownInput)(stackParser, error, undefined, attachStacktrace, true);\n\n      event.level = 'error';\n\n      addMechanismAndCapture(hub, error, event, 'onunhandledrejection');\n      return;\n    },\n  );\n}\n\n/**\n * Create an event from a promise rejection where the `reason` is a primitive.\n *\n * @param reason: The `reason` property of the promise rejection\n * @returns An Event object with an appropriate `exception` value\n */\nfunction _eventFromRejectionWithPrimitive(reason) {\n  return {\n    exception: {\n      values: [\n        {\n          type: 'UnhandledRejection',\n          // String() is needed because the Primitive type includes symbols (which can't be automatically stringified)\n          value: `Non-Error promise rejection captured with value: ${String(reason)}`,\n        },\n      ],\n    },\n  };\n}\n\n/**\n * This function creates a stack from an old, error-less onerror handler.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _eventFromIncompleteOnError(msg, url, line, column) {\n  const ERROR_TYPES_RE =\n    /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;\n\n  // If 'message' is ErrorEvent, get real message from inside\n  let message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isErrorEvent)(msg) ? msg.message : msg;\n  let name = 'Error';\n\n  const groups = message.match(ERROR_TYPES_RE);\n  if (groups) {\n    name = groups[1];\n    message = groups[2];\n  }\n\n  const event = {\n    exception: {\n      values: [\n        {\n          type: name,\n          value: message,\n        },\n      ],\n    },\n  };\n\n  return _enhanceEventWithInitialFrame(event, url, line, column);\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _enhanceEventWithInitialFrame(event, url, line, column) {\n  // event.exception\n  const e = (event.exception = event.exception || {});\n  // event.exception.values\n  const ev = (e.values = e.values || []);\n  // event.exception.values[0]\n  const ev0 = (ev[0] = ev[0] || {});\n  // event.exception.values[0].stacktrace\n  const ev0s = (ev0.stacktrace = ev0.stacktrace || {});\n  // event.exception.values[0].stacktrace.frames\n  const ev0sf = (ev0s.frames = ev0s.frames || []);\n\n  const colno = isNaN(parseInt(column, 10)) ? undefined : column;\n  const lineno = isNaN(parseInt(line, 10)) ? undefined : line;\n  const filename = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isString)(url) && url.length > 0 ? url : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getLocationHref)();\n\n  // event.exception.values[0].stacktrace.frames\n  if (ev0sf.length === 0) {\n    ev0sf.push({\n      colno,\n      filename,\n      function: '?',\n      in_app: true,\n      lineno,\n    });\n  }\n\n  return event;\n}\n\nfunction globalHandlerLog(type) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Global Handler attached: ${type}`);\n}\n\nfunction addMechanismAndCapture(hub, error, event, type) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(event, {\n    handled: false,\n    type,\n  });\n  hub.captureEvent(event, {\n    originalException: error,\n  });\n}\n\nfunction getHubAndOptions() {\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentHub)();\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {\n    stackParser: () => [],\n    attachStacktrace: false,\n  };\n  return [hub, options.stackParser, options.attachStacktrace];\n}\n\n\n//# sourceMappingURL=globalhandlers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/httpcontext.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/httpcontext.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HttpContext\": function() { return /* binding */ HttpContext; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n/** HttpContext integration collects information about HTTP request headers */\nclass HttpContext  {constructor() { HttpContext.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpContext';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpContext.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addGlobalEventProcessor)((event) => {\n      if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator && !_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.location && !_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.location && _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.location.href);\n        const { referrer } = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document || {};\n        const { userAgent } = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...event.request, ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n} HttpContext.__initStatic();\n\n\n//# sourceMappingURL=httpcontext.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaHR0cGNvbnRleHQuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNFO0FBQy9COztBQUV2QztBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxRUFBdUI7QUFDM0IsVUFBVSwyREFBYTtBQUN2QjtBQUNBLGFBQWEseURBQWdCLEtBQUssd0RBQWUsS0FBSyx3REFBZTtBQUNyRTtBQUNBOztBQUVBO0FBQ0EsNkRBQTZELHdEQUFlLElBQUksNkRBQW9CO0FBQ3BHLGdCQUFnQixXQUFXLEVBQUUsd0RBQWU7QUFDNUMsZ0JBQWdCLFlBQVksRUFBRSx5REFBZ0I7O0FBRTlDO0FBQ0E7QUFDQSw0QkFBNEIsbUJBQW1CO0FBQy9DLDZCQUE2Qix5QkFBeUI7QUFDdEQ7QUFDQSwwQkFBMEIsK0JBQStCLEtBQUs7O0FBRTlELGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsRUFBRTs7QUFFcUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvYnJvd3Nlci9lc20vaW50ZWdyYXRpb25zL2h0dHBjb250ZXh0LmpzPzM3NTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IsIGdldEN1cnJlbnRIdWIgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vaGVscGVycy5qcyc7XG5cbi8qKiBIdHRwQ29udGV4dCBpbnRlZ3JhdGlvbiBjb2xsZWN0cyBpbmZvcm1hdGlvbiBhYm91dCBIVFRQIHJlcXVlc3QgaGVhZGVycyAqL1xuY2xhc3MgSHR0cENvbnRleHQgIHtjb25zdHJ1Y3RvcigpIHsgSHR0cENvbnRleHQucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpOyB9XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHN0YXRpYyBfX2luaXRTdGF0aWMoKSB7dGhpcy5pZCA9ICdIdHRwQ29udGV4dCc7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIF9faW5pdCgpIHt0aGlzLm5hbWUgPSBIdHRwQ29udGV4dC5pZDt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc2V0dXBPbmNlKCkge1xuICAgIGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yKChldmVudCkgPT4ge1xuICAgICAgaWYgKGdldEN1cnJlbnRIdWIoKS5nZXRJbnRlZ3JhdGlvbihIdHRwQ29udGV4dCkpIHtcbiAgICAgICAgLy8gaWYgbm9uZSBvZiB0aGUgaW5mb3JtYXRpb24gd2Ugd2FudCBleGlzdHMsIGRvbid0IGJvdGhlclxuICAgICAgICBpZiAoIVdJTkRPVy5uYXZpZ2F0b3IgJiYgIVdJTkRPVy5sb2NhdGlvbiAmJiAhV0lORE9XLmRvY3VtZW50KSB7XG4gICAgICAgICAgcmV0dXJuIGV2ZW50O1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZ3JhYiBhcyBtdWNoIGluZm8gYXMgZXhpc3RzIGFuZCBhZGQgaXQgdG8gdGhlIGV2ZW50XG4gICAgICAgIGNvbnN0IHVybCA9IChldmVudC5yZXF1ZXN0ICYmIGV2ZW50LnJlcXVlc3QudXJsKSB8fCAoV0lORE9XLmxvY2F0aW9uICYmIFdJTkRPVy5sb2NhdGlvbi5ocmVmKTtcbiAgICAgICAgY29uc3QgeyByZWZlcnJlciB9ID0gV0lORE9XLmRvY3VtZW50IHx8IHt9O1xuICAgICAgICBjb25zdCB7IHVzZXJBZ2VudCB9ID0gV0lORE9XLm5hdmlnYXRvciB8fCB7fTtcblxuICAgICAgICBjb25zdCBoZWFkZXJzID0ge1xuICAgICAgICAgIC4uLihldmVudC5yZXF1ZXN0ICYmIGV2ZW50LnJlcXVlc3QuaGVhZGVycyksXG4gICAgICAgICAgLi4uKHJlZmVycmVyICYmIHsgUmVmZXJlcjogcmVmZXJyZXIgfSksXG4gICAgICAgICAgLi4uKHVzZXJBZ2VudCAmJiB7ICdVc2VyLUFnZW50JzogdXNlckFnZW50IH0pLFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCByZXF1ZXN0ID0geyAuLi5ldmVudC5yZXF1ZXN0LCAuLi4odXJsICYmIHsgdXJsIH0pLCBoZWFkZXJzIH07XG5cbiAgICAgICAgcmV0dXJuIHsgLi4uZXZlbnQsIHJlcXVlc3QgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9KTtcbiAgfVxufSBIdHRwQ29udGV4dC5fX2luaXRTdGF0aWMoKTtcblxuZXhwb3J0IHsgSHR0cENvbnRleHQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWh0dHBjb250ZXh0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/httpcontext.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Breadcrumbs\": function() { return /* reexport safe */ _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__.Breadcrumbs; },\n/* harmony export */   \"Dedupe\": function() { return /* reexport safe */ _dedupe_js__WEBPACK_IMPORTED_MODULE_5__.Dedupe; },\n/* harmony export */   \"GlobalHandlers\": function() { return /* reexport safe */ _globalhandlers_js__WEBPACK_IMPORTED_MODULE_0__.GlobalHandlers; },\n/* harmony export */   \"HttpContext\": function() { return /* reexport safe */ _httpcontext_js__WEBPACK_IMPORTED_MODULE_4__.HttpContext; },\n/* harmony export */   \"LinkedErrors\": function() { return /* reexport safe */ _linkederrors_js__WEBPACK_IMPORTED_MODULE_3__.LinkedErrors; },\n/* harmony export */   \"TryCatch\": function() { return /* reexport safe */ _trycatch_js__WEBPACK_IMPORTED_MODULE_1__.TryCatch; }\n/* harmony export */ });\n/* harmony import */ var _globalhandlers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _trycatch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./trycatch.js */ \"./node_modules/@sentry/browser/esm/integrations/trycatch.js\");\n/* harmony import */ var _breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _linkederrors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _httpcontext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _dedupe_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dedupe.js */ \"./node_modules/@sentry/browser/esm/integrations/dedupe.js\");\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXFEO0FBQ1o7QUFDTTtBQUNFO0FBQ0Y7QUFDVjtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanM/NDlmZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBHbG9iYWxIYW5kbGVycyB9IGZyb20gJy4vZ2xvYmFsaGFuZGxlcnMuanMnO1xuZXhwb3J0IHsgVHJ5Q2F0Y2ggfSBmcm9tICcuL3RyeWNhdGNoLmpzJztcbmV4cG9ydCB7IEJyZWFkY3J1bWJzIH0gZnJvbSAnLi9icmVhZGNydW1icy5qcyc7XG5leHBvcnQgeyBMaW5rZWRFcnJvcnMgfSBmcm9tICcuL2xpbmtlZGVycm9ycy5qcyc7XG5leHBvcnQgeyBIdHRwQ29udGV4dCB9IGZyb20gJy4vaHR0cGNvbnRleHQuanMnO1xuZXhwb3J0IHsgRGVkdXBlIH0gZnJvbSAnLi9kZWR1cGUuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/linkederrors.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/linkederrors.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LinkedErrors\": function() { return /* binding */ LinkedErrors; },\n/* harmony export */   \"_handler\": function() { return /* binding */ _handler; },\n/* harmony export */   \"_walkErrorTree\": function() { return /* binding */ _walkErrorTree; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _eventbuilder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../eventbuilder.js */ \"./node_modules/@sentry/browser/esm/eventbuilder.js\");\n\n\n\n\nconst DEFAULT_KEY = 'cause';\nconst DEFAULT_LIMIT = 5;\n\n/** Adds SDK info to an event. */\nclass LinkedErrors  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'LinkedErrors';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = LinkedErrors.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {LinkedErrors.prototype.__init.call(this);\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n    if (!client) {\n      return;\n    }\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addGlobalEventProcessor)((event, hint) => {\n      const self = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getIntegration(LinkedErrors);\n      return self ? _handler(client.getOptions().stackParser, self._key, self._limit, event, hint) : event;\n    });\n  }\n} LinkedErrors.__initStatic();\n\n/**\n * @inheritDoc\n */\nfunction _handler(\n  parser,\n  key,\n  limit,\n  event,\n  hint,\n) {\n  if (!event.exception || !event.exception.values || !hint || !(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isInstanceOf)(hint.originalException, Error)) {\n    return event;\n  }\n  const linkedErrors = _walkErrorTree(parser, limit, hint.originalException , key);\n  event.exception.values = [...linkedErrors, ...event.exception.values];\n  return event;\n}\n\n/**\n * JSDOC\n */\nfunction _walkErrorTree(\n  parser,\n  limit,\n  error,\n  key,\n  stack = [],\n) {\n  if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isInstanceOf)(error[key], Error) || stack.length + 1 >= limit) {\n    return stack;\n  }\n  const exception = (0,_eventbuilder_js__WEBPACK_IMPORTED_MODULE_2__.exceptionFromError)(parser, error[key]);\n  return _walkErrorTree(parser, limit, error[key], key, [exception, ...stack]);\n}\n\n\n//# sourceMappingURL=linkederrors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9pbnRlZ3JhdGlvbnMvbGlua2VkZXJyb3JzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRTtBQUN6QjtBQUNXOztBQUV4RDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLGNBQWM7O0FBRWQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsR0FBRztBQUM5QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsMkRBQWE7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsSUFBSSxxRUFBdUI7QUFDM0IsbUJBQW1CLDJEQUFhO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0EsRUFBRTs7QUFFRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCwyREFBWTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLDJEQUFZO0FBQ25CO0FBQ0E7QUFDQSxvQkFBb0Isb0VBQWtCO0FBQ3RDO0FBQ0E7O0FBRWtEO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL2ludGVncmF0aW9ucy9saW5rZWRlcnJvcnMuanM/OGM5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDdXJyZW50SHViLCBhZGRHbG9iYWxFdmVudFByb2Nlc3NvciB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBpc0luc3RhbmNlT2YgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGV4Y2VwdGlvbkZyb21FcnJvciB9IGZyb20gJy4uL2V2ZW50YnVpbGRlci5qcyc7XG5cbmNvbnN0IERFRkFVTFRfS0VZID0gJ2NhdXNlJztcbmNvbnN0IERFRkFVTFRfTElNSVQgPSA1O1xuXG4vKiogQWRkcyBTREsgaW5mbyB0byBhbiBldmVudC4gKi9cbmNsYXNzIExpbmtlZEVycm9ycyAge1xuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzdGF0aWMgX19pbml0U3RhdGljKCkge3RoaXMuaWQgPSAnTGlua2VkRXJyb3JzJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgIF9faW5pdCgpIHt0aGlzLm5hbWUgPSBMaW5rZWRFcnJvcnMuaWQ7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7TGlua2VkRXJyb3JzLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtcbiAgICB0aGlzLl9rZXkgPSBvcHRpb25zLmtleSB8fCBERUZBVUxUX0tFWTtcbiAgICB0aGlzLl9saW1pdCA9IG9wdGlvbnMubGltaXQgfHwgREVGQVVMVF9MSU1JVDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldHVwT25jZSgpIHtcbiAgICBjb25zdCBjbGllbnQgPSBnZXRDdXJyZW50SHViKCkuZ2V0Q2xpZW50KCk7XG4gICAgaWYgKCFjbGllbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IoKGV2ZW50LCBoaW50KSA9PiB7XG4gICAgICBjb25zdCBzZWxmID0gZ2V0Q3VycmVudEh1YigpLmdldEludGVncmF0aW9uKExpbmtlZEVycm9ycyk7XG4gICAgICByZXR1cm4gc2VsZiA/IF9oYW5kbGVyKGNsaWVudC5nZXRPcHRpb25zKCkuc3RhY2tQYXJzZXIsIHNlbGYuX2tleSwgc2VsZi5fbGltaXQsIGV2ZW50LCBoaW50KSA6IGV2ZW50O1xuICAgIH0pO1xuICB9XG59IExpbmtlZEVycm9ycy5fX2luaXRTdGF0aWMoKTtcblxuLyoqXG4gKiBAaW5oZXJpdERvY1xuICovXG5mdW5jdGlvbiBfaGFuZGxlcihcbiAgcGFyc2VyLFxuICBrZXksXG4gIGxpbWl0LFxuICBldmVudCxcbiAgaGludCxcbikge1xuICBpZiAoIWV2ZW50LmV4Y2VwdGlvbiB8fCAhZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyB8fCAhaGludCB8fCAhaXNJbnN0YW5jZU9mKGhpbnQub3JpZ2luYWxFeGNlcHRpb24sIEVycm9yKSkge1xuICAgIHJldHVybiBldmVudDtcbiAgfVxuICBjb25zdCBsaW5rZWRFcnJvcnMgPSBfd2Fsa0Vycm9yVHJlZShwYXJzZXIsIGxpbWl0LCBoaW50Lm9yaWdpbmFsRXhjZXB0aW9uICwga2V5KTtcbiAgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyA9IFsuLi5saW5rZWRFcnJvcnMsIC4uLmV2ZW50LmV4Y2VwdGlvbi52YWx1ZXNdO1xuICByZXR1cm4gZXZlbnQ7XG59XG5cbi8qKlxuICogSlNET0NcbiAqL1xuZnVuY3Rpb24gX3dhbGtFcnJvclRyZWUoXG4gIHBhcnNlcixcbiAgbGltaXQsXG4gIGVycm9yLFxuICBrZXksXG4gIHN0YWNrID0gW10sXG4pIHtcbiAgaWYgKCFpc0luc3RhbmNlT2YoZXJyb3Jba2V5XSwgRXJyb3IpIHx8IHN0YWNrLmxlbmd0aCArIDEgPj0gbGltaXQpIHtcbiAgICByZXR1cm4gc3RhY2s7XG4gIH1cbiAgY29uc3QgZXhjZXB0aW9uID0gZXhjZXB0aW9uRnJvbUVycm9yKHBhcnNlciwgZXJyb3Jba2V5XSk7XG4gIHJldHVybiBfd2Fsa0Vycm9yVHJlZShwYXJzZXIsIGxpbWl0LCBlcnJvcltrZXldLCBrZXksIFtleGNlcHRpb24sIC4uLnN0YWNrXSk7XG59XG5cbmV4cG9ydCB7IExpbmtlZEVycm9ycywgX2hhbmRsZXIsIF93YWxrRXJyb3JUcmVlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rZWRlcnJvcnMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/integrations/trycatch.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/integrations/trycatch.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TryCatch\": function() { return /* binding */ TryCatch; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\nconst DEFAULT_EVENT_TARGET = [\n  'EventTarget',\n  'Window',\n  'Node',\n  'ApplicationCache',\n  'AudioTrackList',\n  'ChannelMergerNode',\n  'CryptoOperation',\n  'EventSource',\n  'FileReader',\n  'HTMLUnknownElement',\n  'IDBDatabase',\n  'IDBRequest',\n  'IDBTransaction',\n  'KeyOperation',\n  'MediaController',\n  'MessagePort',\n  'ModalWindow',\n  'Notification',\n  'SVGElementInstance',\n  'Screen',\n  'TextTrack',\n  'TextTrackCue',\n  'TextTrackList',\n  'WebSocket',\n  'WebSocketWorker',\n  'Worker',\n  'XMLHttpRequest',\n  'XMLHttpRequestEventTarget',\n  'XMLHttpRequestUpload',\n];\n\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nclass TryCatch  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'TryCatch';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = TryCatch.id;}\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {TryCatch.prototype.__init.call(this);\n    this._options = {\n      XMLHttpRequest: true,\n      eventTarget: true,\n      requestAnimationFrame: true,\n      setInterval: true,\n      setTimeout: true,\n      ...options,\n    };\n  }\n\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n   setupOnce() {\n    if (this._options.setTimeout) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setTimeout', _wrapTimeFunction);\n    }\n\n    if (this._options.setInterval) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'setInterval', _wrapTimeFunction);\n    }\n\n    if (this._options.requestAnimationFrame) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW, 'requestAnimationFrame', _wrapRAF);\n    }\n\n    if (this._options.XMLHttpRequest && \"XMLHttpRequest\" in _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW) {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(XMLHttpRequest.prototype, 'send', _wrapXHR);\n    }\n\n    const eventTargetOption = this._options.eventTarget;\n    if (eventTargetOption) {\n      const eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;\n      eventTarget.forEach(_wrapEventTarget);\n    }\n  }\n} TryCatch.__initStatic();\n\n/** JSDoc */\nfunction _wrapTimeFunction(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    const originalCallback = args[0];\n    args[0] = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(originalCallback, {\n      mechanism: {\n        data: { function: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(original) },\n        handled: true,\n        type: 'instrument',\n      },\n    });\n    return original.apply(this, args);\n  };\n}\n\n/** JSDoc */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _wrapRAF(original) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( callback) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return original.apply(this, [\n      (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(callback, {\n        mechanism: {\n          data: {\n            function: 'requestAnimationFrame',\n            handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(original),\n          },\n          handled: true,\n          type: 'instrument',\n        },\n      }),\n    ]);\n  };\n}\n\n/** JSDoc */\nfunction _wrapXHR(originalSend) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function ( ...args) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const xhr = this;\n    const xmlHttpRequestProps = ['onload', 'onerror', 'onprogress', 'onreadystatechange'];\n\n    xmlHttpRequestProps.forEach(prop => {\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(xhr, prop, function (original) {\n          const wrapOptions = {\n            mechanism: {\n              data: {\n                function: prop,\n                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(original),\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          };\n\n          // If Instrument integration has been called before TryCatch, get the name of original function\n          const originalFunction = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(original);\n          if (originalFunction) {\n            wrapOptions.mechanism.data.handler = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(originalFunction);\n          }\n\n          // Otherwise wrap directly\n          return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(original, wrapOptions);\n        });\n      }\n    });\n\n    return originalSend.apply(this, args);\n  };\n}\n\n/** JSDoc */\nfunction _wrapEventTarget(target) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const globalObject = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW ;\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const proto = globalObject[target] && globalObject[target].prototype;\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n  if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n    return;\n  }\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(proto, 'addEventListener', function (original)\n\n {\n    return function (\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      eventName,\n      fn,\n      options,\n    ) {\n      try {\n        if (typeof fn.handleEvent === 'function') {\n          // ESlint disable explanation:\n          //  First, it is generally safe to call `wrap` with an unbound function. Furthermore, using `.bind()` would\n          //  introduce a bug here, because bind returns a new function that doesn't have our\n          //  flags(like __sentry_original__) attached. `wrap` checks for those flags to avoid unnecessary wrapping.\n          //  Without those flags, every call to addEventListener wraps the function again, causing a memory leak.\n          // eslint-disable-next-line @typescript-eslint/unbound-method\n          fn.handleEvent = (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn.handleEvent, {\n            mechanism: {\n              data: {\n                function: 'handleEvent',\n                handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(fn),\n                target,\n              },\n              handled: true,\n              type: 'instrument',\n            },\n          });\n        }\n      } catch (err) {\n        // can sometimes get 'Permission denied to access property \"handle Event'\n      }\n\n      return original.apply(this, [\n        eventName,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.wrap)(fn , {\n          mechanism: {\n            data: {\n              function: 'addEventListener',\n              handler: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getFunctionName)(fn),\n              target,\n            },\n            handled: true,\n            type: 'instrument',\n          },\n        }),\n        options,\n      ]);\n    };\n  });\n\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(\n    proto,\n    'removeEventListener',\n    function (\n      originalRemoveEventListener,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n      return function (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        eventName,\n        fn,\n        options,\n      ) {\n        /**\n         * There are 2 possible scenarios here:\n         *\n         * 1. Someone passes a callback, which was attached prior to Sentry initialization, or by using unmodified\n         * method, eg. `document.addEventListener.call(el, name, handler). In this case, we treat this function\n         * as a pass-through, and call original `removeEventListener` with it.\n         *\n         * 2. Someone passes a callback, which was attached after Sentry was initialized, which means that it was using\n         * our wrapped version of `addEventListener`, which internally calls `wrap` helper.\n         * This helper \"wraps\" whole callback inside a try/catch statement, and attached appropriate metadata to it,\n         * in order for us to make a distinction between wrapped/non-wrapped functions possible.\n         * If a function was wrapped, it has additional property of `__sentry_wrapped__`, holding the handler.\n         *\n         * When someone adds a handler prior to initialization, and then do it again, but after,\n         * then we have to detach both of them. Otherwise, if we'd detach only wrapped one, it'd be impossible\n         * to get rid of the initial handler and it'd stick there forever.\n         */\n        const wrappedEventHandler = fn ;\n        try {\n          const originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;\n          if (originalEventHandler) {\n            originalRemoveEventListener.call(this, eventName, originalEventHandler, options);\n          }\n        } catch (e) {\n          // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);\n      };\n    },\n  );\n}\n\n\n//# sourceMappingURL=trycatch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/integrations/trycatch.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/cache.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/cache.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PROFILING_EVENT_CACHE\": function() { return /* binding */ PROFILING_EVENT_CACHE; },\n/* harmony export */   \"makeProfilingCache\": function() { return /* binding */ makeProfilingCache; }\n/* harmony export */ });\n/**\n * Creates a cache that evicts keys in fifo order\n * @param size {Number}\n */\nfunction makeProfilingCache(\n  size,\n)\n\n {\n  // Maintain a fifo queue of keys, we cannot rely on Object.keys as the browser may not support it.\n  let evictionOrder = [];\n  let cache = {};\n\n  return {\n    add(key, value) {\n      while (evictionOrder.length >= size) {\n        // shift is O(n) but this is small size and only happens if we are\n        // exceeding the cache size so it should be fine.\n        const evictCandidate = evictionOrder.shift();\n\n        if (evictCandidate !== undefined) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete cache[evictCandidate];\n        }\n      }\n\n      // in case we have a collision, delete the old key.\n      if (cache[key]) {\n        this.delete(key);\n      }\n\n      evictionOrder.push(key);\n      cache[key] = value;\n    },\n    clear() {\n      cache = {};\n      evictionOrder = [];\n    },\n    get(key) {\n      return cache[key];\n    },\n    size() {\n      return evictionOrder.length;\n    },\n    // Delete cache key and return true if it existed, false otherwise.\n    delete(key) {\n      if (!cache[key]) {\n        return false;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete cache[key];\n\n      for (let i = 0; i < evictionOrder.length; i++) {\n        if (evictionOrder[i] === key) {\n          evictionOrder.splice(i, 1);\n          break;\n        }\n      }\n\n      return true;\n    },\n  };\n}\n\nconst PROFILING_EVENT_CACHE = makeProfilingCache(20);\n\n\n//# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvY2FjaGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsc0JBQXNCLDBCQUEwQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7O0FBRXFEO0FBQ3JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL3Byb2ZpbGluZy9jYWNoZS5qcz8xZWQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIGNhY2hlIHRoYXQgZXZpY3RzIGtleXMgaW4gZmlmbyBvcmRlclxuICogQHBhcmFtIHNpemUge051bWJlcn1cbiAqL1xuZnVuY3Rpb24gbWFrZVByb2ZpbGluZ0NhY2hlKFxuICBzaXplLFxuKVxuXG4ge1xuICAvLyBNYWludGFpbiBhIGZpZm8gcXVldWUgb2Yga2V5cywgd2UgY2Fubm90IHJlbHkgb24gT2JqZWN0LmtleXMgYXMgdGhlIGJyb3dzZXIgbWF5IG5vdCBzdXBwb3J0IGl0LlxuICBsZXQgZXZpY3Rpb25PcmRlciA9IFtdO1xuICBsZXQgY2FjaGUgPSB7fTtcblxuICByZXR1cm4ge1xuICAgIGFkZChrZXksIHZhbHVlKSB7XG4gICAgICB3aGlsZSAoZXZpY3Rpb25PcmRlci5sZW5ndGggPj0gc2l6ZSkge1xuICAgICAgICAvLyBzaGlmdCBpcyBPKG4pIGJ1dCB0aGlzIGlzIHNtYWxsIHNpemUgYW5kIG9ubHkgaGFwcGVucyBpZiB3ZSBhcmVcbiAgICAgICAgLy8gZXhjZWVkaW5nIHRoZSBjYWNoZSBzaXplIHNvIGl0IHNob3VsZCBiZSBmaW5lLlxuICAgICAgICBjb25zdCBldmljdENhbmRpZGF0ZSA9IGV2aWN0aW9uT3JkZXIuc2hpZnQoKTtcblxuICAgICAgICBpZiAoZXZpY3RDYW5kaWRhdGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZHluYW1pYy1kZWxldGVcbiAgICAgICAgICBkZWxldGUgY2FjaGVbZXZpY3RDYW5kaWRhdGVdO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGluIGNhc2Ugd2UgaGF2ZSBhIGNvbGxpc2lvbiwgZGVsZXRlIHRoZSBvbGQga2V5LlxuICAgICAgaWYgKGNhY2hlW2tleV0pIHtcbiAgICAgICAgdGhpcy5kZWxldGUoa2V5KTtcbiAgICAgIH1cblxuICAgICAgZXZpY3Rpb25PcmRlci5wdXNoKGtleSk7XG4gICAgICBjYWNoZVtrZXldID0gdmFsdWU7XG4gICAgfSxcbiAgICBjbGVhcigpIHtcbiAgICAgIGNhY2hlID0ge307XG4gICAgICBldmljdGlvbk9yZGVyID0gW107XG4gICAgfSxcbiAgICBnZXQoa2V5KSB7XG4gICAgICByZXR1cm4gY2FjaGVba2V5XTtcbiAgICB9LFxuICAgIHNpemUoKSB7XG4gICAgICByZXR1cm4gZXZpY3Rpb25PcmRlci5sZW5ndGg7XG4gICAgfSxcbiAgICAvLyBEZWxldGUgY2FjaGUga2V5IGFuZCByZXR1cm4gdHJ1ZSBpZiBpdCBleGlzdGVkLCBmYWxzZSBvdGhlcndpc2UuXG4gICAgZGVsZXRlKGtleSkge1xuICAgICAgaWYgKCFjYWNoZVtrZXldKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1keW5hbWljLWRlbGV0ZVxuICAgICAgZGVsZXRlIGNhY2hlW2tleV07XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXZpY3Rpb25PcmRlci5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoZXZpY3Rpb25PcmRlcltpXSA9PT0ga2V5KSB7XG4gICAgICAgICAgZXZpY3Rpb25PcmRlci5zcGxpY2UoaSwgMSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgfTtcbn1cblxuY29uc3QgUFJPRklMSU5HX0VWRU5UX0NBQ0hFID0gbWFrZVByb2ZpbGluZ0NhY2hlKDIwKTtcblxuZXhwb3J0IHsgUFJPRklMSU5HX0VWRU5UX0NBQ0hFLCBtYWtlUHJvZmlsaW5nQ2FjaGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhY2hlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/cache.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/hubextensions.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/hubextensions.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addProfilingExtensionMethods\": function() { return /* binding */ addProfilingExtensionMethods; },\n/* harmony export */   \"onProfilingStartRouteTransaction\": function() { return /* binding */ onProfilingStartRouteTransaction; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _sendProfile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sendProfile.js */ \"./node_modules/@sentry/browser/esm/profiling/sendProfile.js\");\n\n\n\n\n\n// Max profile duration.\nconst MAX_PROFILE_DURATION_MS = 30000;\n// Keep a flag value to avoid re-initializing the profiler constructor. If it fails\n// once, it will always fail and this allows us to early return.\nlet PROFILING_CONSTRUCTOR_FAILED = false;\n\n// While we experiment, per transaction sampling interval will be more flexible to work with.\n\n/**\n * Check if profiler constructor is available.\n * @param maybeProfiler\n */\nfunction isJSProfilerSupported(maybeProfiler) {\n  return typeof maybeProfiler === 'function';\n}\n\n/**\n * Safety wrapper for startTransaction for the unlikely case that transaction starts before tracing is imported -\n * if that happens we want to avoid throwing an error from profiling code.\n * see https://github.com/getsentry/sentry-javascript/issues/4731.\n *\n * @experimental\n */\nfunction onProfilingStartRouteTransaction(transaction) {\n  if (!transaction) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Transaction is undefined, skipping profiling');\n    }\n    return transaction;\n  }\n\n  return wrapTransactionWithProfiling(transaction);\n}\n\n/**\n * Wraps startTransaction and stopTransaction with profiling related logic.\n * startProfiling is called after the call to startTransaction in order to avoid our own code from\n * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n */\nfunction wrapTransactionWithProfiling(transaction) {\n  // Feature support check first\n  const JSProfilerConstructor = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.Profiler;\n\n  if (!isJSProfilerSupported(JSProfilerConstructor)) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        '[Profiling] Profiling is not supported by this browser, Profiler interface missing on window object.',\n      );\n    }\n    return transaction;\n  }\n\n  // profilesSampleRate is multiplied with tracesSampleRate to get the final sampling rate.\n  if (!transaction.sampled) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Transaction is not sampled, skipping profiling');\n    }\n    return transaction;\n  }\n\n  // If constructor failed once, it will always fail, so we can early return.\n  if (PROFILING_CONSTRUCTOR_FAILED) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Profiling has been disabled for the duration of the current user session.');\n    }\n    return transaction;\n  }\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)().getClient();\n  const options = client && client.getOptions();\n\n  // @ts-ignore not part of the browser options yet\n  const profilesSampleRate = (options && options.profilesSampleRate) || 0;\n  if (profilesSampleRate === undefined) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Profiling disabled, enable it by setting `profilesSampleRate` option to SDK init call.');\n    }\n    return transaction;\n  }\n\n  // Check if we should sample this profile\n  if (Math.random() > profilesSampleRate) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Skip profiling transaction due to sampling.');\n    }\n    return transaction;\n  }\n\n  // From initial testing, it seems that the minimum value for sampleInterval is 10ms.\n  const samplingIntervalMS = 10;\n  // Start the profiler\n  const maxSamples = Math.floor(MAX_PROFILE_DURATION_MS / samplingIntervalMS);\n  let profiler;\n\n  // Attempt to initialize the profiler constructor, if it fails, we disable profiling for the current user session.\n  // This is likely due to a missing 'Document-Policy': 'js-profiling' header. We do not want to throw an error if this happens\n  // as we risk breaking the user's application, so just disable profiling and log an error.\n  try {\n    profiler = new JSProfilerConstructor({ sampleInterval: samplingIntervalMS, maxBufferSize: maxSamples });\n  } catch (e) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        \"[Profiling] Failed to initialize the Profiling constructor, this is likely due to a missing 'Document-Policy': 'js-profiling' header.\",\n      );\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Disabling profiling for current user session.');\n    }\n    PROFILING_CONSTRUCTOR_FAILED = true;\n  }\n\n  // We failed to construct the profiler, fallback to original transaction - there is no need to log\n  // anything as we already did that in the try/catch block.\n  if (!profiler) {\n    return transaction;\n  }\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`[Profiling] started profiling transaction: ${transaction.name || transaction.description}`);\n  }\n\n  // We create \"unique\" transaction names to avoid concurrent transactions with same names\n  // from being ignored by the profiler. From here on, only this transaction name should be used when\n  // calling the profiler methods. Note: we log the original name to the user to avoid confusion.\n  const profileId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n\n  // A couple of important things to note here:\n  // `CpuProfilerBindings.stopProfiling` will be scheduled to run in 30seconds in order to exceed max profile duration.\n  // Whichever of the two (transaction.finish/timeout) is first to run, the profiling will be stopped and the gathered profile\n  // will be processed when the original transaction is finished. Since onProfileHandler can be invoked multiple times in the\n  // event of an error or user mistake (calling transaction.finish multiple times), it is important that the behavior of onProfileHandler\n  // is idempotent as we do not want any timings or profiles to be overriden by the last call to onProfileHandler.\n  // After the original finish method is called, the event will be reported through the integration and delegated to transport.\n  let processedProfile = null;\n\n  /**\n   * Idempotent handler for profile stop\n   */\n  function onProfileHandler() {\n    // Check if the profile exists and return it the behavior has to be idempotent as users may call transaction.finish multiple times.\n    if (!transaction) {\n      return;\n    }\n    // Satisfy the type checker, but profiler will always be defined here.\n    if (!profiler) {\n      return;\n    }\n    if (processedProfile) {\n      if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n          '[Profiling] profile for:',\n          transaction.name || transaction.description,\n          'already exists, returning early',\n        );\n      }\n      return;\n    }\n\n    profiler\n      .stop()\n      .then((p) => {\n        if (maxDurationTimeoutID) {\n          _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.clearTimeout(maxDurationTimeoutID);\n          maxDurationTimeoutID = undefined;\n        }\n\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`[Profiling] stopped profiling of transaction: ${transaction.name || transaction.description}`);\n        }\n\n        // In case of an overlapping transaction, stopProfiling may return null and silently ignore the overlapping profile.\n        if (!p) {\n          if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n              `[Profiling] profiler returned null profile for: ${transaction.name || transaction.description}`,\n              'this may indicate an overlapping transaction or a call to stopProfiling with a profile title that was never started',\n            );\n          }\n          return;\n        }\n\n        // If a profile has less than 2 samples, it is not useful and should be discarded.\n        if (p.samples.length < 2) {\n          return;\n        }\n\n        processedProfile = { ...p, profile_id: profileId };\n        (0,_sendProfile_js__WEBPACK_IMPORTED_MODULE_3__.sendProfile)(profileId, processedProfile);\n      })\n      .catch(error => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] error while stopping profiler:', error);\n        }\n        return null;\n      });\n  }\n\n  // Enqueue a timeout to prevent profiles from running over max duration.\n  let maxDurationTimeoutID = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.setTimeout(() => {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        '[Profiling] max profile duration elapsed, stopping profiling for:',\n        transaction.name || transaction.description,\n      );\n    }\n    void onProfileHandler();\n  }, MAX_PROFILE_DURATION_MS);\n\n  // We need to reference the original finish call to avoid creating an infinite loop\n  const originalFinish = transaction.finish.bind(transaction);\n\n  /**\n   * Wraps startTransaction and stopTransaction with profiling related logic.\n   * startProfiling is called after the call to startTransaction in order to avoid our own code from\n   * being profiled. Because of that same reason, stopProfiling is called before the call to stopTransaction.\n   */\n  function profilingWrappedTransactionFinish() {\n    if (!transaction) {\n      return originalFinish();\n    }\n    // onProfileHandler should always return the same profile even if this is called multiple times.\n    // Always call onProfileHandler to ensure stopProfiling is called and the timeout is cleared.\n    onProfileHandler();\n\n    // Set profile context\n    transaction.setContext('profile', { profile_id: profileId });\n\n    return originalFinish();\n  }\n\n  transaction.finish = profilingWrappedTransactionFinish;\n  return transaction;\n}\n\n/**\n * Wraps startTransaction with profiling logic. This is done automatically by the profiling integration.\n */\nfunction __PRIVATE__wrapStartTransactionWithProfiling(startTransaction) {\n  return function wrappedStartTransaction(\n\n    transactionContext,\n    customSamplingContext,\n  ) {\n    const transaction = startTransaction.call(this, transactionContext, customSamplingContext);\n    if (transaction === undefined) {\n      if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] Transaction is undefined, skipping profiling');\n      }\n      return transaction;\n    }\n\n    return wrapTransactionWithProfiling(transaction);\n  };\n}\n\n/**\n * Patches startTransaction and stopTransaction with profiling logic.\n */\nfunction addProfilingExtensionMethods() {\n  const carrier = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getMainCarrier)();\n  if (!carrier.__SENTRY__) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\"[Profiling] Can't find main carrier, profiling won't work.\");\n    }\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n\n  if (!carrier.__SENTRY__.extensions['startTransaction']) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(\n        '[Profiling] startTransaction does not exists, profiling will not work. Make sure you import @sentry/tracing package before @sentry/profiling-node as import order matters.',\n      );\n    }\n    return;\n  }\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Profiling] startTransaction exists, patching it with profiling functionality...');\n  }\n\n  carrier.__SENTRY__.extensions['startTransaction'] = __PRIVATE__wrapStartTransactionWithProfiling(\n    // This is already patched by sentry/tracing, we are going to re-patch it...\n    carrier.__SENTRY__.extensions['startTransaction'] ,\n  );\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaHViZXh0ZW5zaW9ucy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNkQ7QUFDZjtBQUNQO0FBQ1E7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFEQUFVO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHdEQUFlOztBQUUvQztBQUNBO0FBQ0EsTUFBTSxxREFBVTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBOztBQUVBLGlCQUFpQiwyREFBYTtBQUM5Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsK0RBQStEO0FBQzFHLElBQUk7QUFDSjtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJLHFEQUFVLCtDQUErQyw0Q0FBNEM7QUFDekc7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9EQUFLOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFEQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw0REFBbUI7QUFDN0I7QUFDQTs7QUFFQTtBQUNBLFVBQVUscURBQVUsa0RBQWtELDRDQUE0QztBQUNsSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFVO0FBQ3RCLGlFQUFpRSw0Q0FBNEM7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkI7QUFDN0IsUUFBUSw0REFBVztBQUNuQixPQUFPO0FBQ1A7QUFDQTtBQUNBLFVBQVUscURBQVU7QUFDcEI7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBLDZCQUE2QiwwREFBaUI7QUFDOUM7QUFDQSxNQUFNLHFEQUFVO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esd0NBQXdDLHVCQUF1Qjs7QUFFL0Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHFEQUFVO0FBQ2xCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNERBQWM7QUFDaEM7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLElBQUkscURBQVU7QUFDZDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaHViZXh0ZW5zaW9ucy5qcz8yZWI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRIdWIsIGdldE1haW5DYXJyaWVyIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGxvZ2dlciwgdXVpZDQgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uL2hlbHBlcnMuanMnO1xuaW1wb3J0IHsgc2VuZFByb2ZpbGUgfSBmcm9tICcuL3NlbmRQcm9maWxlLmpzJztcblxuLy8gTWF4IHByb2ZpbGUgZHVyYXRpb24uXG5jb25zdCBNQVhfUFJPRklMRV9EVVJBVElPTl9NUyA9IDMwMDAwO1xuLy8gS2VlcCBhIGZsYWcgdmFsdWUgdG8gYXZvaWQgcmUtaW5pdGlhbGl6aW5nIHRoZSBwcm9maWxlciBjb25zdHJ1Y3Rvci4gSWYgaXQgZmFpbHNcbi8vIG9uY2UsIGl0IHdpbGwgYWx3YXlzIGZhaWwgYW5kIHRoaXMgYWxsb3dzIHVzIHRvIGVhcmx5IHJldHVybi5cbmxldCBQUk9GSUxJTkdfQ09OU1RSVUNUT1JfRkFJTEVEID0gZmFsc2U7XG5cbi8vIFdoaWxlIHdlIGV4cGVyaW1lbnQsIHBlciB0cmFuc2FjdGlvbiBzYW1wbGluZyBpbnRlcnZhbCB3aWxsIGJlIG1vcmUgZmxleGlibGUgdG8gd29yayB3aXRoLlxuXG4vKipcbiAqIENoZWNrIGlmIHByb2ZpbGVyIGNvbnN0cnVjdG9yIGlzIGF2YWlsYWJsZS5cbiAqIEBwYXJhbSBtYXliZVByb2ZpbGVyXG4gKi9cbmZ1bmN0aW9uIGlzSlNQcm9maWxlclN1cHBvcnRlZChtYXliZVByb2ZpbGVyKSB7XG4gIHJldHVybiB0eXBlb2YgbWF5YmVQcm9maWxlciA9PT0gJ2Z1bmN0aW9uJztcbn1cblxuLyoqXG4gKiBTYWZldHkgd3JhcHBlciBmb3Igc3RhcnRUcmFuc2FjdGlvbiBmb3IgdGhlIHVubGlrZWx5IGNhc2UgdGhhdCB0cmFuc2FjdGlvbiBzdGFydHMgYmVmb3JlIHRyYWNpbmcgaXMgaW1wb3J0ZWQgLVxuICogaWYgdGhhdCBoYXBwZW5zIHdlIHdhbnQgdG8gYXZvaWQgdGhyb3dpbmcgYW4gZXJyb3IgZnJvbSBwcm9maWxpbmcgY29kZS5cbiAqIHNlZSBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy80NzMxLlxuICpcbiAqIEBleHBlcmltZW50YWxcbiAqL1xuZnVuY3Rpb24gb25Qcm9maWxpbmdTdGFydFJvdXRlVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24pIHtcbiAgaWYgKCF0cmFuc2FjdGlvbikge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIubG9nKCdbUHJvZmlsaW5nXSBUcmFuc2FjdGlvbiBpcyB1bmRlZmluZWQsIHNraXBwaW5nIHByb2ZpbGluZycpO1xuICAgIH1cbiAgICByZXR1cm4gdHJhbnNhY3Rpb247XG4gIH1cblxuICByZXR1cm4gd3JhcFRyYW5zYWN0aW9uV2l0aFByb2ZpbGluZyh0cmFuc2FjdGlvbik7XG59XG5cbi8qKlxuICogV3JhcHMgc3RhcnRUcmFuc2FjdGlvbiBhbmQgc3RvcFRyYW5zYWN0aW9uIHdpdGggcHJvZmlsaW5nIHJlbGF0ZWQgbG9naWMuXG4gKiBzdGFydFByb2ZpbGluZyBpcyBjYWxsZWQgYWZ0ZXIgdGhlIGNhbGwgdG8gc3RhcnRUcmFuc2FjdGlvbiBpbiBvcmRlciB0byBhdm9pZCBvdXIgb3duIGNvZGUgZnJvbVxuICogYmVpbmcgcHJvZmlsZWQuIEJlY2F1c2Ugb2YgdGhhdCBzYW1lIHJlYXNvbiwgc3RvcFByb2ZpbGluZyBpcyBjYWxsZWQgYmVmb3JlIHRoZSBjYWxsIHRvIHN0b3BUcmFuc2FjdGlvbi5cbiAqL1xuZnVuY3Rpb24gd3JhcFRyYW5zYWN0aW9uV2l0aFByb2ZpbGluZyh0cmFuc2FjdGlvbikge1xuICAvLyBGZWF0dXJlIHN1cHBvcnQgY2hlY2sgZmlyc3RcbiAgY29uc3QgSlNQcm9maWxlckNvbnN0cnVjdG9yID0gV0lORE9XLlByb2ZpbGVyO1xuXG4gIGlmICghaXNKU1Byb2ZpbGVyU3VwcG9ydGVkKEpTUHJvZmlsZXJDb25zdHJ1Y3RvcikpIHtcbiAgICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgICAgbG9nZ2VyLmxvZyhcbiAgICAgICAgJ1tQcm9maWxpbmddIFByb2ZpbGluZyBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgYnJvd3NlciwgUHJvZmlsZXIgaW50ZXJmYWNlIG1pc3Npbmcgb24gd2luZG93IG9iamVjdC4nLFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xuICB9XG5cbiAgLy8gcHJvZmlsZXNTYW1wbGVSYXRlIGlzIG11bHRpcGxpZWQgd2l0aCB0cmFjZXNTYW1wbGVSYXRlIHRvIGdldCB0aGUgZmluYWwgc2FtcGxpbmcgcmF0ZS5cbiAgaWYgKCF0cmFuc2FjdGlvbi5zYW1wbGVkKSB7XG4gICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIFRyYW5zYWN0aW9uIGlzIG5vdCBzYW1wbGVkLCBza2lwcGluZyBwcm9maWxpbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xuICB9XG5cbiAgLy8gSWYgY29uc3RydWN0b3IgZmFpbGVkIG9uY2UsIGl0IHdpbGwgYWx3YXlzIGZhaWwsIHNvIHdlIGNhbiBlYXJseSByZXR1cm4uXG4gIGlmIChQUk9GSUxJTkdfQ09OU1RSVUNUT1JfRkFJTEVEKSB7XG4gICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIFByb2ZpbGluZyBoYXMgYmVlbiBkaXNhYmxlZCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBjdXJyZW50IHVzZXIgc2Vzc2lvbi4nKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xuICB9XG5cbiAgY29uc3QgY2xpZW50ID0gZ2V0Q3VycmVudEh1YigpLmdldENsaWVudCgpO1xuICBjb25zdCBvcHRpb25zID0gY2xpZW50ICYmIGNsaWVudC5nZXRPcHRpb25zKCk7XG5cbiAgLy8gQHRzLWlnbm9yZSBub3QgcGFydCBvZiB0aGUgYnJvd3NlciBvcHRpb25zIHlldFxuICBjb25zdCBwcm9maWxlc1NhbXBsZVJhdGUgPSAob3B0aW9ucyAmJiBvcHRpb25zLnByb2ZpbGVzU2FtcGxlUmF0ZSkgfHwgMDtcbiAgaWYgKHByb2ZpbGVzU2FtcGxlUmF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIFByb2ZpbGluZyBkaXNhYmxlZCwgZW5hYmxlIGl0IGJ5IHNldHRpbmcgYHByb2ZpbGVzU2FtcGxlUmF0ZWAgb3B0aW9uIHRvIFNESyBpbml0IGNhbGwuJyk7XG4gICAgfVxuICAgIHJldHVybiB0cmFuc2FjdGlvbjtcbiAgfVxuXG4gIC8vIENoZWNrIGlmIHdlIHNob3VsZCBzYW1wbGUgdGhpcyBwcm9maWxlXG4gIGlmIChNYXRoLnJhbmRvbSgpID4gcHJvZmlsZXNTYW1wbGVSYXRlKSB7XG4gICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIFNraXAgcHJvZmlsaW5nIHRyYW5zYWN0aW9uIGR1ZSB0byBzYW1wbGluZy4nKTtcbiAgICB9XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xuICB9XG5cbiAgLy8gRnJvbSBpbml0aWFsIHRlc3RpbmcsIGl0IHNlZW1zIHRoYXQgdGhlIG1pbmltdW0gdmFsdWUgZm9yIHNhbXBsZUludGVydmFsIGlzIDEwbXMuXG4gIGNvbnN0IHNhbXBsaW5nSW50ZXJ2YWxNUyA9IDEwO1xuICAvLyBTdGFydCB0aGUgcHJvZmlsZXJcbiAgY29uc3QgbWF4U2FtcGxlcyA9IE1hdGguZmxvb3IoTUFYX1BST0ZJTEVfRFVSQVRJT05fTVMgLyBzYW1wbGluZ0ludGVydmFsTVMpO1xuICBsZXQgcHJvZmlsZXI7XG5cbiAgLy8gQXR0ZW1wdCB0byBpbml0aWFsaXplIHRoZSBwcm9maWxlciBjb25zdHJ1Y3RvciwgaWYgaXQgZmFpbHMsIHdlIGRpc2FibGUgcHJvZmlsaW5nIGZvciB0aGUgY3VycmVudCB1c2VyIHNlc3Npb24uXG4gIC8vIFRoaXMgaXMgbGlrZWx5IGR1ZSB0byBhIG1pc3NpbmcgJ0RvY3VtZW50LVBvbGljeSc6ICdqcy1wcm9maWxpbmcnIGhlYWRlci4gV2UgZG8gbm90IHdhbnQgdG8gdGhyb3cgYW4gZXJyb3IgaWYgdGhpcyBoYXBwZW5zXG4gIC8vIGFzIHdlIHJpc2sgYnJlYWtpbmcgdGhlIHVzZXIncyBhcHBsaWNhdGlvbiwgc28ganVzdCBkaXNhYmxlIHByb2ZpbGluZyBhbmQgbG9nIGFuIGVycm9yLlxuICB0cnkge1xuICAgIHByb2ZpbGVyID0gbmV3IEpTUHJvZmlsZXJDb25zdHJ1Y3Rvcih7IHNhbXBsZUludGVydmFsOiBzYW1wbGluZ0ludGVydmFsTVMsIG1heEJ1ZmZlclNpemU6IG1heFNhbXBsZXMgfSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgICAgbG9nZ2VyLmxvZyhcbiAgICAgICAgXCJbUHJvZmlsaW5nXSBGYWlsZWQgdG8gaW5pdGlhbGl6ZSB0aGUgUHJvZmlsaW5nIGNvbnN0cnVjdG9yLCB0aGlzIGlzIGxpa2VseSBkdWUgdG8gYSBtaXNzaW5nICdEb2N1bWVudC1Qb2xpY3knOiAnanMtcHJvZmlsaW5nJyBoZWFkZXIuXCIsXG4gICAgICApO1xuICAgICAgbG9nZ2VyLmxvZygnW1Byb2ZpbGluZ10gRGlzYWJsaW5nIHByb2ZpbGluZyBmb3IgY3VycmVudCB1c2VyIHNlc3Npb24uJyk7XG4gICAgfVxuICAgIFBST0ZJTElOR19DT05TVFJVQ1RPUl9GQUlMRUQgPSB0cnVlO1xuICB9XG5cbiAgLy8gV2UgZmFpbGVkIHRvIGNvbnN0cnVjdCB0aGUgcHJvZmlsZXIsIGZhbGxiYWNrIHRvIG9yaWdpbmFsIHRyYW5zYWN0aW9uIC0gdGhlcmUgaXMgbm8gbmVlZCB0byBsb2dcbiAgLy8gYW55dGhpbmcgYXMgd2UgYWxyZWFkeSBkaWQgdGhhdCBpbiB0aGUgdHJ5L2NhdGNoIGJsb2NrLlxuICBpZiAoIXByb2ZpbGVyKSB7XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uO1xuICB9XG5cbiAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICBsb2dnZXIubG9nKGBbUHJvZmlsaW5nXSBzdGFydGVkIHByb2ZpbGluZyB0cmFuc2FjdGlvbjogJHt0cmFuc2FjdGlvbi5uYW1lIHx8IHRyYW5zYWN0aW9uLmRlc2NyaXB0aW9ufWApO1xuICB9XG5cbiAgLy8gV2UgY3JlYXRlIFwidW5pcXVlXCIgdHJhbnNhY3Rpb24gbmFtZXMgdG8gYXZvaWQgY29uY3VycmVudCB0cmFuc2FjdGlvbnMgd2l0aCBzYW1lIG5hbWVzXG4gIC8vIGZyb20gYmVpbmcgaWdub3JlZCBieSB0aGUgcHJvZmlsZXIuIEZyb20gaGVyZSBvbiwgb25seSB0aGlzIHRyYW5zYWN0aW9uIG5hbWUgc2hvdWxkIGJlIHVzZWQgd2hlblxuICAvLyBjYWxsaW5nIHRoZSBwcm9maWxlciBtZXRob2RzLiBOb3RlOiB3ZSBsb2cgdGhlIG9yaWdpbmFsIG5hbWUgdG8gdGhlIHVzZXIgdG8gYXZvaWQgY29uZnVzaW9uLlxuICBjb25zdCBwcm9maWxlSWQgPSB1dWlkNCgpO1xuXG4gIC8vIEEgY291cGxlIG9mIGltcG9ydGFudCB0aGluZ3MgdG8gbm90ZSBoZXJlOlxuICAvLyBgQ3B1UHJvZmlsZXJCaW5kaW5ncy5zdG9wUHJvZmlsaW5nYCB3aWxsIGJlIHNjaGVkdWxlZCB0byBydW4gaW4gMzBzZWNvbmRzIGluIG9yZGVyIHRvIGV4Y2VlZCBtYXggcHJvZmlsZSBkdXJhdGlvbi5cbiAgLy8gV2hpY2hldmVyIG9mIHRoZSB0d28gKHRyYW5zYWN0aW9uLmZpbmlzaC90aW1lb3V0KSBpcyBmaXJzdCB0byBydW4sIHRoZSBwcm9maWxpbmcgd2lsbCBiZSBzdG9wcGVkIGFuZCB0aGUgZ2F0aGVyZWQgcHJvZmlsZVxuICAvLyB3aWxsIGJlIHByb2Nlc3NlZCB3aGVuIHRoZSBvcmlnaW5hbCB0cmFuc2FjdGlvbiBpcyBmaW5pc2hlZC4gU2luY2Ugb25Qcm9maWxlSGFuZGxlciBjYW4gYmUgaW52b2tlZCBtdWx0aXBsZSB0aW1lcyBpbiB0aGVcbiAgLy8gZXZlbnQgb2YgYW4gZXJyb3Igb3IgdXNlciBtaXN0YWtlIChjYWxsaW5nIHRyYW5zYWN0aW9uLmZpbmlzaCBtdWx0aXBsZSB0aW1lcyksIGl0IGlzIGltcG9ydGFudCB0aGF0IHRoZSBiZWhhdmlvciBvZiBvblByb2ZpbGVIYW5kbGVyXG4gIC8vIGlzIGlkZW1wb3RlbnQgYXMgd2UgZG8gbm90IHdhbnQgYW55IHRpbWluZ3Mgb3IgcHJvZmlsZXMgdG8gYmUgb3ZlcnJpZGVuIGJ5IHRoZSBsYXN0IGNhbGwgdG8gb25Qcm9maWxlSGFuZGxlci5cbiAgLy8gQWZ0ZXIgdGhlIG9yaWdpbmFsIGZpbmlzaCBtZXRob2QgaXMgY2FsbGVkLCB0aGUgZXZlbnQgd2lsbCBiZSByZXBvcnRlZCB0aHJvdWdoIHRoZSBpbnRlZ3JhdGlvbiBhbmQgZGVsZWdhdGVkIHRvIHRyYW5zcG9ydC5cbiAgbGV0IHByb2Nlc3NlZFByb2ZpbGUgPSBudWxsO1xuXG4gIC8qKlxuICAgKiBJZGVtcG90ZW50IGhhbmRsZXIgZm9yIHByb2ZpbGUgc3RvcFxuICAgKi9cbiAgZnVuY3Rpb24gb25Qcm9maWxlSGFuZGxlcigpIHtcbiAgICAvLyBDaGVjayBpZiB0aGUgcHJvZmlsZSBleGlzdHMgYW5kIHJldHVybiBpdCB0aGUgYmVoYXZpb3IgaGFzIHRvIGJlIGlkZW1wb3RlbnQgYXMgdXNlcnMgbWF5IGNhbGwgdHJhbnNhY3Rpb24uZmluaXNoIG11bHRpcGxlIHRpbWVzLlxuICAgIGlmICghdHJhbnNhY3Rpb24pIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gU2F0aXNmeSB0aGUgdHlwZSBjaGVja2VyLCBidXQgcHJvZmlsZXIgd2lsbCBhbHdheXMgYmUgZGVmaW5lZCBoZXJlLlxuICAgIGlmICghcHJvZmlsZXIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKHByb2Nlc3NlZFByb2ZpbGUpIHtcbiAgICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICAgIGxvZ2dlci5sb2coXG4gICAgICAgICAgJ1tQcm9maWxpbmddIHByb2ZpbGUgZm9yOicsXG4gICAgICAgICAgdHJhbnNhY3Rpb24ubmFtZSB8fCB0cmFuc2FjdGlvbi5kZXNjcmlwdGlvbixcbiAgICAgICAgICAnYWxyZWFkeSBleGlzdHMsIHJldHVybmluZyBlYXJseScsXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcHJvZmlsZXJcbiAgICAgIC5zdG9wKClcbiAgICAgIC50aGVuKChwKSA9PiB7XG4gICAgICAgIGlmIChtYXhEdXJhdGlvblRpbWVvdXRJRCkge1xuICAgICAgICAgIFdJTkRPVy5jbGVhclRpbWVvdXQobWF4RHVyYXRpb25UaW1lb3V0SUQpO1xuICAgICAgICAgIG1heER1cmF0aW9uVGltZW91dElEID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgICAgICBsb2dnZXIubG9nKGBbUHJvZmlsaW5nXSBzdG9wcGVkIHByb2ZpbGluZyBvZiB0cmFuc2FjdGlvbjogJHt0cmFuc2FjdGlvbi5uYW1lIHx8IHRyYW5zYWN0aW9uLmRlc2NyaXB0aW9ufWApO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSW4gY2FzZSBvZiBhbiBvdmVybGFwcGluZyB0cmFuc2FjdGlvbiwgc3RvcFByb2ZpbGluZyBtYXkgcmV0dXJuIG51bGwgYW5kIHNpbGVudGx5IGlnbm9yZSB0aGUgb3ZlcmxhcHBpbmcgcHJvZmlsZS5cbiAgICAgICAgaWYgKCFwKSB7XG4gICAgICAgICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgICAgICAgIGxvZ2dlci5sb2coXG4gICAgICAgICAgICAgIGBbUHJvZmlsaW5nXSBwcm9maWxlciByZXR1cm5lZCBudWxsIHByb2ZpbGUgZm9yOiAke3RyYW5zYWN0aW9uLm5hbWUgfHwgdHJhbnNhY3Rpb24uZGVzY3JpcHRpb259YCxcbiAgICAgICAgICAgICAgJ3RoaXMgbWF5IGluZGljYXRlIGFuIG92ZXJsYXBwaW5nIHRyYW5zYWN0aW9uIG9yIGEgY2FsbCB0byBzdG9wUHJvZmlsaW5nIHdpdGggYSBwcm9maWxlIHRpdGxlIHRoYXQgd2FzIG5ldmVyIHN0YXJ0ZWQnLFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWYgYSBwcm9maWxlIGhhcyBsZXNzIHRoYW4gMiBzYW1wbGVzLCBpdCBpcyBub3QgdXNlZnVsIGFuZCBzaG91bGQgYmUgZGlzY2FyZGVkLlxuICAgICAgICBpZiAocC5zYW1wbGVzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBwcm9jZXNzZWRQcm9maWxlID0geyAuLi5wLCBwcm9maWxlX2lkOiBwcm9maWxlSWQgfTtcbiAgICAgICAgc2VuZFByb2ZpbGUocHJvZmlsZUlkLCBwcm9jZXNzZWRQcm9maWxlKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgICAgICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIGVycm9yIHdoaWxlIHN0b3BwaW5nIHByb2ZpbGVyOicsIGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH0pO1xuICB9XG5cbiAgLy8gRW5xdWV1ZSBhIHRpbWVvdXQgdG8gcHJldmVudCBwcm9maWxlcyBmcm9tIHJ1bm5pbmcgb3ZlciBtYXggZHVyYXRpb24uXG4gIGxldCBtYXhEdXJhdGlvblRpbWVvdXRJRCA9IFdJTkRPVy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgICAgbG9nZ2VyLmxvZyhcbiAgICAgICAgJ1tQcm9maWxpbmddIG1heCBwcm9maWxlIGR1cmF0aW9uIGVsYXBzZWQsIHN0b3BwaW5nIHByb2ZpbGluZyBmb3I6JyxcbiAgICAgICAgdHJhbnNhY3Rpb24ubmFtZSB8fCB0cmFuc2FjdGlvbi5kZXNjcmlwdGlvbixcbiAgICAgICk7XG4gICAgfVxuICAgIHZvaWQgb25Qcm9maWxlSGFuZGxlcigpO1xuICB9LCBNQVhfUFJPRklMRV9EVVJBVElPTl9NUyk7XG5cbiAgLy8gV2UgbmVlZCB0byByZWZlcmVuY2UgdGhlIG9yaWdpbmFsIGZpbmlzaCBjYWxsIHRvIGF2b2lkIGNyZWF0aW5nIGFuIGluZmluaXRlIGxvb3BcbiAgY29uc3Qgb3JpZ2luYWxGaW5pc2ggPSB0cmFuc2FjdGlvbi5maW5pc2guYmluZCh0cmFuc2FjdGlvbik7XG5cbiAgLyoqXG4gICAqIFdyYXBzIHN0YXJ0VHJhbnNhY3Rpb24gYW5kIHN0b3BUcmFuc2FjdGlvbiB3aXRoIHByb2ZpbGluZyByZWxhdGVkIGxvZ2ljLlxuICAgKiBzdGFydFByb2ZpbGluZyBpcyBjYWxsZWQgYWZ0ZXIgdGhlIGNhbGwgdG8gc3RhcnRUcmFuc2FjdGlvbiBpbiBvcmRlciB0byBhdm9pZCBvdXIgb3duIGNvZGUgZnJvbVxuICAgKiBiZWluZyBwcm9maWxlZC4gQmVjYXVzZSBvZiB0aGF0IHNhbWUgcmVhc29uLCBzdG9wUHJvZmlsaW5nIGlzIGNhbGxlZCBiZWZvcmUgdGhlIGNhbGwgdG8gc3RvcFRyYW5zYWN0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gcHJvZmlsaW5nV3JhcHBlZFRyYW5zYWN0aW9uRmluaXNoKCkge1xuICAgIGlmICghdHJhbnNhY3Rpb24pIHtcbiAgICAgIHJldHVybiBvcmlnaW5hbEZpbmlzaCgpO1xuICAgIH1cbiAgICAvLyBvblByb2ZpbGVIYW5kbGVyIHNob3VsZCBhbHdheXMgcmV0dXJuIHRoZSBzYW1lIHByb2ZpbGUgZXZlbiBpZiB0aGlzIGlzIGNhbGxlZCBtdWx0aXBsZSB0aW1lcy5cbiAgICAvLyBBbHdheXMgY2FsbCBvblByb2ZpbGVIYW5kbGVyIHRvIGVuc3VyZSBzdG9wUHJvZmlsaW5nIGlzIGNhbGxlZCBhbmQgdGhlIHRpbWVvdXQgaXMgY2xlYXJlZC5cbiAgICBvblByb2ZpbGVIYW5kbGVyKCk7XG5cbiAgICAvLyBTZXQgcHJvZmlsZSBjb250ZXh0XG4gICAgdHJhbnNhY3Rpb24uc2V0Q29udGV4dCgncHJvZmlsZScsIHsgcHJvZmlsZV9pZDogcHJvZmlsZUlkIH0pO1xuXG4gICAgcmV0dXJuIG9yaWdpbmFsRmluaXNoKCk7XG4gIH1cblxuICB0cmFuc2FjdGlvbi5maW5pc2ggPSBwcm9maWxpbmdXcmFwcGVkVHJhbnNhY3Rpb25GaW5pc2g7XG4gIHJldHVybiB0cmFuc2FjdGlvbjtcbn1cblxuLyoqXG4gKiBXcmFwcyBzdGFydFRyYW5zYWN0aW9uIHdpdGggcHJvZmlsaW5nIGxvZ2ljLiBUaGlzIGlzIGRvbmUgYXV0b21hdGljYWxseSBieSB0aGUgcHJvZmlsaW5nIGludGVncmF0aW9uLlxuICovXG5mdW5jdGlvbiBfX1BSSVZBVEVfX3dyYXBTdGFydFRyYW5zYWN0aW9uV2l0aFByb2ZpbGluZyhzdGFydFRyYW5zYWN0aW9uKSB7XG4gIHJldHVybiBmdW5jdGlvbiB3cmFwcGVkU3RhcnRUcmFuc2FjdGlvbihcblxuICAgIHRyYW5zYWN0aW9uQ29udGV4dCxcbiAgICBjdXN0b21TYW1wbGluZ0NvbnRleHQsXG4gICkge1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gc3RhcnRUcmFuc2FjdGlvbi5jYWxsKHRoaXMsIHRyYW5zYWN0aW9uQ29udGV4dCwgY3VzdG9tU2FtcGxpbmdDb250ZXh0KTtcbiAgICBpZiAodHJhbnNhY3Rpb24gPT09IHVuZGVmaW5lZCkge1xuICAgICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgICAgbG9nZ2VyLmxvZygnW1Byb2ZpbGluZ10gVHJhbnNhY3Rpb24gaXMgdW5kZWZpbmVkLCBza2lwcGluZyBwcm9maWxpbmcnKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cmFuc2FjdGlvbjtcbiAgICB9XG5cbiAgICByZXR1cm4gd3JhcFRyYW5zYWN0aW9uV2l0aFByb2ZpbGluZyh0cmFuc2FjdGlvbik7XG4gIH07XG59XG5cbi8qKlxuICogUGF0Y2hlcyBzdGFydFRyYW5zYWN0aW9uIGFuZCBzdG9wVHJhbnNhY3Rpb24gd2l0aCBwcm9maWxpbmcgbG9naWMuXG4gKi9cbmZ1bmN0aW9uIGFkZFByb2ZpbGluZ0V4dGVuc2lvbk1ldGhvZHMoKSB7XG4gIGNvbnN0IGNhcnJpZXIgPSBnZXRNYWluQ2FycmllcigpO1xuICBpZiAoIWNhcnJpZXIuX19TRU5UUllfXykge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIubG9nKFwiW1Byb2ZpbGluZ10gQ2FuJ3QgZmluZCBtYWluIGNhcnJpZXIsIHByb2ZpbGluZyB3b24ndCB3b3JrLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG4gIGNhcnJpZXIuX19TRU5UUllfXy5leHRlbnNpb25zID0gY2Fycmllci5fX1NFTlRSWV9fLmV4dGVuc2lvbnMgfHwge307XG5cbiAgaWYgKCFjYXJyaWVyLl9fU0VOVFJZX18uZXh0ZW5zaW9uc1snc3RhcnRUcmFuc2FjdGlvbiddKSB7XG4gICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgIGxvZ2dlci5sb2coXG4gICAgICAgICdbUHJvZmlsaW5nXSBzdGFydFRyYW5zYWN0aW9uIGRvZXMgbm90IGV4aXN0cywgcHJvZmlsaW5nIHdpbGwgbm90IHdvcmsuIE1ha2Ugc3VyZSB5b3UgaW1wb3J0IEBzZW50cnkvdHJhY2luZyBwYWNrYWdlIGJlZm9yZSBAc2VudHJ5L3Byb2ZpbGluZy1ub2RlIGFzIGltcG9ydCBvcmRlciBtYXR0ZXJzLicsXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgIGxvZ2dlci5sb2coJ1tQcm9maWxpbmddIHN0YXJ0VHJhbnNhY3Rpb24gZXhpc3RzLCBwYXRjaGluZyBpdCB3aXRoIHByb2ZpbGluZyBmdW5jdGlvbmFsaXR5Li4uJyk7XG4gIH1cblxuICBjYXJyaWVyLl9fU0VOVFJZX18uZXh0ZW5zaW9uc1snc3RhcnRUcmFuc2FjdGlvbiddID0gX19QUklWQVRFX193cmFwU3RhcnRUcmFuc2FjdGlvbldpdGhQcm9maWxpbmcoXG4gICAgLy8gVGhpcyBpcyBhbHJlYWR5IHBhdGNoZWQgYnkgc2VudHJ5L3RyYWNpbmcsIHdlIGFyZSBnb2luZyB0byByZS1wYXRjaCBpdC4uLlxuICAgIGNhcnJpZXIuX19TRU5UUllfXy5leHRlbnNpb25zWydzdGFydFRyYW5zYWN0aW9uJ10gLFxuICApO1xufVxuXG5leHBvcnQgeyBhZGRQcm9maWxpbmdFeHRlbnNpb25NZXRob2RzLCBvblByb2ZpbGluZ1N0YXJ0Um91dGVUcmFuc2FjdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHViZXh0ZW5zaW9ucy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/hubextensions.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/integration.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/integration.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserProfilingIntegration\": function() { return /* binding */ BrowserProfilingIntegration; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cache.js */ \"./node_modules/@sentry/browser/esm/profiling/cache.js\");\n/* harmony import */ var _hubextensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hubextensions.js */ \"./node_modules/@sentry/browser/esm/profiling/hubextensions.js\");\n\n\n\n\n/**\n * Browser profiling integration. Stores any event that has contexts[\"profile\"][\"profile_id\"]\n * This exists because we do not want to await async profiler.stop calls as transaction.finish is called\n * in a synchronous context. Instead, we handle sending the profile async from the promise callback and\n * rely on being able to pull the event from the cache when we need to construct the envelope. This makes the\n * integration less reliable as we might be dropping profiles when the cache is full.\n *\n * @experimental\n */\nclass BrowserProfilingIntegration  {constructor() { BrowserProfilingIntegration.prototype.__init.call(this); }\n    __init() {this.name = 'BrowserProfilingIntegration';}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor) {\n    // Patching the hub to add the extension methods.\n    // Warning: we have an implicit dependency on import order and we will fail patching if the constructor of\n    // BrowserProfilingIntegration is called before @sentry/tracing is imported. This is because we need to patch\n    // the methods of @sentry/tracing which are patched as a side effect of importing @sentry/tracing.\n    (0,_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__.addProfilingExtensionMethods)();\n\n    // Add our event processor\n    addGlobalEventProcessor(this.handleGlobalEvent.bind(this));\n  }\n\n  /**\n   * @inheritDoc\n   */\n   handleGlobalEvent(event) {\n    const profileId = event.contexts && event.contexts['profile'] && event.contexts['profile']['profile_id'];\n\n    if (profileId && typeof profileId === 'string') {\n      if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] Profiling event found, caching it.');\n      }\n      _cache_js__WEBPACK_IMPORTED_MODULE_2__.PROFILING_EVENT_CACHE.add(profileId, event);\n    }\n\n    return event;\n  }\n}\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaW50ZWdyYXRpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF1QztBQUNZO0FBQ2U7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxnQkFBZ0I7QUFDcEQsY0FBYzs7QUFFZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSwrRUFBNEI7O0FBRWhDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRLHFEQUFVO0FBQ2xCO0FBQ0EsTUFBTSxnRUFBeUI7QUFDL0I7O0FBRUE7QUFDQTtBQUNBOztBQUV1QztBQUN2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvaW50ZWdyYXRpb24uanM/NGI3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IFBST0ZJTElOR19FVkVOVF9DQUNIRSB9IGZyb20gJy4vY2FjaGUuanMnO1xuaW1wb3J0IHsgYWRkUHJvZmlsaW5nRXh0ZW5zaW9uTWV0aG9kcyB9IGZyb20gJy4vaHViZXh0ZW5zaW9ucy5qcyc7XG5cbi8qKlxuICogQnJvd3NlciBwcm9maWxpbmcgaW50ZWdyYXRpb24uIFN0b3JlcyBhbnkgZXZlbnQgdGhhdCBoYXMgY29udGV4dHNbXCJwcm9maWxlXCJdW1wicHJvZmlsZV9pZFwiXVxuICogVGhpcyBleGlzdHMgYmVjYXVzZSB3ZSBkbyBub3Qgd2FudCB0byBhd2FpdCBhc3luYyBwcm9maWxlci5zdG9wIGNhbGxzIGFzIHRyYW5zYWN0aW9uLmZpbmlzaCBpcyBjYWxsZWRcbiAqIGluIGEgc3luY2hyb25vdXMgY29udGV4dC4gSW5zdGVhZCwgd2UgaGFuZGxlIHNlbmRpbmcgdGhlIHByb2ZpbGUgYXN5bmMgZnJvbSB0aGUgcHJvbWlzZSBjYWxsYmFjayBhbmRcbiAqIHJlbHkgb24gYmVpbmcgYWJsZSB0byBwdWxsIHRoZSBldmVudCBmcm9tIHRoZSBjYWNoZSB3aGVuIHdlIG5lZWQgdG8gY29uc3RydWN0IHRoZSBlbnZlbG9wZS4gVGhpcyBtYWtlcyB0aGVcbiAqIGludGVncmF0aW9uIGxlc3MgcmVsaWFibGUgYXMgd2UgbWlnaHQgYmUgZHJvcHBpbmcgcHJvZmlsZXMgd2hlbiB0aGUgY2FjaGUgaXMgZnVsbC5cbiAqXG4gKiBAZXhwZXJpbWVudGFsXG4gKi9cbmNsYXNzIEJyb3dzZXJQcm9maWxpbmdJbnRlZ3JhdGlvbiAge2NvbnN0cnVjdG9yKCkgeyBCcm93c2VyUHJvZmlsaW5nSW50ZWdyYXRpb24ucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpOyB9XG4gICAgX19pbml0KCkge3RoaXMubmFtZSA9ICdCcm93c2VyUHJvZmlsaW5nSW50ZWdyYXRpb24nO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXR1cE9uY2UoYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IpIHtcbiAgICAvLyBQYXRjaGluZyB0aGUgaHViIHRvIGFkZCB0aGUgZXh0ZW5zaW9uIG1ldGhvZHMuXG4gICAgLy8gV2FybmluZzogd2UgaGF2ZSBhbiBpbXBsaWNpdCBkZXBlbmRlbmN5IG9uIGltcG9ydCBvcmRlciBhbmQgd2Ugd2lsbCBmYWlsIHBhdGNoaW5nIGlmIHRoZSBjb25zdHJ1Y3RvciBvZlxuICAgIC8vIEJyb3dzZXJQcm9maWxpbmdJbnRlZ3JhdGlvbiBpcyBjYWxsZWQgYmVmb3JlIEBzZW50cnkvdHJhY2luZyBpcyBpbXBvcnRlZC4gVGhpcyBpcyBiZWNhdXNlIHdlIG5lZWQgdG8gcGF0Y2hcbiAgICAvLyB0aGUgbWV0aG9kcyBvZiBAc2VudHJ5L3RyYWNpbmcgd2hpY2ggYXJlIHBhdGNoZWQgYXMgYSBzaWRlIGVmZmVjdCBvZiBpbXBvcnRpbmcgQHNlbnRyeS90cmFjaW5nLlxuICAgIGFkZFByb2ZpbGluZ0V4dGVuc2lvbk1ldGhvZHMoKTtcblxuICAgIC8vIEFkZCBvdXIgZXZlbnQgcHJvY2Vzc29yXG4gICAgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IodGhpcy5oYW5kbGVHbG9iYWxFdmVudC5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGhhbmRsZUdsb2JhbEV2ZW50KGV2ZW50KSB7XG4gICAgY29uc3QgcHJvZmlsZUlkID0gZXZlbnQuY29udGV4dHMgJiYgZXZlbnQuY29udGV4dHNbJ3Byb2ZpbGUnXSAmJiBldmVudC5jb250ZXh0c1sncHJvZmlsZSddWydwcm9maWxlX2lkJ107XG5cbiAgICBpZiAocHJvZmlsZUlkICYmIHR5cGVvZiBwcm9maWxlSWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgICAgICBsb2dnZXIubG9nKCdbUHJvZmlsaW5nXSBQcm9maWxpbmcgZXZlbnQgZm91bmQsIGNhY2hpbmcgaXQuJyk7XG4gICAgICB9XG4gICAgICBQUk9GSUxJTkdfRVZFTlRfQ0FDSEUuYWRkKHByb2ZpbGVJZCwgZXZlbnQpO1xuICAgIH1cblxuICAgIHJldHVybiBldmVudDtcbiAgfVxufVxuXG5leHBvcnQgeyBCcm93c2VyUHJvZmlsaW5nSW50ZWdyYXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVncmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/integration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/sendProfile.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/sendProfile.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sendProfile\": function() { return /* binding */ sendProfile; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _cache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cache.js */ \"./node_modules/@sentry/browser/esm/profiling/cache.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/browser/esm/profiling/utils.js\");\n\n\n\n\n\n/**\n * Performs lookup in the event cache and sends the profile to Sentry.\n * If the profiled transaction event is found, we use the profiled transaction event and profile\n * to construct a profile type envelope and send it to Sentry.\n */\nfunction sendProfile(profileId, profile) {\n  const event = _cache_js__WEBPACK_IMPORTED_MODULE_0__.PROFILING_EVENT_CACHE.get(profileId);\n\n  if (!event) {\n    // We could not find a corresponding transaction event for this profile.\n    // Opt to do nothing for now, but in the future we should implement a simple retry mechanism.\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\"[Profiling] Couldn't find a transaction event for this profile, dropping it.\");\n    }\n    return;\n  }\n\n  event.sdkProcessingMetadata = event.sdkProcessingMetadata || {};\n  if (event.sdkProcessingMetadata && !event.sdkProcessingMetadata['profile']) {\n    event.sdkProcessingMetadata['profile'] = profile;\n  }\n\n  // Client, Dsn and Transport are all required to be able to send the profiling event to Sentry.\n  // If either of them is not available, we remove the profile from the transaction event.\n  // and forward it to the next event processor.\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)();\n  const client = hub.getClient();\n\n  if (!client) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        '[Profiling] getClient did not return a Client, removing profile from event and forwarding to next event processors.',\n      );\n    }\n    return;\n  }\n\n  const dsn = client.getDsn();\n  if (!dsn) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        '[Profiling] getDsn did not return a Dsn, removing profile from event and forwarding to next event processors.',\n      );\n    }\n    return;\n  }\n\n  const transport = client.getTransport();\n  if (!transport) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        '[Profiling] getTransport did not return a Transport, removing profile from event and forwarding to next event processors.',\n      );\n    }\n    return;\n  }\n\n  // If all required components are available, we construct a profiling event envelope and send it to Sentry.\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] Preparing envelope and sending a profiling event');\n  }\n  const envelope = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.createProfilingEventEnvelope)(event , dsn);\n\n  // Evict event from the cache - we want to prevent the LRU cache from prioritizing already sent events over new ones.\n  _cache_js__WEBPACK_IMPORTED_MODULE_0__.PROFILING_EVENT_CACHE[\"delete\"](profileId);\n\n  if (!envelope) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] Failed to construct envelope');\n    }\n    return;\n  }\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] Envelope constructed, sending it');\n  }\n\n  void transport.send(envelope);\n}\n\n\n//# sourceMappingURL=sendProfile.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvc2VuZFByb2ZpbGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkM7QUFDTjtBQUNZO0FBQ087O0FBRTFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnRUFBeUI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxxREFBVTtBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYywyREFBYTtBQUMzQjs7QUFFQTtBQUNBO0FBQ0EsTUFBTSxxREFBVTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0scURBQVU7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLHFEQUFVO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUkscURBQVU7QUFDZDtBQUNBLG1CQUFtQix1RUFBNEI7O0FBRS9DO0FBQ0EsRUFBRSxzRUFBNEI7O0FBRTlCO0FBQ0E7QUFDQSxNQUFNLHFEQUFVO0FBQ2hCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLElBQUkscURBQVU7QUFDZDs7QUFFQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9wcm9maWxpbmcvc2VuZFByb2ZpbGUuanM/YzFiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDdXJyZW50SHViIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgUFJPRklMSU5HX0VWRU5UX0NBQ0hFIH0gZnJvbSAnLi9jYWNoZS5qcyc7XG5pbXBvcnQgeyBjcmVhdGVQcm9maWxpbmdFdmVudEVudmVsb3BlIH0gZnJvbSAnLi91dGlscy5qcyc7XG5cbi8qKlxuICogUGVyZm9ybXMgbG9va3VwIGluIHRoZSBldmVudCBjYWNoZSBhbmQgc2VuZHMgdGhlIHByb2ZpbGUgdG8gU2VudHJ5LlxuICogSWYgdGhlIHByb2ZpbGVkIHRyYW5zYWN0aW9uIGV2ZW50IGlzIGZvdW5kLCB3ZSB1c2UgdGhlIHByb2ZpbGVkIHRyYW5zYWN0aW9uIGV2ZW50IGFuZCBwcm9maWxlXG4gKiB0byBjb25zdHJ1Y3QgYSBwcm9maWxlIHR5cGUgZW52ZWxvcGUgYW5kIHNlbmQgaXQgdG8gU2VudHJ5LlxuICovXG5mdW5jdGlvbiBzZW5kUHJvZmlsZShwcm9maWxlSWQsIHByb2ZpbGUpIHtcbiAgY29uc3QgZXZlbnQgPSBQUk9GSUxJTkdfRVZFTlRfQ0FDSEUuZ2V0KHByb2ZpbGVJZCk7XG5cbiAgaWYgKCFldmVudCkge1xuICAgIC8vIFdlIGNvdWxkIG5vdCBmaW5kIGEgY29ycmVzcG9uZGluZyB0cmFuc2FjdGlvbiBldmVudCBmb3IgdGhpcyBwcm9maWxlLlxuICAgIC8vIE9wdCB0byBkbyBub3RoaW5nIGZvciBub3csIGJ1dCBpbiB0aGUgZnV0dXJlIHdlIHNob3VsZCBpbXBsZW1lbnQgYSBzaW1wbGUgcmV0cnkgbWVjaGFuaXNtLlxuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIubG9nKFwiW1Byb2ZpbGluZ10gQ291bGRuJ3QgZmluZCBhIHRyYW5zYWN0aW9uIGV2ZW50IGZvciB0aGlzIHByb2ZpbGUsIGRyb3BwaW5nIGl0LlwiKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZXZlbnQuc2RrUHJvY2Vzc2luZ01ldGFkYXRhID0gZXZlbnQuc2RrUHJvY2Vzc2luZ01ldGFkYXRhIHx8IHt9O1xuICBpZiAoZXZlbnQuc2RrUHJvY2Vzc2luZ01ldGFkYXRhICYmICFldmVudC5zZGtQcm9jZXNzaW5nTWV0YWRhdGFbJ3Byb2ZpbGUnXSkge1xuICAgIGV2ZW50LnNka1Byb2Nlc3NpbmdNZXRhZGF0YVsncHJvZmlsZSddID0gcHJvZmlsZTtcbiAgfVxuXG4gIC8vIENsaWVudCwgRHNuIGFuZCBUcmFuc3BvcnQgYXJlIGFsbCByZXF1aXJlZCB0byBiZSBhYmxlIHRvIHNlbmQgdGhlIHByb2ZpbGluZyBldmVudCB0byBTZW50cnkuXG4gIC8vIElmIGVpdGhlciBvZiB0aGVtIGlzIG5vdCBhdmFpbGFibGUsIHdlIHJlbW92ZSB0aGUgcHJvZmlsZSBmcm9tIHRoZSB0cmFuc2FjdGlvbiBldmVudC5cbiAgLy8gYW5kIGZvcndhcmQgaXQgdG8gdGhlIG5leHQgZXZlbnQgcHJvY2Vzc29yLlxuICBjb25zdCBodWIgPSBnZXRDdXJyZW50SHViKCk7XG4gIGNvbnN0IGNsaWVudCA9IGh1Yi5nZXRDbGllbnQoKTtcblxuICBpZiAoIWNsaWVudCkge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIubG9nKFxuICAgICAgICAnW1Byb2ZpbGluZ10gZ2V0Q2xpZW50IGRpZCBub3QgcmV0dXJuIGEgQ2xpZW50LCByZW1vdmluZyBwcm9maWxlIGZyb20gZXZlbnQgYW5kIGZvcndhcmRpbmcgdG8gbmV4dCBldmVudCBwcm9jZXNzb3JzLicsXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBkc24gPSBjbGllbnQuZ2V0RHNuKCk7XG4gIGlmICghZHNuKSB7XG4gICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgIGxvZ2dlci5sb2coXG4gICAgICAgICdbUHJvZmlsaW5nXSBnZXREc24gZGlkIG5vdCByZXR1cm4gYSBEc24sIHJlbW92aW5nIHByb2ZpbGUgZnJvbSBldmVudCBhbmQgZm9yd2FyZGluZyB0byBuZXh0IGV2ZW50IHByb2Nlc3NvcnMuJyxcbiAgICAgICk7XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHRyYW5zcG9ydCA9IGNsaWVudC5nZXRUcmFuc3BvcnQoKTtcbiAgaWYgKCF0cmFuc3BvcnQpIHtcbiAgICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgICAgbG9nZ2VyLmxvZyhcbiAgICAgICAgJ1tQcm9maWxpbmddIGdldFRyYW5zcG9ydCBkaWQgbm90IHJldHVybiBhIFRyYW5zcG9ydCwgcmVtb3ZpbmcgcHJvZmlsZSBmcm9tIGV2ZW50IGFuZCBmb3J3YXJkaW5nIHRvIG5leHQgZXZlbnQgcHJvY2Vzc29ycy4nLFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gSWYgYWxsIHJlcXVpcmVkIGNvbXBvbmVudHMgYXJlIGF2YWlsYWJsZSwgd2UgY29uc3RydWN0IGEgcHJvZmlsaW5nIGV2ZW50IGVudmVsb3BlIGFuZCBzZW5kIGl0IHRvIFNlbnRyeS5cbiAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICBsb2dnZXIubG9nKCdbUHJvZmlsaW5nXSBQcmVwYXJpbmcgZW52ZWxvcGUgYW5kIHNlbmRpbmcgYSBwcm9maWxpbmcgZXZlbnQnKTtcbiAgfVxuICBjb25zdCBlbnZlbG9wZSA9IGNyZWF0ZVByb2ZpbGluZ0V2ZW50RW52ZWxvcGUoZXZlbnQgLCBkc24pO1xuXG4gIC8vIEV2aWN0IGV2ZW50IGZyb20gdGhlIGNhY2hlIC0gd2Ugd2FudCB0byBwcmV2ZW50IHRoZSBMUlUgY2FjaGUgZnJvbSBwcmlvcml0aXppbmcgYWxyZWFkeSBzZW50IGV2ZW50cyBvdmVyIG5ldyBvbmVzLlxuICBQUk9GSUxJTkdfRVZFTlRfQ0FDSEUuZGVsZXRlKHByb2ZpbGVJZCk7XG5cbiAgaWYgKCFlbnZlbG9wZSkge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIubG9nKCdbUHJvZmlsaW5nXSBGYWlsZWQgdG8gY29uc3RydWN0IGVudmVsb3BlJyk7XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgbG9nZ2VyLmxvZygnW1Byb2ZpbGluZ10gRW52ZWxvcGUgY29uc3RydWN0ZWQsIHNlbmRpbmcgaXQnKTtcbiAgfVxuXG4gIHZvaWQgdHJhbnNwb3J0LnNlbmQoZW52ZWxvcGUpO1xufVxuXG5leHBvcnQgeyBzZW5kUHJvZmlsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VuZFByb2ZpbGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/sendProfile.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/profiling/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/profiling/utils.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"convertJSSelfProfileToSampledFormat\": function() { return /* binding */ convertJSSelfProfileToSampledFormat; },\n/* harmony export */   \"createProfilingEventEnvelope\": function() { return /* binding */ createProfilingEventEnvelope; },\n/* harmony export */   \"enrichWithThreadInformation\": function() { return /* binding */ enrichWithThreadInformation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\n\nconst MS_TO_NS = 1e6;\n// Use 0 as main thread id which is identical to threadId in node:worker_threads\n// where main logs 0 and workers seem to log in increments of 1\nconst THREAD_ID_STRING = String(0);\nconst THREAD_NAME = 'main';\n\n// Machine properties (eval only once)\nlet OS_PLATFORM = ''; // macos\nlet OS_PLATFORM_VERSION = ''; // 13.2\nlet OS_ARCH = ''; // arm64\nlet OS_BROWSER = (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgent) || '';\nlet OS_MODEL = '';\nconst OS_LOCALE =\n  (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.language) ||\n  (_helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.languages && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.languages[0]) ||\n  '';\n\nfunction isUserAgentData(data) {\n  return typeof data === 'object' && data !== null && 'getHighEntropyValues' in data;\n}\n\n// @ts-ignore userAgentData is not part of the navigator interface yet\nconst userAgentData = _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator && _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgentData;\n\nif (isUserAgentData(userAgentData)) {\n  userAgentData\n    .getHighEntropyValues(['architecture', 'model', 'platform', 'platformVersion', 'fullVersionList'])\n    .then((ua) => {\n      OS_PLATFORM = ua.platform || '';\n      OS_ARCH = ua.architecture || '';\n      OS_MODEL = ua.model || '';\n      OS_PLATFORM_VERSION = ua.platformVersion || '';\n\n      if (ua.fullVersionList && ua.fullVersionList.length > 0) {\n        const firstUa = ua.fullVersionList[ua.fullVersionList.length - 1];\n        OS_BROWSER = `${firstUa.brand} ${firstUa.version}`;\n      }\n    })\n    .catch(e => void e);\n}\n\nfunction isRawThreadCpuProfile(profile) {\n  return !('thread_metadata' in profile);\n}\n\n// Enriches the profile with threadId of the current thread.\n// This is done in node as we seem to not be able to get the info from C native code.\n/**\n *\n */\nfunction enrichWithThreadInformation(profile) {\n  if (!isRawThreadCpuProfile(profile)) {\n    return profile;\n  }\n\n  return convertJSSelfProfileToSampledFormat(profile);\n}\n\n// Profile is marked as optional because it is deleted from the metadata\n// by the integration before the event is processed by other integrations.\n\n/** Extract sdk info from from the API metadata */\nfunction getSdkMetadataForEnvelopeHeader(metadata) {\n  if (!metadata || !metadata.sdk) {\n    return undefined;\n  }\n\n  return { name: metadata.sdk.name, version: metadata.sdk.version } ;\n}\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name || 'unknown sdk';\n  event.sdk.version = event.sdk.version || sdkInfo.version || 'unknown sdk version';\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata['dynamicSamplingContext'];\n\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({ ...dynamicSamplingContext }) ,\n      }),\n  };\n}\n\nfunction getTraceId(event) {\n  const traceId = event && event.contexts && event.contexts['trace'] && event.contexts['trace']['trace_id'];\n  // Log a warning if the profile has an invalid traceId (should be uuidv4).\n  // All profiles and transactions are rejected if this is the case and we want to\n  // warn users that this is happening if they enable debug flag\n  if (typeof traceId === 'string' && traceId.length !== 32) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Profiling] Invalid traceId: ${traceId} on profiled event`);\n    }\n  }\n  if (typeof traceId !== 'string') {\n    return '';\n  }\n\n  return traceId;\n}\n/**\n * Creates a profiling event envelope from a Sentry event. If profile does not pass\n * validation, returns null.\n * @param event\n * @param dsn\n * @param metadata\n * @param tunnel\n * @returns {EventEnvelope | null}\n */\n\n/**\n * Creates a profiling event envelope from a Sentry event.\n */\nfunction createProfilingEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  if (event.type !== 'transaction') {\n    // createProfilingEventEnvelope should only be called for transactions,\n    // we type guard this behavior with isProfiledTransactionEvent.\n    throw new TypeError('Profiling events may only be attached to transactions, this should never occur.');\n  }\n\n  const rawProfile = event.sdkProcessingMetadata['profile'];\n\n  if (rawProfile === undefined || rawProfile === null) {\n    throw new TypeError(\n      `Cannot construct profiling event envelope without a valid profile. Got ${rawProfile} instead.`,\n    );\n  }\n\n  if (!rawProfile.profile_id) {\n    throw new TypeError('Profile is missing profile_id');\n  }\n\n  if (rawProfile.samples.length <= 1) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      // Log a warning if the profile has less than 2 samples so users can know why\n      // they are not seeing any profiling data and we cant avoid the back and forth\n      // of asking them to provide us with a dump of the profile data.\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Profiling] Discarding profile because it contains less than 2 samples');\n    }\n    return null;\n  }\n\n  const traceId = getTraceId(event);\n  const sdkInfo = getSdkMetadataForEnvelopeHeader(metadata);\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n  const envelopeHeaders = createEventEnvelopeHeaders(event, sdkInfo, tunnel, dsn);\n  const enrichedThreadProfile = enrichWithThreadInformation(rawProfile);\n  const transactionStartMs = typeof event.start_timestamp === 'number' ? event.start_timestamp * 1000 : Date.now();\n  const transactionEndMs = typeof event.timestamp === 'number' ? event.timestamp * 1000 : Date.now();\n\n  const profile = {\n    event_id: rawProfile.profile_id,\n    timestamp: new Date(transactionStartMs).toISOString(),\n    platform: 'javascript',\n    version: '1',\n    release: event.release || '',\n    environment: event.environment || _sentry_core__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_ENVIRONMENT,\n    runtime: {\n      name: 'javascript',\n      version: _helpers_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator.userAgent,\n    },\n    os: {\n      name: OS_PLATFORM,\n      version: OS_PLATFORM_VERSION,\n      build_number: OS_BROWSER,\n    },\n    device: {\n      locale: OS_LOCALE,\n      model: OS_MODEL,\n      manufacturer: OS_BROWSER,\n      architecture: OS_ARCH,\n      is_emulator: false,\n    },\n    profile: enrichedThreadProfile,\n    transactions: [\n      {\n        name: event.transaction || '',\n        id: event.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)(),\n        trace_id: traceId,\n        active_thread_id: THREAD_ID_STRING,\n        relative_start_ns: '0',\n        relative_end_ns: ((transactionEndMs - transactionStartMs) * 1e6).toFixed(0),\n      },\n    ],\n  };\n\n  const envelopeItem = [\n    {\n      type: 'profile',\n    },\n    // @ts-ignore this is missing in typedef\n    profile,\n  ];\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Converts a JSSelfProfile to a our sampled format.\n * Does not currently perform stack indexing.\n */\nfunction convertJSSelfProfileToSampledFormat(input) {\n  let EMPTY_STACK_ID = undefined;\n  let STACK_ID = 0;\n\n  // Initialize the profile that we will fill with data\n  const profile = {\n    samples: [],\n    stacks: [],\n    frames: [],\n    thread_metadata: {\n      [THREAD_ID_STRING]: { name: THREAD_NAME },\n    },\n  };\n\n  if (!input.samples.length) {\n    return profile;\n  }\n\n  // We assert samples.length > 0 above and timestamp should always be present\n  const start = input.samples[0].timestamp;\n\n  for (let i = 0; i < input.samples.length; i++) {\n    const jsSample = input.samples[i];\n\n    // If sample has no stack, add an empty sample\n    if (jsSample.stackId === undefined) {\n      if (EMPTY_STACK_ID === undefined) {\n        EMPTY_STACK_ID = STACK_ID;\n        profile.stacks[EMPTY_STACK_ID] = [];\n        STACK_ID++;\n      }\n\n      profile['samples'][i] = {\n        // convert ms timestamp to ns\n        elapsed_since_start_ns: ((jsSample.timestamp - start) * MS_TO_NS).toFixed(0),\n        stack_id: EMPTY_STACK_ID,\n        thread_id: THREAD_ID_STRING,\n      };\n      continue;\n    }\n\n    let stackTop = input.stacks[jsSample.stackId];\n\n    // Functions in top->down order (root is last)\n    // We follow the stackTop.parentId trail and collect each visited frameId\n    const stack = [];\n\n    while (stackTop) {\n      stack.push(stackTop.frameId);\n\n      const frame = input.frames[stackTop.frameId];\n\n      // If our frame has not been indexed yet, index it\n      if (profile.frames[stackTop.frameId] === undefined) {\n        profile.frames[stackTop.frameId] = {\n          function: frame.name,\n          file: frame.resourceId ? input.resources[frame.resourceId] : undefined,\n          line: frame.line,\n          column: frame.column,\n        };\n      }\n\n      stackTop = stackTop.parentId === undefined ? undefined : input.stacks[stackTop.parentId];\n    }\n\n    const sample = {\n      // convert ms timestamp to ns\n      elapsed_since_start_ns: ((jsSample.timestamp - start) * MS_TO_NS).toFixed(0),\n      stack_id: STACK_ID,\n      thread_id: THREAD_ID_STRING,\n    };\n\n    profile['stacks'][STACK_ID] = stack;\n    profile['samples'][i] = sample;\n    STACK_ID++;\n  }\n\n  return profile;\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/profiling/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/sdk.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/sdk.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"close\": function() { return /* binding */ close; },\n/* harmony export */   \"defaultIntegrations\": function() { return /* binding */ defaultIntegrations; },\n/* harmony export */   \"flush\": function() { return /* binding */ flush; },\n/* harmony export */   \"forceLoad\": function() { return /* binding */ forceLoad; },\n/* harmony export */   \"init\": function() { return /* binding */ init; },\n/* harmony export */   \"lastEventId\": function() { return /* binding */ lastEventId; },\n/* harmony export */   \"onLoad\": function() { return /* binding */ onLoad; },\n/* harmony export */   \"showReportDialog\": function() { return /* binding */ showReportDialog; },\n/* harmony export */   \"wrap\": function() { return /* binding */ wrap; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _client_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./client.js */ \"./node_modules/@sentry/browser/esm/client.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n/* harmony import */ var _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./integrations/globalhandlers.js */ \"./node_modules/@sentry/browser/esm/integrations/globalhandlers.js\");\n/* harmony import */ var _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./integrations/trycatch.js */ \"./node_modules/@sentry/browser/esm/integrations/trycatch.js\");\n/* harmony import */ var _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./integrations/breadcrumbs.js */ \"./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js\");\n/* harmony import */ var _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./integrations/linkederrors.js */ \"./node_modules/@sentry/browser/esm/integrations/linkederrors.js\");\n/* harmony import */ var _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./integrations/httpcontext.js */ \"./node_modules/@sentry/browser/esm/integrations/httpcontext.js\");\n/* harmony import */ var _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./integrations/dedupe.js */ \"./node_modules/@sentry/browser/esm/integrations/dedupe.js\");\n/* harmony import */ var _stack_parsers_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./stack-parsers.js */ \"./node_modules/@sentry/browser/esm/stack-parsers.js\");\n/* harmony import */ var _transports_fetch_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./transports/fetch.js */ \"./node_modules/@sentry/browser/esm/transports/fetch.js\");\n/* harmony import */ var _transports_xhr_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./transports/xhr.js */ \"./node_modules/@sentry/browser/esm/transports/xhr.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst defaultIntegrations = [\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Integrations.InboundFilters(),\n  new _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Integrations.FunctionToString(),\n  new _integrations_trycatch_js__WEBPACK_IMPORTED_MODULE_1__.TryCatch(),\n  new _integrations_breadcrumbs_js__WEBPACK_IMPORTED_MODULE_2__.Breadcrumbs(),\n  new _integrations_globalhandlers_js__WEBPACK_IMPORTED_MODULE_3__.GlobalHandlers(),\n  new _integrations_linkederrors_js__WEBPACK_IMPORTED_MODULE_4__.LinkedErrors(),\n  new _integrations_dedupe_js__WEBPACK_IMPORTED_MODULE_5__.Dedupe(),\n  new _integrations_httpcontext_js__WEBPACK_IMPORTED_MODULE_6__.HttpContext(),\n];\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nfunction init(options = {}) {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (_helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.SENTRY_RELEASE && _helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.SENTRY_RELEASE.id) {\n      options.release = _helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions = {\n    ...options,\n    stackParser: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.stackParserFromStackParserOptions)(options.stackParser || _stack_parsers_js__WEBPACK_IMPORTED_MODULE_9__.defaultStackParser),\n    integrations: (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getIntegrationsToSetup)(options),\n    transport: options.transport || ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.supportsFetch)() ? _transports_fetch_js__WEBPACK_IMPORTED_MODULE_10__.makeFetchTransport : _transports_xhr_js__WEBPACK_IMPORTED_MODULE_11__.makeXHRTransport),\n  };\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.initAndBind)(_client_js__WEBPACK_IMPORTED_MODULE_12__.BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nfunction showReportDialog(options = {}, hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)()) {\n  // doesn't work without a document (React Native)\n  if (!_helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.document) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  if (!options.eventId) {\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = _helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.document.createElement('script');\n  script.async = true;\n  script.src = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getReportDialogEndpoint)(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const injectionPoint = _helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.document.head || _helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n}\n\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nfunction lastEventId() {\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().lastEventId();\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction forceLoad() {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nfunction onLoad(callback) {\n  callback();\n}\n\n/**\n * Call `flush()` on the current client, if there is one. See {@link Client.flush}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue. Omitting this parameter will cause\n * the client to wait until all events are sent before resolving the promise.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction flush(timeout) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n  if (client) {\n    return client.flush(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.logger.warn('Cannot flush events. No client defined.');\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.resolvedSyncPromise)(false);\n}\n\n/**\n * Call `close()` on the current client, if there is one. See {@link Client.close}.\n *\n * @param timeout Maximum time in ms the client should wait to flush its event queue before shutting down. Omitting this\n * parameter will cause the client to wait until all events are sent before disabling itself.\n * @returns A promise which resolves to `true` if the queue successfully drains before the timeout, or `false` if it\n * doesn't (or if there's no client defined).\n */\nfunction close(timeout) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n  if (client) {\n    return client.close(timeout);\n  }\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.logger.warn('Cannot flush events and disable SDK. No client defined.');\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.resolvedSyncPromise)(false);\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction wrap(fn) {\n  return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_7__.wrap)(fn)();\n}\n\nfunction startSessionOnHub(hub) {\n  hub.startSession({ ignoreDuration: true });\n  hub.captureSession();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking() {\n  if (typeof _helpers_js__WEBPACK_IMPORTED_MODULE_7__.WINDOW.document === 'undefined') {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();\n\n  // The only way for this to be false is for there to be a version mismatch between @sentry/browser (>= 6.0.0) and\n  // @sentry/hub (< 5.27.0). In the simple case, there won't ever be such a mismatch, because the two packages are\n  // pinned at the same version in package.json, but there are edge cases where it's possible. See\n  // https://github.com/getsentry/sentry-javascript/issues/3207 and\n  // https://github.com/getsentry/sentry-javascript/issues/3234 and\n  // https://github.com/getsentry/sentry-javascript/issues/3278.\n  if (!hub.captureSession) {\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSessionOnHub(hub);\n\n  // We want to create a session for every navigation as well\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.addInstrumentationHandler)('history', ({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (!(from === undefined || from === to)) {\n      startSessionOnHub((0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)());\n    }\n  });\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS9zZGsuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5SDtBQUNnQjtBQUM3RjtBQUNVO0FBQ1k7QUFDWjtBQUNNO0FBQ0U7QUFDRjtBQUNWO0FBQ007QUFDRztBQUNKOztBQUV2RDtBQUNBLE1BQU0scUVBQTJCO0FBQ2pDLE1BQU0sdUVBQTZCO0FBQ25DLE1BQU0sK0RBQVE7QUFDZCxNQUFNLHFFQUFXO0FBQ2pCLE1BQU0sMkVBQWM7QUFDcEIsTUFBTSx1RUFBWTtBQUNsQixNQUFNLDJEQUFNO0FBQ1osTUFBTSxxRUFBVztBQUNqQjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLFlBQVk7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaUJBQWlCO0FBQzdCO0FBQ0Esc0JBQXNCLGNBQWM7QUFDcEMsb0JBQW9CLG9CQUFvQjtBQUN4QyxxQkFBcUIsWUFBWTtBQUNqQyxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQSxTQUFTLHNCQUFzQjtBQUMvQjtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsUUFBUSw4REFBcUIsSUFBSSxpRUFBd0I7QUFDekQsd0JBQXdCLGlFQUF3QjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsZ0ZBQWlDLHdCQUF3QixpRUFBa0I7QUFDNUYsa0JBQWtCLG9FQUFzQjtBQUN4QyxxQ0FBcUMsNERBQWEsS0FBSyxxRUFBa0IsR0FBRyxpRUFBZ0I7QUFDNUY7O0FBRUEsRUFBRSx5REFBVyxDQUFDLHNEQUFhOztBQUUzQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFFBQVEsMkRBQWE7QUFDM0Q7QUFDQSxPQUFPLHdEQUFlO0FBQ3RCLHFFQUFxRSx1REFBWTtBQUNqRjtBQUNBOztBQUVBLFVBQVUsZ0JBQWdCO0FBQzFCO0FBQ0E7QUFDQSxxRUFBcUUsdURBQVk7QUFDakY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGlCQUFpQixzRUFBNkI7QUFDOUM7QUFDQSxlQUFlLHFFQUF1Qjs7QUFFdEM7QUFDQTtBQUNBOztBQUVBLHlCQUF5Qiw2REFBb0IsSUFBSSw2REFBb0I7QUFDckU7QUFDQTtBQUNBLElBQUk7QUFDSixxRUFBcUUsdURBQVk7QUFDakY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDJEQUFhO0FBQ3RCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsK0RBQStELG1CQUFtQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiwyREFBYTtBQUM5QjtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsc0RBQVc7QUFDOUUsU0FBUyxrRUFBbUI7QUFDNUI7O0FBRUE7QUFDQSwrREFBK0QsbUJBQW1CO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLDJEQUFhO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxzREFBVztBQUM5RSxTQUFTLGtFQUFtQjtBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlEQUFNO0FBQ2Y7O0FBRUE7QUFDQSxxQkFBcUIsc0JBQXNCO0FBQzNDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdEQUFlO0FBQzVCO0FBQ0EsTUFBTSxzREFBVztBQUNqQjtBQUNBOztBQUVBLGNBQWMsMkRBQWE7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsRUFBRSx3RUFBeUIsZUFBZSxVQUFVO0FBQ3BEO0FBQ0E7QUFDQSx3QkFBd0IsMkRBQWE7QUFDckM7QUFDQSxHQUFHO0FBQ0g7O0FBRTJHO0FBQzNHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL3Nkay5qcz83MjdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEludGVncmF0aW9ucywgZ2V0SW50ZWdyYXRpb25zVG9TZXR1cCwgaW5pdEFuZEJpbmQsIGdldFJlcG9ydERpYWxvZ0VuZHBvaW50LCBnZXRDdXJyZW50SHViIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHN0YWNrUGFyc2VyRnJvbVN0YWNrUGFyc2VyT3B0aW9ucywgc3VwcG9ydHNGZXRjaCwgbG9nZ2VyLCByZXNvbHZlZFN5bmNQcm9taXNlLCBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBCcm93c2VyQ2xpZW50IH0gZnJvbSAnLi9jbGllbnQuanMnO1xuaW1wb3J0IHsgV0lORE9XLCB3cmFwIGFzIHdyYXAkMSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5pbXBvcnQgeyBHbG9iYWxIYW5kbGVycyB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2dsb2JhbGhhbmRsZXJzLmpzJztcbmltcG9ydCB7IFRyeUNhdGNoIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbnMvdHJ5Y2F0Y2guanMnO1xuaW1wb3J0IHsgQnJlYWRjcnVtYnMgfSBmcm9tICcuL2ludGVncmF0aW9ucy9icmVhZGNydW1icy5qcyc7XG5pbXBvcnQgeyBMaW5rZWRFcnJvcnMgfSBmcm9tICcuL2ludGVncmF0aW9ucy9saW5rZWRlcnJvcnMuanMnO1xuaW1wb3J0IHsgSHR0cENvbnRleHQgfSBmcm9tICcuL2ludGVncmF0aW9ucy9odHRwY29udGV4dC5qcyc7XG5pbXBvcnQgeyBEZWR1cGUgfSBmcm9tICcuL2ludGVncmF0aW9ucy9kZWR1cGUuanMnO1xuaW1wb3J0IHsgZGVmYXVsdFN0YWNrUGFyc2VyIH0gZnJvbSAnLi9zdGFjay1wYXJzZXJzLmpzJztcbmltcG9ydCB7IG1ha2VGZXRjaFRyYW5zcG9ydCB9IGZyb20gJy4vdHJhbnNwb3J0cy9mZXRjaC5qcyc7XG5pbXBvcnQgeyBtYWtlWEhSVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL3hoci5qcyc7XG5cbmNvbnN0IGRlZmF1bHRJbnRlZ3JhdGlvbnMgPSBbXG4gIG5ldyBJbnRlZ3JhdGlvbnMuSW5ib3VuZEZpbHRlcnMoKSxcbiAgbmV3IEludGVncmF0aW9ucy5GdW5jdGlvblRvU3RyaW5nKCksXG4gIG5ldyBUcnlDYXRjaCgpLFxuICBuZXcgQnJlYWRjcnVtYnMoKSxcbiAgbmV3IEdsb2JhbEhhbmRsZXJzKCksXG4gIG5ldyBMaW5rZWRFcnJvcnMoKSxcbiAgbmV3IERlZHVwZSgpLFxuICBuZXcgSHR0cENvbnRleHQoKSxcbl07XG5cbi8qKlxuICogQSBtYWdpYyBzdHJpbmcgdGhhdCBidWlsZCB0b29saW5nIGNhbiBsZXZlcmFnZSBpbiBvcmRlciB0byBpbmplY3QgYSByZWxlYXNlIHZhbHVlIGludG8gdGhlIFNESy5cbiAqL1xuXG4vKipcbiAqIFRoZSBTZW50cnkgQnJvd3NlciBTREsgQ2xpZW50LlxuICpcbiAqIFRvIHVzZSB0aGlzIFNESywgY2FsbCB0aGUge0BsaW5rIGluaXR9IGZ1bmN0aW9uIGFzIGVhcmx5IGFzIHBvc3NpYmxlIHdoZW5cbiAqIGxvYWRpbmcgdGhlIHdlYiBwYWdlLiBUbyBzZXQgY29udGV4dCBpbmZvcm1hdGlvbiBvciBzZW5kIG1hbnVhbCBldmVudHMsIHVzZVxuICogdGhlIHByb3ZpZGVkIG1ldGhvZHMuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGBcbiAqXG4gKiBpbXBvcnQgeyBpbml0IH0gZnJvbSAnQHNlbnRyeS9icm93c2VyJztcbiAqXG4gKiBpbml0KHtcbiAqICAgZHNuOiAnX19EU05fXycsXG4gKiAgIC8vIC4uLlxuICogfSk7XG4gKiBgYGBcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgXG4gKlxuICogaW1wb3J0IHsgY29uZmlndXJlU2NvcGUgfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuICogY29uZmlndXJlU2NvcGUoKHNjb3BlOiBTY29wZSkgPT4ge1xuICogICBzY29wZS5zZXRFeHRyYSh7IGJhdHRlcnk6IDAuNyB9KTtcbiAqICAgc2NvcGUuc2V0VGFnKHsgdXNlcl9tb2RlOiAnYWRtaW4nIH0pO1xuICogICBzY29wZS5zZXRVc2VyKHsgaWQ6ICc0NzExJyB9KTtcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYFxuICpcbiAqIGltcG9ydCB7IGFkZEJyZWFkY3J1bWIgfSBmcm9tICdAc2VudHJ5L2Jyb3dzZXInO1xuICogYWRkQnJlYWRjcnVtYih7XG4gKiAgIG1lc3NhZ2U6ICdNeSBCcmVhZGNydW1iJyxcbiAqICAgLy8gLi4uXG4gKiB9KTtcbiAqIGBgYFxuICpcbiAqIEBleGFtcGxlXG4gKlxuICogYGBgXG4gKlxuICogaW1wb3J0ICogYXMgU2VudHJ5IGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7XG4gKiBTZW50cnkuY2FwdHVyZU1lc3NhZ2UoJ0hlbGxvLCB3b3JsZCEnKTtcbiAqIFNlbnRyeS5jYXB0dXJlRXhjZXB0aW9uKG5ldyBFcnJvcignR29vZCBieWUnKSk7XG4gKiBTZW50cnkuY2FwdHVyZUV2ZW50KHtcbiAqICAgbWVzc2FnZTogJ01hbnVhbCcsXG4gKiAgIHN0YWNrdHJhY2U6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgXSxcbiAqIH0pO1xuICogYGBgXG4gKlxuICogQHNlZSB7QGxpbmsgQnJvd3Nlck9wdGlvbnN9IGZvciBkb2N1bWVudGF0aW9uIG9uIGNvbmZpZ3VyYXRpb24gb3B0aW9ucy5cbiAqL1xuZnVuY3Rpb24gaW5pdChvcHRpb25zID0ge30pIHtcbiAgaWYgKG9wdGlvbnMuZGVmYXVsdEludGVncmF0aW9ucyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgb3B0aW9ucy5kZWZhdWx0SW50ZWdyYXRpb25zID0gZGVmYXVsdEludGVncmF0aW9ucztcbiAgfVxuICBpZiAob3B0aW9ucy5yZWxlYXNlID09PSB1bmRlZmluZWQpIHtcbiAgICAvLyBUaGlzIGFsbG93cyBidWlsZCB0b29saW5nIHRvIGZpbmQtYW5kLXJlcGxhY2UgX19TRU5UUllfUkVMRUFTRV9fIHRvIGluamVjdCBhIHJlbGVhc2UgdmFsdWVcbiAgICBpZiAodHlwZW9mIF9fU0VOVFJZX1JFTEVBU0VfXyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIG9wdGlvbnMucmVsZWFzZSA9IF9fU0VOVFJZX1JFTEVBU0VfXztcbiAgICB9XG5cbiAgICAvLyBUaGlzIHN1cHBvcnRzIHRoZSB2YXJpYWJsZSB0aGF0IHNlbnRyeS13ZWJwYWNrLXBsdWdpbiBpbmplY3RzXG4gICAgaWYgKFdJTkRPVy5TRU5UUllfUkVMRUFTRSAmJiBXSU5ET1cuU0VOVFJZX1JFTEVBU0UuaWQpIHtcbiAgICAgIG9wdGlvbnMucmVsZWFzZSA9IFdJTkRPVy5TRU5UUllfUkVMRUFTRS5pZDtcbiAgICB9XG4gIH1cbiAgaWYgKG9wdGlvbnMuYXV0b1Nlc3Npb25UcmFja2luZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgb3B0aW9ucy5hdXRvU2Vzc2lvblRyYWNraW5nID0gdHJ1ZTtcbiAgfVxuICBpZiAob3B0aW9ucy5zZW5kQ2xpZW50UmVwb3J0cyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgb3B0aW9ucy5zZW5kQ2xpZW50UmVwb3J0cyA9IHRydWU7XG4gIH1cblxuICBjb25zdCBjbGllbnRPcHRpb25zID0ge1xuICAgIC4uLm9wdGlvbnMsXG4gICAgc3RhY2tQYXJzZXI6IHN0YWNrUGFyc2VyRnJvbVN0YWNrUGFyc2VyT3B0aW9ucyhvcHRpb25zLnN0YWNrUGFyc2VyIHx8IGRlZmF1bHRTdGFja1BhcnNlciksXG4gICAgaW50ZWdyYXRpb25zOiBnZXRJbnRlZ3JhdGlvbnNUb1NldHVwKG9wdGlvbnMpLFxuICAgIHRyYW5zcG9ydDogb3B0aW9ucy50cmFuc3BvcnQgfHwgKHN1cHBvcnRzRmV0Y2goKSA/IG1ha2VGZXRjaFRyYW5zcG9ydCA6IG1ha2VYSFJUcmFuc3BvcnQpLFxuICB9O1xuXG4gIGluaXRBbmRCaW5kKEJyb3dzZXJDbGllbnQsIGNsaWVudE9wdGlvbnMpO1xuXG4gIGlmIChvcHRpb25zLmF1dG9TZXNzaW9uVHJhY2tpbmcpIHtcbiAgICBzdGFydFNlc3Npb25UcmFja2luZygpO1xuICB9XG59XG5cbi8qKlxuICogUHJlc2VudCB0aGUgdXNlciB3aXRoIGEgcmVwb3J0IGRpYWxvZy5cbiAqXG4gKiBAcGFyYW0gb3B0aW9ucyBFdmVyeXRoaW5nIGlzIG9wdGlvbmFsLCB3ZSB0cnkgdG8gZmV0Y2ggYWxsIGluZm8gbmVlZCBmcm9tIHRoZSBnbG9iYWwgc2NvcGUuXG4gKi9cbmZ1bmN0aW9uIHNob3dSZXBvcnREaWFsb2cob3B0aW9ucyA9IHt9LCBodWIgPSBnZXRDdXJyZW50SHViKCkpIHtcbiAgLy8gZG9lc24ndCB3b3JrIHdpdGhvdXQgYSBkb2N1bWVudCAoUmVhY3QgTmF0aXZlKVxuICBpZiAoIVdJTkRPVy5kb2N1bWVudCkge1xuICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmVycm9yKCdHbG9iYWwgZG9jdW1lbnQgbm90IGRlZmluZWQgaW4gc2hvd1JlcG9ydERpYWxvZyBjYWxsJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgeyBjbGllbnQsIHNjb3BlIH0gPSBodWIuZ2V0U3RhY2tUb3AoKTtcbiAgY29uc3QgZHNuID0gb3B0aW9ucy5kc24gfHwgKGNsaWVudCAmJiBjbGllbnQuZ2V0RHNuKCkpO1xuICBpZiAoIWRzbikge1xuICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmVycm9yKCdEU04gbm90IGNvbmZpZ3VyZWQgZm9yIHNob3dSZXBvcnREaWFsb2cgY2FsbCcpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChzY29wZSkge1xuICAgIG9wdGlvbnMudXNlciA9IHtcbiAgICAgIC4uLnNjb3BlLmdldFVzZXIoKSxcbiAgICAgIC4uLm9wdGlvbnMudXNlcixcbiAgICB9O1xuICB9XG5cbiAgaWYgKCFvcHRpb25zLmV2ZW50SWQpIHtcbiAgICBvcHRpb25zLmV2ZW50SWQgPSBodWIubGFzdEV2ZW50SWQoKTtcbiAgfVxuXG4gIGNvbnN0IHNjcmlwdCA9IFdJTkRPVy5kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgc2NyaXB0LmFzeW5jID0gdHJ1ZTtcbiAgc2NyaXB0LnNyYyA9IGdldFJlcG9ydERpYWxvZ0VuZHBvaW50KGRzbiwgb3B0aW9ucyk7XG5cbiAgaWYgKG9wdGlvbnMub25Mb2FkKSB7XG4gICAgc2NyaXB0Lm9ubG9hZCA9IG9wdGlvbnMub25Mb2FkO1xuICB9XG5cbiAgY29uc3QgaW5qZWN0aW9uUG9pbnQgPSBXSU5ET1cuZG9jdW1lbnQuaGVhZCB8fCBXSU5ET1cuZG9jdW1lbnQuYm9keTtcbiAgaWYgKGluamVjdGlvblBvaW50KSB7XG4gICAgaW5qZWN0aW9uUG9pbnQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgfSBlbHNlIHtcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5lcnJvcignTm90IGluamVjdGluZyByZXBvcnQgZGlhbG9nLiBObyBpbmplY3Rpb24gcG9pbnQgZm91bmQgaW4gSFRNTCcpO1xuICB9XG59XG5cbi8qKlxuICogVGhpcyBpcyB0aGUgZ2V0dGVyIGZvciBsYXN0RXZlbnRJZC5cbiAqXG4gKiBAcmV0dXJucyBUaGUgbGFzdCBldmVudCBpZCBvZiBhIGNhcHR1cmVkIGV2ZW50LlxuICovXG5mdW5jdGlvbiBsYXN0RXZlbnRJZCgpIHtcbiAgcmV0dXJuIGdldEN1cnJlbnRIdWIoKS5sYXN0RXZlbnRJZCgpO1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgaGVyZSB0byBiZSBBUEkgY29tcGF0aWJsZSB3aXRoIHRoZSBsb2FkZXIuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGZvcmNlTG9hZCgpIHtcbiAgLy8gTm9vcFxufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgaGVyZSB0byBiZSBBUEkgY29tcGF0aWJsZSB3aXRoIHRoZSBsb2FkZXIuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIG9uTG9hZChjYWxsYmFjaykge1xuICBjYWxsYmFjaygpO1xufVxuXG4vKipcbiAqIENhbGwgYGZsdXNoKClgIG9uIHRoZSBjdXJyZW50IGNsaWVudCwgaWYgdGhlcmUgaXMgb25lLiBTZWUge0BsaW5rIENsaWVudC5mbHVzaH0uXG4gKlxuICogQHBhcmFtIHRpbWVvdXQgTWF4aW11bSB0aW1lIGluIG1zIHRoZSBjbGllbnQgc2hvdWxkIHdhaXQgdG8gZmx1c2ggaXRzIGV2ZW50IHF1ZXVlLiBPbWl0dGluZyB0aGlzIHBhcmFtZXRlciB3aWxsIGNhdXNlXG4gKiB0aGUgY2xpZW50IHRvIHdhaXQgdW50aWwgYWxsIGV2ZW50cyBhcmUgc2VudCBiZWZvcmUgcmVzb2x2aW5nIHRoZSBwcm9taXNlLlxuICogQHJldHVybnMgQSBwcm9taXNlIHdoaWNoIHJlc29sdmVzIHRvIGB0cnVlYCBpZiB0aGUgcXVldWUgc3VjY2Vzc2Z1bGx5IGRyYWlucyBiZWZvcmUgdGhlIHRpbWVvdXQsIG9yIGBmYWxzZWAgaWYgaXRcbiAqIGRvZXNuJ3QgKG9yIGlmIHRoZXJlJ3Mgbm8gY2xpZW50IGRlZmluZWQpLlxuICovXG5mdW5jdGlvbiBmbHVzaCh0aW1lb3V0KSB7XG4gIGNvbnN0IGNsaWVudCA9IGdldEN1cnJlbnRIdWIoKS5nZXRDbGllbnQoKTtcbiAgaWYgKGNsaWVudCkge1xuICAgIHJldHVybiBjbGllbnQuZmx1c2godGltZW91dCk7XG4gIH1cbiAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIud2FybignQ2Fubm90IGZsdXNoIGV2ZW50cy4gTm8gY2xpZW50IGRlZmluZWQuJyk7XG4gIHJldHVybiByZXNvbHZlZFN5bmNQcm9taXNlKGZhbHNlKTtcbn1cblxuLyoqXG4gKiBDYWxsIGBjbG9zZSgpYCBvbiB0aGUgY3VycmVudCBjbGllbnQsIGlmIHRoZXJlIGlzIG9uZS4gU2VlIHtAbGluayBDbGllbnQuY2xvc2V9LlxuICpcbiAqIEBwYXJhbSB0aW1lb3V0IE1heGltdW0gdGltZSBpbiBtcyB0aGUgY2xpZW50IHNob3VsZCB3YWl0IHRvIGZsdXNoIGl0cyBldmVudCBxdWV1ZSBiZWZvcmUgc2h1dHRpbmcgZG93bi4gT21pdHRpbmcgdGhpc1xuICogcGFyYW1ldGVyIHdpbGwgY2F1c2UgdGhlIGNsaWVudCB0byB3YWl0IHVudGlsIGFsbCBldmVudHMgYXJlIHNlbnQgYmVmb3JlIGRpc2FibGluZyBpdHNlbGYuXG4gKiBAcmV0dXJucyBBIHByb21pc2Ugd2hpY2ggcmVzb2x2ZXMgdG8gYHRydWVgIGlmIHRoZSBxdWV1ZSBzdWNjZXNzZnVsbHkgZHJhaW5zIGJlZm9yZSB0aGUgdGltZW91dCwgb3IgYGZhbHNlYCBpZiBpdFxuICogZG9lc24ndCAob3IgaWYgdGhlcmUncyBubyBjbGllbnQgZGVmaW5lZCkuXG4gKi9cbmZ1bmN0aW9uIGNsb3NlKHRpbWVvdXQpIHtcbiAgY29uc3QgY2xpZW50ID0gZ2V0Q3VycmVudEh1YigpLmdldENsaWVudCgpO1xuICBpZiAoY2xpZW50KSB7XG4gICAgcmV0dXJuIGNsaWVudC5jbG9zZSh0aW1lb3V0KTtcbiAgfVxuICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci53YXJuKCdDYW5ub3QgZmx1c2ggZXZlbnRzIGFuZCBkaXNhYmxlIFNESy4gTm8gY2xpZW50IGRlZmluZWQuJyk7XG4gIHJldHVybiByZXNvbHZlZFN5bmNQcm9taXNlKGZhbHNlKTtcbn1cblxuLyoqXG4gKiBXcmFwIGNvZGUgd2l0aGluIGEgdHJ5L2NhdGNoIGJsb2NrIHNvIHRoZSBTREsgaXMgYWJsZSB0byBjYXB0dXJlIGVycm9ycy5cbiAqXG4gKiBAcGFyYW0gZm4gQSBmdW5jdGlvbiB0byB3cmFwLlxuICpcbiAqIEByZXR1cm5zIFRoZSByZXN1bHQgb2Ygd3JhcHBlZCBmdW5jdGlvbiBjYWxsLlxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gd3JhcChmbikge1xuICByZXR1cm4gd3JhcCQxKGZuKSgpO1xufVxuXG5mdW5jdGlvbiBzdGFydFNlc3Npb25Pbkh1YihodWIpIHtcbiAgaHViLnN0YXJ0U2Vzc2lvbih7IGlnbm9yZUR1cmF0aW9uOiB0cnVlIH0pO1xuICBodWIuY2FwdHVyZVNlc3Npb24oKTtcbn1cblxuLyoqXG4gKiBFbmFibGUgYXV0b21hdGljIFNlc3Npb24gVHJhY2tpbmcgZm9yIHRoZSBpbml0aWFsIHBhZ2UgbG9hZC5cbiAqL1xuZnVuY3Rpb24gc3RhcnRTZXNzaW9uVHJhY2tpbmcoKSB7XG4gIGlmICh0eXBlb2YgV0lORE9XLmRvY3VtZW50ID09PSAndW5kZWZpbmVkJykge1xuICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiZcbiAgICAgIGxvZ2dlci53YXJuKCdTZXNzaW9uIHRyYWNraW5nIGluIG5vbi1icm93c2VyIGVudmlyb25tZW50IHdpdGggQHNlbnRyeS9icm93c2VyIGlzIG5vdCBzdXBwb3J0ZWQuJyk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgaHViID0gZ2V0Q3VycmVudEh1YigpO1xuXG4gIC8vIFRoZSBvbmx5IHdheSBmb3IgdGhpcyB0byBiZSBmYWxzZSBpcyBmb3IgdGhlcmUgdG8gYmUgYSB2ZXJzaW9uIG1pc21hdGNoIGJldHdlZW4gQHNlbnRyeS9icm93c2VyICg+PSA2LjAuMCkgYW5kXG4gIC8vIEBzZW50cnkvaHViICg8IDUuMjcuMCkuIEluIHRoZSBzaW1wbGUgY2FzZSwgdGhlcmUgd29uJ3QgZXZlciBiZSBzdWNoIGEgbWlzbWF0Y2gsIGJlY2F1c2UgdGhlIHR3byBwYWNrYWdlcyBhcmVcbiAgLy8gcGlubmVkIGF0IHRoZSBzYW1lIHZlcnNpb24gaW4gcGFja2FnZS5qc29uLCBidXQgdGhlcmUgYXJlIGVkZ2UgY2FzZXMgd2hlcmUgaXQncyBwb3NzaWJsZS4gU2VlXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzMyMDcgYW5kXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzMyMzQgYW5kXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5LWphdmFzY3JpcHQvaXNzdWVzLzMyNzguXG4gIGlmICghaHViLmNhcHR1cmVTZXNzaW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gVGhlIHNlc3Npb24gZHVyYXRpb24gZm9yIGJyb3dzZXIgc2Vzc2lvbnMgZG9lcyBub3QgdHJhY2sgYSBtZWFuaW5nZnVsXG4gIC8vIGNvbmNlcHQgdGhhdCBjYW4gYmUgdXNlZCBhcyBhIG1ldHJpYy5cbiAgLy8gQXV0b21hdGljYWxseSBjYXB0dXJlZCBzZXNzaW9ucyBhcmUgYWtpbiB0byBwYWdlIHZpZXdzLCBhbmQgdGh1cyB3ZVxuICAvLyBkaXNjYXJkIHRoZWlyIGR1cmF0aW9uLlxuICBzdGFydFNlc3Npb25Pbkh1YihodWIpO1xuXG4gIC8vIFdlIHdhbnQgdG8gY3JlYXRlIGEgc2Vzc2lvbiBmb3IgZXZlcnkgbmF2aWdhdGlvbiBhcyB3ZWxsXG4gIGFkZEluc3RydW1lbnRhdGlvbkhhbmRsZXIoJ2hpc3RvcnknLCAoeyBmcm9tLCB0byB9KSA9PiB7XG4gICAgLy8gRG9uJ3QgY3JlYXRlIGFuIGFkZGl0aW9uYWwgc2Vzc2lvbiBmb3IgdGhlIGluaXRpYWwgcm91dGUgb3IgaWYgdGhlIGxvY2F0aW9uIGRpZCBub3QgY2hhbmdlXG4gICAgaWYgKCEoZnJvbSA9PT0gdW5kZWZpbmVkIHx8IGZyb20gPT09IHRvKSkge1xuICAgICAgc3RhcnRTZXNzaW9uT25IdWIoZ2V0Q3VycmVudEh1YigpKTtcbiAgICB9XG4gIH0pO1xufVxuXG5leHBvcnQgeyBjbG9zZSwgZGVmYXVsdEludGVncmF0aW9ucywgZmx1c2gsIGZvcmNlTG9hZCwgaW5pdCwgbGFzdEV2ZW50SWQsIG9uTG9hZCwgc2hvd1JlcG9ydERpYWxvZywgd3JhcCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/sdk.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/stack-parsers.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/stack-parsers.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"chromeStackLineParser\": function() { return /* binding */ chromeStackLineParser; },\n/* harmony export */   \"defaultStackLineParsers\": function() { return /* binding */ defaultStackLineParsers; },\n/* harmony export */   \"defaultStackParser\": function() { return /* binding */ defaultStackParser; },\n/* harmony export */   \"geckoStackLineParser\": function() { return /* binding */ geckoStackLineParser; },\n/* harmony export */   \"opera10StackLineParser\": function() { return /* binding */ opera10StackLineParser; },\n/* harmony export */   \"opera11StackLineParser\": function() { return /* binding */ opera11StackLineParser; },\n/* harmony export */   \"winjsStackLineParser\": function() { return /* binding */ winjsStackLineParser; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n// global reference to slice\nconst UNKNOWN_FUNCTION = '?';\n\nconst OPERA10_PRIORITY = 10;\nconst OPERA11_PRIORITY = 20;\nconst CHROME_PRIORITY = 30;\nconst WINJS_PRIORITY = 40;\nconst GECKO_PRIORITY = 50;\n\nfunction createFrame(filename, func, lineno, colno) {\n  const frame = {\n    filename,\n    abs_path: filename, // As opposed to filename, abs_path is immutable (I can't control your actions but don't touch it!)\n    function: func,\n    in_app: true, // All browser frames are considered in_app\n  };\n\n  if (lineno !== undefined) {\n    frame.lineno = lineno;\n  }\n\n  if (colno !== undefined) {\n    frame.colno = colno;\n  }\n\n  return frame;\n}\n\n// Chromium based browsers: Chrome, Brave, new Opera, new Edge\nconst chromeRegex =\n  /^\\s*at (?:(.*\\).*?|.*?) ?\\((?:address at )?)?(?:async )?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\\/)?.*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nconst chromeEvalRegex = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nconst chrome = line => {\n  const parts = chromeRegex.exec(line);\n\n  if (parts) {\n    const isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n    if (isEval) {\n      const subMatch = chromeEvalRegex.exec(parts[2]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line/column number\n        parts[2] = subMatch[1]; // url\n        parts[3] = subMatch[2]; // line\n        parts[4] = subMatch[3]; // column\n      }\n    }\n\n    // Kamil: One more hack won't hurt us right? Understanding and adding more rules on top of these regexps right now\n    // would be way too time consuming. (TODO: Rewrite whole RegExp to be more readable)\n    const [func, filename] = extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]);\n\n    return createFrame(filename, func, parts[3] ? +parts[3] : undefined, parts[4] ? +parts[4] : undefined);\n  }\n\n  return;\n};\n\nconst chromeStackLineParser = [CHROME_PRIORITY, chrome];\n\n// gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n// generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n// We need this specific case for now because we want no other regex to match.\nconst geckoREgex =\n  /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|safari-extension|safari-web-extension|capacitor)?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js)|\\/[\\w\\-. /=]+)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nconst geckoEvalRegex = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nconst gecko = line => {\n  const parts = geckoREgex.exec(line);\n\n  if (parts) {\n    const isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n    if (isEval) {\n      const subMatch = geckoEvalRegex.exec(parts[3]);\n\n      if (subMatch) {\n        // throw out eval line/column and use top-most line number\n        parts[1] = parts[1] || 'eval';\n        parts[3] = subMatch[1];\n        parts[4] = subMatch[2];\n        parts[5] = ''; // no column when eval\n      }\n    }\n\n    let filename = parts[3];\n    let func = parts[1] || UNKNOWN_FUNCTION;\n    [func, filename] = extractSafariExtensionDetails(func, filename);\n\n    return createFrame(filename, func, parts[4] ? +parts[4] : undefined, parts[5] ? +parts[5] : undefined);\n  }\n\n  return;\n};\n\nconst geckoStackLineParser = [GECKO_PRIORITY, gecko];\n\nconst winjsRegex =\n  /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nconst winjs = line => {\n  const parts = winjsRegex.exec(line);\n\n  return parts\n    ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : undefined)\n    : undefined;\n};\n\nconst winjsStackLineParser = [WINJS_PRIORITY, winjs];\n\nconst opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i;\n\nconst opera10 = line => {\n  const parts = opera10Regex.exec(line);\n  return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : undefined;\n};\n\nconst opera10StackLineParser = [OPERA10_PRIORITY, opera10];\n\nconst opera11Regex =\n  / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\\(.*\\))? in (.*):\\s*$/i;\n\nconst opera11 = line => {\n  const parts = opera11Regex.exec(line);\n  return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : undefined;\n};\n\nconst opera11StackLineParser = [OPERA11_PRIORITY, opera11];\n\nconst defaultStackLineParsers = [chromeStackLineParser, geckoStackLineParser, winjsStackLineParser];\n\nconst defaultStackParser = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createStackParser)(...defaultStackLineParsers);\n\n/**\n * Safari web extensions, starting version unknown, can produce \"frames-only\" stacktraces.\n * What it means, is that instead of format like:\n *\n * Error: wat\n *   at function@url:row:col\n *   at function@url:row:col\n *   at function@url:row:col\n *\n * it produces something like:\n *\n *   function@url:row:col\n *   function@url:row:col\n *   function@url:row:col\n *\n * Because of that, it won't be captured by `chrome` RegExp and will fall into `Gecko` branch.\n * This function is extracted so that we can use it in both places without duplicating the logic.\n * Unfortunately \"just\" changing RegExp is too complicated now and making it pass all tests\n * and fix this case seems like an impossible, or at least way too time-consuming task.\n */\nconst extractSafariExtensionDetails = (func, filename) => {\n  const isSafariExtension = func.indexOf('safari-extension') !== -1;\n  const isSafariWebExtension = func.indexOf('safari-web-extension') !== -1;\n\n  return isSafariExtension || isSafariWebExtension\n    ? [\n        func.indexOf('@') !== -1 ? func.split('@')[0] : UNKNOWN_FUNCTION,\n        isSafariExtension ? `safari-extension:${filename}` : `safari-web-extension:${filename}`,\n      ]\n    : [func, filename];\n};\n\n\n//# sourceMappingURL=stack-parsers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/stack-parsers.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/fetch.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/fetch.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeFetchTransport\": function() { return /* binding */ makeFetchTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/browser/esm/transports/utils.js\");\n\n\n\n\n/**\n * Creates a Transport that uses the Fetch API to send events to Sentry.\n */\nfunction makeFetchTransport(\n  options,\n  nativeFetch = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNativeFetchImplementation)(),\n) {\n  function makeRequest(request) {\n    const requestOptions = {\n      body: request.body,\n      method: 'POST',\n      referrerPolicy: 'origin',\n      headers: options.headers,\n      // Outgoing requests are usually cancelled when navigating to a different page, causing a \"TypeError: Failed to\n      // fetch\" error and sending a \"network_error\" client-outcome - in Chrome, the request status shows \"(cancelled)\".\n      // The `keepalive` flag keeps outgoing requests alive, even when switching pages. We want this since we're\n      // frequently sending events right before the user is switching pages (eg. whenfinishing navigation transactions).\n      // Gotchas:\n      // - `keepalive` isn't supported by Firefox\n      // - As per spec (https://fetch.spec.whatwg.org/#http-network-or-cache-fetch), a request with `keepalive: true`\n      //   and a content length of > 64 kibibytes returns a network error. We will therefore only activate the flag when\n      //   we're below that limit.\n      keepalive: request.body.length <= 65536,\n      ...options.fetchOptions,\n    };\n\n    try {\n      return nativeFetch(options.url, requestOptions).then(response => ({\n        statusCode: response.status,\n        headers: {\n          'x-sentry-rate-limits': response.headers.get('X-Sentry-Rate-Limits'),\n          'retry-after': response.headers.get('Retry-After'),\n        },\n      }));\n    } catch (e) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.clearCachedFetchImplementation)();\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.rejectedSyncPromise)(e);\n    }\n  }\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.createTransport)(options, makeRequest);\n}\n\n\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL2ZldGNoLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBK0M7QUFDSztBQUNzQzs7QUFFMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1RUFBNEI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUCxNQUFNO0FBQ04sTUFBTSx5RUFBOEI7QUFDcEMsYUFBYSxrRUFBbUI7QUFDaEM7QUFDQTs7QUFFQSxTQUFTLDZEQUFlO0FBQ3hCOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL2ZldGNoLmpzP2I5YjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlVHJhbnNwb3J0IH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IHJlamVjdGVkU3luY1Byb21pc2UgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldE5hdGl2ZUZldGNoSW1wbGVtZW50YXRpb24sIGNsZWFyQ2FjaGVkRmV0Y2hJbXBsZW1lbnRhdGlvbiB9IGZyb20gJy4vdXRpbHMuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBUcmFuc3BvcnQgdGhhdCB1c2VzIHRoZSBGZXRjaCBBUEkgdG8gc2VuZCBldmVudHMgdG8gU2VudHJ5LlxuICovXG5mdW5jdGlvbiBtYWtlRmV0Y2hUcmFuc3BvcnQoXG4gIG9wdGlvbnMsXG4gIG5hdGl2ZUZldGNoID0gZ2V0TmF0aXZlRmV0Y2hJbXBsZW1lbnRhdGlvbigpLFxuKSB7XG4gIGZ1bmN0aW9uIG1ha2VSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICBjb25zdCByZXF1ZXN0T3B0aW9ucyA9IHtcbiAgICAgIGJvZHk6IHJlcXVlc3QuYm9keSxcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgcmVmZXJyZXJQb2xpY3k6ICdvcmlnaW4nLFxuICAgICAgaGVhZGVyczogb3B0aW9ucy5oZWFkZXJzLFxuICAgICAgLy8gT3V0Z29pbmcgcmVxdWVzdHMgYXJlIHVzdWFsbHkgY2FuY2VsbGVkIHdoZW4gbmF2aWdhdGluZyB0byBhIGRpZmZlcmVudCBwYWdlLCBjYXVzaW5nIGEgXCJUeXBlRXJyb3I6IEZhaWxlZCB0b1xuICAgICAgLy8gZmV0Y2hcIiBlcnJvciBhbmQgc2VuZGluZyBhIFwibmV0d29ya19lcnJvclwiIGNsaWVudC1vdXRjb21lIC0gaW4gQ2hyb21lLCB0aGUgcmVxdWVzdCBzdGF0dXMgc2hvd3MgXCIoY2FuY2VsbGVkKVwiLlxuICAgICAgLy8gVGhlIGBrZWVwYWxpdmVgIGZsYWcga2VlcHMgb3V0Z29pbmcgcmVxdWVzdHMgYWxpdmUsIGV2ZW4gd2hlbiBzd2l0Y2hpbmcgcGFnZXMuIFdlIHdhbnQgdGhpcyBzaW5jZSB3ZSdyZVxuICAgICAgLy8gZnJlcXVlbnRseSBzZW5kaW5nIGV2ZW50cyByaWdodCBiZWZvcmUgdGhlIHVzZXIgaXMgc3dpdGNoaW5nIHBhZ2VzIChlZy4gd2hlbmZpbmlzaGluZyBuYXZpZ2F0aW9uIHRyYW5zYWN0aW9ucykuXG4gICAgICAvLyBHb3RjaGFzOlxuICAgICAgLy8gLSBga2VlcGFsaXZlYCBpc24ndCBzdXBwb3J0ZWQgYnkgRmlyZWZveFxuICAgICAgLy8gLSBBcyBwZXIgc3BlYyAoaHR0cHM6Ly9mZXRjaC5zcGVjLndoYXR3Zy5vcmcvI2h0dHAtbmV0d29yay1vci1jYWNoZS1mZXRjaCksIGEgcmVxdWVzdCB3aXRoIGBrZWVwYWxpdmU6IHRydWVgXG4gICAgICAvLyAgIGFuZCBhIGNvbnRlbnQgbGVuZ3RoIG9mID4gNjQga2liaWJ5dGVzIHJldHVybnMgYSBuZXR3b3JrIGVycm9yLiBXZSB3aWxsIHRoZXJlZm9yZSBvbmx5IGFjdGl2YXRlIHRoZSBmbGFnIHdoZW5cbiAgICAgIC8vICAgd2UncmUgYmVsb3cgdGhhdCBsaW1pdC5cbiAgICAgIGtlZXBhbGl2ZTogcmVxdWVzdC5ib2R5Lmxlbmd0aCA8PSA2NTUzNixcbiAgICAgIC4uLm9wdGlvbnMuZmV0Y2hPcHRpb25zLFxuICAgIH07XG5cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIG5hdGl2ZUZldGNoKG9wdGlvbnMudXJsLCByZXF1ZXN0T3B0aW9ucykudGhlbihyZXNwb25zZSA9PiAoe1xuICAgICAgICBzdGF0dXNDb2RlOiByZXNwb25zZS5zdGF0dXMsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAneC1zZW50cnktcmF0ZS1saW1pdHMnOiByZXNwb25zZS5oZWFkZXJzLmdldCgnWC1TZW50cnktUmF0ZS1MaW1pdHMnKSxcbiAgICAgICAgICAncmV0cnktYWZ0ZXInOiByZXNwb25zZS5oZWFkZXJzLmdldCgnUmV0cnktQWZ0ZXInKSxcbiAgICAgICAgfSxcbiAgICAgIH0pKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjbGVhckNhY2hlZEZldGNoSW1wbGVtZW50YXRpb24oKTtcbiAgICAgIHJldHVybiByZWplY3RlZFN5bmNQcm9taXNlKGUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucywgbWFrZVJlcXVlc3QpO1xufVxuXG5leHBvcnQgeyBtYWtlRmV0Y2hUcmFuc3BvcnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/fetch.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/offline.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/offline.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStore\": function() { return /* binding */ createStore; },\n/* harmony export */   \"insert\": function() { return /* binding */ insert; },\n/* harmony export */   \"makeBrowserOfflineTransport\": function() { return /* binding */ makeBrowserOfflineTransport; },\n/* harmony export */   \"pop\": function() { return /* binding */ pop; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n// 'Store', 'promisifyRequest' and 'createStore' were originally copied from the 'idb-keyval' package before being\n// modified and simplified: https://github.com/jakearchibald/idb-keyval\n//\n// At commit: 0420a704fd6cbb4225429c536b1f61112d012fca\n// Original licence:\n\n// Copyright 2016, Jake Archibald\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nfunction promisifyRequest(request) {\n  return new Promise((resolve, reject) => {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result);\n    // @ts-ignore - file size hacks\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\n/** Create or open an IndexedDb store */\nfunction createStore(dbName, storeName) {\n  const request = indexedDB.open(dbName);\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n  const dbp = promisifyRequest(request);\n\n  return callback => dbp.then(db => callback(db.transaction(storeName, 'readwrite').objectStore(storeName)));\n}\n\nfunction keys(store) {\n  return promisifyRequest(store.getAllKeys() );\n}\n\n/** Insert into the store */\nfunction insert(store, value, maxQueueSize) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length >= maxQueueSize) {\n        return;\n      }\n\n      // We insert with an incremented key so that the entries are popped in order\n      store.put(value, Math.max(...keys, 0) + 1);\n      return promisifyRequest(store.transaction);\n    });\n  });\n}\n\n/** Pop the oldest value from the store */\nfunction pop(store) {\n  return store(store => {\n    return keys(store).then(keys => {\n      if (keys.length === 0) {\n        return undefined;\n      }\n\n      return promisifyRequest(store.get(keys[0])).then(value => {\n        store.delete(keys[0]);\n        return promisifyRequest(store.transaction).then(() => value);\n      });\n    });\n  });\n}\n\nfunction createIndexedDbStore(options) {\n  let store;\n\n  // Lazily create the store only when it's needed\n  function getStore() {\n    if (store == undefined) {\n      store = createStore(options.dbName || 'sentry-offline', options.storeName || 'queue');\n    }\n\n    return store;\n  }\n\n  return {\n    insert: async (env) => {\n      try {\n        const serialized = await (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.serializeEnvelope)(env, options.textEncoder);\n        await insert(getStore(), serialized, options.maxQueueSize || 30);\n      } catch (_) {\n        //\n      }\n    },\n    pop: async () => {\n      try {\n        const deserialized = await pop(getStore());\n        if (deserialized) {\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseEnvelope)(\n            deserialized,\n            options.textEncoder || new TextEncoder(),\n            options.textDecoder || new TextDecoder(),\n          );\n        }\n      } catch (_) {\n        //\n      }\n\n      return undefined;\n    },\n  };\n}\n\nfunction makeIndexedDbOfflineTransport(\n  createTransport,\n) {\n  return options => createTransport({ ...options, createStore: createIndexedDbStore });\n}\n\n/**\n * Creates a transport that uses IndexedDb to store events when offline.\n */\nfunction makeBrowserOfflineTransport(\n  createTransport,\n) {\n  return makeIndexedDbOfflineTransport((0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.makeOfflineTransport)(createTransport));\n}\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9EO0FBQ2E7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsZ0VBQWlCO0FBQ2xEO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsNERBQWE7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBOztBQUVBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLCtDQUErQztBQUNyRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsa0VBQW9CO0FBQzNEOztBQUVpRTtBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanM/OTQ4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlT2ZmbGluZVRyYW5zcG9ydCB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBzZXJpYWxpemVFbnZlbG9wZSwgcGFyc2VFbnZlbG9wZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vLyAnU3RvcmUnLCAncHJvbWlzaWZ5UmVxdWVzdCcgYW5kICdjcmVhdGVTdG9yZScgd2VyZSBvcmlnaW5hbGx5IGNvcGllZCBmcm9tIHRoZSAnaWRiLWtleXZhbCcgcGFja2FnZSBiZWZvcmUgYmVpbmdcbi8vIG1vZGlmaWVkIGFuZCBzaW1wbGlmaWVkOiBodHRwczovL2dpdGh1Yi5jb20vamFrZWFyY2hpYmFsZC9pZGIta2V5dmFsXG4vL1xuLy8gQXQgY29tbWl0OiAwNDIwYTcwNGZkNmNiYjQyMjU0MjljNTM2YjFmNjExMTJkMDEyZmNhXG4vLyBPcmlnaW5hbCBsaWNlbmNlOlxuXG4vLyBDb3B5cmlnaHQgMjAxNiwgSmFrZSBBcmNoaWJhbGRcbi8vXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuLy8gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4vL1xuLy8gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbi8vXG4vLyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4vLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4vLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbi8vIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbi8vIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG5mdW5jdGlvbiBwcm9taXNpZnlSZXF1ZXN0KHJlcXVlc3QpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAvLyBAdHMtaWdub3JlIC0gZmlsZSBzaXplIGhhY2tzXG4gICAgcmVxdWVzdC5vbmNvbXBsZXRlID0gcmVxdWVzdC5vbnN1Y2Nlc3MgPSAoKSA9PiByZXNvbHZlKHJlcXVlc3QucmVzdWx0KTtcbiAgICAvLyBAdHMtaWdub3JlIC0gZmlsZSBzaXplIGhhY2tzXG4gICAgcmVxdWVzdC5vbmFib3J0ID0gcmVxdWVzdC5vbmVycm9yID0gKCkgPT4gcmVqZWN0KHJlcXVlc3QuZXJyb3IpO1xuICB9KTtcbn1cblxuLyoqIENyZWF0ZSBvciBvcGVuIGFuIEluZGV4ZWREYiBzdG9yZSAqL1xuZnVuY3Rpb24gY3JlYXRlU3RvcmUoZGJOYW1lLCBzdG9yZU5hbWUpIHtcbiAgY29uc3QgcmVxdWVzdCA9IGluZGV4ZWREQi5vcGVuKGRiTmFtZSk7XG4gIHJlcXVlc3Qub251cGdyYWRlbmVlZGVkID0gKCkgPT4gcmVxdWVzdC5yZXN1bHQuY3JlYXRlT2JqZWN0U3RvcmUoc3RvcmVOYW1lKTtcbiAgY29uc3QgZGJwID0gcHJvbWlzaWZ5UmVxdWVzdChyZXF1ZXN0KTtcblxuICByZXR1cm4gY2FsbGJhY2sgPT4gZGJwLnRoZW4oZGIgPT4gY2FsbGJhY2soZGIudHJhbnNhY3Rpb24oc3RvcmVOYW1lLCAncmVhZHdyaXRlJykub2JqZWN0U3RvcmUoc3RvcmVOYW1lKSkpO1xufVxuXG5mdW5jdGlvbiBrZXlzKHN0b3JlKSB7XG4gIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHN0b3JlLmdldEFsbEtleXMoKSApO1xufVxuXG4vKiogSW5zZXJ0IGludG8gdGhlIHN0b3JlICovXG5mdW5jdGlvbiBpbnNlcnQoc3RvcmUsIHZhbHVlLCBtYXhRdWV1ZVNpemUpIHtcbiAgcmV0dXJuIHN0b3JlKHN0b3JlID0+IHtcbiAgICByZXR1cm4ga2V5cyhzdG9yZSkudGhlbihrZXlzID0+IHtcbiAgICAgIGlmIChrZXlzLmxlbmd0aCA+PSBtYXhRdWV1ZVNpemUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBXZSBpbnNlcnQgd2l0aCBhbiBpbmNyZW1lbnRlZCBrZXkgc28gdGhhdCB0aGUgZW50cmllcyBhcmUgcG9wcGVkIGluIG9yZGVyXG4gICAgICBzdG9yZS5wdXQodmFsdWUsIE1hdGgubWF4KC4uLmtleXMsIDApICsgMSk7XG4gICAgICByZXR1cm4gcHJvbWlzaWZ5UmVxdWVzdChzdG9yZS50cmFuc2FjdGlvbik7XG4gICAgfSk7XG4gIH0pO1xufVxuXG4vKiogUG9wIHRoZSBvbGRlc3QgdmFsdWUgZnJvbSB0aGUgc3RvcmUgKi9cbmZ1bmN0aW9uIHBvcChzdG9yZSkge1xuICByZXR1cm4gc3RvcmUoc3RvcmUgPT4ge1xuICAgIHJldHVybiBrZXlzKHN0b3JlKS50aGVuKGtleXMgPT4ge1xuICAgICAgaWYgKGtleXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBwcm9taXNpZnlSZXF1ZXN0KHN0b3JlLmdldChrZXlzWzBdKSkudGhlbih2YWx1ZSA9PiB7XG4gICAgICAgIHN0b3JlLmRlbGV0ZShrZXlzWzBdKTtcbiAgICAgICAgcmV0dXJuIHByb21pc2lmeVJlcXVlc3Qoc3RvcmUudHJhbnNhY3Rpb24pLnRoZW4oKCkgPT4gdmFsdWUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVJbmRleGVkRGJTdG9yZShvcHRpb25zKSB7XG4gIGxldCBzdG9yZTtcblxuICAvLyBMYXppbHkgY3JlYXRlIHRoZSBzdG9yZSBvbmx5IHdoZW4gaXQncyBuZWVkZWRcbiAgZnVuY3Rpb24gZ2V0U3RvcmUoKSB7XG4gICAgaWYgKHN0b3JlID09IHVuZGVmaW5lZCkge1xuICAgICAgc3RvcmUgPSBjcmVhdGVTdG9yZShvcHRpb25zLmRiTmFtZSB8fCAnc2VudHJ5LW9mZmxpbmUnLCBvcHRpb25zLnN0b3JlTmFtZSB8fCAncXVldWUnKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RvcmU7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGluc2VydDogYXN5bmMgKGVudikgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZCA9IGF3YWl0IHNlcmlhbGl6ZUVudmVsb3BlKGVudiwgb3B0aW9ucy50ZXh0RW5jb2Rlcik7XG4gICAgICAgIGF3YWl0IGluc2VydChnZXRTdG9yZSgpLCBzZXJpYWxpemVkLCBvcHRpb25zLm1heFF1ZXVlU2l6ZSB8fCAzMCk7XG4gICAgICB9IGNhdGNoIChfKSB7XG4gICAgICAgIC8vXG4gICAgICB9XG4gICAgfSxcbiAgICBwb3A6IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRlc2VyaWFsaXplZCA9IGF3YWl0IHBvcChnZXRTdG9yZSgpKTtcbiAgICAgICAgaWYgKGRlc2VyaWFsaXplZCkge1xuICAgICAgICAgIHJldHVybiBwYXJzZUVudmVsb3BlKFxuICAgICAgICAgICAgZGVzZXJpYWxpemVkLFxuICAgICAgICAgICAgb3B0aW9ucy50ZXh0RW5jb2RlciB8fCBuZXcgVGV4dEVuY29kZXIoKSxcbiAgICAgICAgICAgIG9wdGlvbnMudGV4dERlY29kZXIgfHwgbmV3IFRleHREZWNvZGVyKCksXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoXykge1xuICAgICAgICAvL1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0sXG4gIH07XG59XG5cbmZ1bmN0aW9uIG1ha2VJbmRleGVkRGJPZmZsaW5lVHJhbnNwb3J0KFxuICBjcmVhdGVUcmFuc3BvcnQsXG4pIHtcbiAgcmV0dXJuIG9wdGlvbnMgPT4gY3JlYXRlVHJhbnNwb3J0KHsgLi4ub3B0aW9ucywgY3JlYXRlU3RvcmU6IGNyZWF0ZUluZGV4ZWREYlN0b3JlIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSB0cmFuc3BvcnQgdGhhdCB1c2VzIEluZGV4ZWREYiB0byBzdG9yZSBldmVudHMgd2hlbiBvZmZsaW5lLlxuICovXG5mdW5jdGlvbiBtYWtlQnJvd3Nlck9mZmxpbmVUcmFuc3BvcnQoXG4gIGNyZWF0ZVRyYW5zcG9ydCxcbikge1xuICByZXR1cm4gbWFrZUluZGV4ZWREYk9mZmxpbmVUcmFuc3BvcnQobWFrZU9mZmxpbmVUcmFuc3BvcnQoY3JlYXRlVHJhbnNwb3J0KSk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVN0b3JlLCBpbnNlcnQsIG1ha2VCcm93c2VyT2ZmbGluZVRyYW5zcG9ydCwgcG9wIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vZmZsaW5lLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/offline.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/utils.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"clearCachedFetchImplementation\": function() { return /* binding */ clearCachedFetchImplementation; },\n/* harmony export */   \"getNativeFetchImplementation\": function() { return /* binding */ getNativeFetchImplementation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers.js */ \"./node_modules/@sentry/browser/esm/helpers.js\");\n\n\n\nlet cachedFetchImpl = undefined;\n\n/**\n * A special usecase for incorrectly wrapped Fetch APIs in conjunction with ad-blockers.\n * Whenever someone wraps the Fetch API and returns the wrong promise chain,\n * this chain becomes orphaned and there is no possible way to capture it's rejections\n * other than allowing it bubble up to this very handler. eg.\n *\n * const f = window.fetch;\n * window.fetch = function () {\n *   const p = f.apply(this, arguments);\n *\n *   p.then(function() {\n *     console.log('hi.');\n *   });\n *\n *   return p;\n * }\n *\n * `p.then(function () { ... })` is producing a completely separate promise chain,\n * however, what's returned is `p` - the result of original `fetch` call.\n *\n * This mean, that whenever we use the Fetch API to send our own requests, _and_\n * some ad-blocker blocks it, this orphaned chain will _always_ reject,\n * effectively causing another event to be captured.\n * This makes a whole process become an infinite loop, which we need to somehow\n * deal with, and break it in one way or another.\n *\n * To deal with this issue, we are making sure that we _always_ use the real\n * browser Fetch API, instead of relying on what `window.fetch` exposes.\n * The only downside to this would be missing our own requests as breadcrumbs,\n * but because we are already not doing this, it should be just fine.\n *\n * Possible failed fetch error messages per-browser:\n *\n * Chrome:  Failed to fetch\n * Edge:    Failed to Fetch\n * Firefox: NetworkError when attempting to fetch resource\n * Safari:  resource blocked by content blocker\n */\nfunction getNativeFetchImplementation() {\n  if (cachedFetchImpl) {\n    return cachedFetchImpl;\n  }\n\n  /* eslint-disable @typescript-eslint/unbound-method */\n\n  // Fast path to avoid DOM I/O\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isNativeFetch)(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch)) {\n    return (cachedFetchImpl = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch.bind(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW));\n  }\n\n  const document = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document;\n  let fetchImpl = _helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.fetch;\n  // eslint-disable-next-line deprecation/deprecation\n  if (document && typeof document.createElement === 'function') {\n    try {\n      const sandbox = document.createElement('iframe');\n      sandbox.hidden = true;\n      document.head.appendChild(sandbox);\n      const contentWindow = sandbox.contentWindow;\n      if (contentWindow && contentWindow.fetch) {\n        fetchImpl = contentWindow.fetch;\n      }\n      document.head.removeChild(sandbox);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', e);\n    }\n  }\n\n  return (cachedFetchImpl = fetchImpl.bind(_helpers_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW));\n  /* eslint-enable @typescript-eslint/unbound-method */\n}\n\n/** Clears cached fetch impl */\nfunction clearCachedFetchImplementation() {\n  cachedFetchImpl = undefined;\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Q7QUFDZjs7QUFFdkM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLEtBQUs7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsTUFBTSw0REFBYSxDQUFDLHFEQUFZO0FBQ2hDLDhCQUE4QiwwREFBaUIsQ0FBQywrQ0FBTTtBQUN0RDs7QUFFQSxtQkFBbUIsd0RBQWU7QUFDbEMsa0JBQWtCLHFEQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxRQUFRLHNEQUFXO0FBQ25CO0FBQ0E7O0FBRUEsMkNBQTJDLCtDQUFNO0FBQ2pEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRXdFO0FBQ3hFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2Jyb3dzZXIvZXNtL3RyYW5zcG9ydHMvdXRpbHMuanM/MGFmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc05hdGl2ZUZldGNoLCBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uL2hlbHBlcnMuanMnO1xuXG5sZXQgY2FjaGVkRmV0Y2hJbXBsID0gdW5kZWZpbmVkO1xuXG4vKipcbiAqIEEgc3BlY2lhbCB1c2VjYXNlIGZvciBpbmNvcnJlY3RseSB3cmFwcGVkIEZldGNoIEFQSXMgaW4gY29uanVuY3Rpb24gd2l0aCBhZC1ibG9ja2Vycy5cbiAqIFdoZW5ldmVyIHNvbWVvbmUgd3JhcHMgdGhlIEZldGNoIEFQSSBhbmQgcmV0dXJucyB0aGUgd3JvbmcgcHJvbWlzZSBjaGFpbixcbiAqIHRoaXMgY2hhaW4gYmVjb21lcyBvcnBoYW5lZCBhbmQgdGhlcmUgaXMgbm8gcG9zc2libGUgd2F5IHRvIGNhcHR1cmUgaXQncyByZWplY3Rpb25zXG4gKiBvdGhlciB0aGFuIGFsbG93aW5nIGl0IGJ1YmJsZSB1cCB0byB0aGlzIHZlcnkgaGFuZGxlci4gZWcuXG4gKlxuICogY29uc3QgZiA9IHdpbmRvdy5mZXRjaDtcbiAqIHdpbmRvdy5mZXRjaCA9IGZ1bmN0aW9uICgpIHtcbiAqICAgY29uc3QgcCA9IGYuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAqXG4gKiAgIHAudGhlbihmdW5jdGlvbigpIHtcbiAqICAgICBjb25zb2xlLmxvZygnaGkuJyk7XG4gKiAgIH0pO1xuICpcbiAqICAgcmV0dXJuIHA7XG4gKiB9XG4gKlxuICogYHAudGhlbihmdW5jdGlvbiAoKSB7IC4uLiB9KWAgaXMgcHJvZHVjaW5nIGEgY29tcGxldGVseSBzZXBhcmF0ZSBwcm9taXNlIGNoYWluLFxuICogaG93ZXZlciwgd2hhdCdzIHJldHVybmVkIGlzIGBwYCAtIHRoZSByZXN1bHQgb2Ygb3JpZ2luYWwgYGZldGNoYCBjYWxsLlxuICpcbiAqIFRoaXMgbWVhbiwgdGhhdCB3aGVuZXZlciB3ZSB1c2UgdGhlIEZldGNoIEFQSSB0byBzZW5kIG91ciBvd24gcmVxdWVzdHMsIF9hbmRfXG4gKiBzb21lIGFkLWJsb2NrZXIgYmxvY2tzIGl0LCB0aGlzIG9ycGhhbmVkIGNoYWluIHdpbGwgX2Fsd2F5c18gcmVqZWN0LFxuICogZWZmZWN0aXZlbHkgY2F1c2luZyBhbm90aGVyIGV2ZW50IHRvIGJlIGNhcHR1cmVkLlxuICogVGhpcyBtYWtlcyBhIHdob2xlIHByb2Nlc3MgYmVjb21lIGFuIGluZmluaXRlIGxvb3AsIHdoaWNoIHdlIG5lZWQgdG8gc29tZWhvd1xuICogZGVhbCB3aXRoLCBhbmQgYnJlYWsgaXQgaW4gb25lIHdheSBvciBhbm90aGVyLlxuICpcbiAqIFRvIGRlYWwgd2l0aCB0aGlzIGlzc3VlLCB3ZSBhcmUgbWFraW5nIHN1cmUgdGhhdCB3ZSBfYWx3YXlzXyB1c2UgdGhlIHJlYWxcbiAqIGJyb3dzZXIgRmV0Y2ggQVBJLCBpbnN0ZWFkIG9mIHJlbHlpbmcgb24gd2hhdCBgd2luZG93LmZldGNoYCBleHBvc2VzLlxuICogVGhlIG9ubHkgZG93bnNpZGUgdG8gdGhpcyB3b3VsZCBiZSBtaXNzaW5nIG91ciBvd24gcmVxdWVzdHMgYXMgYnJlYWRjcnVtYnMsXG4gKiBidXQgYmVjYXVzZSB3ZSBhcmUgYWxyZWFkeSBub3QgZG9pbmcgdGhpcywgaXQgc2hvdWxkIGJlIGp1c3QgZmluZS5cbiAqXG4gKiBQb3NzaWJsZSBmYWlsZWQgZmV0Y2ggZXJyb3IgbWVzc2FnZXMgcGVyLWJyb3dzZXI6XG4gKlxuICogQ2hyb21lOiAgRmFpbGVkIHRvIGZldGNoXG4gKiBFZGdlOiAgICBGYWlsZWQgdG8gRmV0Y2hcbiAqIEZpcmVmb3g6IE5ldHdvcmtFcnJvciB3aGVuIGF0dGVtcHRpbmcgdG8gZmV0Y2ggcmVzb3VyY2VcbiAqIFNhZmFyaTogIHJlc291cmNlIGJsb2NrZWQgYnkgY29udGVudCBibG9ja2VyXG4gKi9cbmZ1bmN0aW9uIGdldE5hdGl2ZUZldGNoSW1wbGVtZW50YXRpb24oKSB7XG4gIGlmIChjYWNoZWRGZXRjaEltcGwpIHtcbiAgICByZXR1cm4gY2FjaGVkRmV0Y2hJbXBsO1xuICB9XG5cbiAgLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kICovXG5cbiAgLy8gRmFzdCBwYXRoIHRvIGF2b2lkIERPTSBJL09cbiAgaWYgKGlzTmF0aXZlRmV0Y2goV0lORE9XLmZldGNoKSkge1xuICAgIHJldHVybiAoY2FjaGVkRmV0Y2hJbXBsID0gV0lORE9XLmZldGNoLmJpbmQoV0lORE9XKSk7XG4gIH1cblxuICBjb25zdCBkb2N1bWVudCA9IFdJTkRPVy5kb2N1bWVudDtcbiAgbGV0IGZldGNoSW1wbCA9IFdJTkRPVy5mZXRjaDtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGlmIChkb2N1bWVudCAmJiB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBzYW5kYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgICBzYW5kYm94LmhpZGRlbiA9IHRydWU7XG4gICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKHNhbmRib3gpO1xuICAgICAgY29uc3QgY29udGVudFdpbmRvdyA9IHNhbmRib3guY29udGVudFdpbmRvdztcbiAgICAgIGlmIChjb250ZW50V2luZG93ICYmIGNvbnRlbnRXaW5kb3cuZmV0Y2gpIHtcbiAgICAgICAgZmV0Y2hJbXBsID0gY29udGVudFdpbmRvdy5mZXRjaDtcbiAgICAgIH1cbiAgICAgIGRvY3VtZW50LmhlYWQucmVtb3ZlQ2hpbGQoc2FuZGJveCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJlxuICAgICAgICBsb2dnZXIud2FybignQ291bGQgbm90IGNyZWF0ZSBzYW5kYm94IGlmcmFtZSBmb3IgcHVyZSBmZXRjaCBjaGVjaywgYmFpbGluZyB0byB3aW5kb3cuZmV0Y2g6ICcsIGUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoY2FjaGVkRmV0Y2hJbXBsID0gZmV0Y2hJbXBsLmJpbmQoV0lORE9XKSk7XG4gIC8qIGVzbGludC1lbmFibGUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kICovXG59XG5cbi8qKiBDbGVhcnMgY2FjaGVkIGZldGNoIGltcGwgKi9cbmZ1bmN0aW9uIGNsZWFyQ2FjaGVkRmV0Y2hJbXBsZW1lbnRhdGlvbigpIHtcbiAgY2FjaGVkRmV0Y2hJbXBsID0gdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgeyBjbGVhckNhY2hlZEZldGNoSW1wbGVtZW50YXRpb24sIGdldE5hdGl2ZUZldGNoSW1wbGVtZW50YXRpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/browser/esm/transports/xhr.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/browser/esm/transports/xhr.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makeXHRTransport\": function() { return /* binding */ makeXHRTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/**\n * The DONE ready state for XmlHttpRequest\n *\n * Defining it here as a constant b/c XMLHttpRequest.DONE is not always defined\n * (e.g. during testing, it is `undefined`)\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/readyState}\n */\nconst XHR_READYSTATE_DONE = 4;\n\n/**\n * Creates a Transport that uses the XMLHttpRequest API to send events to Sentry.\n */\nfunction makeXHRTransport(options) {\n  function makeRequest(request) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n\n      xhr.onerror = reject;\n\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === XHR_READYSTATE_DONE) {\n          resolve({\n            statusCode: xhr.status,\n            headers: {\n              'x-sentry-rate-limits': xhr.getResponseHeader('X-Sentry-Rate-Limits'),\n              'retry-after': xhr.getResponseHeader('Retry-After'),\n            },\n          });\n        }\n      };\n\n      xhr.open('POST', options.url);\n\n      for (const header in options.headers) {\n        if (Object.prototype.hasOwnProperty.call(options.headers, header)) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(request.body);\n    });\n  }\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.createTransport)(options, makeRequest);\n}\n\n\n//# sourceMappingURL=xhr.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL3hoci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBK0M7QUFDSDs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVc7QUFDMUI7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsV0FBVztBQUNYO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxTQUFTLDZEQUFlO0FBQ3hCOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9icm93c2VyL2VzbS90cmFuc3BvcnRzL3hoci5qcz83NWJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVRyYW5zcG9ydCB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBTeW5jUHJvbWlzZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKipcbiAqIFRoZSBET05FIHJlYWR5IHN0YXRlIGZvciBYbWxIdHRwUmVxdWVzdFxuICpcbiAqIERlZmluaW5nIGl0IGhlcmUgYXMgYSBjb25zdGFudCBiL2MgWE1MSHR0cFJlcXVlc3QuRE9ORSBpcyBub3QgYWx3YXlzIGRlZmluZWRcbiAqIChlLmcuIGR1cmluZyB0ZXN0aW5nLCBpdCBpcyBgdW5kZWZpbmVkYClcbiAqXG4gKiBAc2VlIHtAbGluayBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvWE1MSHR0cFJlcXVlc3QvcmVhZHlTdGF0ZX1cbiAqL1xuY29uc3QgWEhSX1JFQURZU1RBVEVfRE9ORSA9IDQ7XG5cbi8qKlxuICogQ3JlYXRlcyBhIFRyYW5zcG9ydCB0aGF0IHVzZXMgdGhlIFhNTEh0dHBSZXF1ZXN0IEFQSSB0byBzZW5kIGV2ZW50cyB0byBTZW50cnkuXG4gKi9cbmZ1bmN0aW9uIG1ha2VYSFJUcmFuc3BvcnQob3B0aW9ucykge1xuICBmdW5jdGlvbiBtYWtlUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBjb25zdCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcblxuICAgICAgeGhyLm9uZXJyb3IgPSByZWplY3Q7XG5cbiAgICAgIHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7XG4gICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gWEhSX1JFQURZU1RBVEVfRE9ORSkge1xuICAgICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgICAgc3RhdHVzQ29kZTogeGhyLnN0YXR1cyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgJ3gtc2VudHJ5LXJhdGUtbGltaXRzJzogeGhyLmdldFJlc3BvbnNlSGVhZGVyKCdYLVNlbnRyeS1SYXRlLUxpbWl0cycpLFxuICAgICAgICAgICAgICAncmV0cnktYWZ0ZXInOiB4aHIuZ2V0UmVzcG9uc2VIZWFkZXIoJ1JldHJ5LUFmdGVyJyksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICB4aHIub3BlbignUE9TVCcsIG9wdGlvbnMudXJsKTtcblxuICAgICAgZm9yIChjb25zdCBoZWFkZXIgaW4gb3B0aW9ucy5oZWFkZXJzKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob3B0aW9ucy5oZWFkZXJzLCBoZWFkZXIpKSB7XG4gICAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoaGVhZGVyLCBvcHRpb25zLmhlYWRlcnNbaGVhZGVyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgeGhyLnNlbmQocmVxdWVzdC5ib2R5KTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucywgbWFrZVJlcXVlc3QpO1xufVxuXG5leHBvcnQgeyBtYWtlWEhSVHJhbnNwb3J0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD14aHIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/browser/esm/transports/xhr.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/api.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/api.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getEnvelopeEndpointWithUrlEncodedAuth\": function() { return /* binding */ getEnvelopeEndpointWithUrlEncodedAuth; },\n/* harmony export */   \"getReportDialogEndpoint\": function() { return /* binding */ getReportDialogEndpoint; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst SENTRY_API_VERSION = '7';\n\n/** Returns the prefix to construct Sentry ingestion API endpoints. */\nfunction getBaseApiEndpoint(dsn) {\n  const protocol = dsn.protocol ? `${dsn.protocol}:` : '';\n  const port = dsn.port ? `:${dsn.port}` : '';\n  return `${protocol}//${dsn.host}${port}${dsn.path ? `/${dsn.path}` : ''}/api/`;\n}\n\n/** Returns the ingest API endpoint for target. */\nfunction _getIngestEndpoint(dsn) {\n  return `${getBaseApiEndpoint(dsn)}${dsn.projectId}/envelope/`;\n}\n\n/** Returns a URL-encoded string with auth config suitable for a query string. */\nfunction _encodedAuth(dsn, sdkInfo) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.urlEncode)({\n    // We send only the minimum set of required information. See\n    // https://github.com/getsentry/sentry-javascript/issues/2572.\n    sentry_key: dsn.publicKey,\n    sentry_version: SENTRY_API_VERSION,\n    ...(sdkInfo && { sentry_client: `${sdkInfo.name}/${sdkInfo.version}` }),\n  });\n}\n\n/**\n * Returns the envelope endpoint URL with auth in the query string.\n *\n * Sending auth as part of the query string and not as custom HTTP headers avoids CORS preflight requests.\n */\nfunction getEnvelopeEndpointWithUrlEncodedAuth(\n  dsn,\n  // TODO (v8): Remove `tunnelOrOptions` in favor of `options`, and use the substitute code below\n  // options: ClientOptions = {} as ClientOptions,\n  tunnelOrOptions = {} ,\n) {\n  // TODO (v8): Use this code instead\n  // const { tunnel, _metadata = {} } = options;\n  // return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, _metadata.sdk)}`;\n\n  const tunnel = typeof tunnelOrOptions === 'string' ? tunnelOrOptions : tunnelOrOptions.tunnel;\n  const sdkInfo =\n    typeof tunnelOrOptions === 'string' || !tunnelOrOptions._metadata ? undefined : tunnelOrOptions._metadata.sdk;\n\n  return tunnel ? tunnel : `${_getIngestEndpoint(dsn)}?${_encodedAuth(dsn, sdkInfo)}`;\n}\n\n/** Returns the url to the report dialog endpoint. */\nfunction getReportDialogEndpoint(\n  dsnLike,\n  dialogOptions\n\n,\n) {\n  const dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(dsnLike);\n  const endpoint = `${getBaseApiEndpoint(dsn)}embed/error-page/`;\n\n  let encodedOptions = `dsn=${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn)}`;\n  for (const key in dialogOptions) {\n    if (key === 'dsn') {\n      continue;\n    }\n\n    if (key === 'user') {\n      const user = dialogOptions.user;\n      if (!user) {\n        continue;\n      }\n      if (user.name) {\n        encodedOptions += `&name=${encodeURIComponent(user.name)}`;\n      }\n      if (user.email) {\n        encodedOptions += `&email=${encodeURIComponent(user.email)}`;\n      }\n    } else {\n      encodedOptions += `&${encodeURIComponent(key)}=${encodeURIComponent(dialogOptions[key] )}`;\n    }\n  }\n\n  return `${endpoint}?${encodedOptions}`;\n}\n\n\n//# sourceMappingURL=api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hcGkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFOztBQUVoRTs7QUFFQTtBQUNBO0FBQ0EscUNBQXFDLGFBQWE7QUFDbEQsOEJBQThCLFNBQVM7QUFDdkMsWUFBWSxTQUFTLElBQUksU0FBUyxFQUFFLEtBQUssRUFBRSxlQUFlLFNBQVMsT0FBTztBQUMxRTs7QUFFQTtBQUNBO0FBQ0EsWUFBWSx3QkFBd0IsRUFBRSxjQUFjO0FBQ3BEOztBQUVBO0FBQ0E7QUFDQSxTQUFTLHdEQUFTO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGtCQUFrQixhQUFhLEdBQUcsZ0JBQWdCLEdBQUc7QUFDMUUsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxhQUFhLHlCQUF5QjtBQUN0QyxpQ0FBaUMsd0JBQXdCLEdBQUcsaUNBQWlDOztBQUU3RjtBQUNBO0FBQ0E7O0FBRUEsOEJBQThCLHdCQUF3QixHQUFHLDJCQUEyQjtBQUNwRjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxzREFBTztBQUNyQixzQkFBc0Isd0JBQXdCOztBQUU5Qyw4QkFBOEIsMERBQVcsTUFBTTtBQUMvQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsOEJBQThCO0FBQ2pFO0FBQ0E7QUFDQSxvQ0FBb0MsK0JBQStCO0FBQ25FO0FBQ0EsTUFBTTtBQUNOLDRCQUE0Qix3QkFBd0IsR0FBRyx3Q0FBd0M7QUFDL0Y7QUFDQTs7QUFFQSxZQUFZLFNBQVMsR0FBRyxlQUFlO0FBQ3ZDOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9hcGkuanM/MWMwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYWtlRHNuLCBkc25Ub1N0cmluZywgdXJsRW5jb2RlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFNFTlRSWV9BUElfVkVSU0lPTiA9ICc3JztcblxuLyoqIFJldHVybnMgdGhlIHByZWZpeCB0byBjb25zdHJ1Y3QgU2VudHJ5IGluZ2VzdGlvbiBBUEkgZW5kcG9pbnRzLiAqL1xuZnVuY3Rpb24gZ2V0QmFzZUFwaUVuZHBvaW50KGRzbikge1xuICBjb25zdCBwcm90b2NvbCA9IGRzbi5wcm90b2NvbCA/IGAke2Rzbi5wcm90b2NvbH06YCA6ICcnO1xuICBjb25zdCBwb3J0ID0gZHNuLnBvcnQgPyBgOiR7ZHNuLnBvcnR9YCA6ICcnO1xuICByZXR1cm4gYCR7cHJvdG9jb2x9Ly8ke2Rzbi5ob3N0fSR7cG9ydH0ke2Rzbi5wYXRoID8gYC8ke2Rzbi5wYXRofWAgOiAnJ30vYXBpL2A7XG59XG5cbi8qKiBSZXR1cm5zIHRoZSBpbmdlc3QgQVBJIGVuZHBvaW50IGZvciB0YXJnZXQuICovXG5mdW5jdGlvbiBfZ2V0SW5nZXN0RW5kcG9pbnQoZHNuKSB7XG4gIHJldHVybiBgJHtnZXRCYXNlQXBpRW5kcG9pbnQoZHNuKX0ke2Rzbi5wcm9qZWN0SWR9L2VudmVsb3BlL2A7XG59XG5cbi8qKiBSZXR1cm5zIGEgVVJMLWVuY29kZWQgc3RyaW5nIHdpdGggYXV0aCBjb25maWcgc3VpdGFibGUgZm9yIGEgcXVlcnkgc3RyaW5nLiAqL1xuZnVuY3Rpb24gX2VuY29kZWRBdXRoKGRzbiwgc2RrSW5mbykge1xuICByZXR1cm4gdXJsRW5jb2RlKHtcbiAgICAvLyBXZSBzZW5kIG9ubHkgdGhlIG1pbmltdW0gc2V0IG9mIHJlcXVpcmVkIGluZm9ybWF0aW9uLiBTZWVcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ2V0c2VudHJ5L3NlbnRyeS1qYXZhc2NyaXB0L2lzc3Vlcy8yNTcyLlxuICAgIHNlbnRyeV9rZXk6IGRzbi5wdWJsaWNLZXksXG4gICAgc2VudHJ5X3ZlcnNpb246IFNFTlRSWV9BUElfVkVSU0lPTixcbiAgICAuLi4oc2RrSW5mbyAmJiB7IHNlbnRyeV9jbGllbnQ6IGAke3Nka0luZm8ubmFtZX0vJHtzZGtJbmZvLnZlcnNpb259YCB9KSxcbiAgfSk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZW52ZWxvcGUgZW5kcG9pbnQgVVJMIHdpdGggYXV0aCBpbiB0aGUgcXVlcnkgc3RyaW5nLlxuICpcbiAqIFNlbmRpbmcgYXV0aCBhcyBwYXJ0IG9mIHRoZSBxdWVyeSBzdHJpbmcgYW5kIG5vdCBhcyBjdXN0b20gSFRUUCBoZWFkZXJzIGF2b2lkcyBDT1JTIHByZWZsaWdodCByZXF1ZXN0cy5cbiAqL1xuZnVuY3Rpb24gZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aChcbiAgZHNuLFxuICAvLyBUT0RPICh2OCk6IFJlbW92ZSBgdHVubmVsT3JPcHRpb25zYCBpbiBmYXZvciBvZiBgb3B0aW9uc2AsIGFuZCB1c2UgdGhlIHN1YnN0aXR1dGUgY29kZSBiZWxvd1xuICAvLyBvcHRpb25zOiBDbGllbnRPcHRpb25zID0ge30gYXMgQ2xpZW50T3B0aW9ucyxcbiAgdHVubmVsT3JPcHRpb25zID0ge30gLFxuKSB7XG4gIC8vIFRPRE8gKHY4KTogVXNlIHRoaXMgY29kZSBpbnN0ZWFkXG4gIC8vIGNvbnN0IHsgdHVubmVsLCBfbWV0YWRhdGEgPSB7fSB9ID0gb3B0aW9ucztcbiAgLy8gcmV0dXJuIHR1bm5lbCA/IHR1bm5lbCA6IGAke19nZXRJbmdlc3RFbmRwb2ludChkc24pfT8ke19lbmNvZGVkQXV0aChkc24sIF9tZXRhZGF0YS5zZGspfWA7XG5cbiAgY29uc3QgdHVubmVsID0gdHlwZW9mIHR1bm5lbE9yT3B0aW9ucyA9PT0gJ3N0cmluZycgPyB0dW5uZWxPck9wdGlvbnMgOiB0dW5uZWxPck9wdGlvbnMudHVubmVsO1xuICBjb25zdCBzZGtJbmZvID1cbiAgICB0eXBlb2YgdHVubmVsT3JPcHRpb25zID09PSAnc3RyaW5nJyB8fCAhdHVubmVsT3JPcHRpb25zLl9tZXRhZGF0YSA/IHVuZGVmaW5lZCA6IHR1bm5lbE9yT3B0aW9ucy5fbWV0YWRhdGEuc2RrO1xuXG4gIHJldHVybiB0dW5uZWwgPyB0dW5uZWwgOiBgJHtfZ2V0SW5nZXN0RW5kcG9pbnQoZHNuKX0/JHtfZW5jb2RlZEF1dGgoZHNuLCBzZGtJbmZvKX1gO1xufVxuXG4vKiogUmV0dXJucyB0aGUgdXJsIHRvIHRoZSByZXBvcnQgZGlhbG9nIGVuZHBvaW50LiAqL1xuZnVuY3Rpb24gZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQoXG4gIGRzbkxpa2UsXG4gIGRpYWxvZ09wdGlvbnNcblxuLFxuKSB7XG4gIGNvbnN0IGRzbiA9IG1ha2VEc24oZHNuTGlrZSk7XG4gIGNvbnN0IGVuZHBvaW50ID0gYCR7Z2V0QmFzZUFwaUVuZHBvaW50KGRzbil9ZW1iZWQvZXJyb3ItcGFnZS9gO1xuXG4gIGxldCBlbmNvZGVkT3B0aW9ucyA9IGBkc249JHtkc25Ub1N0cmluZyhkc24pfWA7XG4gIGZvciAoY29uc3Qga2V5IGluIGRpYWxvZ09wdGlvbnMpIHtcbiAgICBpZiAoa2V5ID09PSAnZHNuJykge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgaWYgKGtleSA9PT0gJ3VzZXInKSB7XG4gICAgICBjb25zdCB1c2VyID0gZGlhbG9nT3B0aW9ucy51c2VyO1xuICAgICAgaWYgKCF1c2VyKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHVzZXIubmFtZSkge1xuICAgICAgICBlbmNvZGVkT3B0aW9ucyArPSBgJm5hbWU9JHtlbmNvZGVVUklDb21wb25lbnQodXNlci5uYW1lKX1gO1xuICAgICAgfVxuICAgICAgaWYgKHVzZXIuZW1haWwpIHtcbiAgICAgICAgZW5jb2RlZE9wdGlvbnMgKz0gYCZlbWFpbD0ke2VuY29kZVVSSUNvbXBvbmVudCh1c2VyLmVtYWlsKX1gO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBlbmNvZGVkT3B0aW9ucyArPSBgJiR7ZW5jb2RlVVJJQ29tcG9uZW50KGtleSl9PSR7ZW5jb2RlVVJJQ29tcG9uZW50KGRpYWxvZ09wdGlvbnNba2V5XSApfWA7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGAke2VuZHBvaW50fT8ke2VuY29kZWRPcHRpb25zfWA7XG59XG5cbmV4cG9ydCB7IGdldEVudmVsb3BlRW5kcG9pbnRXaXRoVXJsRW5jb2RlZEF1dGgsIGdldFJlcG9ydERpYWxvZ0VuZHBvaW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/api.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/baseclient.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/baseclient.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseClient\": function() { return /* binding */ BaseClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/core/esm/envelope.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n\n\n\n\n\n\n\nconst ALREADY_SEEN_ERROR = \"Not capturing exception because it's already been captured.\";\n\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event, it is passed through\n * {@link BaseClient._prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(options);\n *   }\n *\n *   // ...\n * }\n */\nclass BaseClient {\n  /** Options passed to the SDK. */\n\n  /** The client Dsn, if specified in options. Without this Dsn, the SDK will be disabled. */\n\n  /** Array of set up integrations. */\n   __init() {this._integrations = {};}\n\n  /** Indicates whether this client's integrations have been set up. */\n   __init2() {this._integrationsInitialized = false;}\n\n  /** Number of calls being processed */\n   __init3() {this._numProcessing = 0;}\n\n  /** Holds flushable  */\n   __init4() {this._outcomes = {};}\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n   __init5() {this._hooks = {};}\n\n  /**\n   * Initializes this client instance.\n   *\n   * @param options Options for the client.\n   */\n   constructor(options) {BaseClient.prototype.__init.call(this);BaseClient.prototype.__init2.call(this);BaseClient.prototype.__init3.call(this);BaseClient.prototype.__init4.call(this);BaseClient.prototype.__init5.call(this);\n    this._options = options;\n    if (options.dsn) {\n      this._dsn = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(options.dsn);\n      const url = (0,_api_js__WEBPACK_IMPORTED_MODULE_1__.getEnvelopeEndpointWithUrlEncodedAuth)(this._dsn, options);\n      this._transport = options.transport({\n        recordDroppedEvent: this.recordDroppedEvent.bind(this),\n        ...options.transportOptions,\n        url,\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('No DSN provided, client will not do anything.');\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   captureException(exception, hint, scope) {\n    // ensure we haven't captured this very object before\n    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.checkOrSetAlreadyCaught)(exception)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this.eventFromException(exception, hint)\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n    scope,\n  ) {\n    let eventId = hint && hint.event_id;\n\n    const promisedEvent = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPrimitive)(message)\n      ? this.eventFromMessage(String(message), level, hint)\n      : this.eventFromException(message, hint);\n\n    this._process(\n      promisedEvent\n        .then(event => this._captureEvent(event, hint, scope))\n        .then(result => {\n          eventId = result;\n        }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint, scope) {\n    // ensure we haven't captured this very object before\n    if (hint && hint.originalException && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.checkOrSetAlreadyCaught)(hint.originalException)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(ALREADY_SEEN_ERROR);\n      return;\n    }\n\n    let eventId = hint && hint.event_id;\n\n    this._process(\n      this._captureEvent(event, hint, scope).then(result => {\n        eventId = result;\n      }),\n    );\n\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(session) {\n    if (!this._isEnabled()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('SDK not enabled, will not capture session.');\n      return;\n    }\n\n    if (!(typeof session.release === 'string')) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Discarded session because of missing or non-string release');\n    } else {\n      this.sendSession(session);\n      // After sending, we set init false to indicate it's not the first occurrence\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_2__.updateSession)(session, { init: false });\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getDsn() {\n    return this._dsn;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * @see SdkMetadata in @sentry/types\n   *\n   * @return The metadata of the SDK\n   */\n   getSdkMetadata() {\n    return this._options._metadata;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransport() {\n    return this._transport;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   flush(timeout) {\n    const transport = this._transport;\n    if (transport) {\n      return this._isClientDoneProcessing(timeout).then(clientFinished => {\n        return transport.flush(timeout).then(transportFlushed => clientFinished && transportFlushed);\n      });\n    } else {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(true);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   close(timeout) {\n    return this.flush(timeout).then(result => {\n      this.getOptions().enabled = false;\n      return result;\n    });\n  }\n\n  /**\n   * Sets up the integrations\n   */\n   setupIntegrations() {\n    if (this._isEnabled() && !this._integrationsInitialized) {\n      this._integrations = (0,_integration_js__WEBPACK_IMPORTED_MODULE_3__.setupIntegrations)(this._options.integrations);\n      this._integrationsInitialized = true;\n    }\n  }\n\n  /**\n   * Gets an installed integration by its `id`.\n   *\n   * @returns The installed integration or `undefined` if no integration with that `id` was installed.\n   */\n   getIntegrationById(integrationId) {\n    return this._integrations[integrationId];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    try {\n      return (this._integrations[integration.id] ) || null;\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Client`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addIntegration(integration) {\n    (0,_integration_js__WEBPACK_IMPORTED_MODULE_3__.setupIntegration)(integration, this._integrations);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendEvent(event, hint = {}) {\n    if (this._dsn) {\n      let env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_4__.createEventEnvelope)(event, this._dsn, this._options._metadata, this._options.tunnel);\n\n      for (const attachment of hint.attachments || []) {\n        env = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addItemToEnvelope)(\n          env,\n          (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createAttachmentEnvelopeItem)(\n            attachment,\n            this._options.transportOptions && this._options.transportOptions.textEncoder,\n          ),\n        );\n      }\n\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   sendSession(session) {\n    if (this._dsn) {\n      const env = (0,_envelope_js__WEBPACK_IMPORTED_MODULE_4__.createSessionEnvelope)(session, this._dsn, this._options._metadata, this._options.tunnel);\n      this._sendEnvelope(env);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   recordDroppedEvent(reason, category, _event) {\n    // Note: we use `event` in replay, where we overwrite this hook.\n\n    if (this._options.sendClientReports) {\n      // We want to track each category (error, transaction, session, replay_event) separately\n      // but still keep the distinction between different type of outcomes.\n      // We could use nested maps, but it's much easier to read and type this way.\n      // A correct type for map-based implementation if we want to go that route\n      // would be `Partial<Record<SentryRequestType, Partial<Record<Outcome, number>>>>`\n      // With typescript 4.1 we could even use template literal types\n      const key = `${reason}:${category}`;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Adding outcome: \"${key}\"`);\n\n      // The following works because undefined + 1 === NaN and NaN is falsy\n      this._outcomes[key] = this._outcomes[key] + 1 || 1;\n    }\n  }\n\n  // Keep on() & emit() signatures in sync with types' client.ts interface\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   on(hook, callback) {\n    if (!this._hooks[hook]) {\n      this._hooks[hook] = [];\n    }\n\n    // @ts-ignore We assue the types are correct\n    this._hooks[hook].push(callback);\n  }\n\n  /** @inheritdoc */\n\n  /** @inheritdoc */\n   emit(hook, ...rest) {\n    if (this._hooks[hook]) {\n      // @ts-ignore we cannot enforce the callback to match the hook\n      this._hooks[hook].forEach(callback => callback(...rest));\n    }\n  }\n\n  /** Updates existing session based on the provided event */\n   _updateSessionFromEvent(session, event) {\n    let crashed = false;\n    let errored = false;\n    const exceptions = event.exception && event.exception.values;\n\n    if (exceptions) {\n      errored = true;\n\n      for (const ex of exceptions) {\n        const mechanism = ex.mechanism;\n        if (mechanism && mechanism.handled === false) {\n          crashed = true;\n          break;\n        }\n      }\n    }\n\n    // A session is updated and that session update is sent in only one of the two following scenarios:\n    // 1. Session with non terminal status and 0 errors + an error occurred -> Will set error count to 1 and send update\n    // 2. Session with non terminal status and 1 error + a crash occurred -> Will set status crashed and send update\n    const sessionNonTerminal = session.status === 'ok';\n    const shouldUpdateAndSend = (sessionNonTerminal && session.errors === 0) || (sessionNonTerminal && crashed);\n\n    if (shouldUpdateAndSend) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_2__.updateSession)(session, {\n        ...(crashed && { status: 'crashed' }),\n        errors: session.errors || Number(errored || crashed),\n      });\n      this.captureSession(session);\n    }\n  }\n\n  /**\n   * Determine if the client is finished processing. Returns a promise because it will wait `timeout` ms before saying\n   * \"no\" (resolving to `false`) in order to give the client a chance to potentially finish first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the client is still busy. Passing `0` (or not\n   * passing anything) will make the promise wait as long as it takes for processing to finish before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if processing is already done or finishes before the timeout, and\n   * `false` otherwise\n   */\n   _isClientDoneProcessing(timeout) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SyncPromise(resolve => {\n      let ticked = 0;\n      const tick = 1;\n\n      const interval = setInterval(() => {\n        if (this._numProcessing == 0) {\n          clearInterval(interval);\n          resolve(true);\n        } else {\n          ticked += tick;\n          if (timeout && ticked >= timeout) {\n            clearInterval(interval);\n            resolve(false);\n          }\n        }\n      }, tick);\n    });\n  }\n\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n   _isEnabled() {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  }\n\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n   _prepareEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const integrations = Object.keys(this._integrations);\n    if (!hint.integrations && integrations.length > 0) {\n      hint.integrations = integrations;\n    }\n    return (0,_utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_5__.prepareEvent)(options, event, hint, scope);\n  }\n\n  /**\n   * Processes the event and logs an error in case of rejection\n   * @param event\n   * @param hint\n   * @param scope\n   */\n   _captureEvent(event, hint = {}, scope) {\n    return this._processEvent(event, hint, scope).then(\n      finalEvent => {\n        return finalEvent.event_id;\n      },\n      reason => {\n        if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n          // If something's gone wrong, log the error as a warning. If it's just us having used a `SentryError` for\n          // control flow, log just the message (no stack) as a log-level log.\n          const sentryError = reason ;\n          if (sentryError.logLevel === 'log') {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(sentryError.message);\n          } else {\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(sentryError);\n          }\n        }\n        return undefined;\n      },\n    );\n  }\n\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional information about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n   _processEvent(event, hint, scope) {\n    const options = this.getOptions();\n    const { sampleRate } = options;\n\n    if (!this._isEnabled()) {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError('SDK not enabled, will not capture event.', 'log'));\n    }\n\n    const isTransaction = isTransactionEvent(event);\n    const isError = isErrorEvent(event);\n    const eventType = event.type || 'error';\n    const beforeSendLabel = `before send for type \\`${eventType}\\``;\n\n    // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n    // Sampling for transaction happens somewhere else\n    if (isError && typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      this.recordDroppedEvent('sample_rate', 'error', event);\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(\n        new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(\n          `Discarding event because it's not included in the random sample (sampling rate = ${sampleRate})`,\n          'log',\n        ),\n      );\n    }\n\n    const dataCategory = eventType === 'replay_event' ? 'replay' : eventType;\n\n    return this._prepareEvent(event, hint, scope)\n      .then(prepared => {\n        if (prepared === null) {\n          this.recordDroppedEvent('event_processor', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError('An event processor returned `null`, will not send event.', 'log');\n        }\n\n        const isInternalException = hint.data && (hint.data ).__sentry__ === true;\n        if (isInternalException) {\n          return prepared;\n        }\n\n        const result = processBeforeSend(options, prepared, hint);\n        return _validateBeforeSendResult(result, beforeSendLabel);\n      })\n      .then(processedEvent => {\n        if (processedEvent === null) {\n          this.recordDroppedEvent('before_send', dataCategory, event);\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(`${beforeSendLabel} returned \\`null\\`, will not send event.`, 'log');\n        }\n\n        const session = scope && scope.getSession();\n        if (!isTransaction && session) {\n          this._updateSessionFromEvent(session, processedEvent);\n        }\n\n        // None of the Sentry built event processor will update transaction name,\n        // so if the transaction name has been changed by an event processor, we know\n        // it has to come from custom event processor added by a user\n        const transactionInfo = processedEvent.transaction_info;\n        if (isTransaction && transactionInfo && processedEvent.transaction !== event.transaction) {\n          const source = 'custom';\n          processedEvent.transaction_info = {\n            ...transactionInfo,\n            source,\n          };\n        }\n\n        this.sendEvent(processedEvent, hint);\n        return processedEvent;\n      })\n      .then(null, reason => {\n        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError) {\n          throw reason;\n        }\n\n        this.captureException(reason, {\n          data: {\n            __sentry__: true,\n          },\n          originalException: reason,\n        });\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(\n          `Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\\nReason: ${reason}`,\n        );\n      });\n  }\n\n  /**\n   * Occupies the client with processing and event\n   */\n   _process(promise) {\n    this._numProcessing++;\n    void promise.then(\n      value => {\n        this._numProcessing--;\n        return value;\n      },\n      reason => {\n        this._numProcessing--;\n        return reason;\n      },\n    );\n  }\n\n  /**\n   * @inheritdoc\n   */\n   _sendEnvelope(envelope) {\n    if (this._transport && this._dsn) {\n      this._transport.send(envelope).then(null, reason => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Error while sending event:', reason);\n      });\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Transport disabled');\n    }\n  }\n\n  /**\n   * Clears outcomes on this client and returns them.\n   */\n   _clearOutcomes() {\n    const outcomes = this._outcomes;\n    this._outcomes = {};\n    return Object.keys(outcomes).map(key => {\n      const [reason, category] = key.split(':') ;\n      return {\n        reason,\n        category,\n        quantity: outcomes[key],\n      };\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n\n}\n\n/**\n * Verifies that return value of configured `beforeSend` or `beforeSendTransaction` is of expected type, and returns the value if so.\n */\nfunction _validateBeforeSendResult(\n  beforeSendResult,\n  beforeSendLabel,\n) {\n  const invalidValueError = `${beforeSendLabel} must return \\`null\\` or a valid event.`;\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isThenable)(beforeSendResult)) {\n    return beforeSendResult.then(\n      event => {\n        if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(event) && event !== null) {\n          throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(invalidValueError);\n        }\n        return event;\n      },\n      e => {\n        throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(`${beforeSendLabel} rejected with ${e}`);\n      },\n    );\n  } else if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(beforeSendResult) && beforeSendResult !== null) {\n    throw new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError(invalidValueError);\n  }\n  return beforeSendResult;\n}\n\n/**\n * Process the matching `beforeSendXXX` callback.\n */\nfunction processBeforeSend(\n  options,\n  event,\n  hint,\n) {\n  const { beforeSend, beforeSendTransaction } = options;\n\n  if (isErrorEvent(event) && beforeSend) {\n    return beforeSend(event, hint);\n  }\n\n  if (isTransactionEvent(event) && beforeSendTransaction) {\n    return beforeSendTransaction(event, hint);\n  }\n\n  return event;\n}\n\nfunction isErrorEvent(event) {\n  return event.type === undefined;\n}\n\nfunction isTransactionEvent(event) {\n  return event.type === 'transaction';\n}\n\n\n//# sourceMappingURL=baseclient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9iYXNlY2xpZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBc087QUFDcks7QUFDVTtBQUNKO0FBQzFCO0FBQ1U7O0FBRXZEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHdCQUF3QjtBQUM1QjtBQUNBO0FBQ0EsSUFBSSxxQkFBcUI7QUFDekIsMENBQTBDLHNCQUFzQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQSxJQUFJLGdDQUFnQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksMEJBQTBCO0FBQzlCO0FBQ0EsSUFBSSwyQkFBMkI7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBLGNBQWM7O0FBRWQ7QUFDQSxjQUFjOztBQUVkO0FBQ0EsY0FBYzs7QUFFZDtBQUNBLGNBQWM7O0FBRWQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1Q0FBdUMsd0NBQXdDLHdDQUF3Qyx3Q0FBd0M7QUFDeEw7QUFDQTtBQUNBLGtCQUFrQixzREFBTztBQUN6QixrQkFBa0IsOEVBQXFDO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLE1BQU07QUFDTix1RUFBdUUsc0RBQVc7QUFDbEY7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUF1QjtBQUMvQix1RUFBdUUscURBQVU7QUFDakY7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEIsMERBQVc7QUFDckM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxzRUFBdUI7QUFDakUsdUVBQXVFLHFEQUFVO0FBQ2pGO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSxzREFBVztBQUNsRjtBQUNBOztBQUVBO0FBQ0EsdUVBQXVFLHNEQUFXO0FBQ2xGLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTSwwREFBYSxZQUFZLGFBQWE7QUFDNUM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsTUFBTTtBQUNOLGFBQWEsa0VBQW1CO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixrRUFBaUI7QUFDNUM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHVFQUF1RSxzREFBVyxnQ0FBZ0MsZ0JBQWdCO0FBQ2xJO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksaUVBQWdCO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLGdCQUFnQixpRUFBbUI7O0FBRW5DO0FBQ0EsY0FBYyxnRUFBaUI7QUFDL0I7QUFDQSxVQUFVLDJFQUE0QjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1FQUFxQjtBQUN2QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixPQUFPLEdBQUcsU0FBUztBQUN4Qyx1RUFBdUUscURBQVUscUJBQXFCLElBQUk7O0FBRTFHO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLDBEQUFhO0FBQ25CLHlCQUF5QixtQkFBbUI7QUFDNUM7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHNEQUFXO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvRUFBWTtBQUN2Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkscURBQVU7QUFDdEIsWUFBWTtBQUNaLFlBQVksc0RBQVc7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxhQUFhOztBQUV6QjtBQUNBLGFBQWEsa0VBQW1CLEtBQUssc0RBQVc7QUFDaEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELFVBQVU7O0FBRWhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtFQUFtQjtBQUNoQyxZQUFZLHNEQUFXO0FBQ3ZCLDhGQUE4RixXQUFXO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNEQUFXO0FBQy9COztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHNEQUFXLElBQUksaUJBQWlCO0FBQ3BEOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLDhCQUE4QixzREFBVztBQUN6QztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLFNBQVM7QUFDVCxrQkFBa0Isc0RBQVc7QUFDN0Isd0lBQXdJLE9BQU87QUFDL0k7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlFQUF5RSx1REFBWTtBQUNyRixPQUFPO0FBQ1AsTUFBTTtBQUNOLHVFQUF1RSx1REFBWTtBQUNuRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGlCQUFpQjtBQUNoRCxNQUFNLHlEQUFVO0FBQ2hCO0FBQ0E7QUFDQSxhQUFhLDREQUFhO0FBQzFCLG9CQUFvQixzREFBVztBQUMvQjtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0Esa0JBQWtCLHNEQUFXLElBQUksaUJBQWlCLGdCQUFnQixFQUFFO0FBQ3BFLE9BQU87QUFDUDtBQUNBLElBQUksVUFBVSw0REFBYTtBQUMzQixjQUFjLHNEQUFXO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxvQ0FBb0M7O0FBRTlDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVzQjtBQUN0QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9iYXNlY2xpZW50LmpzP2FhNDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFrZURzbiwgbG9nZ2VyLCBjaGVja09yU2V0QWxyZWFkeUNhdWdodCwgaXNQcmltaXRpdmUsIHJlc29sdmVkU3luY1Byb21pc2UsIGFkZEl0ZW1Ub0VudmVsb3BlLCBjcmVhdGVBdHRhY2htZW50RW52ZWxvcGVJdGVtLCBTeW5jUHJvbWlzZSwgcmVqZWN0ZWRTeW5jUHJvbWlzZSwgU2VudHJ5RXJyb3IsIGlzVGhlbmFibGUsIGlzUGxhaW5PYmplY3QgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEVudmVsb3BlRW5kcG9pbnRXaXRoVXJsRW5jb2RlZEF1dGggfSBmcm9tICcuL2FwaS5qcyc7XG5pbXBvcnQgeyBjcmVhdGVFdmVudEVudmVsb3BlLCBjcmVhdGVTZXNzaW9uRW52ZWxvcGUgfSBmcm9tICcuL2VudmVsb3BlLmpzJztcbmltcG9ydCB7IHNldHVwSW50ZWdyYXRpb25zLCBzZXR1cEludGVncmF0aW9uIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbi5qcyc7XG5pbXBvcnQgeyB1cGRhdGVTZXNzaW9uIH0gZnJvbSAnLi9zZXNzaW9uLmpzJztcbmltcG9ydCB7IHByZXBhcmVFdmVudCB9IGZyb20gJy4vdXRpbHMvcHJlcGFyZUV2ZW50LmpzJztcblxuY29uc3QgQUxSRUFEWV9TRUVOX0VSUk9SID0gXCJOb3QgY2FwdHVyaW5nIGV4Y2VwdGlvbiBiZWNhdXNlIGl0J3MgYWxyZWFkeSBiZWVuIGNhcHR1cmVkLlwiO1xuXG4vKipcbiAqIEJhc2UgaW1wbGVtZW50YXRpb24gZm9yIGFsbCBKYXZhU2NyaXB0IFNESyBjbGllbnRzLlxuICpcbiAqIENhbGwgdGhlIGNvbnN0cnVjdG9yIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgb3B0aW9uc1xuICogc3BlY2lmaWMgdG8gdGhlIGNsaWVudCBzdWJjbGFzcy4gVG8gYWNjZXNzIHRoZXNlIG9wdGlvbnMgbGF0ZXIsIHVzZVxuICoge0BsaW5rIENsaWVudC5nZXRPcHRpb25zfS5cbiAqXG4gKiBJZiBhIERzbiBpcyBzcGVjaWZpZWQgaW4gdGhlIG9wdGlvbnMsIGl0IHdpbGwgYmUgcGFyc2VkIGFuZCBzdG9yZWQuIFVzZVxuICoge0BsaW5rIENsaWVudC5nZXREc259IHRvIHJldHJpZXZlIHRoZSBEc24gYXQgYW55IG1vbWVudC4gSW4gY2FzZSB0aGUgRHNuIGlzXG4gKiBpbnZhbGlkLCB0aGUgY29uc3RydWN0b3Igd2lsbCB0aHJvdyBhIHtAbGluayBTZW50cnlFeGNlcHRpb259LiBOb3RlIHRoYXRcbiAqIHdpdGhvdXQgYSB2YWxpZCBEc24sIHRoZSBTREsgd2lsbCBub3Qgc2VuZCBhbnkgZXZlbnRzIHRvIFNlbnRyeS5cbiAqXG4gKiBCZWZvcmUgc2VuZGluZyBhbiBldmVudCwgaXQgaXMgcGFzc2VkIHRocm91Z2hcbiAqIHtAbGluayBCYXNlQ2xpZW50Ll9wcmVwYXJlRXZlbnR9IHRvIGFkZCBTREsgaW5mb3JtYXRpb24gYW5kIHNjb3BlIGRhdGFcbiAqIChicmVhZGNydW1icyBhbmQgY29udGV4dCkuIFRvIGFkZCBtb3JlIGN1c3RvbSBpbmZvcm1hdGlvbiwgb3ZlcnJpZGUgdGhpc1xuICogbWV0aG9kIGFuZCBleHRlbmQgdGhlIHJlc3VsdGluZyBwcmVwYXJlZCBldmVudC5cbiAqXG4gKiBUbyBpc3N1ZSBhdXRvbWF0aWNhbGx5IGNyZWF0ZWQgZXZlbnRzIChlLmcuIHZpYSBpbnN0cnVtZW50YXRpb24pLCB1c2VcbiAqIHtAbGluayBDbGllbnQuY2FwdHVyZUV2ZW50fS4gSXQgd2lsbCBwcmVwYXJlIHRoZSBldmVudCBhbmQgcGFzcyBpdCB0aHJvdWdoXG4gKiB0aGUgY2FsbGJhY2sgbGlmZWN5Y2xlLiBUbyBpc3N1ZSBhdXRvLWJyZWFkY3J1bWJzLCB1c2VcbiAqIHtAbGluayBDbGllbnQuYWRkQnJlYWRjcnVtYn0uXG4gKlxuICogQGV4YW1wbGVcbiAqIGNsYXNzIE5vZGVDbGllbnQgZXh0ZW5kcyBCYXNlQ2xpZW50PE5vZGVPcHRpb25zPiB7XG4gKiAgIHB1YmxpYyBjb25zdHJ1Y3RvcihvcHRpb25zOiBOb2RlT3B0aW9ucykge1xuICogICAgIHN1cGVyKG9wdGlvbnMpO1xuICogICB9XG4gKlxuICogICAvLyAuLi5cbiAqIH1cbiAqL1xuY2xhc3MgQmFzZUNsaWVudCB7XG4gIC8qKiBPcHRpb25zIHBhc3NlZCB0byB0aGUgU0RLLiAqL1xuXG4gIC8qKiBUaGUgY2xpZW50IERzbiwgaWYgc3BlY2lmaWVkIGluIG9wdGlvbnMuIFdpdGhvdXQgdGhpcyBEc24sIHRoZSBTREsgd2lsbCBiZSBkaXNhYmxlZC4gKi9cblxuICAvKiogQXJyYXkgb2Ygc2V0IHVwIGludGVncmF0aW9ucy4gKi9cbiAgIF9faW5pdCgpIHt0aGlzLl9pbnRlZ3JhdGlvbnMgPSB7fTt9XG5cbiAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoaXMgY2xpZW50J3MgaW50ZWdyYXRpb25zIGhhdmUgYmVlbiBzZXQgdXAuICovXG4gICBfX2luaXQyKCkge3RoaXMuX2ludGVncmF0aW9uc0luaXRpYWxpemVkID0gZmFsc2U7fVxuXG4gIC8qKiBOdW1iZXIgb2YgY2FsbHMgYmVpbmcgcHJvY2Vzc2VkICovXG4gICBfX2luaXQzKCkge3RoaXMuX251bVByb2Nlc3NpbmcgPSAwO31cblxuICAvKiogSG9sZHMgZmx1c2hhYmxlICAqL1xuICAgX19pbml0NCgpIHt0aGlzLl9vdXRjb21lcyA9IHt9O31cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xuICAgX19pbml0NSgpIHt0aGlzLl9ob29rcyA9IHt9O31cblxuICAvKipcbiAgICogSW5pdGlhbGl6ZXMgdGhpcyBjbGllbnQgaW5zdGFuY2UuXG4gICAqXG4gICAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbnMgZm9yIHRoZSBjbGllbnQuXG4gICAqL1xuICAgY29uc3RydWN0b3Iob3B0aW9ucykge0Jhc2VDbGllbnQucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpO0Jhc2VDbGllbnQucHJvdG90eXBlLl9faW5pdDIuY2FsbCh0aGlzKTtCYXNlQ2xpZW50LnByb3RvdHlwZS5fX2luaXQzLmNhbGwodGhpcyk7QmFzZUNsaWVudC5wcm90b3R5cGUuX19pbml0NC5jYWxsKHRoaXMpO0Jhc2VDbGllbnQucHJvdG90eXBlLl9faW5pdDUuY2FsbCh0aGlzKTtcbiAgICB0aGlzLl9vcHRpb25zID0gb3B0aW9ucztcbiAgICBpZiAob3B0aW9ucy5kc24pIHtcbiAgICAgIHRoaXMuX2RzbiA9IG1ha2VEc24ob3B0aW9ucy5kc24pO1xuICAgICAgY29uc3QgdXJsID0gZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCh0aGlzLl9kc24sIG9wdGlvbnMpO1xuICAgICAgdGhpcy5fdHJhbnNwb3J0ID0gb3B0aW9ucy50cmFuc3BvcnQoe1xuICAgICAgICByZWNvcmREcm9wcGVkRXZlbnQ6IHRoaXMucmVjb3JkRHJvcHBlZEV2ZW50LmJpbmQodGhpcyksXG4gICAgICAgIC4uLm9wdGlvbnMudHJhbnNwb3J0T3B0aW9ucyxcbiAgICAgICAgdXJsLFxuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLndhcm4oJ05vIERTTiBwcm92aWRlZCwgY2xpZW50IHdpbGwgbm90IGRvIGFueXRoaW5nLicpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbiAgIGNhcHR1cmVFeGNlcHRpb24oZXhjZXB0aW9uLCBoaW50LCBzY29wZSkge1xuICAgIC8vIGVuc3VyZSB3ZSBoYXZlbid0IGNhcHR1cmVkIHRoaXMgdmVyeSBvYmplY3QgYmVmb3JlXG4gICAgaWYgKGNoZWNrT3JTZXRBbHJlYWR5Q2F1Z2h0KGV4Y2VwdGlvbikpIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZyhBTFJFQURZX1NFRU5fRVJST1IpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGxldCBldmVudElkID0gaGludCAmJiBoaW50LmV2ZW50X2lkO1xuXG4gICAgdGhpcy5fcHJvY2VzcyhcbiAgICAgIHRoaXMuZXZlbnRGcm9tRXhjZXB0aW9uKGV4Y2VwdGlvbiwgaGludClcbiAgICAgICAgLnRoZW4oZXZlbnQgPT4gdGhpcy5fY2FwdHVyZUV2ZW50KGV2ZW50LCBoaW50LCBzY29wZSkpXG4gICAgICAgIC50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgZXZlbnRJZCA9IHJlc3VsdDtcbiAgICAgICAgfSksXG4gICAgKTtcblxuICAgIHJldHVybiBldmVudElkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY2FwdHVyZU1lc3NhZ2UoXG4gICAgbWVzc2FnZSxcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICBsZXZlbCxcbiAgICBoaW50LFxuICAgIHNjb3BlLFxuICApIHtcbiAgICBsZXQgZXZlbnRJZCA9IGhpbnQgJiYgaGludC5ldmVudF9pZDtcblxuICAgIGNvbnN0IHByb21pc2VkRXZlbnQgPSBpc1ByaW1pdGl2ZShtZXNzYWdlKVxuICAgICAgPyB0aGlzLmV2ZW50RnJvbU1lc3NhZ2UoU3RyaW5nKG1lc3NhZ2UpLCBsZXZlbCwgaGludClcbiAgICAgIDogdGhpcy5ldmVudEZyb21FeGNlcHRpb24obWVzc2FnZSwgaGludCk7XG5cbiAgICB0aGlzLl9wcm9jZXNzKFxuICAgICAgcHJvbWlzZWRFdmVudFxuICAgICAgICAudGhlbihldmVudCA9PiB0aGlzLl9jYXB0dXJlRXZlbnQoZXZlbnQsIGhpbnQsIHNjb3BlKSlcbiAgICAgICAgLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICBldmVudElkID0gcmVzdWx0O1xuICAgICAgICB9KSxcbiAgICApO1xuXG4gICAgcmV0dXJuIGV2ZW50SWQ7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBjYXB0dXJlRXZlbnQoZXZlbnQsIGhpbnQsIHNjb3BlKSB7XG4gICAgLy8gZW5zdXJlIHdlIGhhdmVuJ3QgY2FwdHVyZWQgdGhpcyB2ZXJ5IG9iamVjdCBiZWZvcmVcbiAgICBpZiAoaGludCAmJiBoaW50Lm9yaWdpbmFsRXhjZXB0aW9uICYmIGNoZWNrT3JTZXRBbHJlYWR5Q2F1Z2h0KGhpbnQub3JpZ2luYWxFeGNlcHRpb24pKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coQUxSRUFEWV9TRUVOX0VSUk9SKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgZXZlbnRJZCA9IGhpbnQgJiYgaGludC5ldmVudF9pZDtcblxuICAgIHRoaXMuX3Byb2Nlc3MoXG4gICAgICB0aGlzLl9jYXB0dXJlRXZlbnQoZXZlbnQsIGhpbnQsIHNjb3BlKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgIGV2ZW50SWQgPSByZXN1bHQ7XG4gICAgICB9KSxcbiAgICApO1xuXG4gICAgcmV0dXJuIGV2ZW50SWQ7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBjYXB0dXJlU2Vzc2lvbihzZXNzaW9uKSB7XG4gICAgaWYgKCF0aGlzLl9pc0VuYWJsZWQoKSkge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIud2FybignU0RLIG5vdCBlbmFibGVkLCB3aWxsIG5vdCBjYXB0dXJlIHNlc3Npb24uJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCEodHlwZW9mIHNlc3Npb24ucmVsZWFzZSA9PT0gJ3N0cmluZycpKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci53YXJuKCdEaXNjYXJkZWQgc2Vzc2lvbiBiZWNhdXNlIG9mIG1pc3Npbmcgb3Igbm9uLXN0cmluZyByZWxlYXNlJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2VuZFNlc3Npb24oc2Vzc2lvbik7XG4gICAgICAvLyBBZnRlciBzZW5kaW5nLCB3ZSBzZXQgaW5pdCBmYWxzZSB0byBpbmRpY2F0ZSBpdCdzIG5vdCB0aGUgZmlyc3Qgb2NjdXJyZW5jZVxuICAgICAgdXBkYXRlU2Vzc2lvbihzZXNzaW9uLCB7IGluaXQ6IGZhbHNlIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGdldERzbigpIHtcbiAgICByZXR1cm4gdGhpcy5fZHNuO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgZ2V0T3B0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9ucztcbiAgfVxuXG4gIC8qKlxuICAgKiBAc2VlIFNka01ldGFkYXRhIGluIEBzZW50cnkvdHlwZXNcbiAgICpcbiAgICogQHJldHVybiBUaGUgbWV0YWRhdGEgb2YgdGhlIFNES1xuICAgKi9cbiAgIGdldFNka01ldGFkYXRhKCkge1xuICAgIHJldHVybiB0aGlzLl9vcHRpb25zLl9tZXRhZGF0YTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGdldFRyYW5zcG9ydCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdHJhbnNwb3J0O1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgZmx1c2godGltZW91dCkge1xuICAgIGNvbnN0IHRyYW5zcG9ydCA9IHRoaXMuX3RyYW5zcG9ydDtcbiAgICBpZiAodHJhbnNwb3J0KSB7XG4gICAgICByZXR1cm4gdGhpcy5faXNDbGllbnREb25lUHJvY2Vzc2luZyh0aW1lb3V0KS50aGVuKGNsaWVudEZpbmlzaGVkID0+IHtcbiAgICAgICAgcmV0dXJuIHRyYW5zcG9ydC5mbHVzaCh0aW1lb3V0KS50aGVuKHRyYW5zcG9ydEZsdXNoZWQgPT4gY2xpZW50RmluaXNoZWQgJiYgdHJhbnNwb3J0Rmx1c2hlZCk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHJlc29sdmVkU3luY1Byb21pc2UodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY2xvc2UodGltZW91dCkge1xuICAgIHJldHVybiB0aGlzLmZsdXNoKHRpbWVvdXQpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgIHRoaXMuZ2V0T3B0aW9ucygpLmVuYWJsZWQgPSBmYWxzZTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogU2V0cyB1cCB0aGUgaW50ZWdyYXRpb25zXG4gICAqL1xuICAgc2V0dXBJbnRlZ3JhdGlvbnMoKSB7XG4gICAgaWYgKHRoaXMuX2lzRW5hYmxlZCgpICYmICF0aGlzLl9pbnRlZ3JhdGlvbnNJbml0aWFsaXplZCkge1xuICAgICAgdGhpcy5faW50ZWdyYXRpb25zID0gc2V0dXBJbnRlZ3JhdGlvbnModGhpcy5fb3B0aW9ucy5pbnRlZ3JhdGlvbnMpO1xuICAgICAgdGhpcy5faW50ZWdyYXRpb25zSW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIGFuIGluc3RhbGxlZCBpbnRlZ3JhdGlvbiBieSBpdHMgYGlkYC5cbiAgICpcbiAgICogQHJldHVybnMgVGhlIGluc3RhbGxlZCBpbnRlZ3JhdGlvbiBvciBgdW5kZWZpbmVkYCBpZiBubyBpbnRlZ3JhdGlvbiB3aXRoIHRoYXQgYGlkYCB3YXMgaW5zdGFsbGVkLlxuICAgKi9cbiAgIGdldEludGVncmF0aW9uQnlJZChpbnRlZ3JhdGlvbklkKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ludGVncmF0aW9uc1tpbnRlZ3JhdGlvbklkXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGdldEludGVncmF0aW9uKGludGVncmF0aW9uKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAodGhpcy5faW50ZWdyYXRpb25zW2ludGVncmF0aW9uLmlkXSApIHx8IG51bGw7XG4gICAgfSBjYXRjaCAoX29PKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci53YXJuKGBDYW5ub3QgcmV0cmlldmUgaW50ZWdyYXRpb24gJHtpbnRlZ3JhdGlvbi5pZH0gZnJvbSB0aGUgY3VycmVudCBDbGllbnRgKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGFkZEludGVncmF0aW9uKGludGVncmF0aW9uKSB7XG4gICAgc2V0dXBJbnRlZ3JhdGlvbihpbnRlZ3JhdGlvbiwgdGhpcy5faW50ZWdyYXRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNlbmRFdmVudChldmVudCwgaGludCA9IHt9KSB7XG4gICAgaWYgKHRoaXMuX2Rzbikge1xuICAgICAgbGV0IGVudiA9IGNyZWF0ZUV2ZW50RW52ZWxvcGUoZXZlbnQsIHRoaXMuX2RzbiwgdGhpcy5fb3B0aW9ucy5fbWV0YWRhdGEsIHRoaXMuX29wdGlvbnMudHVubmVsKTtcblxuICAgICAgZm9yIChjb25zdCBhdHRhY2htZW50IG9mIGhpbnQuYXR0YWNobWVudHMgfHwgW10pIHtcbiAgICAgICAgZW52ID0gYWRkSXRlbVRvRW52ZWxvcGUoXG4gICAgICAgICAgZW52LFxuICAgICAgICAgIGNyZWF0ZUF0dGFjaG1lbnRFbnZlbG9wZUl0ZW0oXG4gICAgICAgICAgICBhdHRhY2htZW50LFxuICAgICAgICAgICAgdGhpcy5fb3B0aW9ucy50cmFuc3BvcnRPcHRpb25zICYmIHRoaXMuX29wdGlvbnMudHJhbnNwb3J0T3B0aW9ucy50ZXh0RW5jb2RlcixcbiAgICAgICAgICApLFxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9zZW5kRW52ZWxvcGUoZW52KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZW5kU2Vzc2lvbihzZXNzaW9uKSB7XG4gICAgaWYgKHRoaXMuX2Rzbikge1xuICAgICAgY29uc3QgZW52ID0gY3JlYXRlU2Vzc2lvbkVudmVsb3BlKHNlc3Npb24sIHRoaXMuX2RzbiwgdGhpcy5fb3B0aW9ucy5fbWV0YWRhdGEsIHRoaXMuX29wdGlvbnMudHVubmVsKTtcbiAgICAgIHRoaXMuX3NlbmRFbnZlbG9wZShlbnYpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHJlY29yZERyb3BwZWRFdmVudChyZWFzb24sIGNhdGVnb3J5LCBfZXZlbnQpIHtcbiAgICAvLyBOb3RlOiB3ZSB1c2UgYGV2ZW50YCBpbiByZXBsYXksIHdoZXJlIHdlIG92ZXJ3cml0ZSB0aGlzIGhvb2suXG5cbiAgICBpZiAodGhpcy5fb3B0aW9ucy5zZW5kQ2xpZW50UmVwb3J0cykge1xuICAgICAgLy8gV2Ugd2FudCB0byB0cmFjayBlYWNoIGNhdGVnb3J5IChlcnJvciwgdHJhbnNhY3Rpb24sIHNlc3Npb24sIHJlcGxheV9ldmVudCkgc2VwYXJhdGVseVxuICAgICAgLy8gYnV0IHN0aWxsIGtlZXAgdGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gZGlmZmVyZW50IHR5cGUgb2Ygb3V0Y29tZXMuXG4gICAgICAvLyBXZSBjb3VsZCB1c2UgbmVzdGVkIG1hcHMsIGJ1dCBpdCdzIG11Y2ggZWFzaWVyIHRvIHJlYWQgYW5kIHR5cGUgdGhpcyB3YXkuXG4gICAgICAvLyBBIGNvcnJlY3QgdHlwZSBmb3IgbWFwLWJhc2VkIGltcGxlbWVudGF0aW9uIGlmIHdlIHdhbnQgdG8gZ28gdGhhdCByb3V0ZVxuICAgICAgLy8gd291bGQgYmUgYFBhcnRpYWw8UmVjb3JkPFNlbnRyeVJlcXVlc3RUeXBlLCBQYXJ0aWFsPFJlY29yZDxPdXRjb21lLCBudW1iZXI+Pj4+YFxuICAgICAgLy8gV2l0aCB0eXBlc2NyaXB0IDQuMSB3ZSBjb3VsZCBldmVuIHVzZSB0ZW1wbGF0ZSBsaXRlcmFsIHR5cGVzXG4gICAgICBjb25zdCBrZXkgPSBgJHtyZWFzb259OiR7Y2F0ZWdvcnl9YDtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZyhgQWRkaW5nIG91dGNvbWU6IFwiJHtrZXl9XCJgKTtcblxuICAgICAgLy8gVGhlIGZvbGxvd2luZyB3b3JrcyBiZWNhdXNlIHVuZGVmaW5lZCArIDEgPT09IE5hTiBhbmQgTmFOIGlzIGZhbHN5XG4gICAgICB0aGlzLl9vdXRjb21lc1trZXldID0gdGhpcy5fb3V0Y29tZXNba2V5XSArIDEgfHwgMTtcbiAgICB9XG4gIH1cblxuICAvLyBLZWVwIG9uKCkgJiBlbWl0KCkgc2lnbmF0dXJlcyBpbiBzeW5jIHdpdGggdHlwZXMnIGNsaWVudC50cyBpbnRlcmZhY2VcblxuICAvKiogQGluaGVyaXRkb2MgKi9cblxuICAvKiogQGluaGVyaXRkb2MgKi9cbiAgIG9uKGhvb2ssIGNhbGxiYWNrKSB7XG4gICAgaWYgKCF0aGlzLl9ob29rc1tob29rXSkge1xuICAgICAgdGhpcy5faG9va3NbaG9va10gPSBbXTtcbiAgICB9XG5cbiAgICAvLyBAdHMtaWdub3JlIFdlIGFzc3VlIHRoZSB0eXBlcyBhcmUgY29ycmVjdFxuICAgIHRoaXMuX2hvb2tzW2hvb2tdLnB1c2goY2FsbGJhY2spO1xuICB9XG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG5cbiAgLyoqIEBpbmhlcml0ZG9jICovXG4gICBlbWl0KGhvb2ssIC4uLnJlc3QpIHtcbiAgICBpZiAodGhpcy5faG9va3NbaG9va10pIHtcbiAgICAgIC8vIEB0cy1pZ25vcmUgd2UgY2Fubm90IGVuZm9yY2UgdGhlIGNhbGxiYWNrIHRvIG1hdGNoIHRoZSBob29rXG4gICAgICB0aGlzLl9ob29rc1tob29rXS5mb3JFYWNoKGNhbGxiYWNrID0+IGNhbGxiYWNrKC4uLnJlc3QpKTtcbiAgICB9XG4gIH1cblxuICAvKiogVXBkYXRlcyBleGlzdGluZyBzZXNzaW9uIGJhc2VkIG9uIHRoZSBwcm92aWRlZCBldmVudCAqL1xuICAgX3VwZGF0ZVNlc3Npb25Gcm9tRXZlbnQoc2Vzc2lvbiwgZXZlbnQpIHtcbiAgICBsZXQgY3Jhc2hlZCA9IGZhbHNlO1xuICAgIGxldCBlcnJvcmVkID0gZmFsc2U7XG4gICAgY29uc3QgZXhjZXB0aW9ucyA9IGV2ZW50LmV4Y2VwdGlvbiAmJiBldmVudC5leGNlcHRpb24udmFsdWVzO1xuXG4gICAgaWYgKGV4Y2VwdGlvbnMpIHtcbiAgICAgIGVycm9yZWQgPSB0cnVlO1xuXG4gICAgICBmb3IgKGNvbnN0IGV4IG9mIGV4Y2VwdGlvbnMpIHtcbiAgICAgICAgY29uc3QgbWVjaGFuaXNtID0gZXgubWVjaGFuaXNtO1xuICAgICAgICBpZiAobWVjaGFuaXNtICYmIG1lY2hhbmlzbS5oYW5kbGVkID09PSBmYWxzZSkge1xuICAgICAgICAgIGNyYXNoZWQgPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQSBzZXNzaW9uIGlzIHVwZGF0ZWQgYW5kIHRoYXQgc2Vzc2lvbiB1cGRhdGUgaXMgc2VudCBpbiBvbmx5IG9uZSBvZiB0aGUgdHdvIGZvbGxvd2luZyBzY2VuYXJpb3M6XG4gICAgLy8gMS4gU2Vzc2lvbiB3aXRoIG5vbiB0ZXJtaW5hbCBzdGF0dXMgYW5kIDAgZXJyb3JzICsgYW4gZXJyb3Igb2NjdXJyZWQgLT4gV2lsbCBzZXQgZXJyb3IgY291bnQgdG8gMSBhbmQgc2VuZCB1cGRhdGVcbiAgICAvLyAyLiBTZXNzaW9uIHdpdGggbm9uIHRlcm1pbmFsIHN0YXR1cyBhbmQgMSBlcnJvciArIGEgY3Jhc2ggb2NjdXJyZWQgLT4gV2lsbCBzZXQgc3RhdHVzIGNyYXNoZWQgYW5kIHNlbmQgdXBkYXRlXG4gICAgY29uc3Qgc2Vzc2lvbk5vblRlcm1pbmFsID0gc2Vzc2lvbi5zdGF0dXMgPT09ICdvayc7XG4gICAgY29uc3Qgc2hvdWxkVXBkYXRlQW5kU2VuZCA9IChzZXNzaW9uTm9uVGVybWluYWwgJiYgc2Vzc2lvbi5lcnJvcnMgPT09IDApIHx8IChzZXNzaW9uTm9uVGVybWluYWwgJiYgY3Jhc2hlZCk7XG5cbiAgICBpZiAoc2hvdWxkVXBkYXRlQW5kU2VuZCkge1xuICAgICAgdXBkYXRlU2Vzc2lvbihzZXNzaW9uLCB7XG4gICAgICAgIC4uLihjcmFzaGVkICYmIHsgc3RhdHVzOiAnY3Jhc2hlZCcgfSksXG4gICAgICAgIGVycm9yczogc2Vzc2lvbi5lcnJvcnMgfHwgTnVtYmVyKGVycm9yZWQgfHwgY3Jhc2hlZCksXG4gICAgICB9KTtcbiAgICAgIHRoaXMuY2FwdHVyZVNlc3Npb24oc2Vzc2lvbik7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIERldGVybWluZSBpZiB0aGUgY2xpZW50IGlzIGZpbmlzaGVkIHByb2Nlc3NpbmcuIFJldHVybnMgYSBwcm9taXNlIGJlY2F1c2UgaXQgd2lsbCB3YWl0IGB0aW1lb3V0YCBtcyBiZWZvcmUgc2F5aW5nXG4gICAqIFwibm9cIiAocmVzb2x2aW5nIHRvIGBmYWxzZWApIGluIG9yZGVyIHRvIGdpdmUgdGhlIGNsaWVudCBhIGNoYW5jZSB0byBwb3RlbnRpYWxseSBmaW5pc2ggZmlyc3QuXG4gICAqXG4gICAqIEBwYXJhbSB0aW1lb3V0IFRoZSB0aW1lLCBpbiBtcywgYWZ0ZXIgd2hpY2ggdG8gcmVzb2x2ZSB0byBgZmFsc2VgIGlmIHRoZSBjbGllbnQgaXMgc3RpbGwgYnVzeS4gUGFzc2luZyBgMGAgKG9yIG5vdFxuICAgKiBwYXNzaW5nIGFueXRoaW5nKSB3aWxsIG1ha2UgdGhlIHByb21pc2Ugd2FpdCBhcyBsb25nIGFzIGl0IHRha2VzIGZvciBwcm9jZXNzaW5nIHRvIGZpbmlzaCBiZWZvcmUgcmVzb2x2aW5nIHRvXG4gICAqIGB0cnVlYC5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHdoaWNoIHdpbGwgcmVzb2x2ZSB0byBgdHJ1ZWAgaWYgcHJvY2Vzc2luZyBpcyBhbHJlYWR5IGRvbmUgb3IgZmluaXNoZXMgYmVmb3JlIHRoZSB0aW1lb3V0LCBhbmRcbiAgICogYGZhbHNlYCBvdGhlcndpc2VcbiAgICovXG4gICBfaXNDbGllbnREb25lUHJvY2Vzc2luZyh0aW1lb3V0KSB7XG4gICAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGxldCB0aWNrZWQgPSAwO1xuICAgICAgY29uc3QgdGljayA9IDE7XG5cbiAgICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBpZiAodGhpcy5fbnVtUHJvY2Vzc2luZyA9PSAwKSB7XG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aWNrZWQgKz0gdGljaztcbiAgICAgICAgICBpZiAodGltZW91dCAmJiB0aWNrZWQgPj0gdGltZW91dCkge1xuICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgICAgICByZXNvbHZlKGZhbHNlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sIHRpY2spO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqIERldGVybWluZXMgd2hldGhlciB0aGlzIFNESyBpcyBlbmFibGVkIGFuZCBhIHZhbGlkIERzbiBpcyBwcmVzZW50LiAqL1xuICAgX2lzRW5hYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRPcHRpb25zKCkuZW5hYmxlZCAhPT0gZmFsc2UgJiYgdGhpcy5fZHNuICE9PSB1bmRlZmluZWQ7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBjb21tb24gaW5mb3JtYXRpb24gdG8gZXZlbnRzLlxuICAgKlxuICAgKiBUaGUgaW5mb3JtYXRpb24gaW5jbHVkZXMgcmVsZWFzZSBhbmQgZW52aXJvbm1lbnQgZnJvbSBgb3B0aW9uc2AsXG4gICAqIGJyZWFkY3J1bWJzIGFuZCBjb250ZXh0IChleHRyYSwgdGFncyBhbmQgdXNlcikgZnJvbSB0aGUgc2NvcGUuXG4gICAqXG4gICAqIEluZm9ybWF0aW9uIHRoYXQgaXMgYWxyZWFkeSBwcmVzZW50IGluIHRoZSBldmVudCBpcyBuZXZlciBvdmVyd3JpdHRlbi4gRm9yXG4gICAqIG5lc3RlZCBvYmplY3RzLCBzdWNoIGFzIHRoZSBjb250ZXh0LCBrZXlzIGFyZSBtZXJnZWQuXG4gICAqXG4gICAqIEBwYXJhbSBldmVudCBUaGUgb3JpZ2luYWwgZXZlbnQuXG4gICAqIEBwYXJhbSBoaW50IE1heSBjb250YWluIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIG9yaWdpbmFsIGV4Y2VwdGlvbi5cbiAgICogQHBhcmFtIHNjb3BlIEEgc2NvcGUgY29udGFpbmluZyBldmVudCBtZXRhZGF0YS5cbiAgICogQHJldHVybnMgQSBuZXcgZXZlbnQgd2l0aCBtb3JlIGluZm9ybWF0aW9uLlxuICAgKi9cbiAgIF9wcmVwYXJlRXZlbnQoZXZlbnQsIGhpbnQsIHNjb3BlKSB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHRoaXMuZ2V0T3B0aW9ucygpO1xuICAgIGNvbnN0IGludGVncmF0aW9ucyA9IE9iamVjdC5rZXlzKHRoaXMuX2ludGVncmF0aW9ucyk7XG4gICAgaWYgKCFoaW50LmludGVncmF0aW9ucyAmJiBpbnRlZ3JhdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgaGludC5pbnRlZ3JhdGlvbnMgPSBpbnRlZ3JhdGlvbnM7XG4gICAgfVxuICAgIHJldHVybiBwcmVwYXJlRXZlbnQob3B0aW9ucywgZXZlbnQsIGhpbnQsIHNjb3BlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBQcm9jZXNzZXMgdGhlIGV2ZW50IGFuZCBsb2dzIGFuIGVycm9yIGluIGNhc2Ugb2YgcmVqZWN0aW9uXG4gICAqIEBwYXJhbSBldmVudFxuICAgKiBAcGFyYW0gaGludFxuICAgKiBAcGFyYW0gc2NvcGVcbiAgICovXG4gICBfY2FwdHVyZUV2ZW50KGV2ZW50LCBoaW50ID0ge30sIHNjb3BlKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Byb2Nlc3NFdmVudChldmVudCwgaGludCwgc2NvcGUpLnRoZW4oXG4gICAgICBmaW5hbEV2ZW50ID0+IHtcbiAgICAgICAgcmV0dXJuIGZpbmFsRXZlbnQuZXZlbnRfaWQ7XG4gICAgICB9LFxuICAgICAgcmVhc29uID0+IHtcbiAgICAgICAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICAgICAgICAvLyBJZiBzb21ldGhpbmcncyBnb25lIHdyb25nLCBsb2cgdGhlIGVycm9yIGFzIGEgd2FybmluZy4gSWYgaXQncyBqdXN0IHVzIGhhdmluZyB1c2VkIGEgYFNlbnRyeUVycm9yYCBmb3JcbiAgICAgICAgICAvLyBjb250cm9sIGZsb3csIGxvZyBqdXN0IHRoZSBtZXNzYWdlIChubyBzdGFjaykgYXMgYSBsb2ctbGV2ZWwgbG9nLlxuICAgICAgICAgIGNvbnN0IHNlbnRyeUVycm9yID0gcmVhc29uIDtcbiAgICAgICAgICBpZiAoc2VudHJ5RXJyb3IubG9nTGV2ZWwgPT09ICdsb2cnKSB7XG4gICAgICAgICAgICBsb2dnZXIubG9nKHNlbnRyeUVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsb2dnZXIud2FybihzZW50cnlFcnJvcik7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogUHJvY2Vzc2VzIGFuIGV2ZW50IChlaXRoZXIgZXJyb3Igb3IgbWVzc2FnZSkgYW5kIHNlbmRzIGl0IHRvIFNlbnRyeS5cbiAgICpcbiAgICogVGhpcyBhbHNvIGFkZHMgYnJlYWRjcnVtYnMgYW5kIGNvbnRleHQgaW5mb3JtYXRpb24gdG8gdGhlIGV2ZW50LiBIb3dldmVyLFxuICAgKiBwbGF0Zm9ybSBzcGVjaWZpYyBtZXRhIGRhdGEgKHN1Y2ggYXMgdGhlIFVzZXIncyBJUCBhZGRyZXNzKSBtdXN0IGJlIGFkZGVkXG4gICAqIGJ5IHRoZSBTREsgaW1wbGVtZW50b3IuXG4gICAqXG4gICAqXG4gICAqIEBwYXJhbSBldmVudCBUaGUgZXZlbnQgdG8gc2VuZCB0byBTZW50cnkuXG4gICAqIEBwYXJhbSBoaW50IE1heSBjb250YWluIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgdGhlIG9yaWdpbmFsIGV4Y2VwdGlvbi5cbiAgICogQHBhcmFtIHNjb3BlIEEgc2NvcGUgY29udGFpbmluZyBldmVudCBtZXRhZGF0YS5cbiAgICogQHJldHVybnMgQSBTeW5jUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIGV2ZW50IG9yIHJlamVjdHMgaW4gY2FzZSBldmVudCB3YXMvd2lsbCBub3QgYmUgc2VuZC5cbiAgICovXG4gICBfcHJvY2Vzc0V2ZW50KGV2ZW50LCBoaW50LCBzY29wZSkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLmdldE9wdGlvbnMoKTtcbiAgICBjb25zdCB7IHNhbXBsZVJhdGUgfSA9IG9wdGlvbnM7XG5cbiAgICBpZiAoIXRoaXMuX2lzRW5hYmxlZCgpKSB7XG4gICAgICByZXR1cm4gcmVqZWN0ZWRTeW5jUHJvbWlzZShuZXcgU2VudHJ5RXJyb3IoJ1NESyBub3QgZW5hYmxlZCwgd2lsbCBub3QgY2FwdHVyZSBldmVudC4nLCAnbG9nJykpO1xuICAgIH1cblxuICAgIGNvbnN0IGlzVHJhbnNhY3Rpb24gPSBpc1RyYW5zYWN0aW9uRXZlbnQoZXZlbnQpO1xuICAgIGNvbnN0IGlzRXJyb3IgPSBpc0Vycm9yRXZlbnQoZXZlbnQpO1xuICAgIGNvbnN0IGV2ZW50VHlwZSA9IGV2ZW50LnR5cGUgfHwgJ2Vycm9yJztcbiAgICBjb25zdCBiZWZvcmVTZW5kTGFiZWwgPSBgYmVmb3JlIHNlbmQgZm9yIHR5cGUgXFxgJHtldmVudFR5cGV9XFxgYDtcblxuICAgIC8vIDEuMCA9PT0gMTAwJSBldmVudHMgYXJlIHNlbnRcbiAgICAvLyAwLjAgPT09IDAlIGV2ZW50cyBhcmUgc2VudFxuICAgIC8vIFNhbXBsaW5nIGZvciB0cmFuc2FjdGlvbiBoYXBwZW5zIHNvbWV3aGVyZSBlbHNlXG4gICAgaWYgKGlzRXJyb3IgJiYgdHlwZW9mIHNhbXBsZVJhdGUgPT09ICdudW1iZXInICYmIE1hdGgucmFuZG9tKCkgPiBzYW1wbGVSYXRlKSB7XG4gICAgICB0aGlzLnJlY29yZERyb3BwZWRFdmVudCgnc2FtcGxlX3JhdGUnLCAnZXJyb3InLCBldmVudCk7XG4gICAgICByZXR1cm4gcmVqZWN0ZWRTeW5jUHJvbWlzZShcbiAgICAgICAgbmV3IFNlbnRyeUVycm9yKFxuICAgICAgICAgIGBEaXNjYXJkaW5nIGV2ZW50IGJlY2F1c2UgaXQncyBub3QgaW5jbHVkZWQgaW4gdGhlIHJhbmRvbSBzYW1wbGUgKHNhbXBsaW5nIHJhdGUgPSAke3NhbXBsZVJhdGV9KWAsXG4gICAgICAgICAgJ2xvZycsXG4gICAgICAgICksXG4gICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IGRhdGFDYXRlZ29yeSA9IGV2ZW50VHlwZSA9PT0gJ3JlcGxheV9ldmVudCcgPyAncmVwbGF5JyA6IGV2ZW50VHlwZTtcblxuICAgIHJldHVybiB0aGlzLl9wcmVwYXJlRXZlbnQoZXZlbnQsIGhpbnQsIHNjb3BlKVxuICAgICAgLnRoZW4ocHJlcGFyZWQgPT4ge1xuICAgICAgICBpZiAocHJlcGFyZWQgPT09IG51bGwpIHtcbiAgICAgICAgICB0aGlzLnJlY29yZERyb3BwZWRFdmVudCgnZXZlbnRfcHJvY2Vzc29yJywgZGF0YUNhdGVnb3J5LCBldmVudCk7XG4gICAgICAgICAgdGhyb3cgbmV3IFNlbnRyeUVycm9yKCdBbiBldmVudCBwcm9jZXNzb3IgcmV0dXJuZWQgYG51bGxgLCB3aWxsIG5vdCBzZW5kIGV2ZW50LicsICdsb2cnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGlzSW50ZXJuYWxFeGNlcHRpb24gPSBoaW50LmRhdGEgJiYgKGhpbnQuZGF0YSApLl9fc2VudHJ5X18gPT09IHRydWU7XG4gICAgICAgIGlmIChpc0ludGVybmFsRXhjZXB0aW9uKSB7XG4gICAgICAgICAgcmV0dXJuIHByZXBhcmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgcmVzdWx0ID0gcHJvY2Vzc0JlZm9yZVNlbmQob3B0aW9ucywgcHJlcGFyZWQsIGhpbnQpO1xuICAgICAgICByZXR1cm4gX3ZhbGlkYXRlQmVmb3JlU2VuZFJlc3VsdChyZXN1bHQsIGJlZm9yZVNlbmRMYWJlbCk7XG4gICAgICB9KVxuICAgICAgLnRoZW4ocHJvY2Vzc2VkRXZlbnQgPT4ge1xuICAgICAgICBpZiAocHJvY2Vzc2VkRXZlbnQgPT09IG51bGwpIHtcbiAgICAgICAgICB0aGlzLnJlY29yZERyb3BwZWRFdmVudCgnYmVmb3JlX3NlbmQnLCBkYXRhQ2F0ZWdvcnksIGV2ZW50KTtcbiAgICAgICAgICB0aHJvdyBuZXcgU2VudHJ5RXJyb3IoYCR7YmVmb3JlU2VuZExhYmVsfSByZXR1cm5lZCBcXGBudWxsXFxgLCB3aWxsIG5vdCBzZW5kIGV2ZW50LmAsICdsb2cnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNlc3Npb24gPSBzY29wZSAmJiBzY29wZS5nZXRTZXNzaW9uKCk7XG4gICAgICAgIGlmICghaXNUcmFuc2FjdGlvbiAmJiBzZXNzaW9uKSB7XG4gICAgICAgICAgdGhpcy5fdXBkYXRlU2Vzc2lvbkZyb21FdmVudChzZXNzaW9uLCBwcm9jZXNzZWRFdmVudCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBOb25lIG9mIHRoZSBTZW50cnkgYnVpbHQgZXZlbnQgcHJvY2Vzc29yIHdpbGwgdXBkYXRlIHRyYW5zYWN0aW9uIG5hbWUsXG4gICAgICAgIC8vIHNvIGlmIHRoZSB0cmFuc2FjdGlvbiBuYW1lIGhhcyBiZWVuIGNoYW5nZWQgYnkgYW4gZXZlbnQgcHJvY2Vzc29yLCB3ZSBrbm93XG4gICAgICAgIC8vIGl0IGhhcyB0byBjb21lIGZyb20gY3VzdG9tIGV2ZW50IHByb2Nlc3NvciBhZGRlZCBieSBhIHVzZXJcbiAgICAgICAgY29uc3QgdHJhbnNhY3Rpb25JbmZvID0gcHJvY2Vzc2VkRXZlbnQudHJhbnNhY3Rpb25faW5mbztcbiAgICAgICAgaWYgKGlzVHJhbnNhY3Rpb24gJiYgdHJhbnNhY3Rpb25JbmZvICYmIHByb2Nlc3NlZEV2ZW50LnRyYW5zYWN0aW9uICE9PSBldmVudC50cmFuc2FjdGlvbikge1xuICAgICAgICAgIGNvbnN0IHNvdXJjZSA9ICdjdXN0b20nO1xuICAgICAgICAgIHByb2Nlc3NlZEV2ZW50LnRyYW5zYWN0aW9uX2luZm8gPSB7XG4gICAgICAgICAgICAuLi50cmFuc2FjdGlvbkluZm8sXG4gICAgICAgICAgICBzb3VyY2UsXG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc2VuZEV2ZW50KHByb2Nlc3NlZEV2ZW50LCBoaW50KTtcbiAgICAgICAgcmV0dXJuIHByb2Nlc3NlZEV2ZW50O1xuICAgICAgfSlcbiAgICAgIC50aGVuKG51bGwsIHJlYXNvbiA9PiB7XG4gICAgICAgIGlmIChyZWFzb24gaW5zdGFuY2VvZiBTZW50cnlFcnJvcikge1xuICAgICAgICAgIHRocm93IHJlYXNvbjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuY2FwdHVyZUV4Y2VwdGlvbihyZWFzb24sIHtcbiAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICBfX3NlbnRyeV9fOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgb3JpZ2luYWxFeGNlcHRpb246IHJlYXNvbixcbiAgICAgICAgfSk7XG4gICAgICAgIHRocm93IG5ldyBTZW50cnlFcnJvcihcbiAgICAgICAgICBgRXZlbnQgcHJvY2Vzc2luZyBwaXBlbGluZSB0aHJldyBhbiBlcnJvciwgb3JpZ2luYWwgZXZlbnQgd2lsbCBub3QgYmUgc2VudC4gRGV0YWlscyBoYXZlIGJlZW4gc2VudCBhcyBhIG5ldyBldmVudC5cXG5SZWFzb246ICR7cmVhc29ufWAsXG4gICAgICAgICk7XG4gICAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBPY2N1cGllcyB0aGUgY2xpZW50IHdpdGggcHJvY2Vzc2luZyBhbmQgZXZlbnRcbiAgICovXG4gICBfcHJvY2Vzcyhwcm9taXNlKSB7XG4gICAgdGhpcy5fbnVtUHJvY2Vzc2luZysrO1xuICAgIHZvaWQgcHJvbWlzZS50aGVuKFxuICAgICAgdmFsdWUgPT4ge1xuICAgICAgICB0aGlzLl9udW1Qcm9jZXNzaW5nLS07XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgIH0sXG4gICAgICByZWFzb24gPT4ge1xuICAgICAgICB0aGlzLl9udW1Qcm9jZXNzaW5nLS07XG4gICAgICAgIHJldHVybiByZWFzb247XG4gICAgICB9LFxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXRkb2NcbiAgICovXG4gICBfc2VuZEVudmVsb3BlKGVudmVsb3BlKSB7XG4gICAgaWYgKHRoaXMuX3RyYW5zcG9ydCAmJiB0aGlzLl9kc24pIHtcbiAgICAgIHRoaXMuX3RyYW5zcG9ydC5zZW5kKGVudmVsb3BlKS50aGVuKG51bGwsIHJlYXNvbiA9PiB7XG4gICAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmVycm9yKCdFcnJvciB3aGlsZSBzZW5kaW5nIGV2ZW50OicsIHJlYXNvbik7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIuZXJyb3IoJ1RyYW5zcG9ydCBkaXNhYmxlZCcpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDbGVhcnMgb3V0Y29tZXMgb24gdGhpcyBjbGllbnQgYW5kIHJldHVybnMgdGhlbS5cbiAgICovXG4gICBfY2xlYXJPdXRjb21lcygpIHtcbiAgICBjb25zdCBvdXRjb21lcyA9IHRoaXMuX291dGNvbWVzO1xuICAgIHRoaXMuX291dGNvbWVzID0ge307XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKG91dGNvbWVzKS5tYXAoa2V5ID0+IHtcbiAgICAgIGNvbnN0IFtyZWFzb24sIGNhdGVnb3J5XSA9IGtleS5zcGxpdCgnOicpIDtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlYXNvbixcbiAgICAgICAgY2F0ZWdvcnksXG4gICAgICAgIHF1YW50aXR5OiBvdXRjb21lc1trZXldLFxuICAgICAgfTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcblxufVxuXG4vKipcbiAqIFZlcmlmaWVzIHRoYXQgcmV0dXJuIHZhbHVlIG9mIGNvbmZpZ3VyZWQgYGJlZm9yZVNlbmRgIG9yIGBiZWZvcmVTZW5kVHJhbnNhY3Rpb25gIGlzIG9mIGV4cGVjdGVkIHR5cGUsIGFuZCByZXR1cm5zIHRoZSB2YWx1ZSBpZiBzby5cbiAqL1xuZnVuY3Rpb24gX3ZhbGlkYXRlQmVmb3JlU2VuZFJlc3VsdChcbiAgYmVmb3JlU2VuZFJlc3VsdCxcbiAgYmVmb3JlU2VuZExhYmVsLFxuKSB7XG4gIGNvbnN0IGludmFsaWRWYWx1ZUVycm9yID0gYCR7YmVmb3JlU2VuZExhYmVsfSBtdXN0IHJldHVybiBcXGBudWxsXFxgIG9yIGEgdmFsaWQgZXZlbnQuYDtcbiAgaWYgKGlzVGhlbmFibGUoYmVmb3JlU2VuZFJlc3VsdCkpIHtcbiAgICByZXR1cm4gYmVmb3JlU2VuZFJlc3VsdC50aGVuKFxuICAgICAgZXZlbnQgPT4ge1xuICAgICAgICBpZiAoIWlzUGxhaW5PYmplY3QoZXZlbnQpICYmIGV2ZW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFNlbnRyeUVycm9yKGludmFsaWRWYWx1ZUVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICB9LFxuICAgICAgZSA9PiB7XG4gICAgICAgIHRocm93IG5ldyBTZW50cnlFcnJvcihgJHtiZWZvcmVTZW5kTGFiZWx9IHJlamVjdGVkIHdpdGggJHtlfWApO1xuICAgICAgfSxcbiAgICApO1xuICB9IGVsc2UgaWYgKCFpc1BsYWluT2JqZWN0KGJlZm9yZVNlbmRSZXN1bHQpICYmIGJlZm9yZVNlbmRSZXN1bHQgIT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgU2VudHJ5RXJyb3IoaW52YWxpZFZhbHVlRXJyb3IpO1xuICB9XG4gIHJldHVybiBiZWZvcmVTZW5kUmVzdWx0O1xufVxuXG4vKipcbiAqIFByb2Nlc3MgdGhlIG1hdGNoaW5nIGBiZWZvcmVTZW5kWFhYYCBjYWxsYmFjay5cbiAqL1xuZnVuY3Rpb24gcHJvY2Vzc0JlZm9yZVNlbmQoXG4gIG9wdGlvbnMsXG4gIGV2ZW50LFxuICBoaW50LFxuKSB7XG4gIGNvbnN0IHsgYmVmb3JlU2VuZCwgYmVmb3JlU2VuZFRyYW5zYWN0aW9uIH0gPSBvcHRpb25zO1xuXG4gIGlmIChpc0Vycm9yRXZlbnQoZXZlbnQpICYmIGJlZm9yZVNlbmQpIHtcbiAgICByZXR1cm4gYmVmb3JlU2VuZChldmVudCwgaGludCk7XG4gIH1cblxuICBpZiAoaXNUcmFuc2FjdGlvbkV2ZW50KGV2ZW50KSAmJiBiZWZvcmVTZW5kVHJhbnNhY3Rpb24pIHtcbiAgICByZXR1cm4gYmVmb3JlU2VuZFRyYW5zYWN0aW9uKGV2ZW50LCBoaW50KTtcbiAgfVxuXG4gIHJldHVybiBldmVudDtcbn1cblxuZnVuY3Rpb24gaXNFcnJvckV2ZW50KGV2ZW50KSB7XG4gIHJldHVybiBldmVudC50eXBlID09PSB1bmRlZmluZWQ7XG59XG5cbmZ1bmN0aW9uIGlzVHJhbnNhY3Rpb25FdmVudChldmVudCkge1xuICByZXR1cm4gZXZlbnQudHlwZSA9PT0gJ3RyYW5zYWN0aW9uJztcbn1cblxuZXhwb3J0IHsgQmFzZUNsaWVudCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZWNsaWVudC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/baseclient.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/core/esm/constants.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_ENVIRONMENT\": function() { return /* binding */ DEFAULT_ENVIRONMENT; }\n/* harmony export */ });\nconst DEFAULT_ENVIRONMENT = 'production';\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9jb25zdGFudHMuanM/MmU3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBERUZBVUxUX0VOVklST05NRU5UID0gJ3Byb2R1Y3Rpb24nO1xuXG5leHBvcnQgeyBERUZBVUxUX0VOVklST05NRU5UIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb25zdGFudHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/constants.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/envelope.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/core/esm/envelope.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEventEnvelope\": function() { return /* binding */ createEventEnvelope; },\n/* harmony export */   \"createSessionEnvelope\": function() { return /* binding */ createSessionEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Apply SdkInfo (name, version, packages, integrations) to the corresponding event key.\n * Merge with existing data if any.\n **/\nfunction enhanceEventWithSdkInfo(event, sdkInfo) {\n  if (!sdkInfo) {\n    return event;\n  }\n  event.sdk = event.sdk || {};\n  event.sdk.name = event.sdk.name || sdkInfo.name;\n  event.sdk.version = event.sdk.version || sdkInfo.version;\n  event.sdk.integrations = [...(event.sdk.integrations || []), ...(sdkInfo.integrations || [])];\n  event.sdk.packages = [...(event.sdk.packages || []), ...(sdkInfo.packages || [])];\n  return event;\n}\n\n/** Creates an envelope from a Session */\nfunction createSessionEnvelope(\n  session,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n  const envelopeHeaders = {\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn) }),\n  };\n\n  const envelopeItem =\n    'aggregates' in session ? [{ type: 'sessions' }, session] : [{ type: 'session' }, session];\n\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [envelopeItem]);\n}\n\n/**\n * Create an Envelope from an event.\n */\nfunction createEventEnvelope(\n  event,\n  dsn,\n  metadata,\n  tunnel,\n) {\n  const sdkInfo = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(metadata);\n\n  /*\n    Note: Due to TS, event.type may be `replay_event`, theoretically.\n    In practice, we never call `createEventEnvelope` with `replay_event` type,\n    and we'd have to adjut a looot of types to make this work properly.\n    We want to avoid casting this around, as that could lead to bugs (e.g. when we add another type)\n    So the safe choice is to really guard against the replay_event type here.\n  */\n  const eventType = event.type && event.type !== 'replay_event' ? event.type : 'event';\n\n  enhanceEventWithSdkInfo(event, metadata && metadata.sdk);\n\n  const envelopeHeaders = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(event, sdkInfo, tunnel, dsn);\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete event.sdkProcessingMetadata;\n\n  const eventItem = [{ type: eventType }, event];\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelopeHeaders, [eventItem]);\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9lbnZlbG9wZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUg7O0FBRXpIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4RUFBK0I7QUFDakQ7QUFDQTtBQUNBLHFCQUFxQixjQUFjO0FBQ25DLHNCQUFzQixLQUFLLDBEQUFXLE9BQU87QUFDN0M7O0FBRUE7QUFDQSxpQ0FBaUMsa0JBQWtCLGdCQUFnQixpQkFBaUI7O0FBRXBGLFNBQVMsNkRBQWM7QUFDdkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhFQUErQjs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSwwQkFBMEIseUVBQTBCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixpQkFBaUI7QUFDeEMsU0FBUyw2REFBYztBQUN2Qjs7QUFFc0Q7QUFDdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vZW52ZWxvcGUuanM/YTQzMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRTZGtNZXRhZGF0YUZvckVudmVsb3BlSGVhZGVyLCBkc25Ub1N0cmluZywgY3JlYXRlRW52ZWxvcGUsIGNyZWF0ZUV2ZW50RW52ZWxvcGVIZWFkZXJzIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQXBwbHkgU2RrSW5mbyAobmFtZSwgdmVyc2lvbiwgcGFja2FnZXMsIGludGVncmF0aW9ucykgdG8gdGhlIGNvcnJlc3BvbmRpbmcgZXZlbnQga2V5LlxuICogTWVyZ2Ugd2l0aCBleGlzdGluZyBkYXRhIGlmIGFueS5cbiAqKi9cbmZ1bmN0aW9uIGVuaGFuY2VFdmVudFdpdGhTZGtJbmZvKGV2ZW50LCBzZGtJbmZvKSB7XG4gIGlmICghc2RrSW5mbykge1xuICAgIHJldHVybiBldmVudDtcbiAgfVxuICBldmVudC5zZGsgPSBldmVudC5zZGsgfHwge307XG4gIGV2ZW50LnNkay5uYW1lID0gZXZlbnQuc2RrLm5hbWUgfHwgc2RrSW5mby5uYW1lO1xuICBldmVudC5zZGsudmVyc2lvbiA9IGV2ZW50LnNkay52ZXJzaW9uIHx8IHNka0luZm8udmVyc2lvbjtcbiAgZXZlbnQuc2RrLmludGVncmF0aW9ucyA9IFsuLi4oZXZlbnQuc2RrLmludGVncmF0aW9ucyB8fCBbXSksIC4uLihzZGtJbmZvLmludGVncmF0aW9ucyB8fCBbXSldO1xuICBldmVudC5zZGsucGFja2FnZXMgPSBbLi4uKGV2ZW50LnNkay5wYWNrYWdlcyB8fCBbXSksIC4uLihzZGtJbmZvLnBhY2thZ2VzIHx8IFtdKV07XG4gIHJldHVybiBldmVudDtcbn1cblxuLyoqIENyZWF0ZXMgYW4gZW52ZWxvcGUgZnJvbSBhIFNlc3Npb24gKi9cbmZ1bmN0aW9uIGNyZWF0ZVNlc3Npb25FbnZlbG9wZShcbiAgc2Vzc2lvbixcbiAgZHNuLFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuKSB7XG4gIGNvbnN0IHNka0luZm8gPSBnZXRTZGtNZXRhZGF0YUZvckVudmVsb3BlSGVhZGVyKG1ldGFkYXRhKTtcbiAgY29uc3QgZW52ZWxvcGVIZWFkZXJzID0ge1xuICAgIHNlbnRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAuLi4oc2RrSW5mbyAmJiB7IHNkazogc2RrSW5mbyB9KSxcbiAgICAuLi4oISF0dW5uZWwgJiYgeyBkc246IGRzblRvU3RyaW5nKGRzbikgfSksXG4gIH07XG5cbiAgY29uc3QgZW52ZWxvcGVJdGVtID1cbiAgICAnYWdncmVnYXRlcycgaW4gc2Vzc2lvbiA/IFt7IHR5cGU6ICdzZXNzaW9ucycgfSwgc2Vzc2lvbl0gOiBbeyB0eXBlOiAnc2Vzc2lvbicgfSwgc2Vzc2lvbl07XG5cbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGVudmVsb3BlSGVhZGVycywgW2VudmVsb3BlSXRlbV0pO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBFbnZlbG9wZSBmcm9tIGFuIGV2ZW50LlxuICovXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVudmVsb3BlKFxuICBldmVudCxcbiAgZHNuLFxuICBtZXRhZGF0YSxcbiAgdHVubmVsLFxuKSB7XG4gIGNvbnN0IHNka0luZm8gPSBnZXRTZGtNZXRhZGF0YUZvckVudmVsb3BlSGVhZGVyKG1ldGFkYXRhKTtcblxuICAvKlxuICAgIE5vdGU6IER1ZSB0byBUUywgZXZlbnQudHlwZSBtYXkgYmUgYHJlcGxheV9ldmVudGAsIHRoZW9yZXRpY2FsbHkuXG4gICAgSW4gcHJhY3RpY2UsIHdlIG5ldmVyIGNhbGwgYGNyZWF0ZUV2ZW50RW52ZWxvcGVgIHdpdGggYHJlcGxheV9ldmVudGAgdHlwZSxcbiAgICBhbmQgd2UnZCBoYXZlIHRvIGFkanV0IGEgbG9vb3Qgb2YgdHlwZXMgdG8gbWFrZSB0aGlzIHdvcmsgcHJvcGVybHkuXG4gICAgV2Ugd2FudCB0byBhdm9pZCBjYXN0aW5nIHRoaXMgYXJvdW5kLCBhcyB0aGF0IGNvdWxkIGxlYWQgdG8gYnVncyAoZS5nLiB3aGVuIHdlIGFkZCBhbm90aGVyIHR5cGUpXG4gICAgU28gdGhlIHNhZmUgY2hvaWNlIGlzIHRvIHJlYWxseSBndWFyZCBhZ2FpbnN0IHRoZSByZXBsYXlfZXZlbnQgdHlwZSBoZXJlLlxuICAqL1xuICBjb25zdCBldmVudFR5cGUgPSBldmVudC50eXBlICYmIGV2ZW50LnR5cGUgIT09ICdyZXBsYXlfZXZlbnQnID8gZXZlbnQudHlwZSA6ICdldmVudCc7XG5cbiAgZW5oYW5jZUV2ZW50V2l0aFNka0luZm8oZXZlbnQsIG1ldGFkYXRhICYmIG1ldGFkYXRhLnNkayk7XG5cbiAgY29uc3QgZW52ZWxvcGVIZWFkZXJzID0gY3JlYXRlRXZlbnRFbnZlbG9wZUhlYWRlcnMoZXZlbnQsIHNka0luZm8sIHR1bm5lbCwgZHNuKTtcblxuICAvLyBQcmV2ZW50IHRoaXMgZGF0YSAod2hpY2gsIGlmIGl0IGV4aXN0cywgd2FzIHVzZWQgaW4gZWFybGllciBzdGVwcyBpbiB0aGUgcHJvY2Vzc2luZyBwaXBlbGluZSkgZnJvbSBiZWluZyBzZW50IHRvXG4gIC8vIHNlbnRyeS4gKE5vdGU6IE91ciB1c2Ugb2YgdGhpcyBwcm9wZXJ0eSBjb21lcyBhbmQgZ29lcyB3aXRoIHdoYXRldmVyIHdlIG1pZ2h0IGJlIGRlYnVnZ2luZywgd2hhdGV2ZXIgaGFja3Mgd2UgbWF5XG4gIC8vIGhhdmUgdGVtcG9yYXJpbHkgYWRkZWQsIGV0Yy4gRXZlbiBpZiB3ZSBkb24ndCBoYXBwZW4gdG8gYmUgdXNpbmcgaXQgYXQgc29tZSBwb2ludCBpbiB0aGUgZnV0dXJlLCBsZXQncyBub3QgZ2V0IHJpZFxuICAvLyBvZiB0aGlzIGBkZWxldGVgLCBsZXN0IHdlIG1pc3MgcHV0dGluZyBpdCBiYWNrIGluIHRoZSBuZXh0IHRpbWUgdGhlIHByb3BlcnR5IGlzIGluIHVzZS4pXG4gIGRlbGV0ZSBldmVudC5zZGtQcm9jZXNzaW5nTWV0YWRhdGE7XG5cbiAgY29uc3QgZXZlbnRJdGVtID0gW3sgdHlwZTogZXZlbnRUeXBlIH0sIGV2ZW50XTtcbiAgcmV0dXJuIGNyZWF0ZUVudmVsb3BlKGVudmVsb3BlSGVhZGVycywgW2V2ZW50SXRlbV0pO1xufVxuXG5leHBvcnQgeyBjcmVhdGVFdmVudEVudmVsb3BlLCBjcmVhdGVTZXNzaW9uRW52ZWxvcGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudmVsb3BlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/envelope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/exports.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/exports.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addBreadcrumb\": function() { return /* binding */ addBreadcrumb; },\n/* harmony export */   \"captureEvent\": function() { return /* binding */ captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* binding */ captureException; },\n/* harmony export */   \"captureMessage\": function() { return /* binding */ captureMessage; },\n/* harmony export */   \"configureScope\": function() { return /* binding */ configureScope; },\n/* harmony export */   \"setContext\": function() { return /* binding */ setContext; },\n/* harmony export */   \"setExtra\": function() { return /* binding */ setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* binding */ setExtras; },\n/* harmony export */   \"setTag\": function() { return /* binding */ setTag; },\n/* harmony export */   \"setTags\": function() { return /* binding */ setTags; },\n/* harmony export */   \"setUser\": function() { return /* binding */ setUser; },\n/* harmony export */   \"startTransaction\": function() { return /* binding */ startTransaction; },\n/* harmony export */   \"withScope\": function() { return /* binding */ withScope; }\n/* harmony export */ });\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n// Note: All functions in this file are typed with a return value of `ReturnType<Hub[HUB_FUNCTION]>`,\n// where HUB_FUNCTION is some method on the Hub class.\n//\n// This is done to make sure the top level SDK methods stay in sync with the hub methods.\n// Although every method here has an explicit return type, some of them (that map to void returns) do not\n// contain `return` keywords. This is done to save on bundle size, as `return` is not minifiable.\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @param captureContext Additional scope data to apply to exception event.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction captureException(exception, captureContext) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureException(exception, { captureContext });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param Severity Define the level of the message.\n * @returns The generated eventId.\n */\nfunction captureMessage(\n  message,\n  // eslint-disable-next-line deprecation/deprecation\n  captureContext,\n) {\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureMessage(message, level, context);\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nfunction captureEvent(event, hint) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().captureEvent(event, hint);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nfunction configureScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().configureScope(callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nfunction addBreadcrumb(breadcrumb) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().addBreadcrumb(breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setContext(name, context) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setContext(name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nfunction setExtras(extras) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtras(extras);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nfunction setExtra(key, extra) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setExtra(key, extra);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nfunction setTags(tags) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTags(tags);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nfunction setTag(key, value) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setTag(key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nfunction setUser(user) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().setUser(user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nfunction withScope(callback) {\n  (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().withScope(callback);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * NOTE: This function should only be used for *manual* instrumentation. Auto-instrumentation should call\n * `startTransaction` directly on the hub.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nfunction startTransaction(\n  context,\n  customSamplingContext,\n) {\n  return (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().startTransaction({ ...context }, customSamplingContext);\n}\n\n\n//# sourceMappingURL=exports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9leHBvcnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXlDOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBYSxpQ0FBaUMsZ0JBQWdCO0FBQ3ZFOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxpQkFBaUI7QUFDMUUsU0FBUyxzREFBYTtBQUN0Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsc0RBQWE7QUFDdEI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0RBQWE7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHNEQUFhO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHNEQUFhO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0RBQWE7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHNEQUFhO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsc0RBQWE7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHNEQUFhO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSxzREFBYTtBQUNmOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLHNEQUFhO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsNEJBQTRCO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBYSxzQkFBc0IsWUFBWTtBQUN4RDs7QUFFaUw7QUFDakwiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vZXhwb3J0cy5qcz8zOGJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRIdWIgfSBmcm9tICcuL2h1Yi5qcyc7XG5cbi8vIE5vdGU6IEFsbCBmdW5jdGlvbnMgaW4gdGhpcyBmaWxlIGFyZSB0eXBlZCB3aXRoIGEgcmV0dXJuIHZhbHVlIG9mIGBSZXR1cm5UeXBlPEh1YltIVUJfRlVOQ1RJT05dPmAsXG4vLyB3aGVyZSBIVUJfRlVOQ1RJT04gaXMgc29tZSBtZXRob2Qgb24gdGhlIEh1YiBjbGFzcy5cbi8vXG4vLyBUaGlzIGlzIGRvbmUgdG8gbWFrZSBzdXJlIHRoZSB0b3AgbGV2ZWwgU0RLIG1ldGhvZHMgc3RheSBpbiBzeW5jIHdpdGggdGhlIGh1YiBtZXRob2RzLlxuLy8gQWx0aG91Z2ggZXZlcnkgbWV0aG9kIGhlcmUgaGFzIGFuIGV4cGxpY2l0IHJldHVybiB0eXBlLCBzb21lIG9mIHRoZW0gKHRoYXQgbWFwIHRvIHZvaWQgcmV0dXJucykgZG8gbm90XG4vLyBjb250YWluIGByZXR1cm5gIGtleXdvcmRzLiBUaGlzIGlzIGRvbmUgdG8gc2F2ZSBvbiBidW5kbGUgc2l6ZSwgYXMgYHJldHVybmAgaXMgbm90IG1pbmlmaWFibGUuXG5cbi8qKlxuICogQ2FwdHVyZXMgYW4gZXhjZXB0aW9uIGV2ZW50IGFuZCBzZW5kcyBpdCB0byBTZW50cnkuXG4gKlxuICogQHBhcmFtIGV4Y2VwdGlvbiBBbiBleGNlcHRpb24tbGlrZSBvYmplY3QuXG4gKiBAcGFyYW0gY2FwdHVyZUNvbnRleHQgQWRkaXRpb25hbCBzY29wZSBkYXRhIHRvIGFwcGx5IHRvIGV4Y2VwdGlvbiBldmVudC5cbiAqIEByZXR1cm5zIFRoZSBnZW5lcmF0ZWQgZXZlbnRJZC5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbmZ1bmN0aW9uIGNhcHR1cmVFeGNlcHRpb24oZXhjZXB0aW9uLCBjYXB0dXJlQ29udGV4dCkge1xuICByZXR1cm4gZ2V0Q3VycmVudEh1YigpLmNhcHR1cmVFeGNlcHRpb24oZXhjZXB0aW9uLCB7IGNhcHR1cmVDb250ZXh0IH0pO1xufVxuXG4vKipcbiAqIENhcHR1cmVzIGEgbWVzc2FnZSBldmVudCBhbmQgc2VuZHMgaXQgdG8gU2VudHJ5LlxuICpcbiAqIEBwYXJhbSBtZXNzYWdlIFRoZSBtZXNzYWdlIHRvIHNlbmQgdG8gU2VudHJ5LlxuICogQHBhcmFtIFNldmVyaXR5IERlZmluZSB0aGUgbGV2ZWwgb2YgdGhlIG1lc3NhZ2UuXG4gKiBAcmV0dXJucyBUaGUgZ2VuZXJhdGVkIGV2ZW50SWQuXG4gKi9cbmZ1bmN0aW9uIGNhcHR1cmVNZXNzYWdlKFxuICBtZXNzYWdlLFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgY2FwdHVyZUNvbnRleHQsXG4pIHtcbiAgLy8gVGhpcyBpcyBuZWNlc3NhcnkgdG8gcHJvdmlkZSBleHBsaWNpdCBzY29wZXMgdXBncmFkZSwgd2l0aG91dCBjaGFuZ2luZyB0aGUgb3JpZ2luYWxcbiAgLy8gYXJpdHkgb2YgdGhlIGBjYXB0dXJlTWVzc2FnZShtZXNzYWdlLCBsZXZlbClgIG1ldGhvZC5cbiAgY29uc3QgbGV2ZWwgPSB0eXBlb2YgY2FwdHVyZUNvbnRleHQgPT09ICdzdHJpbmcnID8gY2FwdHVyZUNvbnRleHQgOiB1bmRlZmluZWQ7XG4gIGNvbnN0IGNvbnRleHQgPSB0eXBlb2YgY2FwdHVyZUNvbnRleHQgIT09ICdzdHJpbmcnID8geyBjYXB0dXJlQ29udGV4dCB9IDogdW5kZWZpbmVkO1xuICByZXR1cm4gZ2V0Q3VycmVudEh1YigpLmNhcHR1cmVNZXNzYWdlKG1lc3NhZ2UsIGxldmVsLCBjb250ZXh0KTtcbn1cblxuLyoqXG4gKiBDYXB0dXJlcyBhIG1hbnVhbGx5IGNyZWF0ZWQgZXZlbnQgYW5kIHNlbmRzIGl0IHRvIFNlbnRyeS5cbiAqXG4gKiBAcGFyYW0gZXZlbnQgVGhlIGV2ZW50IHRvIHNlbmQgdG8gU2VudHJ5LlxuICogQHJldHVybnMgVGhlIGdlbmVyYXRlZCBldmVudElkLlxuICovXG5mdW5jdGlvbiBjYXB0dXJlRXZlbnQoZXZlbnQsIGhpbnQpIHtcbiAgcmV0dXJuIGdldEN1cnJlbnRIdWIoKS5jYXB0dXJlRXZlbnQoZXZlbnQsIGhpbnQpO1xufVxuXG4vKipcbiAqIENhbGxiYWNrIHRvIHNldCBjb250ZXh0IGluZm9ybWF0aW9uIG9udG8gdGhlIHNjb3BlLlxuICogQHBhcmFtIGNhbGxiYWNrIENhbGxiYWNrIGZ1bmN0aW9uIHRoYXQgcmVjZWl2ZXMgU2NvcGUuXG4gKi9cbmZ1bmN0aW9uIGNvbmZpZ3VyZVNjb3BlKGNhbGxiYWNrKSB7XG4gIGdldEN1cnJlbnRIdWIoKS5jb25maWd1cmVTY29wZShjYWxsYmFjayk7XG59XG5cbi8qKlxuICogUmVjb3JkcyBhIG5ldyBicmVhZGNydW1iIHdoaWNoIHdpbGwgYmUgYXR0YWNoZWQgdG8gZnV0dXJlIGV2ZW50cy5cbiAqXG4gKiBCcmVhZGNydW1icyB3aWxsIGJlIGFkZGVkIHRvIHN1YnNlcXVlbnQgZXZlbnRzIHRvIHByb3ZpZGUgbW9yZSBjb250ZXh0IG9uXG4gKiB1c2VyJ3MgYWN0aW9ucyBwcmlvciB0byBhbiBlcnJvciBvciBjcmFzaC5cbiAqXG4gKiBAcGFyYW0gYnJlYWRjcnVtYiBUaGUgYnJlYWRjcnVtYiB0byByZWNvcmQuXG4gKi9cbmZ1bmN0aW9uIGFkZEJyZWFkY3J1bWIoYnJlYWRjcnVtYikge1xuICBnZXRDdXJyZW50SHViKCkuYWRkQnJlYWRjcnVtYihicmVhZGNydW1iKTtcbn1cblxuLyoqXG4gKiBTZXRzIGNvbnRleHQgZGF0YSB3aXRoIHRoZSBnaXZlbiBuYW1lLlxuICogQHBhcmFtIG5hbWUgb2YgdGhlIGNvbnRleHRcbiAqIEBwYXJhbSBjb250ZXh0IEFueSBraW5kIG9mIGRhdGEuIFRoaXMgZGF0YSB3aWxsIGJlIG5vcm1hbGl6ZWQuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBzZXRDb250ZXh0KG5hbWUsIGNvbnRleHQpIHtcbiAgZ2V0Q3VycmVudEh1YigpLnNldENvbnRleHQobmFtZSwgY29udGV4dCk7XG59XG5cbi8qKlxuICogU2V0IGFuIG9iamVjdCB0aGF0IHdpbGwgYmUgbWVyZ2VkIHNlbnQgYXMgZXh0cmEgZGF0YSB3aXRoIHRoZSBldmVudC5cbiAqIEBwYXJhbSBleHRyYXMgRXh0cmFzIG9iamVjdCB0byBtZXJnZSBpbnRvIGN1cnJlbnQgY29udGV4dC5cbiAqL1xuZnVuY3Rpb24gc2V0RXh0cmFzKGV4dHJhcykge1xuICBnZXRDdXJyZW50SHViKCkuc2V0RXh0cmFzKGV4dHJhcyk7XG59XG5cbi8qKlxuICogU2V0IGtleTp2YWx1ZSB0aGF0IHdpbGwgYmUgc2VudCBhcyBleHRyYSBkYXRhIHdpdGggdGhlIGV2ZW50LlxuICogQHBhcmFtIGtleSBTdHJpbmcgb2YgZXh0cmFcbiAqIEBwYXJhbSBleHRyYSBBbnkga2luZCBvZiBkYXRhLiBUaGlzIGRhdGEgd2lsbCBiZSBub3JtYWxpemVkLlxuICovXG5mdW5jdGlvbiBzZXRFeHRyYShrZXksIGV4dHJhKSB7XG4gIGdldEN1cnJlbnRIdWIoKS5zZXRFeHRyYShrZXksIGV4dHJhKTtcbn1cblxuLyoqXG4gKiBTZXQgYW4gb2JqZWN0IHRoYXQgd2lsbCBiZSBtZXJnZWQgc2VudCBhcyB0YWdzIGRhdGEgd2l0aCB0aGUgZXZlbnQuXG4gKiBAcGFyYW0gdGFncyBUYWdzIGNvbnRleHQgb2JqZWN0IHRvIG1lcmdlIGludG8gY3VycmVudCBjb250ZXh0LlxuICovXG5mdW5jdGlvbiBzZXRUYWdzKHRhZ3MpIHtcbiAgZ2V0Q3VycmVudEh1YigpLnNldFRhZ3ModGFncyk7XG59XG5cbi8qKlxuICogU2V0IGtleTp2YWx1ZSB0aGF0IHdpbGwgYmUgc2VudCBhcyB0YWdzIGRhdGEgd2l0aCB0aGUgZXZlbnQuXG4gKlxuICogQ2FuIGFsc28gYmUgdXNlZCB0byB1bnNldCBhIHRhZywgYnkgcGFzc2luZyBgdW5kZWZpbmVkYC5cbiAqXG4gKiBAcGFyYW0ga2V5IFN0cmluZyBrZXkgb2YgdGFnXG4gKiBAcGFyYW0gdmFsdWUgVmFsdWUgb2YgdGFnXG4gKi9cbmZ1bmN0aW9uIHNldFRhZyhrZXksIHZhbHVlKSB7XG4gIGdldEN1cnJlbnRIdWIoKS5zZXRUYWcoa2V5LCB2YWx1ZSk7XG59XG5cbi8qKlxuICogVXBkYXRlcyB1c2VyIGNvbnRleHQgaW5mb3JtYXRpb24gZm9yIGZ1dHVyZSBldmVudHMuXG4gKlxuICogQHBhcmFtIHVzZXIgVXNlciBjb250ZXh0IG9iamVjdCB0byBiZSBzZXQgaW4gdGhlIGN1cnJlbnQgY29udGV4dC4gUGFzcyBgbnVsbGAgdG8gdW5zZXQgdGhlIHVzZXIuXG4gKi9cbmZ1bmN0aW9uIHNldFVzZXIodXNlcikge1xuICBnZXRDdXJyZW50SHViKCkuc2V0VXNlcih1c2VyKTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IHNjb3BlIHdpdGggYW5kIGV4ZWN1dGVzIHRoZSBnaXZlbiBvcGVyYXRpb24gd2l0aGluLlxuICogVGhlIHNjb3BlIGlzIGF1dG9tYXRpY2FsbHkgcmVtb3ZlZCBvbmNlIHRoZSBvcGVyYXRpb25cbiAqIGZpbmlzaGVzIG9yIHRocm93cy5cbiAqXG4gKiBUaGlzIGlzIGVzc2VudGlhbGx5IGEgY29udmVuaWVuY2UgZnVuY3Rpb24gZm9yOlxuICpcbiAqICAgICBwdXNoU2NvcGUoKTtcbiAqICAgICBjYWxsYmFjaygpO1xuICogICAgIHBvcFNjb3BlKCk7XG4gKlxuICogQHBhcmFtIGNhbGxiYWNrIHRoYXQgd2lsbCBiZSBlbmNsb3NlZCBpbnRvIHB1c2gvcG9wU2NvcGUuXG4gKi9cbmZ1bmN0aW9uIHdpdGhTY29wZShjYWxsYmFjaykge1xuICBnZXRDdXJyZW50SHViKCkud2l0aFNjb3BlKGNhbGxiYWNrKTtcbn1cblxuLyoqXG4gKiBTdGFydHMgYSBuZXcgYFRyYW5zYWN0aW9uYCBhbmQgcmV0dXJucyBpdC4gVGhpcyBpcyB0aGUgZW50cnkgcG9pbnQgdG8gbWFudWFsIHRyYWNpbmcgaW5zdHJ1bWVudGF0aW9uLlxuICpcbiAqIEEgdHJlZSBzdHJ1Y3R1cmUgY2FuIGJlIGJ1aWx0IGJ5IGFkZGluZyBjaGlsZCBzcGFucyB0byB0aGUgdHJhbnNhY3Rpb24sIGFuZCBjaGlsZCBzcGFucyB0byBvdGhlciBzcGFucy4gVG8gc3RhcnQgYVxuICogbmV3IGNoaWxkIHNwYW4gd2l0aGluIHRoZSB0cmFuc2FjdGlvbiBvciBhbnkgc3BhbiwgY2FsbCB0aGUgcmVzcGVjdGl2ZSBgLnN0YXJ0Q2hpbGQoKWAgbWV0aG9kLlxuICpcbiAqIEV2ZXJ5IGNoaWxkIHNwYW4gbXVzdCBiZSBmaW5pc2hlZCBiZWZvcmUgdGhlIHRyYW5zYWN0aW9uIGlzIGZpbmlzaGVkLCBvdGhlcndpc2UgdGhlIHVuZmluaXNoZWQgc3BhbnMgYXJlIGRpc2NhcmRlZC5cbiAqXG4gKiBUaGUgdHJhbnNhY3Rpb24gbXVzdCBiZSBmaW5pc2hlZCB3aXRoIGEgY2FsbCB0byBpdHMgYC5maW5pc2goKWAgbWV0aG9kLCBhdCB3aGljaCBwb2ludCB0aGUgdHJhbnNhY3Rpb24gd2l0aCBhbGwgaXRzXG4gKiBmaW5pc2hlZCBjaGlsZCBzcGFucyB3aWxsIGJlIHNlbnQgdG8gU2VudHJ5LlxuICpcbiAqIE5PVEU6IFRoaXMgZnVuY3Rpb24gc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgKm1hbnVhbCogaW5zdHJ1bWVudGF0aW9uLiBBdXRvLWluc3RydW1lbnRhdGlvbiBzaG91bGQgY2FsbFxuICogYHN0YXJ0VHJhbnNhY3Rpb25gIGRpcmVjdGx5IG9uIHRoZSBodWIuXG4gKlxuICogQHBhcmFtIGNvbnRleHQgUHJvcGVydGllcyBvZiB0aGUgbmV3IGBUcmFuc2FjdGlvbmAuXG4gKiBAcGFyYW0gY3VzdG9tU2FtcGxpbmdDb250ZXh0IEluZm9ybWF0aW9uIGdpdmVuIHRvIHRoZSB0cmFuc2FjdGlvbiBzYW1wbGluZyBmdW5jdGlvbiAoYWxvbmcgd2l0aCBjb250ZXh0LWRlcGVuZGVudFxuICogZGVmYXVsdCB2YWx1ZXMpLiBTZWUge0BsaW5rIE9wdGlvbnMudHJhY2VzU2FtcGxlcn0uXG4gKlxuICogQHJldHVybnMgVGhlIHRyYW5zYWN0aW9uIHdoaWNoIHdhcyBqdXN0IHN0YXJ0ZWRcbiAqL1xuZnVuY3Rpb24gc3RhcnRUcmFuc2FjdGlvbihcbiAgY29udGV4dCxcbiAgY3VzdG9tU2FtcGxpbmdDb250ZXh0LFxuKSB7XG4gIHJldHVybiBnZXRDdXJyZW50SHViKCkuc3RhcnRUcmFuc2FjdGlvbih7IC4uLmNvbnRleHQgfSwgY3VzdG9tU2FtcGxpbmdDb250ZXh0KTtcbn1cblxuZXhwb3J0IHsgYWRkQnJlYWRjcnVtYiwgY2FwdHVyZUV2ZW50LCBjYXB0dXJlRXhjZXB0aW9uLCBjYXB0dXJlTWVzc2FnZSwgY29uZmlndXJlU2NvcGUsIHNldENvbnRleHQsIHNldEV4dHJhLCBzZXRFeHRyYXMsIHNldFRhZywgc2V0VGFncywgc2V0VXNlciwgc3RhcnRUcmFuc2FjdGlvbiwgd2l0aFNjb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1leHBvcnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/exports.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/hub.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/hub.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"API_VERSION\": function() { return /* binding */ API_VERSION; },\n/* harmony export */   \"Hub\": function() { return /* binding */ Hub; },\n/* harmony export */   \"getCurrentHub\": function() { return /* binding */ getCurrentHub; },\n/* harmony export */   \"getHubFromCarrier\": function() { return /* binding */ getHubFromCarrier; },\n/* harmony export */   \"getMainCarrier\": function() { return /* binding */ getMainCarrier; },\n/* harmony export */   \"makeMain\": function() { return /* binding */ makeMain; },\n/* harmony export */   \"setHubOnCarrier\": function() { return /* binding */ setHubOnCarrier; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n\n\n\n\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n    __init() {this._stack = [{}];}\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope(),   _version = API_VERSION) {this._version = _version;Hub.prototype.__init.call(this);\n    this.getStackTop().scope = scope;\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.consoleSandbox)(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer && layer.scope;\n    const session = scope && scope.getSession();\n    if (session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_2__.closeSession)(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    if (scope) {\n      scope.setSession();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.navigator || {};\n\n    const session = (0,_session_js__WEBPACK_IMPORTED_MODULE_2__.makeSession)({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === 'ok') {\n        (0,_session_js__WEBPACK_IMPORTED_MODULE_2__.updateSession)(currentSession, { status: 'exited' });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.__SENTRY__ = _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isNodeEnv)()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, _scope_js__WEBPACK_IMPORTED_MODULE_0__.Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getGlobalSingleton)('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\n\n//# sourceMappingURL=hub.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9odWIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBaUk7QUFDNUU7QUFDbEI7QUFDcUM7O0FBRXhFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsU0FBUyw2QkFBNkI7QUFDdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksWUFBWTtBQUN4QixjQUFjLGlCQUFpQjs7QUFFL0I7O0FBRUE7QUFDQSx1REFBdUQsYUFBYTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsNENBQUssK0JBQStCLHlCQUF5QjtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtEQUFXO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsb0RBQUs7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsb0RBQUs7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELG9EQUFLO0FBQ2pFO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1DQUFtQyw0QkFBNEI7QUFDL0QsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7O0FBRTVCOztBQUVBLFlBQVksZ0VBQWdFO0FBQzVFOztBQUVBOztBQUVBLHNCQUFzQixxRUFBc0I7QUFDNUMsK0JBQStCO0FBQy9CO0FBQ0EsU0FBUyw2REFBYztBQUN2Qjs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdCQUFnQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTix1RUFBdUUsc0RBQVcsZ0NBQWdDLGdCQUFnQjtBQUNsSTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx5REFBWTtBQUNsQjtBQUNBOztBQUVBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCLFlBQVksdUJBQXVCLDhEQUFtQixHQUFHOztBQUV6RDtBQUNBLFlBQVksWUFBWSxFQUFFLCtEQUFvQjs7QUFFOUMsb0JBQW9CLHdEQUFXO0FBQy9CO0FBQ0E7QUFDQSxxQkFBcUIsdUJBQXVCO0FBQzVDLHlCQUF5QixXQUFXO0FBQ3BDO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMERBQWEsbUJBQW1CLGtCQUFrQjtBQUMxRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0JBQWdCO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxzREFBVyxxQkFBcUIsUUFBUTtBQUM3RztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLGdFQUFxQixHQUFHLGdFQUFxQjtBQUMvQyxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBLFNBQVMscURBQVU7QUFDbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLE1BQU0sd0RBQVM7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGtEQUFXO0FBQ25GOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwyQkFBMkIsV0FBVztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxpRUFBa0I7QUFDM0I7O0FBRUE7QUFDQSx5QkFBeUIsV0FBVztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUU7QUFDbkU7QUFDQTtBQUNBOztBQUV5RztBQUN6RyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9odWIuanM/MzkyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1dWlkNCwgZGF0ZVRpbWVzdGFtcEluU2Vjb25kcywgY29uc29sZVNhbmRib3gsIGxvZ2dlciwgR0xPQkFMX09CSiwgaXNOb2RlRW52LCBnZXRHbG9iYWxTaW5nbGV0b24gfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFRkFVTFRfRU5WSVJPTk1FTlQgfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBTY29wZSB9IGZyb20gJy4vc2NvcGUuanMnO1xuaW1wb3J0IHsgY2xvc2VTZXNzaW9uLCBtYWtlU2Vzc2lvbiwgdXBkYXRlU2Vzc2lvbiB9IGZyb20gJy4vc2Vzc2lvbi5qcyc7XG5cbi8qKlxuICogQVBJIGNvbXBhdGliaWxpdHkgdmVyc2lvbiBvZiB0aGlzIGh1Yi5cbiAqXG4gKiBXQVJOSU5HOiBUaGlzIG51bWJlciBzaG91bGQgb25seSBiZSBpbmNyZWFzZWQgd2hlbiB0aGUgZ2xvYmFsIGludGVyZmFjZVxuICogY2hhbmdlcyBhbmQgbmV3IG1ldGhvZHMgYXJlIGludHJvZHVjZWQuXG4gKlxuICogQGhpZGRlblxuICovXG5jb25zdCBBUElfVkVSU0lPTiA9IDQ7XG5cbi8qKlxuICogRGVmYXVsdCBtYXhpbXVtIG51bWJlciBvZiBicmVhZGNydW1icyBhZGRlZCB0byBhbiBldmVudC4gQ2FuIGJlIG92ZXJ3cml0dGVuXG4gKiB3aXRoIHtAbGluayBPcHRpb25zLm1heEJyZWFkY3J1bWJzfS5cbiAqL1xuY29uc3QgREVGQVVMVF9CUkVBRENSVU1CUyA9IDEwMDtcblxuLyoqXG4gKiBBIGxheWVyIGluIHRoZSBwcm9jZXNzIHN0YWNrLlxuICogQGhpZGRlblxuICovXG5cbi8qKlxuICogQGluaGVyaXREb2NcbiAqL1xuY2xhc3MgSHViICB7XG4gIC8qKiBJcyBhIHtAbGluayBMYXllcn1bXSBjb250YWluaW5nIHRoZSBjbGllbnQgYW5kIHNjb3BlICovXG4gICAgX19pbml0KCkge3RoaXMuX3N0YWNrID0gW3t9XTt9XG5cbiAgLyoqIENvbnRhaW5zIHRoZSBsYXN0IGV2ZW50IGlkIG9mIGEgY2FwdHVyZWQgZXZlbnQuICAqL1xuXG4gIC8qKlxuICAgKiBDcmVhdGVzIGEgbmV3IGluc3RhbmNlIG9mIHRoZSBodWIsIHdpbGwgcHVzaCBvbmUge0BsaW5rIExheWVyfSBpbnRvIHRoZVxuICAgKiBpbnRlcm5hbCBzdGFjayBvbiBjcmVhdGlvbi5cbiAgICpcbiAgICogQHBhcmFtIGNsaWVudCBib3VuZCB0byB0aGUgaHViLlxuICAgKiBAcGFyYW0gc2NvcGUgYm91bmQgdG8gdGhlIGh1Yi5cbiAgICogQHBhcmFtIHZlcnNpb24gbnVtYmVyLCBoaWdoZXIgbnVtYmVyIG1lYW5zIGhpZ2hlciBwcmlvcml0eS5cbiAgICovXG4gICBjb25zdHJ1Y3RvcihjbGllbnQsIHNjb3BlID0gbmV3IFNjb3BlKCksICAgX3ZlcnNpb24gPSBBUElfVkVSU0lPTikge3RoaXMuX3ZlcnNpb24gPSBfdmVyc2lvbjtIdWIucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpO1xuICAgIHRoaXMuZ2V0U3RhY2tUb3AoKS5zY29wZSA9IHNjb3BlO1xuICAgIGlmIChjbGllbnQpIHtcbiAgICAgIHRoaXMuYmluZENsaWVudChjbGllbnQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGlzT2xkZXJUaGFuKHZlcnNpb24pIHtcbiAgICByZXR1cm4gdGhpcy5fdmVyc2lvbiA8IHZlcnNpb247XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBiaW5kQ2xpZW50KGNsaWVudCkge1xuICAgIGNvbnN0IHRvcCA9IHRoaXMuZ2V0U3RhY2tUb3AoKTtcbiAgICB0b3AuY2xpZW50ID0gY2xpZW50O1xuICAgIGlmIChjbGllbnQgJiYgY2xpZW50LnNldHVwSW50ZWdyYXRpb25zKSB7XG4gICAgICBjbGllbnQuc2V0dXBJbnRlZ3JhdGlvbnMoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBwdXNoU2NvcGUoKSB7XG4gICAgLy8gV2Ugd2FudCB0byBjbG9uZSB0aGUgY29udGVudCBvZiBwcmV2IHNjb3BlXG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jbG9uZSh0aGlzLmdldFNjb3BlKCkpO1xuICAgIHRoaXMuZ2V0U3RhY2soKS5wdXNoKHtcbiAgICAgIGNsaWVudDogdGhpcy5nZXRDbGllbnQoKSxcbiAgICAgIHNjb3BlLFxuICAgIH0pO1xuICAgIHJldHVybiBzY29wZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHBvcFNjb3BlKCkge1xuICAgIGlmICh0aGlzLmdldFN0YWNrKCkubGVuZ3RoIDw9IDEpIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gISF0aGlzLmdldFN0YWNrKCkucG9wKCk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICB3aXRoU2NvcGUoY2FsbGJhY2spIHtcbiAgICBjb25zdCBzY29wZSA9IHRoaXMucHVzaFNjb3BlKCk7XG4gICAgdHJ5IHtcbiAgICAgIGNhbGxiYWNrKHNjb3BlKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5wb3BTY29wZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGdldENsaWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRTdGFja1RvcCgpLmNsaWVudCA7XG4gIH1cblxuICAvKiogUmV0dXJucyB0aGUgc2NvcGUgb2YgdGhlIHRvcCBzdGFjay4gKi9cbiAgIGdldFNjb3BlKCkge1xuICAgIHJldHVybiB0aGlzLmdldFN0YWNrVG9wKCkuc2NvcGU7XG4gIH1cblxuICAvKiogUmV0dXJucyB0aGUgc2NvcGUgc3RhY2sgZm9yIGRvbWFpbnMgb3IgdGhlIHByb2Nlc3MuICovXG4gICBnZXRTdGFjaygpIHtcbiAgICByZXR1cm4gdGhpcy5fc3RhY2s7XG4gIH1cblxuICAvKiogUmV0dXJucyB0aGUgdG9wbW9zdCBzY29wZSBsYXllciBpbiB0aGUgb3JkZXIgZG9tYWluID4gbG9jYWwgPiBwcm9jZXNzLiAqL1xuICAgZ2V0U3RhY2tUb3AoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3N0YWNrW3RoaXMuX3N0YWNrLmxlbmd0aCAtIDFdO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY2FwdHVyZUV4Y2VwdGlvbihleGNlcHRpb24sIGhpbnQpIHtcbiAgICBjb25zdCBldmVudElkID0gKHRoaXMuX2xhc3RFdmVudElkID0gaGludCAmJiBoaW50LmV2ZW50X2lkID8gaGludC5ldmVudF9pZCA6IHV1aWQ0KCkpO1xuICAgIGNvbnN0IHN5bnRoZXRpY0V4Y2VwdGlvbiA9IG5ldyBFcnJvcignU2VudHJ5IHN5bnRoZXRpY0V4Y2VwdGlvbicpO1xuICAgIHRoaXMuX3dpdGhDbGllbnQoKGNsaWVudCwgc2NvcGUpID0+IHtcbiAgICAgIGNsaWVudC5jYXB0dXJlRXhjZXB0aW9uKFxuICAgICAgICBleGNlcHRpb24sXG4gICAgICAgIHtcbiAgICAgICAgICBvcmlnaW5hbEV4Y2VwdGlvbjogZXhjZXB0aW9uLFxuICAgICAgICAgIHN5bnRoZXRpY0V4Y2VwdGlvbixcbiAgICAgICAgICAuLi5oaW50LFxuICAgICAgICAgIGV2ZW50X2lkOiBldmVudElkLFxuICAgICAgICB9LFxuICAgICAgICBzY29wZSxcbiAgICAgICk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGV2ZW50SWQ7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBjYXB0dXJlTWVzc2FnZShcbiAgICBtZXNzYWdlLFxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgIGxldmVsLFxuICAgIGhpbnQsXG4gICkge1xuICAgIGNvbnN0IGV2ZW50SWQgPSAodGhpcy5fbGFzdEV2ZW50SWQgPSBoaW50ICYmIGhpbnQuZXZlbnRfaWQgPyBoaW50LmV2ZW50X2lkIDogdXVpZDQoKSk7XG4gICAgY29uc3Qgc3ludGhldGljRXhjZXB0aW9uID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIHRoaXMuX3dpdGhDbGllbnQoKGNsaWVudCwgc2NvcGUpID0+IHtcbiAgICAgIGNsaWVudC5jYXB0dXJlTWVzc2FnZShcbiAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgbGV2ZWwsXG4gICAgICAgIHtcbiAgICAgICAgICBvcmlnaW5hbEV4Y2VwdGlvbjogbWVzc2FnZSxcbiAgICAgICAgICBzeW50aGV0aWNFeGNlcHRpb24sXG4gICAgICAgICAgLi4uaGludCxcbiAgICAgICAgICBldmVudF9pZDogZXZlbnRJZCxcbiAgICAgICAgfSxcbiAgICAgICAgc2NvcGUsXG4gICAgICApO1xuICAgIH0pO1xuICAgIHJldHVybiBldmVudElkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY2FwdHVyZUV2ZW50KGV2ZW50LCBoaW50KSB7XG4gICAgY29uc3QgZXZlbnRJZCA9IGhpbnQgJiYgaGludC5ldmVudF9pZCA/IGhpbnQuZXZlbnRfaWQgOiB1dWlkNCgpO1xuICAgIGlmICghZXZlbnQudHlwZSkge1xuICAgICAgdGhpcy5fbGFzdEV2ZW50SWQgPSBldmVudElkO1xuICAgIH1cblxuICAgIHRoaXMuX3dpdGhDbGllbnQoKGNsaWVudCwgc2NvcGUpID0+IHtcbiAgICAgIGNsaWVudC5jYXB0dXJlRXZlbnQoZXZlbnQsIHsgLi4uaGludCwgZXZlbnRfaWQ6IGV2ZW50SWQgfSwgc2NvcGUpO1xuICAgIH0pO1xuICAgIHJldHVybiBldmVudElkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgbGFzdEV2ZW50SWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xhc3RFdmVudElkO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgYWRkQnJlYWRjcnVtYihicmVhZGNydW1iLCBoaW50KSB7XG4gICAgY29uc3QgeyBzY29wZSwgY2xpZW50IH0gPSB0aGlzLmdldFN0YWNrVG9wKCk7XG5cbiAgICBpZiAoIXNjb3BlIHx8ICFjbGllbnQpIHJldHVybjtcblxuICAgIGNvbnN0IHsgYmVmb3JlQnJlYWRjcnVtYiA9IG51bGwsIG1heEJyZWFkY3J1bWJzID0gREVGQVVMVF9CUkVBRENSVU1CUyB9ID1cbiAgICAgIChjbGllbnQuZ2V0T3B0aW9ucyAmJiBjbGllbnQuZ2V0T3B0aW9ucygpKSB8fCB7fTtcblxuICAgIGlmIChtYXhCcmVhZGNydW1icyA8PSAwKSByZXR1cm47XG5cbiAgICBjb25zdCB0aW1lc3RhbXAgPSBkYXRlVGltZXN0YW1wSW5TZWNvbmRzKCk7XG4gICAgY29uc3QgbWVyZ2VkQnJlYWRjcnVtYiA9IHsgdGltZXN0YW1wLCAuLi5icmVhZGNydW1iIH07XG4gICAgY29uc3QgZmluYWxCcmVhZGNydW1iID0gYmVmb3JlQnJlYWRjcnVtYlxuICAgICAgPyAoY29uc29sZVNhbmRib3goKCkgPT4gYmVmb3JlQnJlYWRjcnVtYihtZXJnZWRCcmVhZGNydW1iLCBoaW50KSkgKVxuICAgICAgOiBtZXJnZWRCcmVhZGNydW1iO1xuXG4gICAgaWYgKGZpbmFsQnJlYWRjcnVtYiA9PT0gbnVsbCkgcmV0dXJuO1xuXG4gICAgc2NvcGUuYWRkQnJlYWRjcnVtYihmaW5hbEJyZWFkY3J1bWIsIG1heEJyZWFkY3J1bWJzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldFVzZXIodXNlcikge1xuICAgIGNvbnN0IHNjb3BlID0gdGhpcy5nZXRTY29wZSgpO1xuICAgIGlmIChzY29wZSkgc2NvcGUuc2V0VXNlcih1c2VyKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldFRhZ3ModGFncykge1xuICAgIGNvbnN0IHNjb3BlID0gdGhpcy5nZXRTY29wZSgpO1xuICAgIGlmIChzY29wZSkgc2NvcGUuc2V0VGFncyh0YWdzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldEV4dHJhcyhleHRyYXMpIHtcbiAgICBjb25zdCBzY29wZSA9IHRoaXMuZ2V0U2NvcGUoKTtcbiAgICBpZiAoc2NvcGUpIHNjb3BlLnNldEV4dHJhcyhleHRyYXMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc2V0VGFnKGtleSwgdmFsdWUpIHtcbiAgICBjb25zdCBzY29wZSA9IHRoaXMuZ2V0U2NvcGUoKTtcbiAgICBpZiAoc2NvcGUpIHNjb3BlLnNldFRhZyhrZXksIHZhbHVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldEV4dHJhKGtleSwgZXh0cmEpIHtcbiAgICBjb25zdCBzY29wZSA9IHRoaXMuZ2V0U2NvcGUoKTtcbiAgICBpZiAoc2NvcGUpIHNjb3BlLnNldEV4dHJhKGtleSwgZXh0cmEpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgc2V0Q29udGV4dChuYW1lLCBjb250ZXh0KSB7XG4gICAgY29uc3Qgc2NvcGUgPSB0aGlzLmdldFNjb3BlKCk7XG4gICAgaWYgKHNjb3BlKSBzY29wZS5zZXRDb250ZXh0KG5hbWUsIGNvbnRleHQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY29uZmlndXJlU2NvcGUoY2FsbGJhY2spIHtcbiAgICBjb25zdCB7IHNjb3BlLCBjbGllbnQgfSA9IHRoaXMuZ2V0U3RhY2tUb3AoKTtcbiAgICBpZiAoc2NvcGUgJiYgY2xpZW50KSB7XG4gICAgICBjYWxsYmFjayhzY29wZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgcnVuKGNhbGxiYWNrKSB7XG4gICAgY29uc3Qgb2xkSHViID0gbWFrZU1haW4odGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGNhbGxiYWNrKHRoaXMpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBtYWtlTWFpbihvbGRIdWIpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGdldEludGVncmF0aW9uKGludGVncmF0aW9uKSB7XG4gICAgY29uc3QgY2xpZW50ID0gdGhpcy5nZXRDbGllbnQoKTtcbiAgICBpZiAoIWNsaWVudCkgcmV0dXJuIG51bGw7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBjbGllbnQuZ2V0SW50ZWdyYXRpb24oaW50ZWdyYXRpb24pO1xuICAgIH0gY2F0Y2ggKF9vTykge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIud2FybihgQ2Fubm90IHJldHJpZXZlIGludGVncmF0aW9uICR7aW50ZWdyYXRpb24uaWR9IGZyb20gdGhlIGN1cnJlbnQgSHViYCk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzdGFydFRyYW5zYWN0aW9uKGNvbnRleHQsIGN1c3RvbVNhbXBsaW5nQ29udGV4dCkge1xuICAgIHJldHVybiB0aGlzLl9jYWxsRXh0ZW5zaW9uTWV0aG9kKCdzdGFydFRyYW5zYWN0aW9uJywgY29udGV4dCwgY3VzdG9tU2FtcGxpbmdDb250ZXh0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHRyYWNlSGVhZGVycygpIHtcbiAgICByZXR1cm4gdGhpcy5fY2FsbEV4dGVuc2lvbk1ldGhvZCgndHJhY2VIZWFkZXJzJyk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBjYXB0dXJlU2Vzc2lvbihlbmRTZXNzaW9uID0gZmFsc2UpIHtcbiAgICAvLyBib3RoIHNlbmQgdGhlIHVwZGF0ZSBhbmQgcHVsbCB0aGUgc2Vzc2lvbiBmcm9tIHRoZSBzY29wZVxuICAgIGlmIChlbmRTZXNzaW9uKSB7XG4gICAgICByZXR1cm4gdGhpcy5lbmRTZXNzaW9uKCk7XG4gICAgfVxuXG4gICAgLy8gb25seSBzZW5kIHRoZSB1cGRhdGVcbiAgICB0aGlzLl9zZW5kU2Vzc2lvblVwZGF0ZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgZW5kU2Vzc2lvbigpIHtcbiAgICBjb25zdCBsYXllciA9IHRoaXMuZ2V0U3RhY2tUb3AoKTtcbiAgICBjb25zdCBzY29wZSA9IGxheWVyICYmIGxheWVyLnNjb3BlO1xuICAgIGNvbnN0IHNlc3Npb24gPSBzY29wZSAmJiBzY29wZS5nZXRTZXNzaW9uKCk7XG4gICAgaWYgKHNlc3Npb24pIHtcbiAgICAgIGNsb3NlU2Vzc2lvbihzZXNzaW9uKTtcbiAgICB9XG4gICAgdGhpcy5fc2VuZFNlc3Npb25VcGRhdGUoKTtcblxuICAgIC8vIHRoZSBzZXNzaW9uIGlzIG92ZXI7IHRha2UgaXQgb2ZmIG9mIHRoZSBzY29wZVxuICAgIGlmIChzY29wZSkge1xuICAgICAgc2NvcGUuc2V0U2Vzc2lvbigpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHN0YXJ0U2Vzc2lvbihjb250ZXh0KSB7XG4gICAgY29uc3QgeyBzY29wZSwgY2xpZW50IH0gPSB0aGlzLmdldFN0YWNrVG9wKCk7XG4gICAgY29uc3QgeyByZWxlYXNlLCBlbnZpcm9ubWVudCA9IERFRkFVTFRfRU5WSVJPTk1FTlQgfSA9IChjbGllbnQgJiYgY2xpZW50LmdldE9wdGlvbnMoKSkgfHwge307XG5cbiAgICAvLyBXaWxsIGZldGNoIHVzZXJBZ2VudCBpZiBjYWxsZWQgZnJvbSBicm93c2VyIHNka1xuICAgIGNvbnN0IHsgdXNlckFnZW50IH0gPSBHTE9CQUxfT0JKLm5hdmlnYXRvciB8fCB7fTtcblxuICAgIGNvbnN0IHNlc3Npb24gPSBtYWtlU2Vzc2lvbih7XG4gICAgICByZWxlYXNlLFxuICAgICAgZW52aXJvbm1lbnQsXG4gICAgICAuLi4oc2NvcGUgJiYgeyB1c2VyOiBzY29wZS5nZXRVc2VyKCkgfSksXG4gICAgICAuLi4odXNlckFnZW50ICYmIHsgdXNlckFnZW50IH0pLFxuICAgICAgLi4uY29udGV4dCxcbiAgICB9KTtcblxuICAgIGlmIChzY29wZSkge1xuICAgICAgLy8gRW5kIGV4aXN0aW5nIHNlc3Npb24gaWYgdGhlcmUncyBvbmVcbiAgICAgIGNvbnN0IGN1cnJlbnRTZXNzaW9uID0gc2NvcGUuZ2V0U2Vzc2lvbiAmJiBzY29wZS5nZXRTZXNzaW9uKCk7XG4gICAgICBpZiAoY3VycmVudFNlc3Npb24gJiYgY3VycmVudFNlc3Npb24uc3RhdHVzID09PSAnb2snKSB7XG4gICAgICAgIHVwZGF0ZVNlc3Npb24oY3VycmVudFNlc3Npb24sIHsgc3RhdHVzOiAnZXhpdGVkJyB9KTtcbiAgICAgIH1cbiAgICAgIHRoaXMuZW5kU2Vzc2lvbigpO1xuXG4gICAgICAvLyBBZnRlcndhcmRzIHdlIHNldCB0aGUgbmV3IHNlc3Npb24gb24gdGhlIHNjb3BlXG4gICAgICBzY29wZS5zZXRTZXNzaW9uKHNlc3Npb24pO1xuICAgIH1cblxuICAgIHJldHVybiBzZXNzaW9uO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgaWYgZGVmYXVsdCBQSUkgc2hvdWxkIGJlIHNlbnQgdG8gU2VudHJ5IGFuZCBwcm9wYWdhdGVkIGluIG91cmdvaW5nIHJlcXVlc3RzXG4gICAqIHdoZW4gVHJhY2luZyBpcyB1c2VkLlxuICAgKi9cbiAgIHNob3VsZFNlbmREZWZhdWx0UGlpKCkge1xuICAgIGNvbnN0IGNsaWVudCA9IHRoaXMuZ2V0Q2xpZW50KCk7XG4gICAgY29uc3Qgb3B0aW9ucyA9IGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpO1xuICAgIHJldHVybiBCb29sZWFuKG9wdGlvbnMgJiYgb3B0aW9ucy5zZW5kRGVmYXVsdFBpaSk7XG4gIH1cblxuICAvKipcbiAgICogU2VuZHMgdGhlIGN1cnJlbnQgU2Vzc2lvbiBvbiB0aGUgc2NvcGVcbiAgICovXG4gICBfc2VuZFNlc3Npb25VcGRhdGUoKSB7XG4gICAgY29uc3QgeyBzY29wZSwgY2xpZW50IH0gPSB0aGlzLmdldFN0YWNrVG9wKCk7XG4gICAgaWYgKCFzY29wZSkgcmV0dXJuO1xuXG4gICAgY29uc3Qgc2Vzc2lvbiA9IHNjb3BlLmdldFNlc3Npb24oKTtcbiAgICBpZiAoc2Vzc2lvbikge1xuICAgICAgaWYgKGNsaWVudCAmJiBjbGllbnQuY2FwdHVyZVNlc3Npb24pIHtcbiAgICAgICAgY2xpZW50LmNhcHR1cmVTZXNzaW9uKHNlc3Npb24pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJbnRlcm5hbCBoZWxwZXIgZnVuY3Rpb24gdG8gY2FsbCBhIG1ldGhvZCBvbiB0aGUgdG9wIGNsaWVudCBpZiBpdCBleGlzdHMuXG4gICAqXG4gICAqIEBwYXJhbSBtZXRob2QgVGhlIG1ldGhvZCB0byBjYWxsIG9uIHRoZSBjbGllbnQuXG4gICAqIEBwYXJhbSBhcmdzIEFyZ3VtZW50cyB0byBwYXNzIHRvIHRoZSBjbGllbnQgZnVuY3Rpb24uXG4gICAqL1xuICAgX3dpdGhDbGllbnQoY2FsbGJhY2spIHtcbiAgICBjb25zdCB7IHNjb3BlLCBjbGllbnQgfSA9IHRoaXMuZ2V0U3RhY2tUb3AoKTtcbiAgICBpZiAoY2xpZW50KSB7XG4gICAgICBjYWxsYmFjayhjbGllbnQsIHNjb3BlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2FsbHMgZ2xvYmFsIGV4dGVuc2lvbiBtZXRob2QgYW5kIGJpbmRpbmcgY3VycmVudCBpbnN0YW5jZSB0byB0aGUgZnVuY3Rpb24gY2FsbFxuICAgKi9cbiAgLy8gQHRzLWlnbm9yZSBGdW5jdGlvbiBsYWNrcyBlbmRpbmcgcmV0dXJuIHN0YXRlbWVudCBhbmQgcmV0dXJuIHR5cGUgZG9lcyBub3QgaW5jbHVkZSAndW5kZWZpbmVkJy4gdHMoMjM2NilcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgIF9jYWxsRXh0ZW5zaW9uTWV0aG9kKG1ldGhvZCwgLi4uYXJncykge1xuICAgIGNvbnN0IGNhcnJpZXIgPSBnZXRNYWluQ2FycmllcigpO1xuICAgIGNvbnN0IHNlbnRyeSA9IGNhcnJpZXIuX19TRU5UUllfXztcbiAgICBpZiAoc2VudHJ5ICYmIHNlbnRyeS5leHRlbnNpb25zICYmIHR5cGVvZiBzZW50cnkuZXh0ZW5zaW9uc1ttZXRob2RdID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4gc2VudHJ5LmV4dGVuc2lvbnNbbWV0aG9kXS5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICB9XG4gICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIud2FybihgRXh0ZW5zaW9uIG1ldGhvZCAke21ldGhvZH0gY291bGRuJ3QgYmUgZm91bmQsIGRvaW5nIG5vdGhpbmcuYCk7XG4gIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBnbG9iYWwgc2hpbSByZWdpc3RyeS5cbiAqXG4gKiBGSVhNRTogVGhpcyBmdW5jdGlvbiBpcyBwcm9ibGVtYXRpYywgYmVjYXVzZSBkZXNwaXRlIGFsd2F5cyByZXR1cm5pbmcgYSB2YWxpZCBDYXJyaWVyLFxuICogaXQgaGFzIGFuIG9wdGlvbmFsIGBfX1NFTlRSWV9fYCBwcm9wZXJ0eSwgd2hpY2ggdGhlbiBpbiB0dXJuIHJlcXVpcmVzIHVzIHRvIGFsd2F5cyBwZXJmb3JtIGFuIHVubmVjZXNzYXJ5IGNoZWNrXG4gKiBhdCB0aGUgY2FsbC1zaXRlLiBXZSBhbHdheXMgYWNjZXNzIHRoZSBjYXJyaWVyIHRocm91Z2ggdGhpcyBmdW5jdGlvbiwgc28gd2UgY2FuIGd1YXJhbnRlZSB0aGF0IGBfX1NFTlRSWV9fYCBpcyB0aGVyZS5cbiAqKi9cbmZ1bmN0aW9uIGdldE1haW5DYXJyaWVyKCkge1xuICBHTE9CQUxfT0JKLl9fU0VOVFJZX18gPSBHTE9CQUxfT0JKLl9fU0VOVFJZX18gfHwge1xuICAgIGV4dGVuc2lvbnM6IHt9LFxuICAgIGh1YjogdW5kZWZpbmVkLFxuICB9O1xuICByZXR1cm4gR0xPQkFMX09CSjtcbn1cblxuLyoqXG4gKiBSZXBsYWNlcyB0aGUgY3VycmVudCBtYWluIGh1YiB3aXRoIHRoZSBwYXNzZWQgb25lIG9uIHRoZSBnbG9iYWwgb2JqZWN0XG4gKlxuICogQHJldHVybnMgVGhlIG9sZCByZXBsYWNlZCBodWJcbiAqL1xuZnVuY3Rpb24gbWFrZU1haW4oaHViKSB7XG4gIGNvbnN0IHJlZ2lzdHJ5ID0gZ2V0TWFpbkNhcnJpZXIoKTtcbiAgY29uc3Qgb2xkSHViID0gZ2V0SHViRnJvbUNhcnJpZXIocmVnaXN0cnkpO1xuICBzZXRIdWJPbkNhcnJpZXIocmVnaXN0cnksIGh1Yik7XG4gIHJldHVybiBvbGRIdWI7XG59XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZGVmYXVsdCBodWIgaW5zdGFuY2UuXG4gKlxuICogSWYgYSBodWIgaXMgYWxyZWFkeSByZWdpc3RlcmVkIGluIHRoZSBnbG9iYWwgY2FycmllciBidXQgdGhpcyBtb2R1bGVcbiAqIGNvbnRhaW5zIGEgbW9yZSByZWNlbnQgdmVyc2lvbiwgaXQgcmVwbGFjZXMgdGhlIHJlZ2lzdGVyZWQgdmVyc2lvbi5cbiAqIE90aGVyd2lzZSwgdGhlIGN1cnJlbnRseSByZWdpc3RlcmVkIGh1YiB3aWxsIGJlIHJldHVybmVkLlxuICovXG5mdW5jdGlvbiBnZXRDdXJyZW50SHViKCkge1xuICAvLyBHZXQgbWFpbiBjYXJyaWVyIChnbG9iYWwgZm9yIGV2ZXJ5IGVudmlyb25tZW50KVxuICBjb25zdCByZWdpc3RyeSA9IGdldE1haW5DYXJyaWVyKCk7XG5cbiAgLy8gSWYgdGhlcmUncyBubyBodWIsIG9yIGl0cyBhbiBvbGQgQVBJLCBhc3NpZ24gYSBuZXcgb25lXG4gIGlmICghaGFzSHViT25DYXJyaWVyKHJlZ2lzdHJ5KSB8fCBnZXRIdWJGcm9tQ2FycmllcihyZWdpc3RyeSkuaXNPbGRlclRoYW4oQVBJX1ZFUlNJT04pKSB7XG4gICAgc2V0SHViT25DYXJyaWVyKHJlZ2lzdHJ5LCBuZXcgSHViKCkpO1xuICB9XG5cbiAgLy8gUHJlZmVyIGRvbWFpbnMgb3ZlciBnbG9iYWwgaWYgdGhleSBhcmUgdGhlcmUgKGFwcGxpY2FibGUgb25seSB0byBOb2RlIGVudmlyb25tZW50KVxuICBpZiAoaXNOb2RlRW52KCkpIHtcbiAgICByZXR1cm4gZ2V0SHViRnJvbUFjdGl2ZURvbWFpbihyZWdpc3RyeSk7XG4gIH1cbiAgLy8gUmV0dXJuIGh1YiB0aGF0IGxpdmVzIG9uIGEgZ2xvYmFsIG9iamVjdFxuICByZXR1cm4gZ2V0SHViRnJvbUNhcnJpZXIocmVnaXN0cnkpO1xufVxuXG4vKipcbiAqIFRyeSB0byByZWFkIHRoZSBodWIgZnJvbSBhbiBhY3RpdmUgZG9tYWluLCBhbmQgZmFsbGJhY2sgdG8gdGhlIHJlZ2lzdHJ5IGlmIG9uZSBkb2Vzbid0IGV4aXN0XG4gKiBAcmV0dXJucyBkaXNjb3ZlcmVkIGh1YlxuICovXG5mdW5jdGlvbiBnZXRIdWJGcm9tQWN0aXZlRG9tYWluKHJlZ2lzdHJ5KSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgc2VudHJ5ID0gZ2V0TWFpbkNhcnJpZXIoKS5fX1NFTlRSWV9fO1xuICAgIGNvbnN0IGFjdGl2ZURvbWFpbiA9IHNlbnRyeSAmJiBzZW50cnkuZXh0ZW5zaW9ucyAmJiBzZW50cnkuZXh0ZW5zaW9ucy5kb21haW4gJiYgc2VudHJ5LmV4dGVuc2lvbnMuZG9tYWluLmFjdGl2ZTtcblxuICAgIC8vIElmIHRoZXJlJ3Mgbm8gYWN0aXZlIGRvbWFpbiwganVzdCByZXR1cm4gZ2xvYmFsIGh1YlxuICAgIGlmICghYWN0aXZlRG9tYWluKSB7XG4gICAgICByZXR1cm4gZ2V0SHViRnJvbUNhcnJpZXIocmVnaXN0cnkpO1xuICAgIH1cblxuICAgIC8vIElmIHRoZXJlJ3Mgbm8gaHViIG9uIGN1cnJlbnQgZG9tYWluLCBvciBpdCdzIGFuIG9sZCBBUEksIGFzc2lnbiBhIG5ldyBvbmVcbiAgICBpZiAoIWhhc0h1Yk9uQ2FycmllcihhY3RpdmVEb21haW4pIHx8IGdldEh1YkZyb21DYXJyaWVyKGFjdGl2ZURvbWFpbikuaXNPbGRlclRoYW4oQVBJX1ZFUlNJT04pKSB7XG4gICAgICBjb25zdCByZWdpc3RyeUh1YlRvcFN0YWNrID0gZ2V0SHViRnJvbUNhcnJpZXIocmVnaXN0cnkpLmdldFN0YWNrVG9wKCk7XG4gICAgICBzZXRIdWJPbkNhcnJpZXIoYWN0aXZlRG9tYWluLCBuZXcgSHViKHJlZ2lzdHJ5SHViVG9wU3RhY2suY2xpZW50LCBTY29wZS5jbG9uZShyZWdpc3RyeUh1YlRvcFN0YWNrLnNjb3BlKSkpO1xuICAgIH1cblxuICAgIC8vIFJldHVybiBodWIgdGhhdCBsaXZlcyBvbiBhIGRvbWFpblxuICAgIHJldHVybiBnZXRIdWJGcm9tQ2FycmllcihhY3RpdmVEb21haW4pO1xuICB9IGNhdGNoIChfT28pIHtcbiAgICAvLyBSZXR1cm4gaHViIHRoYXQgbGl2ZXMgb24gYSBnbG9iYWwgb2JqZWN0XG4gICAgcmV0dXJuIGdldEh1YkZyb21DYXJyaWVyKHJlZ2lzdHJ5KTtcbiAgfVxufVxuXG4vKipcbiAqIFRoaXMgd2lsbCB0ZWxsIHdoZXRoZXIgYSBjYXJyaWVyIGhhcyBhIGh1YiBvbiBpdCBvciBub3RcbiAqIEBwYXJhbSBjYXJyaWVyIG9iamVjdFxuICovXG5mdW5jdGlvbiBoYXNIdWJPbkNhcnJpZXIoY2Fycmllcikge1xuICByZXR1cm4gISEoY2FycmllciAmJiBjYXJyaWVyLl9fU0VOVFJZX18gJiYgY2Fycmllci5fX1NFTlRSWV9fLmh1Yik7XG59XG5cbi8qKlxuICogVGhpcyB3aWxsIGNyZWF0ZSBhIG5ldyB7QGxpbmsgSHVifSBhbmQgYWRkIHRvIHRoZSBwYXNzZWQgb2JqZWN0IG9uXG4gKiBfX1NFTlRSWV9fLmh1Yi5cbiAqIEBwYXJhbSBjYXJyaWVyIG9iamVjdFxuICogQGhpZGRlblxuICovXG5mdW5jdGlvbiBnZXRIdWJGcm9tQ2FycmllcihjYXJyaWVyKSB7XG4gIHJldHVybiBnZXRHbG9iYWxTaW5nbGV0b24oJ2h1YicsICgpID0+IG5ldyBIdWIoKSwgY2Fycmllcik7XG59XG5cbi8qKlxuICogVGhpcyB3aWxsIHNldCBwYXNzZWQge0BsaW5rIEh1Yn0gb24gdGhlIHBhc3NlZCBvYmplY3QncyBfX1NFTlRSWV9fLmh1YiBhdHRyaWJ1dGVcbiAqIEBwYXJhbSBjYXJyaWVyIG9iamVjdFxuICogQHBhcmFtIGh1YiBIdWJcbiAqIEByZXR1cm5zIEEgYm9vbGVhbiBpbmRpY2F0aW5nIHN1Y2Nlc3Mgb3IgZmFpbHVyZVxuICovXG5mdW5jdGlvbiBzZXRIdWJPbkNhcnJpZXIoY2FycmllciwgaHViKSB7XG4gIGlmICghY2FycmllcikgcmV0dXJuIGZhbHNlO1xuICBjb25zdCBfX1NFTlRSWV9fID0gKGNhcnJpZXIuX19TRU5UUllfXyA9IGNhcnJpZXIuX19TRU5UUllfXyB8fCB7fSk7XG4gIF9fU0VOVFJZX18uaHViID0gaHViO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IHsgQVBJX1ZFUlNJT04sIEh1YiwgZ2V0Q3VycmVudEh1YiwgZ2V0SHViRnJvbUNhcnJpZXIsIGdldE1haW5DYXJyaWVyLCBtYWtlTWFpbiwgc2V0SHViT25DYXJyaWVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odWIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/hub.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/index.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/index.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseClient\": function() { return /* reexport safe */ _baseclient_js__WEBPACK_IMPORTED_MODULE_12__.BaseClient; },\n/* harmony export */   \"DEFAULT_ENVIRONMENT\": function() { return /* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_21__.DEFAULT_ENVIRONMENT; },\n/* harmony export */   \"FunctionToString\": function() { return /* reexport safe */ _integrations_functiontostring_js__WEBPACK_IMPORTED_MODULE_22__.FunctionToString; },\n/* harmony export */   \"Hub\": function() { return /* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_7__.Hub; },\n/* harmony export */   \"IdleTransaction\": function() { return /* reexport safe */ _tracing_idletransaction_js__WEBPACK_IMPORTED_MODULE_1__.IdleTransaction; },\n/* harmony export */   \"InboundFilters\": function() { return /* reexport safe */ _integrations_inboundfilters_js__WEBPACK_IMPORTED_MODULE_23__.InboundFilters; },\n/* harmony export */   \"Integrations\": function() { return /* reexport module object */ _integrations_index_js__WEBPACK_IMPORTED_MODULE_18__; },\n/* harmony export */   \"SDK_VERSION\": function() { return /* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_16__.SDK_VERSION; },\n/* harmony export */   \"Scope\": function() { return /* reexport safe */ _scope_js__WEBPACK_IMPORTED_MODULE_10__.Scope; },\n/* harmony export */   \"SessionFlusher\": function() { return /* reexport safe */ _sessionflusher_js__WEBPACK_IMPORTED_MODULE_9__.SessionFlusher; },\n/* harmony export */   \"Span\": function() { return /* reexport safe */ _tracing_span_js__WEBPACK_IMPORTED_MODULE_2__.Span; },\n/* harmony export */   \"SpanStatus\": function() { return /* reexport safe */ _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_5__.SpanStatus; },\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.TRACEPARENT_REGEXP; },\n/* harmony export */   \"TRACING_DEFAULTS\": function() { return /* reexport safe */ _tracing_idletransaction_js__WEBPACK_IMPORTED_MODULE_1__.TRACING_DEFAULTS; },\n/* harmony export */   \"Transaction\": function() { return /* reexport safe */ _tracing_transaction_js__WEBPACK_IMPORTED_MODULE_3__.Transaction; },\n/* harmony export */   \"addBreadcrumb\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.addBreadcrumb; },\n/* harmony export */   \"addGlobalEventProcessor\": function() { return /* reexport safe */ _scope_js__WEBPACK_IMPORTED_MODULE_10__.addGlobalEventProcessor; },\n/* harmony export */   \"addTracingExtensions\": function() { return /* reexport safe */ _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions; },\n/* harmony export */   \"captureEvent\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.captureEvent; },\n/* harmony export */   \"captureException\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.captureException; },\n/* harmony export */   \"captureMessage\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.captureMessage; },\n/* harmony export */   \"closeSession\": function() { return /* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_8__.closeSession; },\n/* harmony export */   \"configureScope\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.configureScope; },\n/* harmony export */   \"createTransport\": function() { return /* reexport safe */ _transports_base_js__WEBPACK_IMPORTED_MODULE_14__.createTransport; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.extractTraceparentData; },\n/* harmony export */   \"getActiveTransaction\": function() { return /* reexport safe */ _tracing_utils_js__WEBPACK_IMPORTED_MODULE_4__.getActiveTransaction; },\n/* harmony export */   \"getCurrentHub\": function() { return /* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_7__.getCurrentHub; },\n/* harmony export */   \"getEnvelopeEndpointWithUrlEncodedAuth\": function() { return /* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_11__.getEnvelopeEndpointWithUrlEncodedAuth; },\n/* harmony export */   \"getHubFromCarrier\": function() { return /* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_7__.getHubFromCarrier; },\n/* harmony export */   \"getIntegrationsToSetup\": function() { return /* reexport safe */ _integration_js__WEBPACK_IMPORTED_MODULE_17__.getIntegrationsToSetup; },\n/* harmony export */   \"getMainCarrier\": function() { return /* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_7__.getMainCarrier; },\n/* harmony export */   \"getReportDialogEndpoint\": function() { return /* reexport safe */ _api_js__WEBPACK_IMPORTED_MODULE_11__.getReportDialogEndpoint; },\n/* harmony export */   \"hasTracingEnabled\": function() { return /* reexport safe */ _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_20__.hasTracingEnabled; },\n/* harmony export */   \"initAndBind\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_13__.initAndBind; },\n/* harmony export */   \"makeMain\": function() { return /* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_7__.makeMain; },\n/* harmony export */   \"makeOfflineTransport\": function() { return /* reexport safe */ _transports_offline_js__WEBPACK_IMPORTED_MODULE_15__.makeOfflineTransport; },\n/* harmony export */   \"makeSession\": function() { return /* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_8__.makeSession; },\n/* harmony export */   \"prepareEvent\": function() { return /* reexport safe */ _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_19__.prepareEvent; },\n/* harmony export */   \"setContext\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.setContext; },\n/* harmony export */   \"setExtra\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.setExtra; },\n/* harmony export */   \"setExtras\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.setExtras; },\n/* harmony export */   \"setHubOnCarrier\": function() { return /* reexport safe */ _hub_js__WEBPACK_IMPORTED_MODULE_7__.setHubOnCarrier; },\n/* harmony export */   \"setTag\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.setTag; },\n/* harmony export */   \"setTags\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.setTags; },\n/* harmony export */   \"setUser\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.setUser; },\n/* harmony export */   \"spanStatusfromHttpCode\": function() { return /* reexport safe */ _tracing_span_js__WEBPACK_IMPORTED_MODULE_2__.spanStatusfromHttpCode; },\n/* harmony export */   \"startIdleTransaction\": function() { return /* reexport safe */ _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__.startIdleTransaction; },\n/* harmony export */   \"startTransaction\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.startTransaction; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_24__.stripUrlQueryAndFragment; },\n/* harmony export */   \"updateSession\": function() { return /* reexport safe */ _session_js__WEBPACK_IMPORTED_MODULE_8__.updateSession; },\n/* harmony export */   \"withScope\": function() { return /* reexport safe */ _exports_js__WEBPACK_IMPORTED_MODULE_6__.withScope; }\n/* harmony export */ });\n/* harmony import */ var _tracing_hubextensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracing/hubextensions.js */ \"./node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _tracing_idletransaction_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/idletransaction.js */ \"./node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _tracing_span_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tracing/span.js */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _tracing_transaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing/transaction.js */ \"./node_modules/@sentry/core/esm/tracing/transaction.js\");\n/* harmony import */ var _tracing_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tracing/utils.js */ \"./node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _tracing_spanstatus_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/spanstatus.js */ \"./node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _exports_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./exports.js */ \"./node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n/* harmony import */ var _sessionflusher_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./sessionflusher.js */ \"./node_modules/@sentry/core/esm/sessionflusher.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./api.js */ \"./node_modules/@sentry/core/esm/api.js\");\n/* harmony import */ var _baseclient_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./baseclient.js */ \"./node_modules/@sentry/core/esm/baseclient.js\");\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/core/esm/sdk.js\");\n/* harmony import */ var _transports_base_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./transports/base.js */ \"./node_modules/@sentry/core/esm/transports/base.js\");\n/* harmony import */ var _transports_offline_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./transports/offline.js */ \"./node_modules/@sentry/core/esm/transports/offline.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@sentry/core/esm/version.js\");\n/* harmony import */ var _integration_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./integration.js */ \"./node_modules/@sentry/core/esm/integration.js\");\n/* harmony import */ var _integrations_index_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./integrations/index.js */ \"./node_modules/@sentry/core/esm/integrations/index.js\");\n/* harmony import */ var _utils_prepareEvent_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./utils/prepareEvent.js */ \"./node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _integrations_functiontostring_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./integrations/functiontostring.js */ \"./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _integrations_inboundfilters_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./integrations/inboundfilters.js */ \"./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXdGO0FBQ1A7QUFDaEI7QUFDVjtBQUNHO0FBQ0w7QUFDZ0o7QUFDekY7QUFDcEM7QUFDbkI7QUFDTztBQUM4QjtBQUM3QztBQUNOO0FBQ2dCO0FBQ1E7QUFDcEI7QUFDZTtBQUNUO0FBQ2hCO0FBQ3NCO0FBQ1U7QUFDWjtBQUNpQjtBQUNKO0FBQ21DO0FBQ3JHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2luZGV4LmpzPzI5YzEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgYWRkVHJhY2luZ0V4dGVuc2lvbnMsIHN0YXJ0SWRsZVRyYW5zYWN0aW9uIH0gZnJvbSAnLi90cmFjaW5nL2h1YmV4dGVuc2lvbnMuanMnO1xuZXhwb3J0IHsgSWRsZVRyYW5zYWN0aW9uLCBUUkFDSU5HX0RFRkFVTFRTIH0gZnJvbSAnLi90cmFjaW5nL2lkbGV0cmFuc2FjdGlvbi5qcyc7XG5leHBvcnQgeyBTcGFuLCBzcGFuU3RhdHVzZnJvbUh0dHBDb2RlIH0gZnJvbSAnLi90cmFjaW5nL3NwYW4uanMnO1xuZXhwb3J0IHsgVHJhbnNhY3Rpb24gfSBmcm9tICcuL3RyYWNpbmcvdHJhbnNhY3Rpb24uanMnO1xuZXhwb3J0IHsgZ2V0QWN0aXZlVHJhbnNhY3Rpb24gfSBmcm9tICcuL3RyYWNpbmcvdXRpbHMuanMnO1xuZXhwb3J0IHsgU3BhblN0YXR1cyB9IGZyb20gJy4vdHJhY2luZy9zcGFuc3RhdHVzLmpzJztcbmV4cG9ydCB7IGFkZEJyZWFkY3J1bWIsIGNhcHR1cmVFdmVudCwgY2FwdHVyZUV4Y2VwdGlvbiwgY2FwdHVyZU1lc3NhZ2UsIGNvbmZpZ3VyZVNjb3BlLCBzZXRDb250ZXh0LCBzZXRFeHRyYSwgc2V0RXh0cmFzLCBzZXRUYWcsIHNldFRhZ3MsIHNldFVzZXIsIHN0YXJ0VHJhbnNhY3Rpb24sIHdpdGhTY29wZSB9IGZyb20gJy4vZXhwb3J0cy5qcyc7XG5leHBvcnQgeyBIdWIsIGdldEN1cnJlbnRIdWIsIGdldEh1YkZyb21DYXJyaWVyLCBnZXRNYWluQ2FycmllciwgbWFrZU1haW4sIHNldEh1Yk9uQ2FycmllciB9IGZyb20gJy4vaHViLmpzJztcbmV4cG9ydCB7IGNsb3NlU2Vzc2lvbiwgbWFrZVNlc3Npb24sIHVwZGF0ZVNlc3Npb24gfSBmcm9tICcuL3Nlc3Npb24uanMnO1xuZXhwb3J0IHsgU2Vzc2lvbkZsdXNoZXIgfSBmcm9tICcuL3Nlc3Npb25mbHVzaGVyLmpzJztcbmV4cG9ydCB7IFNjb3BlLCBhZGRHbG9iYWxFdmVudFByb2Nlc3NvciB9IGZyb20gJy4vc2NvcGUuanMnO1xuZXhwb3J0IHsgZ2V0RW52ZWxvcGVFbmRwb2ludFdpdGhVcmxFbmNvZGVkQXV0aCwgZ2V0UmVwb3J0RGlhbG9nRW5kcG9pbnQgfSBmcm9tICcuL2FwaS5qcyc7XG5leHBvcnQgeyBCYXNlQ2xpZW50IH0gZnJvbSAnLi9iYXNlY2xpZW50LmpzJztcbmV4cG9ydCB7IGluaXRBbmRCaW5kIH0gZnJvbSAnLi9zZGsuanMnO1xuZXhwb3J0IHsgY3JlYXRlVHJhbnNwb3J0IH0gZnJvbSAnLi90cmFuc3BvcnRzL2Jhc2UuanMnO1xuZXhwb3J0IHsgbWFrZU9mZmxpbmVUcmFuc3BvcnQgfSBmcm9tICcuL3RyYW5zcG9ydHMvb2ZmbGluZS5qcyc7XG5leHBvcnQgeyBTREtfVkVSU0lPTiB9IGZyb20gJy4vdmVyc2lvbi5qcyc7XG5leHBvcnQgeyBnZXRJbnRlZ3JhdGlvbnNUb1NldHVwIH0gZnJvbSAnLi9pbnRlZ3JhdGlvbi5qcyc7XG5pbXBvcnQgKiBhcyBpbmRleCBmcm9tICcuL2ludGVncmF0aW9ucy9pbmRleC5qcyc7XG5leHBvcnQgeyBpbmRleCBhcyBJbnRlZ3JhdGlvbnMgfTtcbmV4cG9ydCB7IHByZXBhcmVFdmVudCB9IGZyb20gJy4vdXRpbHMvcHJlcGFyZUV2ZW50LmpzJztcbmV4cG9ydCB7IGhhc1RyYWNpbmdFbmFibGVkIH0gZnJvbSAnLi91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcyc7XG5leHBvcnQgeyBERUZBVUxUX0VOVklST05NRU5UIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuZXhwb3J0IHsgRnVuY3Rpb25Ub1N0cmluZyB9IGZyb20gJy4vaW50ZWdyYXRpb25zL2Z1bmN0aW9udG9zdHJpbmcuanMnO1xuZXhwb3J0IHsgSW5ib3VuZEZpbHRlcnMgfSBmcm9tICcuL2ludGVncmF0aW9ucy9pbmJvdW5kZmlsdGVycy5qcyc7XG5leHBvcnQgeyBUUkFDRVBBUkVOVF9SRUdFWFAsIGV4dHJhY3RUcmFjZXBhcmVudERhdGEsIHN0cmlwVXJsUXVlcnlBbmRGcmFnbWVudCB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integration.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integration.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getIntegrationsToSetup\": function() { return /* binding */ getIntegrationsToSetup; },\n/* harmony export */   \"installedIntegrations\": function() { return /* binding */ installedIntegrations; },\n/* harmony export */   \"setupIntegration\": function() { return /* binding */ setupIntegration; },\n/* harmony export */   \"setupIntegrations\": function() { return /* binding */ setupIntegrations; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n\n\n\n\nconst installedIntegrations = [];\n\n/** Map of integrations assigned to a client */\n\n/**\n * Remove duplicates from the given array, preferring the last instance of any duplicate. Not guaranteed to\n * preseve the order of integrations in the array.\n *\n * @private\n */\nfunction filterDuplicates(integrations) {\n  const integrationsByName = {};\n\n  integrations.forEach(currentInstance => {\n    const { name } = currentInstance;\n\n    const existingInstance = integrationsByName[name];\n\n    // We want integrations later in the array to overwrite earlier ones of the same type, except that we never want a\n    // default instance to overwrite an existing user instance\n    if (existingInstance && !existingInstance.isDefaultInstance && currentInstance.isDefaultInstance) {\n      return;\n    }\n\n    integrationsByName[name] = currentInstance;\n  });\n\n  return Object.keys(integrationsByName).map(k => integrationsByName[k]);\n}\n\n/** Gets integrations to install */\nfunction getIntegrationsToSetup(options) {\n  const defaultIntegrations = options.defaultIntegrations || [];\n  const userIntegrations = options.integrations;\n\n  // We flag default instances, so that later we can tell them apart from any user-created instances of the same class\n  defaultIntegrations.forEach(integration => {\n    integration.isDefaultInstance = true;\n  });\n\n  let integrations;\n\n  if (Array.isArray(userIntegrations)) {\n    integrations = [...defaultIntegrations, ...userIntegrations];\n  } else if (typeof userIntegrations === 'function') {\n    integrations = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.arrayify)(userIntegrations(defaultIntegrations));\n  } else {\n    integrations = defaultIntegrations;\n  }\n\n  const finalIntegrations = filterDuplicates(integrations);\n\n  // The `Debug` integration prints copies of the `event` and `hint` which will be passed to `beforeSend` or\n  // `beforeSendTransaction`. It therefore has to run after all other integrations, so that the changes of all event\n  // processors will be reflected in the printed values. For lack of a more elegant way to guarantee that, we therefore\n  // locate it and, assuming it exists, pop it out of its current spot and shove it onto the end of the array.\n  const debugIndex = findIndex(finalIntegrations, integration => integration.name === 'Debug');\n  if (debugIndex !== -1) {\n    const [debugInstance] = finalIntegrations.splice(debugIndex, 1);\n    finalIntegrations.push(debugInstance);\n  }\n\n  return finalIntegrations;\n}\n\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nfunction setupIntegrations(integrations) {\n  const integrationIndex = {};\n\n  integrations.forEach(integration => {\n    // guard against empty provided integrations\n    if (integration) {\n      setupIntegration(integration, integrationIndex);\n    }\n  });\n\n  return integrationIndex;\n}\n\n/** Setup a single integration.  */\nfunction setupIntegration(integration, integrationIndex) {\n  integrationIndex[integration.name] = integration;\n\n  if (installedIntegrations.indexOf(integration.name) === -1) {\n    integration.setupOnce(_scope_js__WEBPACK_IMPORTED_MODULE_1__.addGlobalEventProcessor, _hub_js__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub);\n    installedIntegrations.push(integration.name);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Integration installed: ${integration.name}`);\n  }\n}\n\n// Polyfill for Array.findIndex(), which is not supported in ES5\nfunction findIndex(arr, callback) {\n  for (let i = 0; i < arr.length; i++) {\n    if (callback(arr[i]) === true) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\n\n//# sourceMappingURL=integration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlEO0FBQ1I7QUFDWTs7QUFFckQ7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVksT0FBTzs7QUFFbkI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0osbUJBQW1CLHVEQUFRO0FBQzNCLElBQUk7QUFDSjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEIsOERBQXVCLEVBQUUsa0RBQWE7QUFDaEU7QUFDQSxxRUFBcUUscURBQVUsMkJBQTJCLGlCQUFpQjtBQUMzSDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRThGO0FBQzlGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9uLmpzPzNmNDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXJyYXlpZnksIGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0Q3VycmVudEh1YiB9IGZyb20gJy4vaHViLmpzJztcbmltcG9ydCB7IGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yIH0gZnJvbSAnLi9zY29wZS5qcyc7XG5cbmNvbnN0IGluc3RhbGxlZEludGVncmF0aW9ucyA9IFtdO1xuXG4vKiogTWFwIG9mIGludGVncmF0aW9ucyBhc3NpZ25lZCB0byBhIGNsaWVudCAqL1xuXG4vKipcbiAqIFJlbW92ZSBkdXBsaWNhdGVzIGZyb20gdGhlIGdpdmVuIGFycmF5LCBwcmVmZXJyaW5nIHRoZSBsYXN0IGluc3RhbmNlIG9mIGFueSBkdXBsaWNhdGUuIE5vdCBndWFyYW50ZWVkIHRvXG4gKiBwcmVzZXZlIHRoZSBvcmRlciBvZiBpbnRlZ3JhdGlvbnMgaW4gdGhlIGFycmF5LlxuICpcbiAqIEBwcml2YXRlXG4gKi9cbmZ1bmN0aW9uIGZpbHRlckR1cGxpY2F0ZXMoaW50ZWdyYXRpb25zKSB7XG4gIGNvbnN0IGludGVncmF0aW9uc0J5TmFtZSA9IHt9O1xuXG4gIGludGVncmF0aW9ucy5mb3JFYWNoKGN1cnJlbnRJbnN0YW5jZSA9PiB7XG4gICAgY29uc3QgeyBuYW1lIH0gPSBjdXJyZW50SW5zdGFuY2U7XG5cbiAgICBjb25zdCBleGlzdGluZ0luc3RhbmNlID0gaW50ZWdyYXRpb25zQnlOYW1lW25hbWVdO1xuXG4gICAgLy8gV2Ugd2FudCBpbnRlZ3JhdGlvbnMgbGF0ZXIgaW4gdGhlIGFycmF5IHRvIG92ZXJ3cml0ZSBlYXJsaWVyIG9uZXMgb2YgdGhlIHNhbWUgdHlwZSwgZXhjZXB0IHRoYXQgd2UgbmV2ZXIgd2FudCBhXG4gICAgLy8gZGVmYXVsdCBpbnN0YW5jZSB0byBvdmVyd3JpdGUgYW4gZXhpc3RpbmcgdXNlciBpbnN0YW5jZVxuICAgIGlmIChleGlzdGluZ0luc3RhbmNlICYmICFleGlzdGluZ0luc3RhbmNlLmlzRGVmYXVsdEluc3RhbmNlICYmIGN1cnJlbnRJbnN0YW5jZS5pc0RlZmF1bHRJbnN0YW5jZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGludGVncmF0aW9uc0J5TmFtZVtuYW1lXSA9IGN1cnJlbnRJbnN0YW5jZTtcbiAgfSk7XG5cbiAgcmV0dXJuIE9iamVjdC5rZXlzKGludGVncmF0aW9uc0J5TmFtZSkubWFwKGsgPT4gaW50ZWdyYXRpb25zQnlOYW1lW2tdKTtcbn1cblxuLyoqIEdldHMgaW50ZWdyYXRpb25zIHRvIGluc3RhbGwgKi9cbmZ1bmN0aW9uIGdldEludGVncmF0aW9uc1RvU2V0dXAob3B0aW9ucykge1xuICBjb25zdCBkZWZhdWx0SW50ZWdyYXRpb25zID0gb3B0aW9ucy5kZWZhdWx0SW50ZWdyYXRpb25zIHx8IFtdO1xuICBjb25zdCB1c2VySW50ZWdyYXRpb25zID0gb3B0aW9ucy5pbnRlZ3JhdGlvbnM7XG5cbiAgLy8gV2UgZmxhZyBkZWZhdWx0IGluc3RhbmNlcywgc28gdGhhdCBsYXRlciB3ZSBjYW4gdGVsbCB0aGVtIGFwYXJ0IGZyb20gYW55IHVzZXItY3JlYXRlZCBpbnN0YW5jZXMgb2YgdGhlIHNhbWUgY2xhc3NcbiAgZGVmYXVsdEludGVncmF0aW9ucy5mb3JFYWNoKGludGVncmF0aW9uID0+IHtcbiAgICBpbnRlZ3JhdGlvbi5pc0RlZmF1bHRJbnN0YW5jZSA9IHRydWU7XG4gIH0pO1xuXG4gIGxldCBpbnRlZ3JhdGlvbnM7XG5cbiAgaWYgKEFycmF5LmlzQXJyYXkodXNlckludGVncmF0aW9ucykpIHtcbiAgICBpbnRlZ3JhdGlvbnMgPSBbLi4uZGVmYXVsdEludGVncmF0aW9ucywgLi4udXNlckludGVncmF0aW9uc107XG4gIH0gZWxzZSBpZiAodHlwZW9mIHVzZXJJbnRlZ3JhdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBpbnRlZ3JhdGlvbnMgPSBhcnJheWlmeSh1c2VySW50ZWdyYXRpb25zKGRlZmF1bHRJbnRlZ3JhdGlvbnMpKTtcbiAgfSBlbHNlIHtcbiAgICBpbnRlZ3JhdGlvbnMgPSBkZWZhdWx0SW50ZWdyYXRpb25zO1xuICB9XG5cbiAgY29uc3QgZmluYWxJbnRlZ3JhdGlvbnMgPSBmaWx0ZXJEdXBsaWNhdGVzKGludGVncmF0aW9ucyk7XG5cbiAgLy8gVGhlIGBEZWJ1Z2AgaW50ZWdyYXRpb24gcHJpbnRzIGNvcGllcyBvZiB0aGUgYGV2ZW50YCBhbmQgYGhpbnRgIHdoaWNoIHdpbGwgYmUgcGFzc2VkIHRvIGBiZWZvcmVTZW5kYCBvclxuICAvLyBgYmVmb3JlU2VuZFRyYW5zYWN0aW9uYC4gSXQgdGhlcmVmb3JlIGhhcyB0byBydW4gYWZ0ZXIgYWxsIG90aGVyIGludGVncmF0aW9ucywgc28gdGhhdCB0aGUgY2hhbmdlcyBvZiBhbGwgZXZlbnRcbiAgLy8gcHJvY2Vzc29ycyB3aWxsIGJlIHJlZmxlY3RlZCBpbiB0aGUgcHJpbnRlZCB2YWx1ZXMuIEZvciBsYWNrIG9mIGEgbW9yZSBlbGVnYW50IHdheSB0byBndWFyYW50ZWUgdGhhdCwgd2UgdGhlcmVmb3JlXG4gIC8vIGxvY2F0ZSBpdCBhbmQsIGFzc3VtaW5nIGl0IGV4aXN0cywgcG9wIGl0IG91dCBvZiBpdHMgY3VycmVudCBzcG90IGFuZCBzaG92ZSBpdCBvbnRvIHRoZSBlbmQgb2YgdGhlIGFycmF5LlxuICBjb25zdCBkZWJ1Z0luZGV4ID0gZmluZEluZGV4KGZpbmFsSW50ZWdyYXRpb25zLCBpbnRlZ3JhdGlvbiA9PiBpbnRlZ3JhdGlvbi5uYW1lID09PSAnRGVidWcnKTtcbiAgaWYgKGRlYnVnSW5kZXggIT09IC0xKSB7XG4gICAgY29uc3QgW2RlYnVnSW5zdGFuY2VdID0gZmluYWxJbnRlZ3JhdGlvbnMuc3BsaWNlKGRlYnVnSW5kZXgsIDEpO1xuICAgIGZpbmFsSW50ZWdyYXRpb25zLnB1c2goZGVidWdJbnN0YW5jZSk7XG4gIH1cblxuICByZXR1cm4gZmluYWxJbnRlZ3JhdGlvbnM7XG59XG5cbi8qKlxuICogR2l2ZW4gYSBsaXN0IG9mIGludGVncmF0aW9uIGluc3RhbmNlcyB0aGlzIGluc3RhbGxzIHRoZW0gYWxsLiBXaGVuIGB3aXRoRGVmYXVsdHNgIGlzIHNldCB0byBgdHJ1ZWAgdGhlbiBhbGwgZGVmYXVsdFxuICogaW50ZWdyYXRpb25zIGFyZSBhZGRlZCB1bmxlc3MgdGhleSB3ZXJlIGFscmVhZHkgcHJvdmlkZWQgYmVmb3JlLlxuICogQHBhcmFtIGludGVncmF0aW9ucyBhcnJheSBvZiBpbnRlZ3JhdGlvbiBpbnN0YW5jZXNcbiAqIEBwYXJhbSB3aXRoRGVmYXVsdCBzaG91bGQgZW5hYmxlIGRlZmF1bHQgaW50ZWdyYXRpb25zXG4gKi9cbmZ1bmN0aW9uIHNldHVwSW50ZWdyYXRpb25zKGludGVncmF0aW9ucykge1xuICBjb25zdCBpbnRlZ3JhdGlvbkluZGV4ID0ge307XG5cbiAgaW50ZWdyYXRpb25zLmZvckVhY2goaW50ZWdyYXRpb24gPT4ge1xuICAgIC8vIGd1YXJkIGFnYWluc3QgZW1wdHkgcHJvdmlkZWQgaW50ZWdyYXRpb25zXG4gICAgaWYgKGludGVncmF0aW9uKSB7XG4gICAgICBzZXR1cEludGVncmF0aW9uKGludGVncmF0aW9uLCBpbnRlZ3JhdGlvbkluZGV4KTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBpbnRlZ3JhdGlvbkluZGV4O1xufVxuXG4vKiogU2V0dXAgYSBzaW5nbGUgaW50ZWdyYXRpb24uICAqL1xuZnVuY3Rpb24gc2V0dXBJbnRlZ3JhdGlvbihpbnRlZ3JhdGlvbiwgaW50ZWdyYXRpb25JbmRleCkge1xuICBpbnRlZ3JhdGlvbkluZGV4W2ludGVncmF0aW9uLm5hbWVdID0gaW50ZWdyYXRpb247XG5cbiAgaWYgKGluc3RhbGxlZEludGVncmF0aW9ucy5pbmRleE9mKGludGVncmF0aW9uLm5hbWUpID09PSAtMSkge1xuICAgIGludGVncmF0aW9uLnNldHVwT25jZShhZGRHbG9iYWxFdmVudFByb2Nlc3NvciwgZ2V0Q3VycmVudEh1Yik7XG4gICAgaW5zdGFsbGVkSW50ZWdyYXRpb25zLnB1c2goaW50ZWdyYXRpb24ubmFtZSk7XG4gICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIubG9nKGBJbnRlZ3JhdGlvbiBpbnN0YWxsZWQ6ICR7aW50ZWdyYXRpb24ubmFtZX1gKTtcbiAgfVxufVxuXG4vLyBQb2x5ZmlsbCBmb3IgQXJyYXkuZmluZEluZGV4KCksIHdoaWNoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gRVM1XG5mdW5jdGlvbiBmaW5kSW5kZXgoYXJyLCBjYWxsYmFjaykge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgIGlmIChjYWxsYmFjayhhcnJbaV0pID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gLTE7XG59XG5cbmV4cG9ydCB7IGdldEludGVncmF0aW9uc1RvU2V0dXAsIGluc3RhbGxlZEludGVncmF0aW9ucywgc2V0dXBJbnRlZ3JhdGlvbiwgc2V0dXBJbnRlZ3JhdGlvbnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVncmF0aW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integration.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/functiontostring.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/functiontostring.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionToString\": function() { return /* binding */ FunctionToString; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nlet originalFunctionToString;\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass FunctionToString  {constructor() { FunctionToString.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'FunctionToString';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = FunctionToString.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    originalFunctionToString = Function.prototype.toString;\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    Function.prototype.toString = function ( ...args) {\n      const context = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(this) || this;\n      return originalFunctionToString.apply(context, args);\n    };\n  }\n} FunctionToString.__initStatic();\n\n\n//# sourceMappingURL=functiontostring.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvZnVuY3Rpb250b3N0cmluZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvRDs7QUFFcEQ7O0FBRUE7QUFDQSx5QkFBeUIsZ0JBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHNCQUFzQixrRUFBbUI7QUFDekM7QUFDQTtBQUNBO0FBQ0EsRUFBRTs7QUFFMEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vaW50ZWdyYXRpb25zL2Z1bmN0aW9udG9zdHJpbmcuanM/ZTdmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcmlnaW5hbEZ1bmN0aW9uIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmxldCBvcmlnaW5hbEZ1bmN0aW9uVG9TdHJpbmc7XG5cbi8qKiBQYXRjaCB0b1N0cmluZyBjYWxscyB0byByZXR1cm4gcHJvcGVyIG5hbWUgZm9yIHdyYXBwZWQgZnVuY3Rpb25zICovXG5jbGFzcyBGdW5jdGlvblRvU3RyaW5nICB7Y29uc3RydWN0b3IoKSB7IEZ1bmN0aW9uVG9TdHJpbmcucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpOyB9XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHN0YXRpYyBfX2luaXRTdGF0aWMoKSB7dGhpcy5pZCA9ICdGdW5jdGlvblRvU3RyaW5nJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX19pbml0KCkge3RoaXMubmFtZSA9IEZ1bmN0aW9uVG9TdHJpbmcuaWQ7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldHVwT25jZSgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3VuYm91bmQtbWV0aG9kXG4gICAgb3JpZ2luYWxGdW5jdGlvblRvU3RyaW5nID0gRnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBGdW5jdGlvbi5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoIC4uLmFyZ3MpIHtcbiAgICAgIGNvbnN0IGNvbnRleHQgPSBnZXRPcmlnaW5hbEZ1bmN0aW9uKHRoaXMpIHx8IHRoaXM7XG4gICAgICByZXR1cm4gb3JpZ2luYWxGdW5jdGlvblRvU3RyaW5nLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgIH07XG4gIH1cbn0gRnVuY3Rpb25Ub1N0cmluZy5fX2luaXRTdGF0aWMoKTtcblxuZXhwb3J0IHsgRnVuY3Rpb25Ub1N0cmluZyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZnVuY3Rpb250b3N0cmluZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/functiontostring.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/inboundfilters.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/inboundfilters.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InboundFilters\": function() { return /* binding */ InboundFilters; },\n/* harmony export */   \"_mergeOptions\": function() { return /* binding */ _mergeOptions; },\n/* harmony export */   \"_shouldDropEvent\": function() { return /* binding */ _shouldDropEvent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nconst DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n\n/** Options for the InboundFilters integration */\n\n/** Inbound filters configurable by the user */\nclass InboundFilters  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'InboundFilters';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = InboundFilters.id;}\n\n   constructor(  _options = {}) {this._options = _options;InboundFilters.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcess = (event) => {\n      const hub = getCurrentHub();\n      if (hub) {\n        const self = hub.getIntegration(InboundFilters);\n        if (self) {\n          const client = hub.getClient();\n          const clientOptions = client ? client.getOptions() : {};\n          const options = _mergeOptions(self._options, clientOptions);\n          return _shouldDropEvent(event, options) ? null : event;\n        }\n      }\n      return event;\n    };\n\n    eventProcess.id = this.name;\n    addGlobalEventProcessor(eventProcess);\n  }\n} InboundFilters.__initStatic();\n\n/** JSDoc */\nfunction _mergeOptions(\n  internalOptions = {},\n  clientOptions = {},\n) {\n  return {\n    allowUrls: [...(internalOptions.allowUrls || []), ...(clientOptions.allowUrls || [])],\n    denyUrls: [...(internalOptions.denyUrls || []), ...(clientOptions.denyUrls || [])],\n    ignoreErrors: [\n      ...(internalOptions.ignoreErrors || []),\n      ...(clientOptions.ignoreErrors || []),\n      ...DEFAULT_IGNORE_ERRORS,\n    ],\n    ignoreInternal: internalOptions.ignoreInternal !== undefined ? internalOptions.ignoreInternal : true,\n  };\n}\n\n/** JSDoc */\nfunction _shouldDropEvent(event, options) {\n  if (options.ignoreInternal && _isSentryError(event)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Event dropped due to being internal Sentry Error.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(event)}`);\n    return true;\n  }\n  if (_isIgnoredError(event, options.ignoreErrors)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`ignoreErrors\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(event)}`,\n      );\n    return true;\n  }\n  if (_isDeniedUrl(event, options.denyUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to being matched by \\`denyUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  if (!_isAllowedUrl(event, options.allowUrls)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n        `Event dropped due to not being matched by \\`allowUrls\\` option.\\nEvent: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(\n          event,\n        )}.\\nUrl: ${_getEventFilterUrl(event)}`,\n      );\n    return true;\n  }\n  return false;\n}\n\nfunction _isIgnoredError(event, ignoreErrors) {\n  if (!ignoreErrors || !ignoreErrors.length) {\n    return false;\n  }\n\n  return _getPossibleEventMessages(event).some(message => (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(message, ignoreErrors));\n}\n\nfunction _isDeniedUrl(event, denyUrls) {\n  // TODO: Use Glob instead?\n  if (!denyUrls || !denyUrls.length) {\n    return false;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? false : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(url, denyUrls);\n}\n\nfunction _isAllowedUrl(event, allowUrls) {\n  // TODO: Use Glob instead?\n  if (!allowUrls || !allowUrls.length) {\n    return true;\n  }\n  const url = _getEventFilterUrl(event);\n  return !url ? true : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(url, allowUrls);\n}\n\nfunction _getPossibleEventMessages(event) {\n  if (event.message) {\n    return [event.message];\n  }\n  if (event.exception) {\n    try {\n      const { type = '', value = '' } = (event.exception.values && event.exception.values[0]) || {};\n      return [`${value}`, `${type}: ${value}`];\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Cannot extract message for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(event)}`);\n      return [];\n    }\n  }\n  return [];\n}\n\nfunction _isSentryError(event) {\n  try {\n    // @ts-ignore can't be a sentry error if undefined\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return event.exception.values[0].type === 'SentryError';\n  } catch (e) {\n    // ignore\n  }\n  return false;\n}\n\nfunction _getLastValidUrl(frames = []) {\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame = frames[i];\n\n    if (frame && frame.filename !== '<anonymous>' && frame.filename !== '[native code]') {\n      return frame.filename || null;\n    }\n  }\n\n  return null;\n}\n\nfunction _getEventFilterUrl(event) {\n  try {\n    let frames;\n    try {\n      // @ts-ignore we only care about frames if the whole thing here is defined\n      frames = event.exception.values[0].stacktrace.frames;\n    } catch (e) {\n      // ignore\n    }\n    return frames ? _getLastValidUrl(frames) : null;\n  } catch (oO) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(`Cannot extract url for event ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getEventDescription)(event)}`);\n    return null;\n  }\n}\n\n\n//# sourceMappingURL=inboundfilters.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/integrations/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/integrations/index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FunctionToString\": function() { return /* reexport safe */ _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__.FunctionToString; },\n/* harmony export */   \"InboundFilters\": function() { return /* reexport safe */ _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__.InboundFilters; }\n/* harmony export */ });\n/* harmony import */ var _functiontostring_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functiontostring.js */ \"./node_modules/@sentry/core/esm/integrations/functiontostring.js\");\n/* harmony import */ var _inboundfilters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inboundfilters.js */ \"./node_modules/@sentry/core/esm/integrations/inboundfilters.js\");\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9pbnRlZ3JhdGlvbnMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5RDtBQUNKO0FBQ3JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL2ludGVncmF0aW9ucy9pbmRleC5qcz9jZTQ3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEZ1bmN0aW9uVG9TdHJpbmcgfSBmcm9tICcuL2Z1bmN0aW9udG9zdHJpbmcuanMnO1xuZXhwb3J0IHsgSW5ib3VuZEZpbHRlcnMgfSBmcm9tICcuL2luYm91bmRmaWx0ZXJzLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/integrations/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/scope.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/core/esm/scope.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scope\": function() { return /* binding */ Scope; },\n/* harmony export */   \"addGlobalEventProcessor\": function() { return /* binding */ addGlobalEventProcessor; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _session_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./session.js */ \"./node_modules/@sentry/core/esm/session.js\");\n\n\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      (0,_session_js__WEBPACK_IMPORTED_MODULE_0__.updateSession)(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dateTimestampInSeconds)(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.arrayify)(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getGlobalSingleton)('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\n\n//# sourceMappingURL=scope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/scope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/sdk.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/core/esm/sdk.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initAndBind\": function() { return /* binding */ initAndBind; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n/** A class object that can instantiate Client objects. */\n\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instantiate.\n * @param options Options to pass to the client.\n */\nfunction initAndBind(\n  clientClass,\n  options,\n) {\n  if (options.debug === true) {\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.enable();\n    } else {\n      // use `console.warn` rather than `logger.warn` since by non-debug bundles have all `logger.x` statements stripped\n      // eslint-disable-next-line no-console\n      console.warn('[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.');\n    }\n  }\n  const hub = (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const scope = hub.getScope();\n  if (scope) {\n    scope.update(options.initialScope);\n  }\n\n  const client = new clientClass(options);\n  hub.bindClient(client);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZGsuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVDO0FBQ0U7O0FBRXpDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx3REFBYTtBQUNuQixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsc0RBQWE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZGsuanM/NWExZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IGdldEN1cnJlbnRIdWIgfSBmcm9tICcuL2h1Yi5qcyc7XG5cbi8qKiBBIGNsYXNzIG9iamVjdCB0aGF0IGNhbiBpbnN0YW50aWF0ZSBDbGllbnQgb2JqZWN0cy4gKi9cblxuLyoqXG4gKiBJbnRlcm5hbCBmdW5jdGlvbiB0byBjcmVhdGUgYSBuZXcgU0RLIGNsaWVudCBpbnN0YW5jZS4gVGhlIGNsaWVudCBpc1xuICogaW5zdGFsbGVkIGFuZCB0aGVuIGJvdW5kIHRvIHRoZSBjdXJyZW50IHNjb3BlLlxuICpcbiAqIEBwYXJhbSBjbGllbnRDbGFzcyBUaGUgY2xpZW50IGNsYXNzIHRvIGluc3RhbnRpYXRlLlxuICogQHBhcmFtIG9wdGlvbnMgT3B0aW9ucyB0byBwYXNzIHRvIHRoZSBjbGllbnQuXG4gKi9cbmZ1bmN0aW9uIGluaXRBbmRCaW5kKFxuICBjbGllbnRDbGFzcyxcbiAgb3B0aW9ucyxcbikge1xuICBpZiAob3B0aW9ucy5kZWJ1ZyA9PT0gdHJ1ZSkge1xuICAgIGlmICgodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pKSB7XG4gICAgICBsb2dnZXIuZW5hYmxlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHVzZSBgY29uc29sZS53YXJuYCByYXRoZXIgdGhhbiBgbG9nZ2VyLndhcm5gIHNpbmNlIGJ5IG5vbi1kZWJ1ZyBidW5kbGVzIGhhdmUgYWxsIGBsb2dnZXIueGAgc3RhdGVtZW50cyBzdHJpcHBlZFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgIGNvbnNvbGUud2FybignW1NlbnRyeV0gQ2Fubm90IGluaXRpYWxpemUgU0RLIHdpdGggYGRlYnVnYCBvcHRpb24gdXNpbmcgYSBub24tZGVidWcgYnVuZGxlLicpO1xuICAgIH1cbiAgfVxuICBjb25zdCBodWIgPSBnZXRDdXJyZW50SHViKCk7XG4gIGNvbnN0IHNjb3BlID0gaHViLmdldFNjb3BlKCk7XG4gIGlmIChzY29wZSkge1xuICAgIHNjb3BlLnVwZGF0ZShvcHRpb25zLmluaXRpYWxTY29wZSk7XG4gIH1cblxuICBjb25zdCBjbGllbnQgPSBuZXcgY2xpZW50Q2xhc3Mob3B0aW9ucyk7XG4gIGh1Yi5iaW5kQ2xpZW50KGNsaWVudCk7XG59XG5cbmV4cG9ydCB7IGluaXRBbmRCaW5kIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZGsuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/sdk.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/session.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/session.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"closeSession\": function() { return /* binding */ closeSession; },\n/* harmony export */   \"makeSession\": function() { return /* binding */ makeSession; },\n/* harmony export */   \"updateSession\": function() { return /* binding */ updateSession; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  const session = {\n    sid: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampInSeconds)();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\n\n//# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/session.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/sessionflusher.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/sessionflusher.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SessionFlusher\": function() { return /* binding */ SessionFlusher; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n\n/**\n * @inheritdoc\n */\nclass SessionFlusher  {\n    __init() {this.flushTimeout = 60;}\n   __init2() {this._pendingAggregates = {};}\n\n   __init3() {this._isEnabled = true;}\n\n   constructor(client, attrs) {SessionFlusher.prototype.__init.call(this);SessionFlusher.prototype.__init2.call(this);SessionFlusher.prototype.__init3.call(this);\n    this._client = client;\n    // Call to setInterval, so that flush is called every 60 seconds\n    this._intervalId = setInterval(() => this.flush(), this.flushTimeout * 1000);\n    this._sessionAttrs = attrs;\n  }\n\n  /** Checks if `pendingAggregates` has entries, and if it does flushes them by calling `sendSession` */\n   flush() {\n    const sessionAggregates = this.getSessionAggregates();\n    if (sessionAggregates.aggregates.length === 0) {\n      return;\n    }\n    this._pendingAggregates = {};\n    this._client.sendSession(sessionAggregates);\n  }\n\n  /** Massages the entries in `pendingAggregates` and returns aggregated sessions */\n   getSessionAggregates() {\n    const aggregates = Object.keys(this._pendingAggregates).map((key) => {\n      return this._pendingAggregates[parseInt(key)];\n    });\n\n    const sessionAggregates = {\n      attrs: this._sessionAttrs,\n      aggregates,\n    };\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(sessionAggregates);\n  }\n\n  /** JSDoc */\n   close() {\n    clearInterval(this._intervalId);\n    this._isEnabled = false;\n    this.flush();\n  }\n\n  /**\n   * Wrapper function for _incrementSessionStatusCount that checks if the instance of SessionFlusher is enabled then\n   * fetches the session status of the request from `Scope.getRequestSession().status` on the scope and passes them to\n   * `_incrementSessionStatusCount` along with the start date\n   */\n   incrementSessionStatusCount() {\n    if (!this._isEnabled) {\n      return;\n    }\n    const scope = (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getScope();\n    const requestSession = scope && scope.getRequestSession();\n\n    if (requestSession && requestSession.status) {\n      this._incrementSessionStatusCount(requestSession.status, new Date());\n      // This is not entirely necessarily but is added as a safe guard to indicate the bounds of a request and so in\n      // case captureRequestSession is called more than once to prevent double count\n      if (scope) {\n        scope.setRequestSession(undefined);\n      }\n      /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n    }\n  }\n\n  /**\n   * Increments status bucket in pendingAggregates buffer (internal state) corresponding to status of\n   * the session received\n   */\n   _incrementSessionStatusCount(status, date) {\n    // Truncate minutes and seconds on Session Started attribute to have one minute bucket keys\n    const sessionStartedTrunc = new Date(date).setSeconds(0, 0);\n    this._pendingAggregates[sessionStartedTrunc] = this._pendingAggregates[sessionStartedTrunc] || {};\n\n    // corresponds to aggregated sessions in one specific minute bucket\n    // for example, {\"started\":\"2021-03-16T08:00:00.000Z\",\"exited\":4, \"errored\": 1}\n    const aggregationCounts = this._pendingAggregates[sessionStartedTrunc];\n    if (!aggregationCounts.started) {\n      aggregationCounts.started = new Date(sessionStartedTrunc).toISOString();\n    }\n\n    switch (status) {\n      case 'errored':\n        aggregationCounts.errored = (aggregationCounts.errored || 0) + 1;\n        return aggregationCounts.errored;\n      case 'ok':\n        aggregationCounts.exited = (aggregationCounts.exited || 0) + 1;\n        return aggregationCounts.exited;\n      default:\n        aggregationCounts.crashed = (aggregationCounts.crashed || 0) + 1;\n        return aggregationCounts.crashed;\n    }\n  }\n}\n\n\n//# sourceMappingURL=sessionflusher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS9zZXNzaW9uZmx1c2hlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDVDs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2QsY0FBYzs7QUFFZCxjQUFjOztBQUVkLCtCQUErQiwyQ0FBMkMsNENBQTRDO0FBQ3RIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0VBQWlCO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0RBQWE7QUFDL0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vc2Vzc2lvbmZsdXNoZXIuanM/YjBkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkcm9wVW5kZWZpbmVkS2V5cyB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0Q3VycmVudEh1YiB9IGZyb20gJy4vaHViLmpzJztcblxuLyoqXG4gKiBAaW5oZXJpdGRvY1xuICovXG5jbGFzcyBTZXNzaW9uRmx1c2hlciAge1xuICAgIF9faW5pdCgpIHt0aGlzLmZsdXNoVGltZW91dCA9IDYwO31cbiAgIF9faW5pdDIoKSB7dGhpcy5fcGVuZGluZ0FnZ3JlZ2F0ZXMgPSB7fTt9XG5cbiAgIF9faW5pdDMoKSB7dGhpcy5faXNFbmFibGVkID0gdHJ1ZTt9XG5cbiAgIGNvbnN0cnVjdG9yKGNsaWVudCwgYXR0cnMpIHtTZXNzaW9uRmx1c2hlci5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7U2Vzc2lvbkZsdXNoZXIucHJvdG90eXBlLl9faW5pdDIuY2FsbCh0aGlzKTtTZXNzaW9uRmx1c2hlci5wcm90b3R5cGUuX19pbml0My5jYWxsKHRoaXMpO1xuICAgIHRoaXMuX2NsaWVudCA9IGNsaWVudDtcbiAgICAvLyBDYWxsIHRvIHNldEludGVydmFsLCBzbyB0aGF0IGZsdXNoIGlzIGNhbGxlZCBldmVyeSA2MCBzZWNvbmRzXG4gICAgdGhpcy5faW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCgpID0+IHRoaXMuZmx1c2goKSwgdGhpcy5mbHVzaFRpbWVvdXQgKiAxMDAwKTtcbiAgICB0aGlzLl9zZXNzaW9uQXR0cnMgPSBhdHRycztcbiAgfVxuXG4gIC8qKiBDaGVja3MgaWYgYHBlbmRpbmdBZ2dyZWdhdGVzYCBoYXMgZW50cmllcywgYW5kIGlmIGl0IGRvZXMgZmx1c2hlcyB0aGVtIGJ5IGNhbGxpbmcgYHNlbmRTZXNzaW9uYCAqL1xuICAgZmx1c2goKSB7XG4gICAgY29uc3Qgc2Vzc2lvbkFnZ3JlZ2F0ZXMgPSB0aGlzLmdldFNlc3Npb25BZ2dyZWdhdGVzKCk7XG4gICAgaWYgKHNlc3Npb25BZ2dyZWdhdGVzLmFnZ3JlZ2F0ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuX3BlbmRpbmdBZ2dyZWdhdGVzID0ge307XG4gICAgdGhpcy5fY2xpZW50LnNlbmRTZXNzaW9uKHNlc3Npb25BZ2dyZWdhdGVzKTtcbiAgfVxuXG4gIC8qKiBNYXNzYWdlcyB0aGUgZW50cmllcyBpbiBgcGVuZGluZ0FnZ3JlZ2F0ZXNgIGFuZCByZXR1cm5zIGFnZ3JlZ2F0ZWQgc2Vzc2lvbnMgKi9cbiAgIGdldFNlc3Npb25BZ2dyZWdhdGVzKCkge1xuICAgIGNvbnN0IGFnZ3JlZ2F0ZXMgPSBPYmplY3Qua2V5cyh0aGlzLl9wZW5kaW5nQWdncmVnYXRlcykubWFwKChrZXkpID0+IHtcbiAgICAgIHJldHVybiB0aGlzLl9wZW5kaW5nQWdncmVnYXRlc1twYXJzZUludChrZXkpXTtcbiAgICB9KTtcblxuICAgIGNvbnN0IHNlc3Npb25BZ2dyZWdhdGVzID0ge1xuICAgICAgYXR0cnM6IHRoaXMuX3Nlc3Npb25BdHRycyxcbiAgICAgIGFnZ3JlZ2F0ZXMsXG4gICAgfTtcbiAgICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoc2Vzc2lvbkFnZ3JlZ2F0ZXMpO1xuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICBjbG9zZSgpIHtcbiAgICBjbGVhckludGVydmFsKHRoaXMuX2ludGVydmFsSWQpO1xuICAgIHRoaXMuX2lzRW5hYmxlZCA9IGZhbHNlO1xuICAgIHRoaXMuZmx1c2goKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXcmFwcGVyIGZ1bmN0aW9uIGZvciBfaW5jcmVtZW50U2Vzc2lvblN0YXR1c0NvdW50IHRoYXQgY2hlY2tzIGlmIHRoZSBpbnN0YW5jZSBvZiBTZXNzaW9uRmx1c2hlciBpcyBlbmFibGVkIHRoZW5cbiAgICogZmV0Y2hlcyB0aGUgc2Vzc2lvbiBzdGF0dXMgb2YgdGhlIHJlcXVlc3QgZnJvbSBgU2NvcGUuZ2V0UmVxdWVzdFNlc3Npb24oKS5zdGF0dXNgIG9uIHRoZSBzY29wZSBhbmQgcGFzc2VzIHRoZW0gdG9cbiAgICogYF9pbmNyZW1lbnRTZXNzaW9uU3RhdHVzQ291bnRgIGFsb25nIHdpdGggdGhlIHN0YXJ0IGRhdGVcbiAgICovXG4gICBpbmNyZW1lbnRTZXNzaW9uU3RhdHVzQ291bnQoKSB7XG4gICAgaWYgKCF0aGlzLl9pc0VuYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3Qgc2NvcGUgPSBnZXRDdXJyZW50SHViKCkuZ2V0U2NvcGUoKTtcbiAgICBjb25zdCByZXF1ZXN0U2Vzc2lvbiA9IHNjb3BlICYmIHNjb3BlLmdldFJlcXVlc3RTZXNzaW9uKCk7XG5cbiAgICBpZiAocmVxdWVzdFNlc3Npb24gJiYgcmVxdWVzdFNlc3Npb24uc3RhdHVzKSB7XG4gICAgICB0aGlzLl9pbmNyZW1lbnRTZXNzaW9uU3RhdHVzQ291bnQocmVxdWVzdFNlc3Npb24uc3RhdHVzLCBuZXcgRGF0ZSgpKTtcbiAgICAgIC8vIFRoaXMgaXMgbm90IGVudGlyZWx5IG5lY2Vzc2FyaWx5IGJ1dCBpcyBhZGRlZCBhcyBhIHNhZmUgZ3VhcmQgdG8gaW5kaWNhdGUgdGhlIGJvdW5kcyBvZiBhIHJlcXVlc3QgYW5kIHNvIGluXG4gICAgICAvLyBjYXNlIGNhcHR1cmVSZXF1ZXN0U2Vzc2lvbiBpcyBjYWxsZWQgbW9yZSB0aGFuIG9uY2UgdG8gcHJldmVudCBkb3VibGUgY291bnRcbiAgICAgIGlmIChzY29wZSkge1xuICAgICAgICBzY29wZS5zZXRSZXF1ZXN0U2Vzc2lvbih1bmRlZmluZWQpO1xuICAgICAgfVxuICAgICAgLyogZXNsaW50LWVuYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MgKi9cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogSW5jcmVtZW50cyBzdGF0dXMgYnVja2V0IGluIHBlbmRpbmdBZ2dyZWdhdGVzIGJ1ZmZlciAoaW50ZXJuYWwgc3RhdGUpIGNvcnJlc3BvbmRpbmcgdG8gc3RhdHVzIG9mXG4gICAqIHRoZSBzZXNzaW9uIHJlY2VpdmVkXG4gICAqL1xuICAgX2luY3JlbWVudFNlc3Npb25TdGF0dXNDb3VudChzdGF0dXMsIGRhdGUpIHtcbiAgICAvLyBUcnVuY2F0ZSBtaW51dGVzIGFuZCBzZWNvbmRzIG9uIFNlc3Npb24gU3RhcnRlZCBhdHRyaWJ1dGUgdG8gaGF2ZSBvbmUgbWludXRlIGJ1Y2tldCBrZXlzXG4gICAgY29uc3Qgc2Vzc2lvblN0YXJ0ZWRUcnVuYyA9IG5ldyBEYXRlKGRhdGUpLnNldFNlY29uZHMoMCwgMCk7XG4gICAgdGhpcy5fcGVuZGluZ0FnZ3JlZ2F0ZXNbc2Vzc2lvblN0YXJ0ZWRUcnVuY10gPSB0aGlzLl9wZW5kaW5nQWdncmVnYXRlc1tzZXNzaW9uU3RhcnRlZFRydW5jXSB8fCB7fTtcblxuICAgIC8vIGNvcnJlc3BvbmRzIHRvIGFnZ3JlZ2F0ZWQgc2Vzc2lvbnMgaW4gb25lIHNwZWNpZmljIG1pbnV0ZSBidWNrZXRcbiAgICAvLyBmb3IgZXhhbXBsZSwge1wic3RhcnRlZFwiOlwiMjAyMS0wMy0xNlQwODowMDowMC4wMDBaXCIsXCJleGl0ZWRcIjo0LCBcImVycm9yZWRcIjogMX1cbiAgICBjb25zdCBhZ2dyZWdhdGlvbkNvdW50cyA9IHRoaXMuX3BlbmRpbmdBZ2dyZWdhdGVzW3Nlc3Npb25TdGFydGVkVHJ1bmNdO1xuICAgIGlmICghYWdncmVnYXRpb25Db3VudHMuc3RhcnRlZCkge1xuICAgICAgYWdncmVnYXRpb25Db3VudHMuc3RhcnRlZCA9IG5ldyBEYXRlKHNlc3Npb25TdGFydGVkVHJ1bmMpLnRvSVNPU3RyaW5nKCk7XG4gICAgfVxuXG4gICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgIGNhc2UgJ2Vycm9yZWQnOlxuICAgICAgICBhZ2dyZWdhdGlvbkNvdW50cy5lcnJvcmVkID0gKGFnZ3JlZ2F0aW9uQ291bnRzLmVycm9yZWQgfHwgMCkgKyAxO1xuICAgICAgICByZXR1cm4gYWdncmVnYXRpb25Db3VudHMuZXJyb3JlZDtcbiAgICAgIGNhc2UgJ29rJzpcbiAgICAgICAgYWdncmVnYXRpb25Db3VudHMuZXhpdGVkID0gKGFnZ3JlZ2F0aW9uQ291bnRzLmV4aXRlZCB8fCAwKSArIDE7XG4gICAgICAgIHJldHVybiBhZ2dyZWdhdGlvbkNvdW50cy5leGl0ZWQ7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBhZ2dyZWdhdGlvbkNvdW50cy5jcmFzaGVkID0gKGFnZ3JlZ2F0aW9uQ291bnRzLmNyYXNoZWQgfHwgMCkgKyAxO1xuICAgICAgICByZXR1cm4gYWdncmVnYXRpb25Db3VudHMuY3Jhc2hlZDtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgU2Vzc2lvbkZsdXNoZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb25mbHVzaGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/sessionflusher.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/hubextensions.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/hubextensions.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addTracingExtensions\": function() { return /* binding */ addTracingExtensions; },\n/* harmony export */   \"startIdleTransaction\": function() { return /* binding */ startIdleTransaction; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/hasTracingEnabled.js */ \"./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _idletransaction_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./idletransaction.js */ \"./node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction.js */ \"./node_modules/@sentry/core/esm/tracing/transaction.js\");\n\n\n\n\n\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  if (scope) {\n    const span = scope.getSpan();\n    if (span) {\n      return {\n        'sentry-trace': span.toTraceparent(),\n      };\n    }\n  }\n  return {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!(0,_utils_hasTracingEnabled_js__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isNaN)(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new _idletransaction_js__WEBPACK_IMPORTED_MODULE_3__.IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = (0,_hub_js__WEBPACK_IMPORTED_MODULE_4__.getMainCarrier)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n}\n\n\n//# sourceMappingURL=hubextensions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/hubextensions.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/idletransaction.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/idletransaction.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IdleTransaction\": function() { return /* binding */ IdleTransaction; },\n/* harmony export */   \"IdleTransactionSpanRecorder\": function() { return /* binding */ IdleTransactionSpanRecorder; },\n/* harmony export */   \"TRACING_DEFAULTS\": function() { return /* binding */ TRACING_DEFAULTS; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transaction.js */ \"./node_modules/@sentry/core/esm/tracing/transaction.js\");\n\n\n\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends _transaction_js__WEBPACK_IMPORTED_MODULE_2__.Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n   __init4() {this._idleTimeoutCanceledPermanently = false;}\n\n    __init5() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = TRACING_DEFAULTS.finalTimeout,\n      _heartbeatInterval = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);IdleTransaction.prototype.__init5.call(this);\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._restartIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n   cancelIdleTimeout(\n    endTimestamp,\n    {\n      restartOnChildSpanChange,\n    }\n\n = {\n      restartOnChildSpanChange: true,\n    },\n  ) {\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n      this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this.finish(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n   _restartIdleTimeout(endTimestamp) {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this.cancelIdleTimeout();\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)();\n      if (this._idleTimeoutCanceledPermanently) {\n        this.finish(endTimestamp);\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampWithMs is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  const scope = hub.getScope();\n  if (scope) {\n    const transaction = scope.getTransaction();\n    if (transaction) {\n      scope.setSpan(undefined);\n    }\n  }\n}\n\n\n//# sourceMappingURL=idletransaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL2lkbGV0cmFuc2FjdGlvbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBd0Q7QUFDZjtBQUNNOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxrREFBWTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUNBQW1DLGlDQUFpQzs7QUFFdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEVBQThFLDhEQUFlO0FBQzdGO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix3REFBVztBQUN6QztBQUNBLGFBQWE7O0FBRWI7O0FBRUE7QUFDQSxjQUFjOztBQUVkO0FBQ0EsY0FBYzs7QUFFZDtBQUNBLGNBQWM7O0FBRWQsZUFBZTs7QUFFZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MseUJBQXlCLGlDQUFpQyxtQ0FBbUMsNkNBQTZDLHlCQUF5Qiw0Q0FBNEMsNkNBQTZDLDZDQUE2Qyw2Q0FBNkM7QUFDOVg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1RUFBdUUscURBQVUsZ0RBQWdELFlBQVk7QUFDN0k7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUEsT0FBTyxhQUFhO0FBQ3BCLHlCQUF5Qiw4REFBZTtBQUN4QztBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRLHFEQUFVOztBQUVsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxxREFBVTtBQUN0Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFVO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQLHVFQUF1RSxxREFBVTtBQUNqRixNQUFNO0FBQ04sdUVBQXVFLHFEQUFVO0FBQ2pGOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHVFQUF1RSxxREFBVTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxRUFBcUUscURBQVUsNEJBQTRCLE9BQU87QUFDbEg7QUFDQSxxRUFBcUUscURBQVU7QUFDL0U7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLHFEQUFVLDBCQUEwQixPQUFPO0FBQ2xIO0FBQ0E7QUFDQSx1RUFBdUUscURBQVU7QUFDakY7O0FBRUE7QUFDQSwyQkFBMkIsOERBQWU7QUFDMUM7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHVFQUF1RSxxREFBVTtBQUNqRjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxxREFBVSwwQ0FBMEMsdUJBQXVCO0FBQ2hKO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBFO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3RyYWNpbmcvaWRsZXRyYW5zYWN0aW9uLmpzPzY5MTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nZ2VyLCB0aW1lc3RhbXBXaXRoTXMgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IFNwYW5SZWNvcmRlciB9IGZyb20gJy4vc3Bhbi5qcyc7XG5pbXBvcnQgeyBUcmFuc2FjdGlvbiB9IGZyb20gJy4vdHJhbnNhY3Rpb24uanMnO1xuXG5jb25zdCBUUkFDSU5HX0RFRkFVTFRTID0ge1xuICBpZGxlVGltZW91dDogMTAwMCxcbiAgZmluYWxUaW1lb3V0OiAzMDAwMCxcbiAgaGVhcnRiZWF0SW50ZXJ2YWw6IDUwMDAsXG59O1xuXG4vKipcbiAqIEBpbmhlcml0RG9jXG4gKi9cbmNsYXNzIElkbGVUcmFuc2FjdGlvblNwYW5SZWNvcmRlciBleHRlbmRzIFNwYW5SZWNvcmRlciB7XG4gICBjb25zdHJ1Y3RvcihcbiAgICAgIF9wdXNoQWN0aXZpdHksXG4gICAgICBfcG9wQWN0aXZpdHksXG4gICAgIHRyYW5zYWN0aW9uU3BhbklkLFxuICAgIG1heGxlbixcbiAgKSB7XG4gICAgc3VwZXIobWF4bGVuKTt0aGlzLl9wdXNoQWN0aXZpdHkgPSBfcHVzaEFjdGl2aXR5O3RoaXMuX3BvcEFjdGl2aXR5ID0gX3BvcEFjdGl2aXR5O3RoaXMudHJhbnNhY3Rpb25TcGFuSWQgPSB0cmFuc2FjdGlvblNwYW5JZDsgIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBhZGQoc3Bhbikge1xuICAgIC8vIFdlIHNob3VsZCBtYWtlIHN1cmUgd2UgZG8gbm90IHB1c2ggYW5kIHBvcCBhY3Rpdml0aWVzIGZvclxuICAgIC8vIHRoZSB0cmFuc2FjdGlvbiB0aGF0IHRoaXMgc3BhbiByZWNvcmRlciBiZWxvbmdzIHRvLlxuICAgIGlmIChzcGFuLnNwYW5JZCAhPT0gdGhpcy50cmFuc2FjdGlvblNwYW5JZCkge1xuICAgICAgLy8gV2UgcGF0Y2ggc3Bhbi5maW5pc2goKSB0byBwb3AgYW4gYWN0aXZpdHkgYWZ0ZXIgc2V0dGluZyBhbiBlbmRUaW1lc3RhbXAuXG4gICAgICBzcGFuLmZpbmlzaCA9IChlbmRUaW1lc3RhbXApID0+IHtcbiAgICAgICAgc3Bhbi5lbmRUaW1lc3RhbXAgPSB0eXBlb2YgZW5kVGltZXN0YW1wID09PSAnbnVtYmVyJyA/IGVuZFRpbWVzdGFtcCA6IHRpbWVzdGFtcFdpdGhNcygpO1xuICAgICAgICB0aGlzLl9wb3BBY3Rpdml0eShzcGFuLnNwYW5JZCk7XG4gICAgICB9O1xuXG4gICAgICAvLyBXZSBzaG91bGQgb25seSBwdXNoIG5ldyBhY3Rpdml0aWVzIGlmIHRoZSBzcGFuIGRvZXMgbm90IGhhdmUgYW4gZW5kIHRpbWVzdGFtcC5cbiAgICAgIGlmIChzcGFuLmVuZFRpbWVzdGFtcCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMuX3B1c2hBY3Rpdml0eShzcGFuLnNwYW5JZCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3VwZXIuYWRkKHNwYW4pO1xuICB9XG59XG5cbi8qKlxuICogQW4gSWRsZVRyYW5zYWN0aW9uIGlzIGEgdHJhbnNhY3Rpb24gdGhhdCBhdXRvbWF0aWNhbGx5IGZpbmlzaGVzLiBJdCBkb2VzIHRoaXMgYnkgdHJhY2tpbmcgY2hpbGQgc3BhbnMgYXMgYWN0aXZpdGllcy5cbiAqIFlvdSBjYW4gaGF2ZSBtdWx0aXBsZSBJZGxlVHJhbnNhY3Rpb25zIGFjdGl2ZSwgYnV0IGlmIHRoZSBgb25TY29wZWAgb3B0aW9uIGlzIHNwZWNpZmllZCwgdGhlIGlkbGUgdHJhbnNhY3Rpb24gd2lsbFxuICogcHV0IGl0c2VsZiBvbiB0aGUgc2NvcGUgb24gY3JlYXRpb24uXG4gKi9cbmNsYXNzIElkbGVUcmFuc2FjdGlvbiBleHRlbmRzIFRyYW5zYWN0aW9uIHtcbiAgLy8gQWN0aXZpdGllcyBzdG9yZSBhIGxpc3Qgb2YgYWN0aXZlIHNwYW5zXG4gICBfX2luaXQoKSB7dGhpcy5hY3Rpdml0aWVzID0ge307fVxuXG4gIC8vIFRyYWNrIHN0YXRlIG9mIGFjdGl2aXRpZXMgaW4gcHJldmlvdXMgaGVhcnRiZWF0XG5cbiAgLy8gQW1vdW50IG9mIHRpbWVzIGhlYXJ0YmVhdCBoYXMgY291bnRlZC4gV2lsbCBjYXVzZSB0cmFuc2FjdGlvbiB0byBmaW5pc2ggYWZ0ZXIgMyBiZWF0cy5cbiAgIF9faW5pdDIoKSB7dGhpcy5faGVhcnRiZWF0Q291bnRlciA9IDA7fVxuXG4gIC8vIFdlIHNob3VsZCBub3QgdXNlIGhlYXJ0YmVhdCBpZiB3ZSBmaW5pc2hlZCBhIHRyYW5zYWN0aW9uXG4gICBfX2luaXQzKCkge3RoaXMuX2ZpbmlzaGVkID0gZmFsc2U7fVxuXG4gIC8vIElkbGUgdGltZW91dCB3YXMgY2FuY2VsZWQgYW5kIHdlIHNob3VsZCBmaW5pc2ggdGhlIHRyYW5zYWN0aW9uIHdpdGggdGhlIGxhc3Qgc3BhbiBlbmQuXG4gICBfX2luaXQ0KCkge3RoaXMuX2lkbGVUaW1lb3V0Q2FuY2VsZWRQZXJtYW5lbnRseSA9IGZhbHNlO31cblxuICAgIF9faW5pdDUoKSB7dGhpcy5fYmVmb3JlRmluaXNoQ2FsbGJhY2tzID0gW107fVxuXG4gIC8qKlxuICAgKiBUaW1lciB0aGF0IHRyYWNrcyBUcmFuc2FjdGlvbiBpZGxlVGltZW91dFxuICAgKi9cblxuICAgY29uc3RydWN0b3IoXG4gICAgdHJhbnNhY3Rpb25Db250ZXh0LFxuICAgICAgX2lkbGVIdWIsXG4gICAgLyoqXG4gICAgICogVGhlIHRpbWUgdG8gd2FpdCBpbiBtcyB1bnRpbCB0aGUgaWRsZSB0cmFuc2FjdGlvbiB3aWxsIGJlIGZpbmlzaGVkLiBUaGlzIHRpbWVyIGlzIHN0YXJ0ZWQgZWFjaCB0aW1lXG4gICAgICogdGhlcmUgYXJlIG5vIGFjdGl2ZSBzcGFucyBvbiB0aGlzIHRyYW5zYWN0aW9uLlxuICAgICAqL1xuICAgICAgX2lkbGVUaW1lb3V0ID0gVFJBQ0lOR19ERUZBVUxUUy5pZGxlVGltZW91dCxcbiAgICAvKipcbiAgICAgKiBUaGUgZmluYWwgdmFsdWUgaW4gbXMgdGhhdCBhIHRyYW5zYWN0aW9uIGNhbm5vdCBleGNlZWRcbiAgICAgKi9cbiAgICAgIF9maW5hbFRpbWVvdXQgPSBUUkFDSU5HX0RFRkFVTFRTLmZpbmFsVGltZW91dCxcbiAgICAgIF9oZWFydGJlYXRJbnRlcnZhbCA9IFRSQUNJTkdfREVGQVVMVFMuaGVhcnRiZWF0SW50ZXJ2YWwsXG4gICAgLy8gV2hldGhlciBvciBub3QgdGhlIHRyYW5zYWN0aW9uIHNob3VsZCBwdXQgaXRzZWxmIG9uIHRoZSBzY29wZSB3aGVuIGl0IHN0YXJ0cyBhbmQgcG9wIGl0c2VsZiBvZmYgd2hlbiBpdCBlbmRzXG4gICAgICBfb25TY29wZSA9IGZhbHNlLFxuICApIHtcbiAgICBzdXBlcih0cmFuc2FjdGlvbkNvbnRleHQsIF9pZGxlSHViKTt0aGlzLl9pZGxlSHViID0gX2lkbGVIdWI7dGhpcy5faWRsZVRpbWVvdXQgPSBfaWRsZVRpbWVvdXQ7dGhpcy5fZmluYWxUaW1lb3V0ID0gX2ZpbmFsVGltZW91dDt0aGlzLl9oZWFydGJlYXRJbnRlcnZhbCA9IF9oZWFydGJlYXRJbnRlcnZhbDt0aGlzLl9vblNjb3BlID0gX29uU2NvcGU7SWRsZVRyYW5zYWN0aW9uLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtJZGxlVHJhbnNhY3Rpb24ucHJvdG90eXBlLl9faW5pdDIuY2FsbCh0aGlzKTtJZGxlVHJhbnNhY3Rpb24ucHJvdG90eXBlLl9faW5pdDMuY2FsbCh0aGlzKTtJZGxlVHJhbnNhY3Rpb24ucHJvdG90eXBlLl9faW5pdDQuY2FsbCh0aGlzKTtJZGxlVHJhbnNhY3Rpb24ucHJvdG90eXBlLl9faW5pdDUuY2FsbCh0aGlzKTtcbiAgICBpZiAoX29uU2NvcGUpIHtcbiAgICAgIC8vIFRoZXJlIHNob3VsZCBvbmx5IGJlIG9uZSBhY3RpdmUgdHJhbnNhY3Rpb24gb24gdGhlIHNjb3BlXG4gICAgICBjbGVhckFjdGl2ZVRyYW5zYWN0aW9uKF9pZGxlSHViKTtcblxuICAgICAgLy8gV2Ugc2V0IHRoZSB0cmFuc2FjdGlvbiBoZXJlIG9uIHRoZSBzY29wZSBzbyBlcnJvciBldmVudHMgcGljayB1cCB0aGUgdHJhY2VcbiAgICAgIC8vIGNvbnRleHQgYW5kIGF0dGFjaCBpdCB0byB0aGUgZXJyb3IuXG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYFNldHRpbmcgaWRsZSB0cmFuc2FjdGlvbiBvbiBzY29wZS4gU3BhbiBJRDogJHt0aGlzLnNwYW5JZH1gKTtcbiAgICAgIF9pZGxlSHViLmNvbmZpZ3VyZVNjb3BlKHNjb3BlID0+IHNjb3BlLnNldFNwYW4odGhpcykpO1xuICAgIH1cblxuICAgIHRoaXMuX3Jlc3RhcnRJZGxlVGltZW91dCgpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLl9maW5pc2hlZCkge1xuICAgICAgICB0aGlzLnNldFN0YXR1cygnZGVhZGxpbmVfZXhjZWVkZWQnKTtcbiAgICAgICAgdGhpcy5maW5pc2goKTtcbiAgICAgIH1cbiAgICB9LCB0aGlzLl9maW5hbFRpbWVvdXQpO1xuICB9XG5cbiAgLyoqIHtAaW5oZXJpdERvY30gKi9cbiAgIGZpbmlzaChlbmRUaW1lc3RhbXAgPSB0aW1lc3RhbXBXaXRoTXMoKSkge1xuICAgIHRoaXMuX2ZpbmlzaGVkID0gdHJ1ZTtcbiAgICB0aGlzLmFjdGl2aXRpZXMgPSB7fTtcblxuICAgIGlmICh0aGlzLnNwYW5SZWNvcmRlcikge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJlxuICAgICAgICBsb2dnZXIubG9nKCdbVHJhY2luZ10gZmluaXNoaW5nIElkbGVUcmFuc2FjdGlvbicsIG5ldyBEYXRlKGVuZFRpbWVzdGFtcCAqIDEwMDApLnRvSVNPU3RyaW5nKCksIHRoaXMub3ApO1xuXG4gICAgICBmb3IgKGNvbnN0IGNhbGxiYWNrIG9mIHRoaXMuX2JlZm9yZUZpbmlzaENhbGxiYWNrcykge1xuICAgICAgICBjYWxsYmFjayh0aGlzLCBlbmRUaW1lc3RhbXApO1xuICAgICAgfVxuXG4gICAgICB0aGlzLnNwYW5SZWNvcmRlci5zcGFucyA9IHRoaXMuc3BhblJlY29yZGVyLnNwYW5zLmZpbHRlcigoc3BhbikgPT4ge1xuICAgICAgICAvLyBJZiB3ZSBhcmUgZGVhbGluZyB3aXRoIHRoZSB0cmFuc2FjdGlvbiBpdHNlbGYsIHdlIGp1c3QgcmV0dXJuIGl0XG4gICAgICAgIGlmIChzcGFuLnNwYW5JZCA9PT0gdGhpcy5zcGFuSWQpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFdlIGNhbmNlbCBhbGwgcGVuZGluZyBzcGFucyB3aXRoIHN0YXR1cyBcImNhbmNlbGxlZFwiIHRvIGluZGljYXRlIHRoZSBpZGxlIHRyYW5zYWN0aW9uIHdhcyBmaW5pc2hlZCBlYXJseVxuICAgICAgICBpZiAoIXNwYW4uZW5kVGltZXN0YW1wKSB7XG4gICAgICAgICAgc3Bhbi5lbmRUaW1lc3RhbXAgPSBlbmRUaW1lc3RhbXA7XG4gICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoJ2NhbmNlbGxlZCcpO1xuICAgICAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiZcbiAgICAgICAgICAgIGxvZ2dlci5sb2coJ1tUcmFjaW5nXSBjYW5jZWxsaW5nIHNwYW4gc2luY2UgdHJhbnNhY3Rpb24gZW5kZWQgZWFybHknLCBKU09OLnN0cmluZ2lmeShzcGFuLCB1bmRlZmluZWQsIDIpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGtlZXBTcGFuID0gc3Bhbi5zdGFydFRpbWVzdGFtcCA8IGVuZFRpbWVzdGFtcDtcbiAgICAgICAgaWYgKCFrZWVwU3Bhbikge1xuICAgICAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiZcbiAgICAgICAgICAgIGxvZ2dlci5sb2coXG4gICAgICAgICAgICAgICdbVHJhY2luZ10gZGlzY2FyZGluZyBTcGFuIHNpbmNlIGl0IGhhcHBlbmVkIGFmdGVyIFRyYW5zYWN0aW9uIHdhcyBmaW5pc2hlZCcsXG4gICAgICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHNwYW4sIHVuZGVmaW5lZCwgMiksXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBrZWVwU3BhbjtcbiAgICAgIH0pO1xuXG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coJ1tUcmFjaW5nXSBmbHVzaGluZyBJZGxlVHJhbnNhY3Rpb24nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIubG9nKCdbVHJhY2luZ10gTm8gYWN0aXZlIElkbGVUcmFuc2FjdGlvbicpO1xuICAgIH1cblxuICAgIC8vIGlmIGB0aGlzLl9vblNjb3BlYCBpcyBgdHJ1ZWAsIHRoZSB0cmFuc2FjdGlvbiBwdXQgaXRzZWxmIG9uIHRoZSBzY29wZSB3aGVuIGl0IHN0YXJ0ZWRcbiAgICBpZiAodGhpcy5fb25TY29wZSkge1xuICAgICAgY2xlYXJBY3RpdmVUcmFuc2FjdGlvbih0aGlzLl9pZGxlSHViKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3VwZXIuZmluaXNoKGVuZFRpbWVzdGFtcCk7XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBjYWxsYmFjayBmdW5jdGlvbiB0aGF0IGdldHMgZXhjZWN1dGVkIGJlZm9yZSB0aGUgdHJhbnNhY3Rpb24gZmluaXNoZXMuXG4gICAqIFVzZWZ1bCBmb3IgY2xlYW51cCBvciBpZiB5b3Ugd2FudCB0byBhZGQgYW55IGFkZGl0aW9uYWwgc3BhbnMgYmFzZWQgb24gY3VycmVudCBjb250ZXh0LlxuICAgKlxuICAgKiBUaGlzIGlzIGV4cG9zZWQgYmVjYXVzZSB1c2VycyBoYXZlIG5vIG90aGVyIHdheSBvZiBydW5uaW5nIHNvbWV0aGluZyBiZWZvcmUgYW4gaWRsZSB0cmFuc2FjdGlvblxuICAgKiBmaW5pc2hlcy5cbiAgICovXG4gICByZWdpc3RlckJlZm9yZUZpbmlzaENhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5fYmVmb3JlRmluaXNoQ2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgaW5pdFNwYW5SZWNvcmRlcihtYXhsZW4pIHtcbiAgICBpZiAoIXRoaXMuc3BhblJlY29yZGVyKSB7XG4gICAgICBjb25zdCBwdXNoQWN0aXZpdHkgPSAoaWQpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX2ZpbmlzaGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3B1c2hBY3Rpdml0eShpZCk7XG4gICAgICB9O1xuICAgICAgY29uc3QgcG9wQWN0aXZpdHkgPSAoaWQpID0+IHtcbiAgICAgICAgaWYgKHRoaXMuX2ZpbmlzaGVkKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3BvcEFjdGl2aXR5KGlkKTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuc3BhblJlY29yZGVyID0gbmV3IElkbGVUcmFuc2FjdGlvblNwYW5SZWNvcmRlcihwdXNoQWN0aXZpdHksIHBvcEFjdGl2aXR5LCB0aGlzLnNwYW5JZCwgbWF4bGVuKTtcblxuICAgICAgLy8gU3RhcnQgaGVhcnRiZWF0IHNvIHRoYXQgdHJhbnNhY3Rpb25zIGRvIG5vdCBydW4gZm9yZXZlci5cbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZygnU3RhcnRpbmcgaGVhcnRiZWF0Jyk7XG4gICAgICB0aGlzLl9waW5nSGVhcnRiZWF0KCk7XG4gICAgfVxuICAgIHRoaXMuc3BhblJlY29yZGVyLmFkZCh0aGlzKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYW5jZWxzIHRoZSBleGlzdGluZyBpZGxlIHRpbWVvdXQsIGlmIHRoZXJlIGlzIG9uZS5cbiAgICogQHBhcmFtIHJlc3RhcnRPbkNoaWxkU3BhbkNoYW5nZSBEZWZhdWx0IGlzIGB0cnVlYC5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJZiBzZXQgdG8gZmFsc2UgdGhlIHRyYW5zYWN0aW9uIHdpbGwgZW5kXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCB0aGUgbGFzdCBjaGlsZCBzcGFuLlxuICAgKi9cbiAgIGNhbmNlbElkbGVUaW1lb3V0KFxuICAgIGVuZFRpbWVzdGFtcCxcbiAgICB7XG4gICAgICByZXN0YXJ0T25DaGlsZFNwYW5DaGFuZ2UsXG4gICAgfVxuXG4gPSB7XG4gICAgICByZXN0YXJ0T25DaGlsZFNwYW5DaGFuZ2U6IHRydWUsXG4gICAgfSxcbiAgKSB7XG4gICAgaWYgKHRoaXMuX2lkbGVUaW1lb3V0SUQpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl9pZGxlVGltZW91dElEKTtcbiAgICAgIHRoaXMuX2lkbGVUaW1lb3V0SUQgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLl9pZGxlVGltZW91dENhbmNlbGVkUGVybWFuZW50bHkgPSByZXN0YXJ0T25DaGlsZFNwYW5DaGFuZ2UgPT09IGZhbHNlO1xuXG4gICAgICBpZiAoT2JqZWN0LmtleXModGhpcy5hY3Rpdml0aWVzKS5sZW5ndGggPT09IDAgJiYgdGhpcy5faWRsZVRpbWVvdXRDYW5jZWxlZFBlcm1hbmVudGx5KSB7XG4gICAgICAgIHRoaXMuZmluaXNoKGVuZFRpbWVzdGFtcCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlc3RhcnRzIGlkbGUgdGltZW91dCwgaWYgdGhlcmUgaXMgbm8gcnVubmluZyBpZGxlIHRpbWVvdXQgaXQgd2lsbCBzdGFydCBvbmUuXG4gICAqL1xuICAgX3Jlc3RhcnRJZGxlVGltZW91dChlbmRUaW1lc3RhbXApIHtcbiAgICB0aGlzLmNhbmNlbElkbGVUaW1lb3V0KCk7XG4gICAgdGhpcy5faWRsZVRpbWVvdXRJRCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLl9maW5pc2hlZCAmJiBPYmplY3Qua2V5cyh0aGlzLmFjdGl2aXRpZXMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aGlzLmZpbmlzaChlbmRUaW1lc3RhbXApO1xuICAgICAgfVxuICAgIH0sIHRoaXMuX2lkbGVUaW1lb3V0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTdGFydCB0cmFja2luZyBhIHNwZWNpZmljIGFjdGl2aXR5LlxuICAgKiBAcGFyYW0gc3BhbklkIFRoZSBzcGFuIGlkIHRoYXQgcmVwcmVzZW50cyB0aGUgYWN0aXZpdHlcbiAgICovXG4gICBfcHVzaEFjdGl2aXR5KHNwYW5JZCkge1xuICAgIHRoaXMuY2FuY2VsSWRsZVRpbWVvdXQoKTtcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYFtUcmFjaW5nXSBwdXNoQWN0aXZpdHk6ICR7c3BhbklkfWApO1xuICAgIHRoaXMuYWN0aXZpdGllc1tzcGFuSWRdID0gdHJ1ZTtcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coJ1tUcmFjaW5nXSBuZXcgYWN0aXZpdGllcyBjb3VudCcsIE9iamVjdC5rZXlzKHRoaXMuYWN0aXZpdGllcykubGVuZ3RoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYW4gYWN0aXZpdHkgZnJvbSB1c2FnZVxuICAgKiBAcGFyYW0gc3BhbklkIFRoZSBzcGFuIGlkIHRoYXQgcmVwcmVzZW50cyB0aGUgYWN0aXZpdHlcbiAgICovXG4gICBfcG9wQWN0aXZpdHkoc3BhbklkKSB7XG4gICAgaWYgKHRoaXMuYWN0aXZpdGllc1tzcGFuSWRdKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYFtUcmFjaW5nXSBwb3BBY3Rpdml0eSAke3NwYW5JZH1gKTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZHluYW1pYy1kZWxldGVcbiAgICAgIGRlbGV0ZSB0aGlzLmFjdGl2aXRpZXNbc3BhbklkXTtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZygnW1RyYWNpbmddIG5ldyBhY3Rpdml0aWVzIGNvdW50JywgT2JqZWN0LmtleXModGhpcy5hY3Rpdml0aWVzKS5sZW5ndGgpO1xuICAgIH1cblxuICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLmFjdGl2aXRpZXMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY29uc3QgZW5kVGltZXN0YW1wID0gdGltZXN0YW1wV2l0aE1zKCk7XG4gICAgICBpZiAodGhpcy5faWRsZVRpbWVvdXRDYW5jZWxlZFBlcm1hbmVudGx5KSB7XG4gICAgICAgIHRoaXMuZmluaXNoKGVuZFRpbWVzdGFtcCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBXZSBuZWVkIHRvIGFkZCB0aGUgdGltZW91dCBoZXJlIHRvIGhhdmUgdGhlIHJlYWwgZW5kdGltZXN0YW1wIG9mIHRoZSB0cmFuc2FjdGlvblxuICAgICAgICAvLyBSZW1lbWJlciB0aW1lc3RhbXBXaXRoTXMgaXMgaW4gc2Vjb25kcywgdGltZW91dCBpcyBpbiBtc1xuICAgICAgICB0aGlzLl9yZXN0YXJ0SWRsZVRpbWVvdXQoZW5kVGltZXN0YW1wICsgdGhpcy5faWRsZVRpbWVvdXQgLyAxMDAwKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2tzIHdoZW4gZW50cmllcyBvZiB0aGlzLmFjdGl2aXRpZXMgYXJlIG5vdCBjaGFuZ2luZyBmb3IgMyBiZWF0cy5cbiAgICogSWYgdGhpcyBvY2N1cnMgd2UgZmluaXNoIHRoZSB0cmFuc2FjdGlvbi5cbiAgICovXG4gICBfYmVhdCgpIHtcbiAgICAvLyBXZSBzaG91bGQgbm90IGJlIHJ1bm5pbmcgaGVhcnRiZWF0IGlmIHRoZSBpZGxlIHRyYW5zYWN0aW9uIGlzIGZpbmlzaGVkLlxuICAgIGlmICh0aGlzLl9maW5pc2hlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGhlYXJ0YmVhdFN0cmluZyA9IE9iamVjdC5rZXlzKHRoaXMuYWN0aXZpdGllcykuam9pbignJyk7XG5cbiAgICBpZiAoaGVhcnRiZWF0U3RyaW5nID09PSB0aGlzLl9wcmV2SGVhcnRiZWF0U3RyaW5nKSB7XG4gICAgICB0aGlzLl9oZWFydGJlYXRDb3VudGVyKys7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hlYXJ0YmVhdENvdW50ZXIgPSAxO1xuICAgIH1cblxuICAgIHRoaXMuX3ByZXZIZWFydGJlYXRTdHJpbmcgPSBoZWFydGJlYXRTdHJpbmc7XG5cbiAgICBpZiAodGhpcy5faGVhcnRiZWF0Q291bnRlciA+PSAzKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coJ1tUcmFjaW5nXSBUcmFuc2FjdGlvbiBmaW5pc2hlZCBiZWNhdXNlIG9mIG5vIGNoYW5nZSBmb3IgMyBoZWFydCBiZWF0cycpO1xuICAgICAgdGhpcy5zZXRTdGF0dXMoJ2RlYWRsaW5lX2V4Y2VlZGVkJyk7XG4gICAgICB0aGlzLmZpbmlzaCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9waW5nSGVhcnRiZWF0KCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFBpbmdzIHRoZSBoZWFydGJlYXRcbiAgICovXG4gICBfcGluZ0hlYXJ0YmVhdCgpIHtcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYHBpbmdpbmcgSGVhcnRiZWF0IC0+IGN1cnJlbnQgY291bnRlcjogJHt0aGlzLl9oZWFydGJlYXRDb3VudGVyfWApO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgdGhpcy5fYmVhdCgpO1xuICAgIH0sIHRoaXMuX2hlYXJ0YmVhdEludGVydmFsKTtcbiAgfVxufVxuXG4vKipcbiAqIFJlc2V0IHRyYW5zYWN0aW9uIG9uIHNjb3BlIHRvIGB1bmRlZmluZWRgXG4gKi9cbmZ1bmN0aW9uIGNsZWFyQWN0aXZlVHJhbnNhY3Rpb24oaHViKSB7XG4gIGNvbnN0IHNjb3BlID0gaHViLmdldFNjb3BlKCk7XG4gIGlmIChzY29wZSkge1xuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gc2NvcGUuZ2V0VHJhbnNhY3Rpb24oKTtcbiAgICBpZiAodHJhbnNhY3Rpb24pIHtcbiAgICAgIHNjb3BlLnNldFNwYW4odW5kZWZpbmVkKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgSWRsZVRyYW5zYWN0aW9uLCBJZGxlVHJhbnNhY3Rpb25TcGFuUmVjb3JkZXIsIFRSQUNJTkdfREVGQVVMVFMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWlkbGV0cmFuc2FjdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/idletransaction.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/span.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/span.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Span\": function() { return /* binding */ Span; },\n/* harmony export */   \"SpanRecorder\": function() { return /* binding */ SpanRecorder; },\n/* harmony export */   \"spanStatusfromHttpCode\": function() { return /* binding */ spanStatusfromHttpCode; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampWithMs)();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * The instrumenter that created this span.\n   */\n   __init7() {this.instrumenter = 'sentry';}\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);Span.prototype.__init7.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n    if (spanContext.instrumenter) {\n      this.instrumenter = spanContext.instrumenter;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.timestampWithMs)();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext() {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\n\n//# sourceMappingURL=span.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3NwYW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRjs7QUFFbEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViLCtCQUErQjtBQUMvQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZUFBZSxvREFBSzs7QUFFbEM7QUFDQTtBQUNBO0FBQ0EsY0FBYyxjQUFjLG9EQUFLOztBQUVqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHNCQUFzQiw4REFBZTs7QUFFbkQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsY0FBYzs7QUFFZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7O0FBRWQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxjQUFjOztBQUVkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGtDQUFrQyxrQ0FBa0Msa0NBQWtDLGtDQUFrQyxrQ0FBa0M7QUFDdk07QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxnREFBZ0QsTUFBTSx5QkFBeUIsUUFBUSxLQUFLLE1BQU07QUFDbEcsd0VBQXdFO0FBQ3hFLE1BQU0scURBQVU7QUFDaEI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsYUFBYTtBQUMzQjtBQUNBLFFBQVEscURBQVU7QUFDbEI7QUFDQTs7QUFFQSwwRUFBMEUsOERBQWU7QUFDekY7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsYUFBYSxHQUFHLFlBQVksRUFBRSxjQUFjO0FBQzFEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBaUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0VBQWlCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxXQUFXLGdFQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0EsdUNBQXVDLHFCQUFxQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFc0Q7QUFDdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9zcGFuLmpzPzU2NWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXVpZDQsIHRpbWVzdGFtcFdpdGhNcywgbG9nZ2VyLCBkcm9wVW5kZWZpbmVkS2V5cyB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKipcbiAqIEtlZXBzIHRyYWNrIG9mIGZpbmlzaGVkIHNwYW5zIGZvciBhIGdpdmVuIHRyYW5zYWN0aW9uXG4gKiBAaW50ZXJuYWxcbiAqIEBoaWRlY29uc3RydWN0b3JcbiAqIEBoaWRkZW5cbiAqL1xuY2xhc3MgU3BhblJlY29yZGVyIHtcbiAgIF9faW5pdCgpIHt0aGlzLnNwYW5zID0gW107fVxuXG4gICBjb25zdHJ1Y3RvcihtYXhsZW4gPSAxMDAwKSB7U3BhblJlY29yZGVyLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtcbiAgICB0aGlzLl9tYXhsZW4gPSBtYXhsZW47XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBpcyBqdXN0IHNvIHRoYXQgd2UgZG9uJ3QgcnVuIG91dCBvZiBtZW1vcnkgd2hpbGUgcmVjb3JkaW5nIGEgbG90XG4gICAqIG9mIHNwYW5zLiBBdCBzb21lIHBvaW50IHdlIGp1c3Qgc3RvcCBhbmQgZmx1c2ggb3V0IHRoZSBzdGFydCBvZiB0aGVcbiAgICogdHJhY2UgdHJlZSAoaS5lLnRoZSBmaXJzdCBuIHNwYW5zIHdpdGggdGhlIHNtYWxsZXN0XG4gICAqIHN0YXJ0X3RpbWVzdGFtcCkuXG4gICAqL1xuICAgYWRkKHNwYW4pIHtcbiAgICBpZiAodGhpcy5zcGFucy5sZW5ndGggPiB0aGlzLl9tYXhsZW4pIHtcbiAgICAgIHNwYW4uc3BhblJlY29yZGVyID0gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnNwYW5zLnB1c2goc3Bhbik7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogU3BhbiBjb250YWlucyBhbGwgZGF0YSBhYm91dCBhIHNwYW5cbiAqL1xuY2xhc3MgU3BhbiAge1xuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBfX2luaXQyKCkge3RoaXMudHJhY2VJZCA9IHV1aWQ0KCk7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIF9faW5pdDMoKSB7dGhpcy5zcGFuSWQgPSB1dWlkNCgpLnN1YnN0cmluZygxNik7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cblxuICAvKipcbiAgICogSW50ZXJuYWwga2VlcGVyIG9mIHRoZSBzdGF0dXNcbiAgICovXG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuXG4gIC8qKlxuICAgKiBUaW1lc3RhbXAgaW4gc2Vjb25kcyB3aGVuIHRoZSBzcGFuIHdhcyBjcmVhdGVkLlxuICAgKi9cbiAgIF9faW5pdDQoKSB7dGhpcy5zdGFydFRpbWVzdGFtcCA9IHRpbWVzdGFtcFdpdGhNcygpO31cblxuICAvKipcbiAgICogVGltZXN0YW1wIGluIHNlY29uZHMgd2hlbiB0aGUgc3BhbiBlbmRlZC5cbiAgICovXG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBfX2luaXQ1KCkge3RoaXMudGFncyA9IHt9O31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICBfX2luaXQ2KCkge3RoaXMuZGF0YSA9IHt9O31cblxuICAvKipcbiAgICogTGlzdCBvZiBzcGFucyB0aGF0IHdlcmUgZmluYWxpemVkXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cblxuICAvKipcbiAgICogVGhlIGluc3RydW1lbnRlciB0aGF0IGNyZWF0ZWQgdGhpcyBzcGFuLlxuICAgKi9cbiAgIF9faW5pdDcoKSB7dGhpcy5pbnN0cnVtZW50ZXIgPSAnc2VudHJ5Jzt9XG5cbiAgLyoqXG4gICAqIFlvdSBzaG91bGQgbmV2ZXIgY2FsbCB0aGUgY29uc3RydWN0b3IgbWFudWFsbHksIGFsd2F5cyB1c2UgYFNlbnRyeS5zdGFydFRyYW5zYWN0aW9uKClgXG4gICAqIG9yIGNhbGwgYHN0YXJ0Q2hpbGQoKWAgb24gYW4gZXhpc3Rpbmcgc3Bhbi5cbiAgICogQGludGVybmFsXG4gICAqIEBoaWRlY29uc3RydWN0b3JcbiAgICogQGhpZGRlblxuICAgKi9cbiAgIGNvbnN0cnVjdG9yKHNwYW5Db250ZXh0KSB7U3Bhbi5wcm90b3R5cGUuX19pbml0Mi5jYWxsKHRoaXMpO1NwYW4ucHJvdG90eXBlLl9faW5pdDMuY2FsbCh0aGlzKTtTcGFuLnByb3RvdHlwZS5fX2luaXQ0LmNhbGwodGhpcyk7U3Bhbi5wcm90b3R5cGUuX19pbml0NS5jYWxsKHRoaXMpO1NwYW4ucHJvdG90eXBlLl9faW5pdDYuY2FsbCh0aGlzKTtTcGFuLnByb3RvdHlwZS5fX2luaXQ3LmNhbGwodGhpcyk7XG4gICAgaWYgKCFzcGFuQ29udGV4dCkge1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGlmIChzcGFuQ29udGV4dC50cmFjZUlkKSB7XG4gICAgICB0aGlzLnRyYWNlSWQgPSBzcGFuQ29udGV4dC50cmFjZUlkO1xuICAgIH1cbiAgICBpZiAoc3BhbkNvbnRleHQuc3BhbklkKSB7XG4gICAgICB0aGlzLnNwYW5JZCA9IHNwYW5Db250ZXh0LnNwYW5JZDtcbiAgICB9XG4gICAgaWYgKHNwYW5Db250ZXh0LnBhcmVudFNwYW5JZCkge1xuICAgICAgdGhpcy5wYXJlbnRTcGFuSWQgPSBzcGFuQ29udGV4dC5wYXJlbnRTcGFuSWQ7XG4gICAgfVxuICAgIC8vIFdlIHdhbnQgdG8gaW5jbHVkZSBib29sZWFucyBhcyB3ZWxsIGhlcmVcbiAgICBpZiAoJ3NhbXBsZWQnIGluIHNwYW5Db250ZXh0KSB7XG4gICAgICB0aGlzLnNhbXBsZWQgPSBzcGFuQ29udGV4dC5zYW1wbGVkO1xuICAgIH1cbiAgICBpZiAoc3BhbkNvbnRleHQub3ApIHtcbiAgICAgIHRoaXMub3AgPSBzcGFuQ29udGV4dC5vcDtcbiAgICB9XG4gICAgaWYgKHNwYW5Db250ZXh0LmRlc2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLmRlc2NyaXB0aW9uID0gc3BhbkNvbnRleHQuZGVzY3JpcHRpb247XG4gICAgfVxuICAgIGlmIChzcGFuQ29udGV4dC5kYXRhKSB7XG4gICAgICB0aGlzLmRhdGEgPSBzcGFuQ29udGV4dC5kYXRhO1xuICAgIH1cbiAgICBpZiAoc3BhbkNvbnRleHQudGFncykge1xuICAgICAgdGhpcy50YWdzID0gc3BhbkNvbnRleHQudGFncztcbiAgICB9XG4gICAgaWYgKHNwYW5Db250ZXh0LnN0YXR1cykge1xuICAgICAgdGhpcy5zdGF0dXMgPSBzcGFuQ29udGV4dC5zdGF0dXM7XG4gICAgfVxuICAgIGlmIChzcGFuQ29udGV4dC5zdGFydFRpbWVzdGFtcCkge1xuICAgICAgdGhpcy5zdGFydFRpbWVzdGFtcCA9IHNwYW5Db250ZXh0LnN0YXJ0VGltZXN0YW1wO1xuICAgIH1cbiAgICBpZiAoc3BhbkNvbnRleHQuZW5kVGltZXN0YW1wKSB7XG4gICAgICB0aGlzLmVuZFRpbWVzdGFtcCA9IHNwYW5Db250ZXh0LmVuZFRpbWVzdGFtcDtcbiAgICB9XG4gICAgaWYgKHNwYW5Db250ZXh0Lmluc3RydW1lbnRlcikge1xuICAgICAgdGhpcy5pbnN0cnVtZW50ZXIgPSBzcGFuQ29udGV4dC5pbnN0cnVtZW50ZXI7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhcnRDaGlsZChcbiAgICBzcGFuQ29udGV4dCxcbiAgKSB7XG4gICAgY29uc3QgY2hpbGRTcGFuID0gbmV3IFNwYW4oe1xuICAgICAgLi4uc3BhbkNvbnRleHQsXG4gICAgICBwYXJlbnRTcGFuSWQ6IHRoaXMuc3BhbklkLFxuICAgICAgc2FtcGxlZDogdGhpcy5zYW1wbGVkLFxuICAgICAgdHJhY2VJZDogdGhpcy50cmFjZUlkLFxuICAgIH0pO1xuXG4gICAgY2hpbGRTcGFuLnNwYW5SZWNvcmRlciA9IHRoaXMuc3BhblJlY29yZGVyO1xuICAgIGlmIChjaGlsZFNwYW4uc3BhblJlY29yZGVyKSB7XG4gICAgICBjaGlsZFNwYW4uc3BhblJlY29yZGVyLmFkZChjaGlsZFNwYW4pO1xuICAgIH1cblxuICAgIGNoaWxkU3Bhbi50cmFuc2FjdGlvbiA9IHRoaXMudHJhbnNhY3Rpb247XG5cbiAgICBpZiAoKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBjaGlsZFNwYW4udHJhbnNhY3Rpb24pIHtcbiAgICAgIGNvbnN0IG9wU3RyID0gKHNwYW5Db250ZXh0ICYmIHNwYW5Db250ZXh0Lm9wKSB8fCAnPCB1bmtub3duIG9wID4nO1xuICAgICAgY29uc3QgbmFtZVN0ciA9IGNoaWxkU3Bhbi50cmFuc2FjdGlvbi5uYW1lIHx8ICc8IHVua25vd24gbmFtZSA+JztcbiAgICAgIGNvbnN0IGlkU3RyID0gY2hpbGRTcGFuLnRyYW5zYWN0aW9uLnNwYW5JZDtcblxuICAgICAgY29uc3QgbG9nTWVzc2FnZSA9IGBbVHJhY2luZ10gU3RhcnRpbmcgJyR7b3BTdHJ9JyBzcGFuIG9uIHRyYW5zYWN0aW9uICcke25hbWVTdHJ9JyAoJHtpZFN0cn0pLmA7XG4gICAgICBjaGlsZFNwYW4udHJhbnNhY3Rpb24ubWV0YWRhdGEuc3Bhbk1ldGFkYXRhW2NoaWxkU3Bhbi5zcGFuSWRdID0geyBsb2dNZXNzYWdlIH07XG4gICAgICBsb2dnZXIubG9nKGxvZ01lc3NhZ2UpO1xuICAgIH1cblxuICAgIHJldHVybiBjaGlsZFNwYW47XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXRUYWcoa2V5LCB2YWx1ZSkge1xuICAgIHRoaXMudGFncyA9IHsgLi4udGhpcy50YWdzLCBba2V5XTogdmFsdWUgfTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbiAgIHNldERhdGEoa2V5LCB2YWx1ZSkge1xuICAgIHRoaXMuZGF0YSA9IHsgLi4udGhpcy5kYXRhLCBba2V5XTogdmFsdWUgfTtcbiAgICByZXR1cm4gdGhpcztcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldFN0YXR1cyh2YWx1ZSkge1xuICAgIHRoaXMuc3RhdHVzID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXRIdHRwU3RhdHVzKGh0dHBTdGF0dXMpIHtcbiAgICB0aGlzLnNldFRhZygnaHR0cC5zdGF0dXNfY29kZScsIFN0cmluZyhodHRwU3RhdHVzKSk7XG4gICAgY29uc3Qgc3BhblN0YXR1cyA9IHNwYW5TdGF0dXNmcm9tSHR0cENvZGUoaHR0cFN0YXR1cyk7XG4gICAgaWYgKHNwYW5TdGF0dXMgIT09ICd1bmtub3duX2Vycm9yJykge1xuICAgICAgdGhpcy5zZXRTdGF0dXMoc3BhblN0YXR1cyk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgaXNTdWNjZXNzKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXR1cyA9PT0gJ29rJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGZpbmlzaChlbmRUaW1lc3RhbXApIHtcbiAgICBpZiAoXG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmXG4gICAgICAvLyBEb24ndCBjYWxsIHRoaXMgZm9yIHRyYW5zYWN0aW9uc1xuICAgICAgdGhpcy50cmFuc2FjdGlvbiAmJlxuICAgICAgdGhpcy50cmFuc2FjdGlvbi5zcGFuSWQgIT09IHRoaXMuc3BhbklkXG4gICAgKSB7XG4gICAgICBjb25zdCB7IGxvZ01lc3NhZ2UgfSA9IHRoaXMudHJhbnNhY3Rpb24ubWV0YWRhdGEuc3Bhbk1ldGFkYXRhW3RoaXMuc3BhbklkXTtcbiAgICAgIGlmIChsb2dNZXNzYWdlKSB7XG4gICAgICAgIGxvZ2dlci5sb2coKGxvZ01lc3NhZ2UgKS5yZXBsYWNlKCdTdGFydGluZycsICdGaW5pc2hpbmcnKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5lbmRUaW1lc3RhbXAgPSB0eXBlb2YgZW5kVGltZXN0YW1wID09PSAnbnVtYmVyJyA/IGVuZFRpbWVzdGFtcCA6IHRpbWVzdGFtcFdpdGhNcygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgdG9UcmFjZXBhcmVudCgpIHtcbiAgICBsZXQgc2FtcGxlZFN0cmluZyA9ICcnO1xuICAgIGlmICh0aGlzLnNhbXBsZWQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgc2FtcGxlZFN0cmluZyA9IHRoaXMuc2FtcGxlZCA/ICctMScgOiAnLTAnO1xuICAgIH1cbiAgICByZXR1cm4gYCR7dGhpcy50cmFjZUlkfS0ke3RoaXMuc3BhbklkfSR7c2FtcGxlZFN0cmluZ31gO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgdG9Db250ZXh0KCkge1xuICAgIHJldHVybiBkcm9wVW5kZWZpbmVkS2V5cyh7XG4gICAgICBkYXRhOiB0aGlzLmRhdGEsXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbixcbiAgICAgIGVuZFRpbWVzdGFtcDogdGhpcy5lbmRUaW1lc3RhbXAsXG4gICAgICBvcDogdGhpcy5vcCxcbiAgICAgIHBhcmVudFNwYW5JZDogdGhpcy5wYXJlbnRTcGFuSWQsXG4gICAgICBzYW1wbGVkOiB0aGlzLnNhbXBsZWQsXG4gICAgICBzcGFuSWQ6IHRoaXMuc3BhbklkLFxuICAgICAgc3RhcnRUaW1lc3RhbXA6IHRoaXMuc3RhcnRUaW1lc3RhbXAsXG4gICAgICBzdGF0dXM6IHRoaXMuc3RhdHVzLFxuICAgICAgdGFnczogdGhpcy50YWdzLFxuICAgICAgdHJhY2VJZDogdGhpcy50cmFjZUlkLFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgdXBkYXRlV2l0aENvbnRleHQoc3BhbkNvbnRleHQpIHtcbiAgICB0aGlzLmRhdGEgPSBzcGFuQ29udGV4dC5kYXRhIHx8IHt9O1xuICAgIHRoaXMuZGVzY3JpcHRpb24gPSBzcGFuQ29udGV4dC5kZXNjcmlwdGlvbjtcbiAgICB0aGlzLmVuZFRpbWVzdGFtcCA9IHNwYW5Db250ZXh0LmVuZFRpbWVzdGFtcDtcbiAgICB0aGlzLm9wID0gc3BhbkNvbnRleHQub3A7XG4gICAgdGhpcy5wYXJlbnRTcGFuSWQgPSBzcGFuQ29udGV4dC5wYXJlbnRTcGFuSWQ7XG4gICAgdGhpcy5zYW1wbGVkID0gc3BhbkNvbnRleHQuc2FtcGxlZDtcbiAgICB0aGlzLnNwYW5JZCA9IHNwYW5Db250ZXh0LnNwYW5JZCB8fCB0aGlzLnNwYW5JZDtcbiAgICB0aGlzLnN0YXJ0VGltZXN0YW1wID0gc3BhbkNvbnRleHQuc3RhcnRUaW1lc3RhbXAgfHwgdGhpcy5zdGFydFRpbWVzdGFtcDtcbiAgICB0aGlzLnN0YXR1cyA9IHNwYW5Db250ZXh0LnN0YXR1cztcbiAgICB0aGlzLnRhZ3MgPSBzcGFuQ29udGV4dC50YWdzIHx8IHt9O1xuICAgIHRoaXMudHJhY2VJZCA9IHNwYW5Db250ZXh0LnRyYWNlSWQgfHwgdGhpcy50cmFjZUlkO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBnZXRUcmFjZUNvbnRleHQoKSB7XG4gICAgcmV0dXJuIGRyb3BVbmRlZmluZWRLZXlzKHtcbiAgICAgIGRhdGE6IE9iamVjdC5rZXlzKHRoaXMuZGF0YSkubGVuZ3RoID4gMCA/IHRoaXMuZGF0YSA6IHVuZGVmaW5lZCxcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uLFxuICAgICAgb3A6IHRoaXMub3AsXG4gICAgICBwYXJlbnRfc3Bhbl9pZDogdGhpcy5wYXJlbnRTcGFuSWQsXG4gICAgICBzcGFuX2lkOiB0aGlzLnNwYW5JZCxcbiAgICAgIHN0YXR1czogdGhpcy5zdGF0dXMsXG4gICAgICB0YWdzOiBPYmplY3Qua2V5cyh0aGlzLnRhZ3MpLmxlbmd0aCA+IDAgPyB0aGlzLnRhZ3MgOiB1bmRlZmluZWQsXG4gICAgICB0cmFjZV9pZDogdGhpcy50cmFjZUlkLFxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgdG9KU09OKClcblxuIHtcbiAgICByZXR1cm4gZHJvcFVuZGVmaW5lZEtleXMoe1xuICAgICAgZGF0YTogT2JqZWN0LmtleXModGhpcy5kYXRhKS5sZW5ndGggPiAwID8gdGhpcy5kYXRhIDogdW5kZWZpbmVkLFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMuZGVzY3JpcHRpb24sXG4gICAgICBvcDogdGhpcy5vcCxcbiAgICAgIHBhcmVudF9zcGFuX2lkOiB0aGlzLnBhcmVudFNwYW5JZCxcbiAgICAgIHNwYW5faWQ6IHRoaXMuc3BhbklkLFxuICAgICAgc3RhcnRfdGltZXN0YW1wOiB0aGlzLnN0YXJ0VGltZXN0YW1wLFxuICAgICAgc3RhdHVzOiB0aGlzLnN0YXR1cyxcbiAgICAgIHRhZ3M6IE9iamVjdC5rZXlzKHRoaXMudGFncykubGVuZ3RoID4gMCA/IHRoaXMudGFncyA6IHVuZGVmaW5lZCxcbiAgICAgIHRpbWVzdGFtcDogdGhpcy5lbmRUaW1lc3RhbXAsXG4gICAgICB0cmFjZV9pZDogdGhpcy50cmFjZUlkLFxuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBIVFRQIHN0YXR1cyBjb2RlIGludG8gYSB7QGxpbmsgU3BhblN0YXR1c1R5cGV9LlxuICpcbiAqIEBwYXJhbSBodHRwU3RhdHVzIFRoZSBIVFRQIHJlc3BvbnNlIHN0YXR1cyBjb2RlLlxuICogQHJldHVybnMgVGhlIHNwYW4gc3RhdHVzIG9yIHVua25vd25fZXJyb3IuXG4gKi9cbmZ1bmN0aW9uIHNwYW5TdGF0dXNmcm9tSHR0cENvZGUoaHR0cFN0YXR1cykge1xuICBpZiAoaHR0cFN0YXR1cyA8IDQwMCAmJiBodHRwU3RhdHVzID49IDEwMCkge1xuICAgIHJldHVybiAnb2snO1xuICB9XG5cbiAgaWYgKGh0dHBTdGF0dXMgPj0gNDAwICYmIGh0dHBTdGF0dXMgPCA1MDApIHtcbiAgICBzd2l0Y2ggKGh0dHBTdGF0dXMpIHtcbiAgICAgIGNhc2UgNDAxOlxuICAgICAgICByZXR1cm4gJ3VuYXV0aGVudGljYXRlZCc7XG4gICAgICBjYXNlIDQwMzpcbiAgICAgICAgcmV0dXJuICdwZXJtaXNzaW9uX2RlbmllZCc7XG4gICAgICBjYXNlIDQwNDpcbiAgICAgICAgcmV0dXJuICdub3RfZm91bmQnO1xuICAgICAgY2FzZSA0MDk6XG4gICAgICAgIHJldHVybiAnYWxyZWFkeV9leGlzdHMnO1xuICAgICAgY2FzZSA0MTM6XG4gICAgICAgIHJldHVybiAnZmFpbGVkX3ByZWNvbmRpdGlvbic7XG4gICAgICBjYXNlIDQyOTpcbiAgICAgICAgcmV0dXJuICdyZXNvdXJjZV9leGhhdXN0ZWQnO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuICdpbnZhbGlkX2FyZ3VtZW50JztcbiAgICB9XG4gIH1cblxuICBpZiAoaHR0cFN0YXR1cyA+PSA1MDAgJiYgaHR0cFN0YXR1cyA8IDYwMCkge1xuICAgIHN3aXRjaCAoaHR0cFN0YXR1cykge1xuICAgICAgY2FzZSA1MDE6XG4gICAgICAgIHJldHVybiAndW5pbXBsZW1lbnRlZCc7XG4gICAgICBjYXNlIDUwMzpcbiAgICAgICAgcmV0dXJuICd1bmF2YWlsYWJsZSc7XG4gICAgICBjYXNlIDUwNDpcbiAgICAgICAgcmV0dXJuICdkZWFkbGluZV9leGNlZWRlZCc7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gJ2ludGVybmFsX2Vycm9yJztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gJ3Vua25vd25fZXJyb3InO1xufVxuXG5leHBvcnQgeyBTcGFuLCBTcGFuUmVjb3JkZXIsIHNwYW5TdGF0dXNmcm9tSHR0cENvZGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwYW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/span.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/spanstatus.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/spanstatus.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SpanStatus\": function() { return /* binding */ SpanStatus; }\n/* harmony export */ });\n/** The status of an Span.\n *\n * @deprecated Use string literals - if you require type casting, cast to SpanStatusType type\n */\n// eslint-disable-next-line import/export\nvar SpanStatus; (function (SpanStatus) {\n  /** The operation completed successfully. */\n  const Ok = 'ok'; SpanStatus[\"Ok\"] = Ok;\n  /** Deadline expired before operation could complete. */\n  const DeadlineExceeded = 'deadline_exceeded'; SpanStatus[\"DeadlineExceeded\"] = DeadlineExceeded;\n  /** 401 Unauthorized (actually does mean unauthenticated according to RFC 7235) */\n  const Unauthenticated = 'unauthenticated'; SpanStatus[\"Unauthenticated\"] = Unauthenticated;\n  /** 403 Forbidden */\n  const PermissionDenied = 'permission_denied'; SpanStatus[\"PermissionDenied\"] = PermissionDenied;\n  /** 404 Not Found. Some requested entity (file or directory) was not found. */\n  const NotFound = 'not_found'; SpanStatus[\"NotFound\"] = NotFound;\n  /** 429 Too Many Requests */\n  const ResourceExhausted = 'resource_exhausted'; SpanStatus[\"ResourceExhausted\"] = ResourceExhausted;\n  /** Client specified an invalid argument. 4xx. */\n  const InvalidArgument = 'invalid_argument'; SpanStatus[\"InvalidArgument\"] = InvalidArgument;\n  /** 501 Not Implemented */\n  const Unimplemented = 'unimplemented'; SpanStatus[\"Unimplemented\"] = Unimplemented;\n  /** 503 Service Unavailable */\n  const Unavailable = 'unavailable'; SpanStatus[\"Unavailable\"] = Unavailable;\n  /** Other/generic 5xx. */\n  const InternalError = 'internal_error'; SpanStatus[\"InternalError\"] = InternalError;\n  /** Unknown. Any non-standard HTTP status code. */\n  const UnknownError = 'unknown_error'; SpanStatus[\"UnknownError\"] = UnknownError;\n  /** The operation was cancelled (typically by the user). */\n  const Cancelled = 'cancelled'; SpanStatus[\"Cancelled\"] = Cancelled;\n  /** Already exists (409) */\n  const AlreadyExists = 'already_exists'; SpanStatus[\"AlreadyExists\"] = AlreadyExists;\n  /** Operation was rejected because the system is not in a state required for the operation's */\n  const FailedPrecondition = 'failed_precondition'; SpanStatus[\"FailedPrecondition\"] = FailedPrecondition;\n  /** The operation was aborted, typically due to a concurrency issue. */\n  const Aborted = 'aborted'; SpanStatus[\"Aborted\"] = Aborted;\n  /** Operation was attempted past the valid range. */\n  const OutOfRange = 'out_of_range'; SpanStatus[\"OutOfRange\"] = OutOfRange;\n  /** Unrecoverable data loss or corruption */\n  const DataLoss = 'data_loss'; SpanStatus[\"DataLoss\"] = DataLoss;\n})(SpanStatus || (SpanStatus = {}));\n\n\n//# sourceMappingURL=spanstatus.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3NwYW5zdGF0dXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQSw4Q0FBOEM7QUFDOUM7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQSxvREFBb0Q7QUFDcEQ7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSxnQ0FBZ0M7QUFDaEMsQ0FBQyxnQ0FBZ0M7O0FBRVg7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdHJhY2luZy9zcGFuc3RhdHVzLmpzP2EzOWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFRoZSBzdGF0dXMgb2YgYW4gU3Bhbi5cbiAqXG4gKiBAZGVwcmVjYXRlZCBVc2Ugc3RyaW5nIGxpdGVyYWxzIC0gaWYgeW91IHJlcXVpcmUgdHlwZSBjYXN0aW5nLCBjYXN0IHRvIFNwYW5TdGF0dXNUeXBlIHR5cGVcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGltcG9ydC9leHBvcnRcbnZhciBTcGFuU3RhdHVzOyAoZnVuY3Rpb24gKFNwYW5TdGF0dXMpIHtcbiAgLyoqIFRoZSBvcGVyYXRpb24gY29tcGxldGVkIHN1Y2Nlc3NmdWxseS4gKi9cbiAgY29uc3QgT2sgPSAnb2snOyBTcGFuU3RhdHVzW1wiT2tcIl0gPSBPaztcbiAgLyoqIERlYWRsaW5lIGV4cGlyZWQgYmVmb3JlIG9wZXJhdGlvbiBjb3VsZCBjb21wbGV0ZS4gKi9cbiAgY29uc3QgRGVhZGxpbmVFeGNlZWRlZCA9ICdkZWFkbGluZV9leGNlZWRlZCc7IFNwYW5TdGF0dXNbXCJEZWFkbGluZUV4Y2VlZGVkXCJdID0gRGVhZGxpbmVFeGNlZWRlZDtcbiAgLyoqIDQwMSBVbmF1dGhvcml6ZWQgKGFjdHVhbGx5IGRvZXMgbWVhbiB1bmF1dGhlbnRpY2F0ZWQgYWNjb3JkaW5nIHRvIFJGQyA3MjM1KSAqL1xuICBjb25zdCBVbmF1dGhlbnRpY2F0ZWQgPSAndW5hdXRoZW50aWNhdGVkJzsgU3BhblN0YXR1c1tcIlVuYXV0aGVudGljYXRlZFwiXSA9IFVuYXV0aGVudGljYXRlZDtcbiAgLyoqIDQwMyBGb3JiaWRkZW4gKi9cbiAgY29uc3QgUGVybWlzc2lvbkRlbmllZCA9ICdwZXJtaXNzaW9uX2RlbmllZCc7IFNwYW5TdGF0dXNbXCJQZXJtaXNzaW9uRGVuaWVkXCJdID0gUGVybWlzc2lvbkRlbmllZDtcbiAgLyoqIDQwNCBOb3QgRm91bmQuIFNvbWUgcmVxdWVzdGVkIGVudGl0eSAoZmlsZSBvciBkaXJlY3RvcnkpIHdhcyBub3QgZm91bmQuICovXG4gIGNvbnN0IE5vdEZvdW5kID0gJ25vdF9mb3VuZCc7IFNwYW5TdGF0dXNbXCJOb3RGb3VuZFwiXSA9IE5vdEZvdW5kO1xuICAvKiogNDI5IFRvbyBNYW55IFJlcXVlc3RzICovXG4gIGNvbnN0IFJlc291cmNlRXhoYXVzdGVkID0gJ3Jlc291cmNlX2V4aGF1c3RlZCc7IFNwYW5TdGF0dXNbXCJSZXNvdXJjZUV4aGF1c3RlZFwiXSA9IFJlc291cmNlRXhoYXVzdGVkO1xuICAvKiogQ2xpZW50IHNwZWNpZmllZCBhbiBpbnZhbGlkIGFyZ3VtZW50LiA0eHguICovXG4gIGNvbnN0IEludmFsaWRBcmd1bWVudCA9ICdpbnZhbGlkX2FyZ3VtZW50JzsgU3BhblN0YXR1c1tcIkludmFsaWRBcmd1bWVudFwiXSA9IEludmFsaWRBcmd1bWVudDtcbiAgLyoqIDUwMSBOb3QgSW1wbGVtZW50ZWQgKi9cbiAgY29uc3QgVW5pbXBsZW1lbnRlZCA9ICd1bmltcGxlbWVudGVkJzsgU3BhblN0YXR1c1tcIlVuaW1wbGVtZW50ZWRcIl0gPSBVbmltcGxlbWVudGVkO1xuICAvKiogNTAzIFNlcnZpY2UgVW5hdmFpbGFibGUgKi9cbiAgY29uc3QgVW5hdmFpbGFibGUgPSAndW5hdmFpbGFibGUnOyBTcGFuU3RhdHVzW1wiVW5hdmFpbGFibGVcIl0gPSBVbmF2YWlsYWJsZTtcbiAgLyoqIE90aGVyL2dlbmVyaWMgNXh4LiAqL1xuICBjb25zdCBJbnRlcm5hbEVycm9yID0gJ2ludGVybmFsX2Vycm9yJzsgU3BhblN0YXR1c1tcIkludGVybmFsRXJyb3JcIl0gPSBJbnRlcm5hbEVycm9yO1xuICAvKiogVW5rbm93bi4gQW55IG5vbi1zdGFuZGFyZCBIVFRQIHN0YXR1cyBjb2RlLiAqL1xuICBjb25zdCBVbmtub3duRXJyb3IgPSAndW5rbm93bl9lcnJvcic7IFNwYW5TdGF0dXNbXCJVbmtub3duRXJyb3JcIl0gPSBVbmtub3duRXJyb3I7XG4gIC8qKiBUaGUgb3BlcmF0aW9uIHdhcyBjYW5jZWxsZWQgKHR5cGljYWxseSBieSB0aGUgdXNlcikuICovXG4gIGNvbnN0IENhbmNlbGxlZCA9ICdjYW5jZWxsZWQnOyBTcGFuU3RhdHVzW1wiQ2FuY2VsbGVkXCJdID0gQ2FuY2VsbGVkO1xuICAvKiogQWxyZWFkeSBleGlzdHMgKDQwOSkgKi9cbiAgY29uc3QgQWxyZWFkeUV4aXN0cyA9ICdhbHJlYWR5X2V4aXN0cyc7IFNwYW5TdGF0dXNbXCJBbHJlYWR5RXhpc3RzXCJdID0gQWxyZWFkeUV4aXN0cztcbiAgLyoqIE9wZXJhdGlvbiB3YXMgcmVqZWN0ZWQgYmVjYXVzZSB0aGUgc3lzdGVtIGlzIG5vdCBpbiBhIHN0YXRlIHJlcXVpcmVkIGZvciB0aGUgb3BlcmF0aW9uJ3MgKi9cbiAgY29uc3QgRmFpbGVkUHJlY29uZGl0aW9uID0gJ2ZhaWxlZF9wcmVjb25kaXRpb24nOyBTcGFuU3RhdHVzW1wiRmFpbGVkUHJlY29uZGl0aW9uXCJdID0gRmFpbGVkUHJlY29uZGl0aW9uO1xuICAvKiogVGhlIG9wZXJhdGlvbiB3YXMgYWJvcnRlZCwgdHlwaWNhbGx5IGR1ZSB0byBhIGNvbmN1cnJlbmN5IGlzc3VlLiAqL1xuICBjb25zdCBBYm9ydGVkID0gJ2Fib3J0ZWQnOyBTcGFuU3RhdHVzW1wiQWJvcnRlZFwiXSA9IEFib3J0ZWQ7XG4gIC8qKiBPcGVyYXRpb24gd2FzIGF0dGVtcHRlZCBwYXN0IHRoZSB2YWxpZCByYW5nZS4gKi9cbiAgY29uc3QgT3V0T2ZSYW5nZSA9ICdvdXRfb2ZfcmFuZ2UnOyBTcGFuU3RhdHVzW1wiT3V0T2ZSYW5nZVwiXSA9IE91dE9mUmFuZ2U7XG4gIC8qKiBVbnJlY292ZXJhYmxlIGRhdGEgbG9zcyBvciBjb3JydXB0aW9uICovXG4gIGNvbnN0IERhdGFMb3NzID0gJ2RhdGFfbG9zcyc7IFNwYW5TdGF0dXNbXCJEYXRhTG9zc1wiXSA9IERhdGFMb3NzO1xufSkoU3BhblN0YXR1cyB8fCAoU3BhblN0YXR1cyA9IHt9KSk7XG5cbmV4cG9ydCB7IFNwYW5TdGF0dXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNwYW5zdGF0dXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/spanstatus.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/transaction.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/transaction.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Transaction\": function() { return /* binding */ Transaction; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _span_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./span.js */ \"./node_modules/@sentry/core/esm/tracing/span.js\");\n\n\n\n\n\n/** JSDoc */\nclass Transaction extends _span_js__WEBPACK_IMPORTED_MODULE_0__.Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n   __init() {this._measurements = {};}\n\n   __init2() {this._contexts = {};}\n\n   __init3() {this._frozenDynamicSamplingContext = undefined;}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);Transaction.prototype.__init2.call(this);Transaction.prototype.__init3.call(this);\n    this._hub = hub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new _span_js__WEBPACK_IMPORTED_MODULE_0__.SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    const spanContext = super.toContext();\n\n    return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n    const client = hub && hub.getClient();\n\n    if (!client) return {};\n\n    const { environment, release } = client.getOptions() || {};\n    const { publicKey: public_key } = client.getDsn() || {};\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    const sample_rate = maybeSampleRate !== undefined ? maybeSampleRate.toString() : undefined;\n\n    const scope = hub.getScope();\n    const { segment: user_segment } = (scope && scope.getUser()) || {};\n\n    const source = this.metadata.source;\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const transaction = source && source !== 'url' ? this.name : undefined;\n\n    const dsc = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({\n      environment: environment || _constants_js__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_ENVIRONMENT,\n      release,\n      transaction,\n      user_segment,\n      public_key,\n      trace_id: this.traceId,\n      sample_rate,\n    });\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    return dsc;\n  }\n}\n\n\n//# sourceMappingURL=transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/transaction.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/tracing/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/tracing/utils.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.TRACEPARENT_REGEXP; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractTraceparentData; },\n/* harmony export */   \"getActiveTransaction\": function() { return /* binding */ getActiveTransaction; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* reexport safe */ _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment; }\n/* harmony export */ });\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || (0,_hub_js__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const scope = hub.getScope();\n  return scope && (scope.getTransaction() );\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFjaW5nL3V0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwQztBQUMyRDs7QUFFckc7QUFDQTtBQUNBLDBCQUEwQixzREFBYTtBQUN2QztBQUNBO0FBQ0E7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3RyYWNpbmcvdXRpbHMuanM/ZTYwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDdXJyZW50SHViIH0gZnJvbSAnLi4vaHViLmpzJztcbmV4cG9ydCB7IFRSQUNFUEFSRU5UX1JFR0VYUCwgZXh0cmFjdFRyYWNlcGFyZW50RGF0YSwgc3RyaXBVcmxRdWVyeUFuZEZyYWdtZW50IH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKiBHcmFicyBhY3RpdmUgdHJhbnNhY3Rpb24gb2ZmIHNjb3BlLCBpZiBhbnkgKi9cbmZ1bmN0aW9uIGdldEFjdGl2ZVRyYW5zYWN0aW9uKG1heWJlSHViKSB7XG4gIGNvbnN0IGh1YiA9IG1heWJlSHViIHx8IGdldEN1cnJlbnRIdWIoKTtcbiAgY29uc3Qgc2NvcGUgPSBodWIuZ2V0U2NvcGUoKTtcbiAgcmV0dXJuIHNjb3BlICYmIChzY29wZS5nZXRUcmFuc2FjdGlvbigpICk7XG59XG5cbmV4cG9ydCB7IGdldEFjdGl2ZVRyYW5zYWN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/tracing/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/base.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_TRANSPORT_BUFFER_SIZE\": function() { return /* binding */ DEFAULT_TRANSPORT_BUFFER_SIZE; },\n/* harmony export */   \"createTransport\": function() { return /* binding */ createTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst DEFAULT_TRANSPORT_BUFFER_SIZE = 30;\n\n/**\n * Creates an instance of a Sentry `Transport`\n *\n * @param options\n * @param makeRequest\n */\nfunction createTransport(\n  options,\n  makeRequest,\n  buffer = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makePromiseBuffer)(\n    options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE,\n  ),\n) {\n  let rateLimits = {};\n\n  const flush = (timeout) => buffer.drain(timeout);\n\n  function send(envelope) {\n    const filteredEnvelopeItems = [];\n\n    // Drop rate limited items from envelope\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(envelope, (item, type) => {\n      const envelopeItemDataCategory = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.envelopeItemTypeToDataCategory)(type);\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isRateLimited)(rateLimits, envelopeItemDataCategory)) {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent('ratelimit_backoff', envelopeItemDataCategory, event);\n      } else {\n        filteredEnvelopeItems.push(item);\n      }\n    });\n\n    // Skip sending if envelope is empty after filtering out rate limited events\n    if (filteredEnvelopeItems.length === 0) {\n      return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)();\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const filteredEnvelope = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(envelope[0], filteredEnvelopeItems );\n\n    // Creates client report for each item in an envelope\n    const recordEnvelopeLoss = (reason) => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.forEachEnvelopeItem)(filteredEnvelope, (item, type) => {\n        const event = getEventForEnvelopeItem(item, type);\n        options.recordDroppedEvent(reason, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.envelopeItemTypeToDataCategory)(type), event);\n      });\n    };\n\n    const requestTask = () =>\n      makeRequest({ body: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.serializeEnvelope)(filteredEnvelope, options.textEncoder) }).then(\n        response => {\n          // We don't want to throw on NOK responses, but we want to at least log them\n          if (response.statusCode !== undefined && (response.statusCode < 200 || response.statusCode >= 300)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(`Sentry responded with status code ${response.statusCode} to sent event.`);\n          }\n\n          rateLimits = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.updateRateLimits)(rateLimits, response);\n          return response;\n        },\n        error => {\n          recordEnvelopeLoss('network_error');\n          throw error;\n        },\n      );\n\n    return buffer.add(requestTask).then(\n      result => result,\n      error => {\n        if (error instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SentryError) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Skipped sending event because buffer is full.');\n          recordEnvelopeLoss('queue_overflow');\n          return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)();\n        } else {\n          throw error;\n        }\n      },\n    );\n  }\n\n  return {\n    send,\n    flush,\n  };\n}\n\nfunction getEventForEnvelopeItem(item, type) {\n  if (type !== 'event' && type !== 'transaction') {\n    return undefined;\n  }\n\n  return Array.isArray(item) ? (item )[1] : undefined;\n}\n\n\n//# sourceMappingURL=base.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL2Jhc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFOOztBQUVyTjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSxrRUFBbUI7QUFDdkIsdUNBQXVDLDZFQUE4QjtBQUNyRSxVQUFVLDREQUFhO0FBQ3ZCO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLGFBQWEsa0VBQW1CO0FBQ2hDOztBQUVBO0FBQ0EsNkJBQTZCLDZEQUFjOztBQUUzQztBQUNBO0FBQ0EsTUFBTSxrRUFBbUI7QUFDekI7QUFDQSwyQ0FBMkMsNkVBQThCO0FBQ3pFLE9BQU87QUFDUDs7QUFFQTtBQUNBLG9CQUFvQixNQUFNLGdFQUFpQix5Q0FBeUM7QUFDcEY7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLHNEQUFXLHNDQUFzQyxxQkFBcUI7QUFDbko7O0FBRUEsdUJBQXVCLCtEQUFnQjtBQUN2QztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHNEQUFXO0FBQ3hDLDJFQUEyRSx1REFBWTtBQUN2RjtBQUNBLGlCQUFpQixrRUFBbUI7QUFDcEMsVUFBVTtBQUNWO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRTBEO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2NvcmUvZXNtL3RyYW5zcG9ydHMvYmFzZS5qcz82Y2VhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1ha2VQcm9taXNlQnVmZmVyLCBmb3JFYWNoRW52ZWxvcGVJdGVtLCBlbnZlbG9wZUl0ZW1UeXBlVG9EYXRhQ2F0ZWdvcnksIGlzUmF0ZUxpbWl0ZWQsIHJlc29sdmVkU3luY1Byb21pc2UsIGNyZWF0ZUVudmVsb3BlLCBTZW50cnlFcnJvciwgbG9nZ2VyLCBzZXJpYWxpemVFbnZlbG9wZSwgdXBkYXRlUmF0ZUxpbWl0cyB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSA9IDMwO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gaW5zdGFuY2Ugb2YgYSBTZW50cnkgYFRyYW5zcG9ydGBcbiAqXG4gKiBAcGFyYW0gb3B0aW9uc1xuICogQHBhcmFtIG1ha2VSZXF1ZXN0XG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVRyYW5zcG9ydChcbiAgb3B0aW9ucyxcbiAgbWFrZVJlcXVlc3QsXG4gIGJ1ZmZlciA9IG1ha2VQcm9taXNlQnVmZmVyKFxuICAgIG9wdGlvbnMuYnVmZmVyU2l6ZSB8fCBERUZBVUxUX1RSQU5TUE9SVF9CVUZGRVJfU0laRSxcbiAgKSxcbikge1xuICBsZXQgcmF0ZUxpbWl0cyA9IHt9O1xuXG4gIGNvbnN0IGZsdXNoID0gKHRpbWVvdXQpID0+IGJ1ZmZlci5kcmFpbih0aW1lb3V0KTtcblxuICBmdW5jdGlvbiBzZW5kKGVudmVsb3BlKSB7XG4gICAgY29uc3QgZmlsdGVyZWRFbnZlbG9wZUl0ZW1zID0gW107XG5cbiAgICAvLyBEcm9wIHJhdGUgbGltaXRlZCBpdGVtcyBmcm9tIGVudmVsb3BlXG4gICAgZm9yRWFjaEVudmVsb3BlSXRlbShlbnZlbG9wZSwgKGl0ZW0sIHR5cGUpID0+IHtcbiAgICAgIGNvbnN0IGVudmVsb3BlSXRlbURhdGFDYXRlZ29yeSA9IGVudmVsb3BlSXRlbVR5cGVUb0RhdGFDYXRlZ29yeSh0eXBlKTtcbiAgICAgIGlmIChpc1JhdGVMaW1pdGVkKHJhdGVMaW1pdHMsIGVudmVsb3BlSXRlbURhdGFDYXRlZ29yeSkpIHtcbiAgICAgICAgY29uc3QgZXZlbnQgPSBnZXRFdmVudEZvckVudmVsb3BlSXRlbShpdGVtLCB0eXBlKTtcbiAgICAgICAgb3B0aW9ucy5yZWNvcmREcm9wcGVkRXZlbnQoJ3JhdGVsaW1pdF9iYWNrb2ZmJywgZW52ZWxvcGVJdGVtRGF0YUNhdGVnb3J5LCBldmVudCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmaWx0ZXJlZEVudmVsb3BlSXRlbXMucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIFNraXAgc2VuZGluZyBpZiBlbnZlbG9wZSBpcyBlbXB0eSBhZnRlciBmaWx0ZXJpbmcgb3V0IHJhdGUgbGltaXRlZCBldmVudHNcbiAgICBpZiAoZmlsdGVyZWRFbnZlbG9wZUl0ZW1zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmV0dXJuIHJlc29sdmVkU3luY1Byb21pc2UoKTtcbiAgICB9XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IGZpbHRlcmVkRW52ZWxvcGUgPSBjcmVhdGVFbnZlbG9wZShlbnZlbG9wZVswXSwgZmlsdGVyZWRFbnZlbG9wZUl0ZW1zICk7XG5cbiAgICAvLyBDcmVhdGVzIGNsaWVudCByZXBvcnQgZm9yIGVhY2ggaXRlbSBpbiBhbiBlbnZlbG9wZVxuICAgIGNvbnN0IHJlY29yZEVudmVsb3BlTG9zcyA9IChyZWFzb24pID0+IHtcbiAgICAgIGZvckVhY2hFbnZlbG9wZUl0ZW0oZmlsdGVyZWRFbnZlbG9wZSwgKGl0ZW0sIHR5cGUpID0+IHtcbiAgICAgICAgY29uc3QgZXZlbnQgPSBnZXRFdmVudEZvckVudmVsb3BlSXRlbShpdGVtLCB0eXBlKTtcbiAgICAgICAgb3B0aW9ucy5yZWNvcmREcm9wcGVkRXZlbnQocmVhc29uLCBlbnZlbG9wZUl0ZW1UeXBlVG9EYXRhQ2F0ZWdvcnkodHlwZSksIGV2ZW50KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCByZXF1ZXN0VGFzayA9ICgpID0+XG4gICAgICBtYWtlUmVxdWVzdCh7IGJvZHk6IHNlcmlhbGl6ZUVudmVsb3BlKGZpbHRlcmVkRW52ZWxvcGUsIG9wdGlvbnMudGV4dEVuY29kZXIpIH0pLnRoZW4oXG4gICAgICAgIHJlc3BvbnNlID0+IHtcbiAgICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIHRocm93IG9uIE5PSyByZXNwb25zZXMsIGJ1dCB3ZSB3YW50IHRvIGF0IGxlYXN0IGxvZyB0aGVtXG4gICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1c0NvZGUgIT09IHVuZGVmaW5lZCAmJiAocmVzcG9uc2Uuc3RhdHVzQ29kZSA8IDIwMCB8fCByZXNwb25zZS5zdGF0dXNDb2RlID49IDMwMCkpIHtcbiAgICAgICAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLndhcm4oYFNlbnRyeSByZXNwb25kZWQgd2l0aCBzdGF0dXMgY29kZSAke3Jlc3BvbnNlLnN0YXR1c0NvZGV9IHRvIHNlbnQgZXZlbnQuYCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmF0ZUxpbWl0cyA9IHVwZGF0ZVJhdGVMaW1pdHMocmF0ZUxpbWl0cywgcmVzcG9uc2UpO1xuICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3IgPT4ge1xuICAgICAgICAgIHJlY29yZEVudmVsb3BlTG9zcygnbmV0d29ya19lcnJvcicpO1xuICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICB9LFxuICAgICAgKTtcblxuICAgIHJldHVybiBidWZmZXIuYWRkKHJlcXVlc3RUYXNrKS50aGVuKFxuICAgICAgcmVzdWx0ID0+IHJlc3VsdCxcbiAgICAgIGVycm9yID0+IHtcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgU2VudHJ5RXJyb3IpIHtcbiAgICAgICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5lcnJvcignU2tpcHBlZCBzZW5kaW5nIGV2ZW50IGJlY2F1c2UgYnVmZmVyIGlzIGZ1bGwuJyk7XG4gICAgICAgICAgcmVjb3JkRW52ZWxvcGVMb3NzKCdxdWV1ZV9vdmVyZmxvdycpO1xuICAgICAgICAgIHJldHVybiByZXNvbHZlZFN5bmNQcm9taXNlKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc2VuZCxcbiAgICBmbHVzaCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0RXZlbnRGb3JFbnZlbG9wZUl0ZW0oaXRlbSwgdHlwZSkge1xuICBpZiAodHlwZSAhPT0gJ2V2ZW50JyAmJiB0eXBlICE9PSAndHJhbnNhY3Rpb24nKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHJldHVybiBBcnJheS5pc0FycmF5KGl0ZW0pID8gKGl0ZW0gKVsxXSA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHsgREVGQVVMVF9UUkFOU1BPUlRfQlVGRkVSX1NJWkUsIGNyZWF0ZVRyYW5zcG9ydCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmFzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/base.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/transports/offline.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/transports/offline.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MIN_DELAY\": function() { return /* binding */ MIN_DELAY; },\n/* harmony export */   \"START_DELAY\": function() { return /* binding */ START_DELAY; },\n/* harmony export */   \"makeOfflineTransport\": function() { return /* binding */ makeOfflineTransport; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst MIN_DELAY = 100; // 100 ms\nconst START_DELAY = 5000; // 5 seconds\nconst MAX_DELAY = 3.6e6; // 1 hour\n\nfunction log(msg, error) {\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info(`[Offline]: ${msg}`, error);\n}\n\n/**\n * Wraps a transport and stores and retries events when they fail to send.\n *\n * @param createTransport The transport to wrap.\n */\nfunction makeOfflineTransport(\n  createTransport,\n) {\n  return options => {\n    const transport = createTransport(options);\n    const store = options.createStore ? options.createStore(options) : undefined;\n\n    let retryDelay = START_DELAY;\n    let flushTimer;\n\n    function shouldQueue(env, error, retryDelay) {\n      // We don't queue Session Replay envelopes because they are:\n      // - Ordered and Replay relies on the response status to know when they're successfully sent.\n      // - Likely to fill the queue quickly and block other events from being sent.\n      // We also want to drop client reports because they can be generated when we retry sending events while offline.\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.envelopeContainsItemType)(env, ['replay_event', 'replay_recording', 'client_report'])) {\n        return false;\n      }\n\n      if (options.shouldStore) {\n        return options.shouldStore(env, error, retryDelay);\n      }\n\n      return true;\n    }\n\n    function flushIn(delay) {\n      if (!store) {\n        return;\n      }\n\n      if (flushTimer) {\n        clearTimeout(flushTimer );\n      }\n\n      flushTimer = setTimeout(async () => {\n        flushTimer = undefined;\n\n        const found = await store.pop();\n        if (found) {\n          log('Attempting to send previously queued event');\n          void send(found).catch(e => {\n            log('Failed to retry sending', e);\n          });\n        }\n      }, delay) ;\n\n      // We need to unref the timer in node.js, otherwise the node process never exit.\n      if (typeof flushTimer !== 'number' && flushTimer.unref) {\n        flushTimer.unref();\n      }\n    }\n\n    function flushWithBackOff() {\n      if (flushTimer) {\n        return;\n      }\n\n      flushIn(retryDelay);\n\n      retryDelay = Math.min(retryDelay * 2, MAX_DELAY);\n    }\n\n    async function send(envelope) {\n      try {\n        const result = await transport.send(envelope);\n\n        let delay = MIN_DELAY;\n\n        if (result) {\n          // If there's a retry-after header, use that as the next delay.\n          if (result.headers && result.headers['retry-after']) {\n            delay = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.parseRetryAfterHeader)(result.headers['retry-after']);\n          } // If we have a server error, return now so we don't flush the queue.\n          else if ((result.statusCode || 0) >= 400) {\n            return result;\n          }\n        }\n\n        flushIn(delay);\n        retryDelay = START_DELAY;\n        return result;\n      } catch (e) {\n        if (store && (await shouldQueue(envelope, e, retryDelay))) {\n          await store.insert(envelope);\n          flushWithBackOff();\n          log('Error sending. Event queued', e);\n          return {};\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    if (options.flushAtStartup) {\n      flushWithBackOff();\n    }\n\n    return {\n      send,\n      flush: t => transport.flush(t),\n    };\n  };\n}\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3Rjs7QUFFeEYsdUJBQXVCO0FBQ3ZCLDBCQUEwQjtBQUMxQix5QkFBeUI7O0FBRXpCO0FBQ0EsbUVBQW1FLHNEQUFXLGVBQWUsSUFBSTtBQUNqRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsdUVBQXdCO0FBQ2xDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLE9BQU87O0FBRVA7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0VBQXFCO0FBQ3pDLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RDtBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS90cmFuc3BvcnRzL29mZmxpbmUuanM/MDllYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIsIGxvZ2dlciwgZW52ZWxvcGVDb250YWluc0l0ZW1UeXBlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IE1JTl9ERUxBWSA9IDEwMDsgLy8gMTAwIG1zXG5jb25zdCBTVEFSVF9ERUxBWSA9IDUwMDA7IC8vIDUgc2Vjb25kc1xuY29uc3QgTUFYX0RFTEFZID0gMy42ZTY7IC8vIDEgaG91clxuXG5mdW5jdGlvbiBsb2cobXNnLCBlcnJvcikge1xuICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5pbmZvKGBbT2ZmbGluZV06ICR7bXNnfWAsIGVycm9yKTtcbn1cblxuLyoqXG4gKiBXcmFwcyBhIHRyYW5zcG9ydCBhbmQgc3RvcmVzIGFuZCByZXRyaWVzIGV2ZW50cyB3aGVuIHRoZXkgZmFpbCB0byBzZW5kLlxuICpcbiAqIEBwYXJhbSBjcmVhdGVUcmFuc3BvcnQgVGhlIHRyYW5zcG9ydCB0byB3cmFwLlxuICovXG5mdW5jdGlvbiBtYWtlT2ZmbGluZVRyYW5zcG9ydChcbiAgY3JlYXRlVHJhbnNwb3J0LFxuKSB7XG4gIHJldHVybiBvcHRpb25zID0+IHtcbiAgICBjb25zdCB0cmFuc3BvcnQgPSBjcmVhdGVUcmFuc3BvcnQob3B0aW9ucyk7XG4gICAgY29uc3Qgc3RvcmUgPSBvcHRpb25zLmNyZWF0ZVN0b3JlID8gb3B0aW9ucy5jcmVhdGVTdG9yZShvcHRpb25zKSA6IHVuZGVmaW5lZDtcblxuICAgIGxldCByZXRyeURlbGF5ID0gU1RBUlRfREVMQVk7XG4gICAgbGV0IGZsdXNoVGltZXI7XG5cbiAgICBmdW5jdGlvbiBzaG91bGRRdWV1ZShlbnYsIGVycm9yLCByZXRyeURlbGF5KSB7XG4gICAgICAvLyBXZSBkb24ndCBxdWV1ZSBTZXNzaW9uIFJlcGxheSBlbnZlbG9wZXMgYmVjYXVzZSB0aGV5IGFyZTpcbiAgICAgIC8vIC0gT3JkZXJlZCBhbmQgUmVwbGF5IHJlbGllcyBvbiB0aGUgcmVzcG9uc2Ugc3RhdHVzIHRvIGtub3cgd2hlbiB0aGV5J3JlIHN1Y2Nlc3NmdWxseSBzZW50LlxuICAgICAgLy8gLSBMaWtlbHkgdG8gZmlsbCB0aGUgcXVldWUgcXVpY2tseSBhbmQgYmxvY2sgb3RoZXIgZXZlbnRzIGZyb20gYmVpbmcgc2VudC5cbiAgICAgIC8vIFdlIGFsc28gd2FudCB0byBkcm9wIGNsaWVudCByZXBvcnRzIGJlY2F1c2UgdGhleSBjYW4gYmUgZ2VuZXJhdGVkIHdoZW4gd2UgcmV0cnkgc2VuZGluZyBldmVudHMgd2hpbGUgb2ZmbGluZS5cbiAgICAgIGlmIChlbnZlbG9wZUNvbnRhaW5zSXRlbVR5cGUoZW52LCBbJ3JlcGxheV9ldmVudCcsICdyZXBsYXlfcmVjb3JkaW5nJywgJ2NsaWVudF9yZXBvcnQnXSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBpZiAob3B0aW9ucy5zaG91bGRTdG9yZSkge1xuICAgICAgICByZXR1cm4gb3B0aW9ucy5zaG91bGRTdG9yZShlbnYsIGVycm9yLCByZXRyeURlbGF5KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZmx1c2hJbihkZWxheSkge1xuICAgICAgaWYgKCFzdG9yZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChmbHVzaFRpbWVyKSB7XG4gICAgICAgIGNsZWFyVGltZW91dChmbHVzaFRpbWVyICk7XG4gICAgICB9XG5cbiAgICAgIGZsdXNoVGltZXIgPSBzZXRUaW1lb3V0KGFzeW5jICgpID0+IHtcbiAgICAgICAgZmx1c2hUaW1lciA9IHVuZGVmaW5lZDtcblxuICAgICAgICBjb25zdCBmb3VuZCA9IGF3YWl0IHN0b3JlLnBvcCgpO1xuICAgICAgICBpZiAoZm91bmQpIHtcbiAgICAgICAgICBsb2coJ0F0dGVtcHRpbmcgdG8gc2VuZCBwcmV2aW91c2x5IHF1ZXVlZCBldmVudCcpO1xuICAgICAgICAgIHZvaWQgc2VuZChmb3VuZCkuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICBsb2coJ0ZhaWxlZCB0byByZXRyeSBzZW5kaW5nJywgZSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sIGRlbGF5KSA7XG5cbiAgICAgIC8vIFdlIG5lZWQgdG8gdW5yZWYgdGhlIHRpbWVyIGluIG5vZGUuanMsIG90aGVyd2lzZSB0aGUgbm9kZSBwcm9jZXNzIG5ldmVyIGV4aXQuXG4gICAgICBpZiAodHlwZW9mIGZsdXNoVGltZXIgIT09ICdudW1iZXInICYmIGZsdXNoVGltZXIudW5yZWYpIHtcbiAgICAgICAgZmx1c2hUaW1lci51bnJlZigpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGZsdXNoV2l0aEJhY2tPZmYoKSB7XG4gICAgICBpZiAoZmx1c2hUaW1lcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGZsdXNoSW4ocmV0cnlEZWxheSk7XG5cbiAgICAgIHJldHJ5RGVsYXkgPSBNYXRoLm1pbihyZXRyeURlbGF5ICogMiwgTUFYX0RFTEFZKTtcbiAgICB9XG5cbiAgICBhc3luYyBmdW5jdGlvbiBzZW5kKGVudmVsb3BlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0cmFuc3BvcnQuc2VuZChlbnZlbG9wZSk7XG5cbiAgICAgICAgbGV0IGRlbGF5ID0gTUlOX0RFTEFZO1xuXG4gICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAvLyBJZiB0aGVyZSdzIGEgcmV0cnktYWZ0ZXIgaGVhZGVyLCB1c2UgdGhhdCBhcyB0aGUgbmV4dCBkZWxheS5cbiAgICAgICAgICBpZiAocmVzdWx0LmhlYWRlcnMgJiYgcmVzdWx0LmhlYWRlcnNbJ3JldHJ5LWFmdGVyJ10pIHtcbiAgICAgICAgICAgIGRlbGF5ID0gcGFyc2VSZXRyeUFmdGVySGVhZGVyKHJlc3VsdC5oZWFkZXJzWydyZXRyeS1hZnRlciddKTtcbiAgICAgICAgICB9IC8vIElmIHdlIGhhdmUgYSBzZXJ2ZXIgZXJyb3IsIHJldHVybiBub3cgc28gd2UgZG9uJ3QgZmx1c2ggdGhlIHF1ZXVlLlxuICAgICAgICAgIGVsc2UgaWYgKChyZXN1bHQuc3RhdHVzQ29kZSB8fCAwKSA+PSA0MDApIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZmx1c2hJbihkZWxheSk7XG4gICAgICAgIHJldHJ5RGVsYXkgPSBTVEFSVF9ERUxBWTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKHN0b3JlICYmIChhd2FpdCBzaG91bGRRdWV1ZShlbnZlbG9wZSwgZSwgcmV0cnlEZWxheSkpKSB7XG4gICAgICAgICAgYXdhaXQgc3RvcmUuaW5zZXJ0KGVudmVsb3BlKTtcbiAgICAgICAgICBmbHVzaFdpdGhCYWNrT2ZmKCk7XG4gICAgICAgICAgbG9nKCdFcnJvciBzZW5kaW5nLiBFdmVudCBxdWV1ZWQnLCBlKTtcbiAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChvcHRpb25zLmZsdXNoQXRTdGFydHVwKSB7XG4gICAgICBmbHVzaFdpdGhCYWNrT2ZmKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHNlbmQsXG4gICAgICBmbHVzaDogdCA9PiB0cmFuc3BvcnQuZmx1c2godCksXG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IHsgTUlOX0RFTEFZLCBTVEFSVF9ERUxBWSwgbWFrZU9mZmxpbmVUcmFuc3BvcnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9mZmxpbmUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/transports/offline.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js":
/*!******************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hasTracingEnabled\": function() { return /* binding */ hasTracingEnabled; }\n/* harmony export */ });\n/* harmony import */ var _hub_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hub.js */ \"./node_modules/@sentry/core/esm/hub.js\");\n\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = (0,_hub_js__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\n\n//# sourceMappingURL=hasTracingEnabled.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQzs7QUFFMUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxpQkFBaUIsc0RBQWE7QUFDOUI7QUFDQTtBQUNBOztBQUU2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS91dGlscy9oYXNUcmFjaW5nRW5hYmxlZC5qcz9kMzlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEN1cnJlbnRIdWIgfSBmcm9tICcuLi9odWIuanMnO1xuXG4vLyBUcmVlc2hha2FibGUgZ3VhcmQgdG8gcmVtb3ZlIGFsbCBjb2RlIHJlbGF0ZWQgdG8gdHJhY2luZ1xuXG4vKipcbiAqIERldGVybWluZXMgaWYgdHJhY2luZyBpcyBjdXJyZW50bHkgZW5hYmxlZC5cbiAqXG4gKiBUcmFjaW5nIGlzIGVuYWJsZWQgd2hlbiBhdCBsZWFzdCBvbmUgb2YgYHRyYWNlc1NhbXBsZVJhdGVgIGFuZCBgdHJhY2VzU2FtcGxlcmAgaXMgZGVmaW5lZCBpbiB0aGUgU0RLIGNvbmZpZy5cbiAqL1xuZnVuY3Rpb24gaGFzVHJhY2luZ0VuYWJsZWQoXG4gIG1heWJlT3B0aW9ucyxcbikge1xuICBpZiAodHlwZW9mIF9fU0VOVFJZX1RSQUNJTkdfXyA9PT0gJ2Jvb2xlYW4nICYmICFfX1NFTlRSWV9UUkFDSU5HX18pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb25zdCBjbGllbnQgPSBnZXRDdXJyZW50SHViKCkuZ2V0Q2xpZW50KCk7XG4gIGNvbnN0IG9wdGlvbnMgPSBtYXliZU9wdGlvbnMgfHwgKGNsaWVudCAmJiBjbGllbnQuZ2V0T3B0aW9ucygpKTtcbiAgcmV0dXJuICEhb3B0aW9ucyAmJiAob3B0aW9ucy5lbmFibGVUcmFjaW5nIHx8ICd0cmFjZXNTYW1wbGVSYXRlJyBpbiBvcHRpb25zIHx8ICd0cmFjZXNTYW1wbGVyJyBpbiBvcHRpb25zKTtcbn1cblxuZXhwb3J0IHsgaGFzVHJhY2luZ0VuYWJsZWQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc1RyYWNpbmdFbmFibGVkLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/utils/prepareEvent.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/core/esm/utils/prepareEvent.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyDebugMetadata\": function() { return /* binding */ applyDebugMetadata; },\n/* harmony export */   \"prepareEvent\": function() { return /* binding */ prepareEvent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"./node_modules/@sentry/core/esm/constants.js\");\n/* harmony import */ var _scope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../scope.js */ \"./node_modules/@sentry/core/esm/scope.js\");\n\n\n\n\n/**\n * Adds common information to events.\n *\n * The information includes release and environment from `options`,\n * breadcrumbs and context (extra, tags and user) from the scope.\n *\n * Information that is already present in the event is never overwritten. For\n * nested objects, such as the context, keys are merged.\n *\n * Note: This also triggers callbacks for `addGlobalEventProcessor`, but not `beforeSend`.\n *\n * @param event The original event.\n * @param hint May contain additional information about the original exception.\n * @param scope A scope containing event metadata.\n * @returns A new event with more information.\n * @hidden\n */\nfunction prepareEvent(\n  options,\n  event,\n  hint,\n  scope,\n) {\n  const { normalizeDepth = 3, normalizeMaxBreadth = 1000 } = options;\n  const prepared = {\n    ...event,\n    event_id: event.event_id || hint.event_id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)(),\n    timestamp: event.timestamp || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dateTimestampInSeconds)(),\n  };\n  const integrations = hint.integrations || options.integrations.map(i => i.name);\n\n  applyClientOptions(prepared, options);\n  applyIntegrationsMetadata(prepared, integrations);\n  applyDebugMetadata(prepared, options.stackParser);\n\n  // If we have scope given to us, use it as the base for further modifications.\n  // This allows us to prevent unnecessary copying of data if `captureContext` is not provided.\n  let finalScope = scope;\n  if (hint.captureContext) {\n    finalScope = _scope_js__WEBPACK_IMPORTED_MODULE_1__.Scope.clone(finalScope).update(hint.captureContext);\n  }\n\n  // We prepare the result here with a resolved Event.\n  let result = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(prepared);\n\n  // This should be the last thing called, since we want that\n  // {@link Hub.addEventProcessor} gets the finished prepared event.\n  //\n  // We need to check for the existence of `finalScope.getAttachments`\n  // because `getAttachments` can be undefined if users are using an older version\n  // of `@sentry/core` that does not have the `getAttachments` method.\n  // See: https://github.com/getsentry/sentry-javascript/issues/5229\n  if (finalScope) {\n    // Collect attachments from the hint and scope\n    if (finalScope.getAttachments) {\n      const attachments = [...(hint.attachments || []), ...finalScope.getAttachments()];\n\n      if (attachments.length) {\n        hint.attachments = attachments;\n      }\n    }\n\n    // In case we have a hub we reassign it.\n    result = finalScope.applyToEvent(prepared, hint);\n  }\n\n  return result.then(evt => {\n    if (typeof normalizeDepth === 'number' && normalizeDepth > 0) {\n      return normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);\n    }\n    return evt;\n  });\n}\n\n/**\n *  Enhances event using the client configuration.\n *  It takes care of all \"static\" values like environment, release and `dist`,\n *  as well as truncating overly long values.\n * @param event event instance to be enhanced\n */\nfunction applyClientOptions(event, options) {\n  const { environment, release, dist, maxValueLength = 250 } = options;\n\n  if (!('environment' in event)) {\n    event.environment = 'environment' in options ? environment : _constants_js__WEBPACK_IMPORTED_MODULE_2__.DEFAULT_ENVIRONMENT;\n  }\n\n  if (event.release === undefined && release !== undefined) {\n    event.release = release;\n  }\n\n  if (event.dist === undefined && dist !== undefined) {\n    event.dist = dist;\n  }\n\n  if (event.message) {\n    event.message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.truncate)(event.message, maxValueLength);\n  }\n\n  const exception = event.exception && event.exception.values && event.exception.values[0];\n  if (exception && exception.value) {\n    exception.value = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.truncate)(exception.value, maxValueLength);\n  }\n\n  const request = event.request;\n  if (request && request.url) {\n    request.url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.truncate)(request.url, maxValueLength);\n  }\n}\n\n/**\n * Applies debug metadata images to the event in order to apply source maps by looking up their debug ID.\n */\nfunction applyDebugMetadata(event, stackParser) {\n  const debugIdMap = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ._sentryDebugIds;\n\n  if (!debugIdMap) {\n    return;\n  }\n\n  // Build a map of abs_path -> debug_id\n  const absPathDebugIdMap = Object.keys(debugIdMap).reduce((acc, debugIdStackTrace) => {\n    const parsedStack = stackParser(debugIdStackTrace);\n    for (const stackFrame of parsedStack) {\n      if (stackFrame.abs_path) {\n        acc[stackFrame.abs_path] = debugIdMap[debugIdStackTrace];\n        break;\n      }\n    }\n    return acc;\n  }, {});\n\n  // Get a Set of abs_paths in the stack trace\n  const errorAbsPaths = new Set();\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception.values.forEach(exception => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      exception.stacktrace.frames.forEach(frame => {\n        if (frame.abs_path) {\n          errorAbsPaths.add(frame.abs_path);\n        }\n      });\n    });\n  } catch (e) {\n    // To save bundle size we're just try catching here instead of checking for the existence of all the different objects.\n  }\n\n  // Fill debug_meta information\n  event.debug_meta = event.debug_meta || {};\n  event.debug_meta.images = event.debug_meta.images || [];\n  const images = event.debug_meta.images;\n  errorAbsPaths.forEach(absPath => {\n    if (absPathDebugIdMap[absPath]) {\n      images.push({\n        type: 'sourcemap',\n        code_file: absPath,\n        debug_id: absPathDebugIdMap[absPath],\n      });\n    }\n  });\n}\n\n/**\n * This function adds all used integrations to the SDK info in the event.\n * @param event The event that will be filled with all integrations.\n */\nfunction applyIntegrationsMetadata(event, integrationNames) {\n  if (integrationNames.length > 0) {\n    event.sdk = event.sdk || {};\n    event.sdk.integrations = [...(event.sdk.integrations || []), ...integrationNames];\n  }\n}\n\n/**\n * Applies `normalize` function on necessary `Event` attributes to make them safe for serialization.\n * Normalized keys:\n * - `breadcrumbs.data`\n * - `user`\n * - `contexts`\n * - `extra`\n * @param event Event\n * @returns Normalized event\n */\nfunction normalizeEvent(event, depth, maxBreadth) {\n  if (!event) {\n    return null;\n  }\n\n  const normalized = {\n    ...event,\n    ...(event.breadcrumbs && {\n      breadcrumbs: event.breadcrumbs.map(b => ({\n        ...b,\n        ...(b.data && {\n          data: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(b.data, depth, maxBreadth),\n        }),\n      })),\n    }),\n    ...(event.user && {\n      user: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.user, depth, maxBreadth),\n    }),\n    ...(event.contexts && {\n      contexts: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.contexts, depth, maxBreadth),\n    }),\n    ...(event.extra && {\n      extra: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.extra, depth, maxBreadth),\n    }),\n  };\n\n  // event.contexts.trace stores information about a Transaction. Similarly,\n  // event.spans[] stores information about child Spans. Given that a\n  // Transaction is conceptually a Span, normalization should apply to both\n  // Transactions and Spans consistently.\n  // For now the decision is to skip normalization of Transactions and Spans,\n  // so this block overwrites the normalized event to add back the original\n  // Transaction information prior to normalization.\n  if (event.contexts && event.contexts.trace && normalized.contexts) {\n    normalized.contexts.trace = event.contexts.trace;\n\n    // event.contexts.trace.data may contain circular/dangerous data so we need to normalize it\n    if (event.contexts.trace.data) {\n      normalized.contexts.trace.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(event.contexts.trace.data, depth, maxBreadth);\n    }\n  }\n\n  // event.spans[].data may contain circular/dangerous data so we need to normalize it\n  if (event.spans) {\n    normalized.spans = event.spans.map(span => {\n      // We cannot use the spread operator here because `toJSON` on `span` is non-enumerable\n      if (span.data) {\n        span.data = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(span.data, depth, maxBreadth);\n      }\n      return span;\n    });\n  }\n\n  return normalized;\n}\n\n\n//# sourceMappingURL=prepareEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/utils/prepareEvent.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/core/esm/version.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/core/esm/version.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SDK_VERSION\": function() { return /* binding */ SDK_VERSION; }\n/* harmony export */ });\nconst SDK_VERSION = '7.43.0';\n\n\n//# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9jb3JlL2VzbS92ZXJzaW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvY29yZS9lc20vdmVyc2lvbi5qcz9jNDExIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFNES19WRVJTSU9OID0gJzcuNDMuMCc7XG5cbmV4cG9ydCB7IFNES19WRVJTSU9OIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/core/esm/version.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/captureconsole.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/captureconsole.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CaptureConsole\": function() { return /* binding */ CaptureConsole; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/** Send Console API calls as Sentry Events */\nclass CaptureConsole  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'CaptureConsole';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = CaptureConsole.id;}\n\n  /**\n   * @inheritDoc\n   */\n    __init2() {this._levels = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.CONSOLE_LEVELS;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {CaptureConsole.prototype.__init.call(this);CaptureConsole.prototype.__init2.call(this);\n    if (options.levels) {\n      this._levels = options.levels;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!(\"console\" in _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n      return;\n    }\n\n    this._levels.forEach((level) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      if (!(level in _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console)) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console, level, (originalConsoleMethod) => (...args) => {\n        const hub = getCurrentHub();\n\n        if (hub.getIntegration(CaptureConsole)) {\n          hub.withScope(scope => {\n            scope.setLevel((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.severityLevelFromString)(level));\n            scope.setExtra('arguments', args);\n            scope.addEventProcessor(event => {\n              event.logger = 'console';\n              return event;\n            });\n\n            let message = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(args, ' ');\n            if (level === 'assert') {\n              if (args[0] === false) {\n                message = `Assertion failed: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.safeJoin)(args.slice(1), ' ') || 'console.assert'}`;\n                scope.setExtra('arguments', args.slice(1));\n                hub.captureMessage(message);\n              }\n            } else if (level === 'error' && args[0] instanceof Error) {\n              hub.captureException(args[0]);\n            } else {\n              hub.captureMessage(message);\n            }\n          });\n        }\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console, args);\n        }\n      });\n    });\n  }\n} CaptureConsole.__initStatic();\n\n\n//# sourceMappingURL=captureconsole.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2NhcHR1cmVjb25zb2xlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9HOztBQUVwRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZUFBZSx5REFBYzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLEdBQUcsMkNBQTJDO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxrRUFBdUI7QUFDakM7QUFDQTs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLDZEQUFxQjtBQUMxQztBQUNBOztBQUVBO0FBQ0EsTUFBTSxtREFBSSxDQUFDLDZEQUFxQjtBQUNoQzs7QUFFQTtBQUNBO0FBQ0EsMkJBQTJCLHNFQUF1QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWIsMEJBQTBCLHVEQUFRO0FBQ2xDO0FBQ0E7QUFDQSwrQ0FBK0MsdURBQVEseUNBQXlDO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQSxzQ0FBc0MsNkRBQWtCO0FBQ3hEO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBLEVBQUU7O0FBRXdCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vY2FwdHVyZWNvbnNvbGUuanM/YmFlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT05TT0xFX0xFVkVMUywgR0xPQkFMX09CSiwgZmlsbCwgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcsIHNhZmVKb2luIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKiBTZW5kIENvbnNvbGUgQVBJIGNhbGxzIGFzIFNlbnRyeSBFdmVudHMgKi9cbmNsYXNzIENhcHR1cmVDb25zb2xlICB7XG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHN0YXRpYyBfX2luaXRTdGF0aWMoKSB7dGhpcy5pZCA9ICdDYXB0dXJlQ29uc29sZSc7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIF9faW5pdCgpIHt0aGlzLm5hbWUgPSBDYXB0dXJlQ29uc29sZS5pZDt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgIF9faW5pdDIoKSB7dGhpcy5fbGV2ZWxzID0gQ09OU09MRV9MRVZFTFM7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge0NhcHR1cmVDb25zb2xlLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtDYXB0dXJlQ29uc29sZS5wcm90b3R5cGUuX19pbml0Mi5jYWxsKHRoaXMpO1xuICAgIGlmIChvcHRpb25zLmxldmVscykge1xuICAgICAgdGhpcy5fbGV2ZWxzID0gb3B0aW9ucy5sZXZlbHM7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc2V0dXBPbmNlKF8sIGdldEN1cnJlbnRIdWIpIHtcbiAgICBpZiAoISgnY29uc29sZScgaW4gR0xPQkFMX09CSikpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9sZXZlbHMuZm9yRWFjaCgobGV2ZWwpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3MsIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgIGlmICghKGxldmVsIGluIChHTE9CQUxfT0JKICkuY29uc29sZSkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSwgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gICAgICBmaWxsKChHTE9CQUxfT0JKICkuY29uc29sZSwgbGV2ZWwsIChvcmlnaW5hbENvbnNvbGVNZXRob2QpID0+ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGNvbnN0IGh1YiA9IGdldEN1cnJlbnRIdWIoKTtcblxuICAgICAgICBpZiAoaHViLmdldEludGVncmF0aW9uKENhcHR1cmVDb25zb2xlKSkge1xuICAgICAgICAgIGh1Yi53aXRoU2NvcGUoc2NvcGUgPT4ge1xuICAgICAgICAgICAgc2NvcGUuc2V0TGV2ZWwoc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcobGV2ZWwpKTtcbiAgICAgICAgICAgIHNjb3BlLnNldEV4dHJhKCdhcmd1bWVudHMnLCBhcmdzKTtcbiAgICAgICAgICAgIHNjb3BlLmFkZEV2ZW50UHJvY2Vzc29yKGV2ZW50ID0+IHtcbiAgICAgICAgICAgICAgZXZlbnQubG9nZ2VyID0gJ2NvbnNvbGUnO1xuICAgICAgICAgICAgICByZXR1cm4gZXZlbnQ7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgbGV0IG1lc3NhZ2UgPSBzYWZlSm9pbihhcmdzLCAnICcpO1xuICAgICAgICAgICAgaWYgKGxldmVsID09PSAnYXNzZXJ0Jykge1xuICAgICAgICAgICAgICBpZiAoYXJnc1swXSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlID0gYEFzc2VydGlvbiBmYWlsZWQ6ICR7c2FmZUpvaW4oYXJncy5zbGljZSgxKSwgJyAnKSB8fCAnY29uc29sZS5hc3NlcnQnfWA7XG4gICAgICAgICAgICAgICAgc2NvcGUuc2V0RXh0cmEoJ2FyZ3VtZW50cycsIGFyZ3Muc2xpY2UoMSkpO1xuICAgICAgICAgICAgICAgIGh1Yi5jYXB0dXJlTWVzc2FnZShtZXNzYWdlKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIGlmIChsZXZlbCA9PT0gJ2Vycm9yJyAmJiBhcmdzWzBdIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgaHViLmNhcHR1cmVFeGNlcHRpb24oYXJnc1swXSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBodWIuY2FwdHVyZU1lc3NhZ2UobWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB0aGlzIGZhaWxzIGZvciBzb21lIGJyb3dzZXJzLiA6KFxuICAgICAgICBpZiAob3JpZ2luYWxDb25zb2xlTWV0aG9kKSB7XG4gICAgICAgICAgb3JpZ2luYWxDb25zb2xlTWV0aG9kLmFwcGx5KEdMT0JBTF9PQkouY29uc29sZSwgYXJncyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59IENhcHR1cmVDb25zb2xlLl9faW5pdFN0YXRpYygpO1xuXG5leHBvcnQgeyBDYXB0dXJlQ29uc29sZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FwdHVyZWNvbnNvbGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/captureconsole.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/debug.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/debug.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Debug\": function() { return /* binding */ Debug; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/**\n * Integration to debug sent Sentry events.\n * This integration should not be used in production\n */\nclass Debug  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Debug';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Debug.id;}\n\n   constructor(options) {Debug.prototype.__init.call(this);\n    this._options = {\n      debugger: false,\n      stringify: false,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor((event, hint) => {\n      const self = getCurrentHub().getIntegration(Debug);\n      if (self) {\n        if (self._options.debugger) {\n          // eslint-disable-next-line no-debugger\n          debugger;\n        }\n\n        /* eslint-disable no-console */\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.consoleSandbox)(() => {\n          if (self._options.stringify) {\n            console.log(JSON.stringify(event, null, 2));\n            if (Object.keys(hint).length) {\n              console.log(JSON.stringify(hint, null, 2));\n            }\n          } else {\n            console.log(event);\n            if (Object.keys(hint).length) {\n              console.log(hint);\n            }\n          }\n        });\n        /* eslint-enable no-console */\n      }\n      return event;\n    });\n  }\n} Debug.__initStatic();\n\n\n//# sourceMappingURL=debug.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2RlYnVnLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStDOztBQUUvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFFBQVEsNkRBQWM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEVBQUU7O0FBRWU7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvaW50ZWdyYXRpb25zL2VzbS9kZWJ1Zy5qcz8yMmExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnNvbGVTYW5kYm94IH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogSW50ZWdyYXRpb24gdG8gZGVidWcgc2VudCBTZW50cnkgZXZlbnRzLlxuICogVGhpcyBpbnRlZ3JhdGlvbiBzaG91bGQgbm90IGJlIHVzZWQgaW4gcHJvZHVjdGlvblxuICovXG5jbGFzcyBEZWJ1ZyAge1xuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzdGF0aWMgX19pbml0U3RhdGljKCkge3RoaXMuaWQgPSAnRGVidWcnO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBfX2luaXQoKSB7dGhpcy5uYW1lID0gRGVidWcuaWQ7fVxuXG4gICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7RGVidWcucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpO1xuICAgIHRoaXMuX29wdGlvbnMgPSB7XG4gICAgICBkZWJ1Z2dlcjogZmFsc2UsXG4gICAgICBzdHJpbmdpZnk6IGZhbHNlLFxuICAgICAgLi4ub3B0aW9ucyxcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc2V0dXBPbmNlKGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yLCBnZXRDdXJyZW50SHViKSB7XG4gICAgYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IoKGV2ZW50LCBoaW50KSA9PiB7XG4gICAgICBjb25zdCBzZWxmID0gZ2V0Q3VycmVudEh1YigpLmdldEludGVncmF0aW9uKERlYnVnKTtcbiAgICAgIGlmIChzZWxmKSB7XG4gICAgICAgIGlmIChzZWxmLl9vcHRpb25zLmRlYnVnZ2VyKSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWRlYnVnZ2VyXG4gICAgICAgICAgZGVidWdnZXI7XG4gICAgICAgIH1cblxuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgIGNvbnNvbGVTYW5kYm94KCgpID0+IHtcbiAgICAgICAgICBpZiAoc2VsZi5fb3B0aW9ucy5zdHJpbmdpZnkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGV2ZW50LCBudWxsLCAyKSk7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LmtleXMoaGludCkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGhpbnQsIG51bGwsIDIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQpO1xuICAgICAgICAgICAgaWYgKE9iamVjdC5rZXlzKGhpbnQpLmxlbmd0aCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhoaW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgICAgIH1cbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9KTtcbiAgfVxufSBEZWJ1Zy5fX2luaXRTdGF0aWMoKTtcblxuZXhwb3J0IHsgRGVidWcgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlYnVnLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/debug.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/dedupe.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/dedupe.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Dedupe\": function() { return /* binding */ Dedupe; },\n/* harmony export */   \"_shouldDropEvent\": function() { return /* binding */ _shouldDropEvent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/** Deduplication filter */\nclass Dedupe  {constructor() { Dedupe.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Dedupe';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Dedupe.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    const eventProcessor = currentEvent => {\n      // We want to ignore any non-error type events, e.g. transactions or replays\n      // These should never be deduped, and also not be compared against as _previousEvent.\n      if (currentEvent.type) {\n        return currentEvent;\n      }\n\n      const self = getCurrentHub().getIntegration(Dedupe);\n      if (self) {\n        // Juuust in case something goes wrong\n        try {\n          if (_shouldDropEvent(currentEvent, self._previousEvent)) {\n            (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Event dropped due to being a duplicate of previously captured event.');\n            return null;\n          }\n        } catch (_oO) {\n          return (self._previousEvent = currentEvent);\n        }\n\n        return (self._previousEvent = currentEvent);\n      }\n      return currentEvent;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n  }\n} Dedupe.__initStatic();\n\n/** JSDoc */\nfunction _shouldDropEvent(currentEvent, previousEvent) {\n  if (!previousEvent) {\n    return false;\n  }\n\n  if (_isSameMessageEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  if (_isSameExceptionEvent(currentEvent, previousEvent)) {\n    return true;\n  }\n\n  return false;\n}\n\n/** JSDoc */\nfunction _isSameMessageEvent(currentEvent, previousEvent) {\n  const currentMessage = currentEvent.message;\n  const previousMessage = previousEvent.message;\n\n  // If neither event has a message property, they were both exceptions, so bail out\n  if (!currentMessage && !previousMessage) {\n    return false;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentMessage && !previousMessage) || (!currentMessage && previousMessage)) {\n    return false;\n  }\n\n  if (currentMessage !== previousMessage) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameExceptionEvent(currentEvent, previousEvent) {\n  const previousException = _getExceptionFromEvent(previousEvent);\n  const currentException = _getExceptionFromEvent(currentEvent);\n\n  if (!previousException || !currentException) {\n    return false;\n  }\n\n  if (previousException.type !== currentException.type || previousException.value !== currentException.value) {\n    return false;\n  }\n\n  if (!_isSameFingerprint(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  if (!_isSameStacktrace(currentEvent, previousEvent)) {\n    return false;\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameStacktrace(currentEvent, previousEvent) {\n  let currentFrames = _getFramesFromEvent(currentEvent);\n  let previousFrames = _getFramesFromEvent(previousEvent);\n\n  // If neither event has a stacktrace, they are assumed to be the same\n  if (!currentFrames && !previousFrames) {\n    return true;\n  }\n\n  // If only one event has a stacktrace, but not the other one, they are not the same\n  if ((currentFrames && !previousFrames) || (!currentFrames && previousFrames)) {\n    return false;\n  }\n\n  currentFrames = currentFrames ;\n  previousFrames = previousFrames ;\n\n  // If number of frames differ, they are not the same\n  if (previousFrames.length !== currentFrames.length) {\n    return false;\n  }\n\n  // Otherwise, compare the two\n  for (let i = 0; i < previousFrames.length; i++) {\n    const frameA = previousFrames[i];\n    const frameB = currentFrames[i];\n\n    if (\n      frameA.filename !== frameB.filename ||\n      frameA.lineno !== frameB.lineno ||\n      frameA.colno !== frameB.colno ||\n      frameA.function !== frameB.function\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/** JSDoc */\nfunction _isSameFingerprint(currentEvent, previousEvent) {\n  let currentFingerprint = currentEvent.fingerprint;\n  let previousFingerprint = previousEvent.fingerprint;\n\n  // If neither event has a fingerprint, they are assumed to be the same\n  if (!currentFingerprint && !previousFingerprint) {\n    return true;\n  }\n\n  // If only one event has a fingerprint, but not the other one, they are not the same\n  if ((currentFingerprint && !previousFingerprint) || (!currentFingerprint && previousFingerprint)) {\n    return false;\n  }\n\n  currentFingerprint = currentFingerprint ;\n  previousFingerprint = previousFingerprint ;\n\n  // Otherwise, compare the two\n  try {\n    return !!(currentFingerprint.join('') === previousFingerprint.join(''));\n  } catch (_oO) {\n    return false;\n  }\n}\n\n/** JSDoc */\nfunction _getExceptionFromEvent(event) {\n  return event.exception && event.exception.values && event.exception.values[0];\n}\n\n/** JSDoc */\nfunction _getFramesFromEvent(event) {\n  const exception = event.exception;\n\n  if (exception) {\n    try {\n      // @ts-ignore Object could be undefined\n      return exception.values[0].stacktrace.frames;\n    } catch (_oO) {\n      return undefined;\n    }\n  }\n  return undefined;\n}\n\n\n//# sourceMappingURL=dedupe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/dedupe.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/extraerrordata.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/extraerrordata.js ***!
  \*****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ExtraErrorData\": function() { return /* binding */ ExtraErrorData; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/** JSDoc */\n\n/** Patch toString calls to return proper name for wrapped functions */\nclass ExtraErrorData  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'ExtraErrorData';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = ExtraErrorData.id;}\n\n  /** JSDoc */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options) {ExtraErrorData.prototype.__init.call(this);\n    this._options = {\n      depth: 3,\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor((event, hint) => {\n      const self = getCurrentHub().getIntegration(ExtraErrorData);\n      if (!self) {\n        return event;\n      }\n      return self.enhanceEventWithErrorData(event, hint);\n    });\n  }\n\n  /**\n   * Attaches extracted information from the Error object to extra field in the Event\n   */\n   enhanceEventWithErrorData(event, hint = {}) {\n    if (!hint.originalException || !(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(hint.originalException)) {\n      return event;\n    }\n    const exceptionName = (hint.originalException ).name || hint.originalException.constructor.name;\n\n    const errorData = this._extractErrorData(hint.originalException );\n\n    if (errorData) {\n      const contexts = {\n        ...event.contexts,\n      };\n\n      const normalizedErrorData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.normalize)(errorData, this._options.depth);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(normalizedErrorData)) {\n        // We mark the error data as \"already normalized\" here, because we don't want other normalization procedures to\n        // potentially truncate the data we just already normalized, with a certain depth setting.\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addNonEnumerableProperty)(normalizedErrorData, '__sentry_skip_normalization__', true);\n        contexts[exceptionName] = normalizedErrorData;\n      }\n\n      return {\n        ...event,\n        contexts,\n      };\n    }\n\n    return event;\n  }\n\n  /**\n   * Extract extra information from the Error object\n   */\n   _extractErrorData(error) {\n    // We are trying to enhance already existing event, so no harm done if it won't succeed\n    try {\n      const nativeKeys = [\n        'name',\n        'message',\n        'stack',\n        'line',\n        'column',\n        'fileName',\n        'lineNumber',\n        'columnNumber',\n        'toJSON',\n      ];\n\n      const extraErrorInfo = {};\n\n      // We want only enumerable properties, thus `getOwnPropertyNames` is redundant here, as we filter keys anyway.\n      for (const key of Object.keys(error)) {\n        if (nativeKeys.indexOf(key) !== -1) {\n          continue;\n        }\n        const value = error[key];\n        extraErrorInfo[key] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(value) ? value.toString() : value;\n      }\n\n      // Check if someone attached `toJSON` method to grab even more properties (eg. axios is doing that)\n      if (typeof error.toJSON === 'function') {\n        const serializedError = error.toJSON() ;\n\n        for (const key of Object.keys(serializedError)) {\n          const value = serializedError[key];\n          extraErrorInfo[key] = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isError)(value) ? value.toString() : value;\n        }\n      }\n\n      return extraErrorInfo;\n    } catch (oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('Unable to extract extra data from the Error object:', oO);\n    }\n\n    return null;\n  }\n} ExtraErrorData.__initStatic();\n\n\n//# sourceMappingURL=extraerrordata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2V4dHJhZXJyb3JkYXRhLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9HOztBQUVwRzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QyxvQ0FBb0Msc0RBQU87QUFDM0M7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtDQUFrQyx3REFBUzs7QUFFM0MsVUFBVSw0REFBYTtBQUN2QjtBQUNBO0FBQ0EsUUFBUSx1RUFBd0I7QUFDaEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0RBQU87QUFDckM7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQ0FBZ0Msc0RBQU87QUFDdkM7QUFDQTs7QUFFQTtBQUNBLE1BQU07QUFDTix1RUFBdUUsdURBQVk7QUFDbkY7O0FBRUE7QUFDQTtBQUNBLEVBQUU7O0FBRXdCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vZXh0cmFlcnJvcmRhdGEuanM/N2U0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0Vycm9yLCBub3JtYWxpemUsIGlzUGxhaW5PYmplY3QsIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSwgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKiBKU0RvYyAqL1xuXG4vKiogUGF0Y2ggdG9TdHJpbmcgY2FsbHMgdG8gcmV0dXJuIHByb3BlciBuYW1lIGZvciB3cmFwcGVkIGZ1bmN0aW9ucyAqL1xuY2xhc3MgRXh0cmFFcnJvckRhdGEgIHtcbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhdGljIF9faW5pdFN0YXRpYygpIHt0aGlzLmlkID0gJ0V4dHJhRXJyb3JEYXRhJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX19pbml0KCkge3RoaXMubmFtZSA9IEV4dHJhRXJyb3JEYXRhLmlkO31cblxuICAvKiogSlNEb2MgKi9cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7RXh0cmFFcnJvckRhdGEucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpO1xuICAgIHRoaXMuX29wdGlvbnMgPSB7XG4gICAgICBkZXB0aDogMyxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldHVwT25jZShhZGRHbG9iYWxFdmVudFByb2Nlc3NvciwgZ2V0Q3VycmVudEh1Yikge1xuICAgIGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yKChldmVudCwgaGludCkgPT4ge1xuICAgICAgY29uc3Qgc2VsZiA9IGdldEN1cnJlbnRIdWIoKS5nZXRJbnRlZ3JhdGlvbihFeHRyYUVycm9yRGF0YSk7XG4gICAgICBpZiAoIXNlbGYpIHtcbiAgICAgICAgcmV0dXJuIGV2ZW50O1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNlbGYuZW5oYW5jZUV2ZW50V2l0aEVycm9yRGF0YShldmVudCwgaGludCk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQXR0YWNoZXMgZXh0cmFjdGVkIGluZm9ybWF0aW9uIGZyb20gdGhlIEVycm9yIG9iamVjdCB0byBleHRyYSBmaWVsZCBpbiB0aGUgRXZlbnRcbiAgICovXG4gICBlbmhhbmNlRXZlbnRXaXRoRXJyb3JEYXRhKGV2ZW50LCBoaW50ID0ge30pIHtcbiAgICBpZiAoIWhpbnQub3JpZ2luYWxFeGNlcHRpb24gfHwgIWlzRXJyb3IoaGludC5vcmlnaW5hbEV4Y2VwdGlvbikpIHtcbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9XG4gICAgY29uc3QgZXhjZXB0aW9uTmFtZSA9IChoaW50Lm9yaWdpbmFsRXhjZXB0aW9uICkubmFtZSB8fCBoaW50Lm9yaWdpbmFsRXhjZXB0aW9uLmNvbnN0cnVjdG9yLm5hbWU7XG5cbiAgICBjb25zdCBlcnJvckRhdGEgPSB0aGlzLl9leHRyYWN0RXJyb3JEYXRhKGhpbnQub3JpZ2luYWxFeGNlcHRpb24gKTtcblxuICAgIGlmIChlcnJvckRhdGEpIHtcbiAgICAgIGNvbnN0IGNvbnRleHRzID0ge1xuICAgICAgICAuLi5ldmVudC5jb250ZXh0cyxcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IG5vcm1hbGl6ZWRFcnJvckRhdGEgPSBub3JtYWxpemUoZXJyb3JEYXRhLCB0aGlzLl9vcHRpb25zLmRlcHRoKTtcblxuICAgICAgaWYgKGlzUGxhaW5PYmplY3Qobm9ybWFsaXplZEVycm9yRGF0YSkpIHtcbiAgICAgICAgLy8gV2UgbWFyayB0aGUgZXJyb3IgZGF0YSBhcyBcImFscmVhZHkgbm9ybWFsaXplZFwiIGhlcmUsIGJlY2F1c2Ugd2UgZG9uJ3Qgd2FudCBvdGhlciBub3JtYWxpemF0aW9uIHByb2NlZHVyZXMgdG9cbiAgICAgICAgLy8gcG90ZW50aWFsbHkgdHJ1bmNhdGUgdGhlIGRhdGEgd2UganVzdCBhbHJlYWR5IG5vcm1hbGl6ZWQsIHdpdGggYSBjZXJ0YWluIGRlcHRoIHNldHRpbmcuXG4gICAgICAgIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eShub3JtYWxpemVkRXJyb3JEYXRhLCAnX19zZW50cnlfc2tpcF9ub3JtYWxpemF0aW9uX18nLCB0cnVlKTtcbiAgICAgICAgY29udGV4dHNbZXhjZXB0aW9uTmFtZV0gPSBub3JtYWxpemVkRXJyb3JEYXRhO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5ldmVudCxcbiAgICAgICAgY29udGV4dHMsXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBldmVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHRyYWN0IGV4dHJhIGluZm9ybWF0aW9uIGZyb20gdGhlIEVycm9yIG9iamVjdFxuICAgKi9cbiAgIF9leHRyYWN0RXJyb3JEYXRhKGVycm9yKSB7XG4gICAgLy8gV2UgYXJlIHRyeWluZyB0byBlbmhhbmNlIGFscmVhZHkgZXhpc3RpbmcgZXZlbnQsIHNvIG5vIGhhcm0gZG9uZSBpZiBpdCB3b24ndCBzdWNjZWVkXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IG5hdGl2ZUtleXMgPSBbXG4gICAgICAgICduYW1lJyxcbiAgICAgICAgJ21lc3NhZ2UnLFxuICAgICAgICAnc3RhY2snLFxuICAgICAgICAnbGluZScsXG4gICAgICAgICdjb2x1bW4nLFxuICAgICAgICAnZmlsZU5hbWUnLFxuICAgICAgICAnbGluZU51bWJlcicsXG4gICAgICAgICdjb2x1bW5OdW1iZXInLFxuICAgICAgICAndG9KU09OJyxcbiAgICAgIF07XG5cbiAgICAgIGNvbnN0IGV4dHJhRXJyb3JJbmZvID0ge307XG5cbiAgICAgIC8vIFdlIHdhbnQgb25seSBlbnVtZXJhYmxlIHByb3BlcnRpZXMsIHRodXMgYGdldE93blByb3BlcnR5TmFtZXNgIGlzIHJlZHVuZGFudCBoZXJlLCBhcyB3ZSBmaWx0ZXIga2V5cyBhbnl3YXkuXG4gICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhlcnJvcikpIHtcbiAgICAgICAgaWYgKG5hdGl2ZUtleXMuaW5kZXhPZihrZXkpICE9PSAtMSkge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZXJyb3Jba2V5XTtcbiAgICAgICAgZXh0cmFFcnJvckluZm9ba2V5XSA9IGlzRXJyb3IodmFsdWUpID8gdmFsdWUudG9TdHJpbmcoKSA6IHZhbHVlO1xuICAgICAgfVxuXG4gICAgICAvLyBDaGVjayBpZiBzb21lb25lIGF0dGFjaGVkIGB0b0pTT05gIG1ldGhvZCB0byBncmFiIGV2ZW4gbW9yZSBwcm9wZXJ0aWVzIChlZy4gYXhpb3MgaXMgZG9pbmcgdGhhdClcbiAgICAgIGlmICh0eXBlb2YgZXJyb3IudG9KU09OID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNvbnN0IHNlcmlhbGl6ZWRFcnJvciA9IGVycm9yLnRvSlNPTigpIDtcblxuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3Qua2V5cyhzZXJpYWxpemVkRXJyb3IpKSB7XG4gICAgICAgICAgY29uc3QgdmFsdWUgPSBzZXJpYWxpemVkRXJyb3Jba2V5XTtcbiAgICAgICAgICBleHRyYUVycm9ySW5mb1trZXldID0gaXNFcnJvcih2YWx1ZSkgPyB2YWx1ZS50b1N0cmluZygpIDogdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGV4dHJhRXJyb3JJbmZvO1xuICAgIH0gY2F0Y2ggKG9PKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5lcnJvcignVW5hYmxlIHRvIGV4dHJhY3QgZXh0cmEgZGF0YSBmcm9tIHRoZSBFcnJvciBvYmplY3Q6Jywgb08pO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsO1xuICB9XG59IEV4dHJhRXJyb3JEYXRhLl9faW5pdFN0YXRpYygpO1xuXG5leHBvcnQgeyBFeHRyYUVycm9yRGF0YSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXh0cmFlcnJvcmRhdGEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/extraerrordata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/httpclient.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/httpclient.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"HttpClient\": function() { return /* binding */ HttpClient; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/** HTTPClient integration creates events for failed client side HTTP requests. */\nclass HttpClient  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'HttpClient';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = HttpClient.id;}\n\n  /**\n   * Returns current hub.\n   */\n\n  /**\n   * @inheritDoc\n   *\n   * @param options\n   */\n   constructor(options) {HttpClient.prototype.__init.call(this);\n    this._options = {\n      failedRequestStatusCodes: [[500, 599]],\n      failedRequestTargets: [/.*/],\n      ...options,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   *\n   * @param options\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n    this._wrapFetch();\n    this._wrapXHR();\n  }\n\n  /**\n   * Interceptor function for fetch requests\n   *\n   * @param requestInfo The Fetch API request info\n   * @param response The Fetch API response\n   * @param requestInit The request init object\n   */\n   _fetchResponseHandler(requestInfo, response, requestInit) {\n    if (this._getCurrentHub && this._shouldCaptureResponse(response.status, response.url)) {\n      const request = new Request(requestInfo, requestInit);\n      const hub = this._getCurrentHub();\n\n      let requestHeaders, responseHeaders, requestCookies, responseCookies;\n\n      if (hub.shouldSendDefaultPii()) {\n        [{ headers: requestHeaders, cookies: requestCookies }, { headers: responseHeaders, cookies: responseCookies }] =\n          [\n            { cookieHeader: 'Cookie', obj: request },\n            { cookieHeader: 'Set-Cookie', obj: response },\n          ].map(({ cookieHeader, obj }) => {\n            const headers = this._extractFetchHeaders(obj.headers);\n            let cookies;\n\n            try {\n              const cookieString = headers[cookieHeader] || headers[cookieHeader.toLowerCase()] || undefined;\n\n              if (cookieString) {\n                cookies = this._parseCookieString(cookieString);\n              }\n            } catch (e) {\n              (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`Could not extract cookies from header ${cookieHeader}`);\n            }\n\n            return {\n              headers,\n              cookies,\n            };\n          });\n      }\n\n      const event = this._createEvent({\n        url: request.url,\n        method: request.method,\n        status: response.status,\n        requestHeaders,\n        responseHeaders,\n        requestCookies,\n        responseCookies,\n      });\n\n      hub.captureEvent(event);\n    }\n  }\n\n  /**\n   * Interceptor function for XHR requests\n   *\n   * @param xhr The XHR request\n   * @param method The HTTP method\n   * @param headers The HTTP headers\n   */\n   _xhrResponseHandler(xhr, method, headers) {\n    if (this._getCurrentHub && this._shouldCaptureResponse(xhr.status, xhr.responseURL)) {\n      let requestHeaders, responseCookies, responseHeaders;\n      const hub = this._getCurrentHub();\n\n      if (hub.shouldSendDefaultPii()) {\n        try {\n          const cookieString = xhr.getResponseHeader('Set-Cookie') || xhr.getResponseHeader('set-cookie') || undefined;\n\n          if (cookieString) {\n            responseCookies = this._parseCookieString(cookieString);\n          }\n        } catch (e) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Could not extract cookies from response headers');\n        }\n\n        try {\n          responseHeaders = this._getXHRResponseHeaders(xhr);\n        } catch (e) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Could not extract headers from response');\n        }\n\n        requestHeaders = headers;\n      }\n\n      const event = this._createEvent({\n        url: xhr.responseURL,\n        method: method,\n        status: xhr.status,\n        requestHeaders,\n        // Can't access request cookies from XHR\n        responseHeaders,\n        responseCookies,\n      });\n\n      hub.captureEvent(event);\n    }\n  }\n\n  /**\n   * Extracts response size from `Content-Length` header when possible\n   *\n   * @param headers\n   * @returns The response size in bytes or undefined\n   */\n   _getResponseSizeFromHeaders(headers) {\n    if (headers) {\n      const contentLength = headers['Content-Length'] || headers['content-length'];\n\n      if (contentLength) {\n        return parseInt(contentLength, 10);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Creates an object containing cookies from the given cookie string\n   *\n   * @param cookieString The cookie string to parse\n   * @returns The parsed cookies\n   */\n   _parseCookieString(cookieString) {\n    return cookieString.split('; ').reduce((acc, cookie) => {\n      const [key, value] = cookie.split('=');\n      acc[key] = value;\n      return acc;\n    }, {});\n  }\n\n  /**\n   * Extracts the headers as an object from the given Fetch API request or response object\n   *\n   * @param headers The headers to extract\n   * @returns The extracted headers as an object\n   */\n   _extractFetchHeaders(headers) {\n    const result = {};\n\n    headers.forEach((value, key) => {\n      result[key] = value;\n    });\n\n    return result;\n  }\n\n  /**\n   * Extracts the response headers as an object from the given XHR object\n   *\n   * @param xhr The XHR object to extract the response headers from\n   * @returns The response headers as an object\n   */\n   _getXHRResponseHeaders(xhr) {\n    const headers = xhr.getAllResponseHeaders();\n\n    if (!headers) {\n      return {};\n    }\n\n    return headers.split('\\r\\n').reduce((acc, line) => {\n      const [key, value] = line.split(': ');\n      acc[key] = value;\n      return acc;\n    }, {});\n  }\n\n  /**\n   * Checks if the given target url is in the given list of targets\n   *\n   * @param target The target url to check\n   * @returns true if the target url is in the given list of targets, false otherwise\n   */\n   _isInGivenRequestTargets(target) {\n    if (!this._options.failedRequestTargets) {\n      return false;\n    }\n\n    return this._options.failedRequestTargets.some((givenRequestTarget) => {\n      if (typeof givenRequestTarget === 'string') {\n        return target.includes(givenRequestTarget);\n      }\n\n      return givenRequestTarget.test(target);\n    });\n  }\n\n  /**\n   * Checks if the given status code is in the given range\n   *\n   * @param status The status code to check\n   * @returns true if the status code is in the given range, false otherwise\n   */\n   _isInGivenStatusRanges(status) {\n    if (!this._options.failedRequestStatusCodes) {\n      return false;\n    }\n\n    return this._options.failedRequestStatusCodes.some((range) => {\n      if (typeof range === 'number') {\n        return range === status;\n      }\n\n      return status >= range[0] && status <= range[1];\n    });\n  }\n\n  /**\n   * Wraps `fetch` function to capture request and response data\n   */\n   _wrapFetch() {\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.supportsNativeFetch)()) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ, 'fetch', function (originalFetch) {\n      return function ( ...args) {\n        const [requestInfo, requestInit] = args ;\n        const responsePromise = originalFetch.apply(this, args);\n\n        responsePromise\n          .then((response) => {\n            self._fetchResponseHandler(requestInfo, response, requestInit);\n            return response;\n          })\n          .catch((error) => {\n            throw error;\n          });\n\n        return responsePromise;\n      };\n    });\n  }\n\n  /**\n   * Wraps XMLHttpRequest to capture request and response data\n   */\n   _wrapXHR() {\n    if (!(\"XMLHttpRequest\" in _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(XMLHttpRequest.prototype, 'open', function (originalOpen) {\n      return function ( ...openArgs) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const xhr = this;\n        const method = openArgs[0] ;\n        const headers = {};\n\n        // Intercepting `setRequestHeader` to access the request headers of XHR instance.\n        // This will only work for user/library defined headers, not for the default/browser-assigned headers.\n        // Request cookies are also unavailable for XHR, as `Cookie` header can't be defined by `setRequestHeader`.\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(\n          xhr,\n          'setRequestHeader',\n          // eslint-disable-next-line @typescript-eslint/ban-types\n          function (originalSetRequestHeader) {\n            return function (...setRequestHeaderArgs) {\n              const [header, value] = setRequestHeaderArgs ;\n\n              headers[header] = value;\n\n              return originalSetRequestHeader.apply(xhr, setRequestHeaderArgs);\n            };\n          },\n        );\n\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.fill)(xhr, 'onloadend', function (original) {\n          return function (...onloadendArgs) {\n            try {\n              self._xhrResponseHandler(xhr, method, headers);\n            } catch (e) {\n              (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Error while extracting response event form XHR response', e);\n            }\n\n            if (original) {\n              return original.apply(xhr, onloadendArgs);\n            }\n          };\n        });\n\n        return originalOpen.apply(this, openArgs);\n      };\n    });\n  }\n\n  /**\n   * Checks whether given url points to Sentry server\n   *\n   * @param url url to verify\n   */\n   _isSentryRequest(url) {\n    const client = this._getCurrentHub && this._getCurrentHub().getClient();\n\n    if (!client) {\n      return false;\n    }\n\n    const dsn = client.getDsn();\n    return dsn ? url.includes(dsn.host) : false;\n  }\n\n  /**\n   * Checks whether to capture given response as an event\n   *\n   * @param status response status code\n   * @param url response url\n   */\n   _shouldCaptureResponse(status, url) {\n    return this._isInGivenStatusRanges(status) && this._isInGivenRequestTargets(url) && !this._isSentryRequest(url);\n  }\n\n  /**\n   * Creates a synthetic Sentry event from given response data\n   *\n   * @param data response data\n   * @returns event\n   */\n   _createEvent(data\n\n) {\n    const message = `HTTP Client Error with status code: ${data.status}`;\n\n    const event = {\n      message,\n      exception: {\n        values: [\n          {\n            type: 'Error',\n            value: message,\n          },\n        ],\n      },\n      request: {\n        url: data.url,\n        method: data.method,\n        headers: data.requestHeaders,\n        cookies: data.requestCookies,\n      },\n      contexts: {\n        response: {\n          status_code: data.status,\n          headers: data.responseHeaders,\n          cookies: data.responseCookies,\n          body_size: this._getResponseSizeFromHeaders(data.responseHeaders),\n        },\n      },\n    };\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addExceptionMechanism)(event, {\n      type: 'http.client',\n    });\n\n    return event;\n  }\n} HttpClient.__initStatic();\n\n\n//# sourceMappingURL=httpclient.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/httpclient.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/index.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/index.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CaptureConsole\": function() { return /* reexport safe */ _captureconsole_js__WEBPACK_IMPORTED_MODULE_0__.CaptureConsole; },\n/* harmony export */   \"Debug\": function() { return /* reexport safe */ _debug_js__WEBPACK_IMPORTED_MODULE_1__.Debug; },\n/* harmony export */   \"Dedupe\": function() { return /* reexport safe */ _dedupe_js__WEBPACK_IMPORTED_MODULE_2__.Dedupe; },\n/* harmony export */   \"ExtraErrorData\": function() { return /* reexport safe */ _extraerrordata_js__WEBPACK_IMPORTED_MODULE_3__.ExtraErrorData; },\n/* harmony export */   \"HttpClient\": function() { return /* reexport safe */ _httpclient_js__WEBPACK_IMPORTED_MODULE_9__.HttpClient; },\n/* harmony export */   \"Offline\": function() { return /* reexport safe */ _offline_js__WEBPACK_IMPORTED_MODULE_4__.Offline; },\n/* harmony export */   \"ReportingObserver\": function() { return /* reexport safe */ _reportingobserver_js__WEBPACK_IMPORTED_MODULE_5__.ReportingObserver; },\n/* harmony export */   \"RewriteFrames\": function() { return /* reexport safe */ _rewriteframes_js__WEBPACK_IMPORTED_MODULE_6__.RewriteFrames; },\n/* harmony export */   \"SessionTiming\": function() { return /* reexport safe */ _sessiontiming_js__WEBPACK_IMPORTED_MODULE_7__.SessionTiming; },\n/* harmony export */   \"Transaction\": function() { return /* reexport safe */ _transaction_js__WEBPACK_IMPORTED_MODULE_8__.Transaction; }\n/* harmony export */ });\n/* harmony import */ var _captureconsole_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./captureconsole.js */ \"./node_modules/@sentry/integrations/esm/captureconsole.js\");\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debug.js */ \"./node_modules/@sentry/integrations/esm/debug.js\");\n/* harmony import */ var _dedupe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dedupe.js */ \"./node_modules/@sentry/integrations/esm/dedupe.js\");\n/* harmony import */ var _extraerrordata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extraerrordata.js */ \"./node_modules/@sentry/integrations/esm/extraerrordata.js\");\n/* harmony import */ var _offline_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./offline.js */ \"./node_modules/@sentry/integrations/esm/offline.js\");\n/* harmony import */ var _reportingobserver_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reportingobserver.js */ \"./node_modules/@sentry/integrations/esm/reportingobserver.js\");\n/* harmony import */ var _rewriteframes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rewriteframes.js */ \"./node_modules/@sentry/integrations/esm/rewriteframes.js\");\n/* harmony import */ var _sessiontiming_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sessiontiming.js */ \"./node_modules/@sentry/integrations/esm/sessiontiming.js\");\n/* harmony import */ var _transaction_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./transaction.js */ \"./node_modules/@sentry/integrations/esm/transaction.js\");\n/* harmony import */ var _httpclient_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./httpclient.js */ \"./node_modules/@sentry/integrations/esm/httpclient.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFEO0FBQ2xCO0FBQ0U7QUFDZ0I7QUFDZDtBQUNvQjtBQUNSO0FBQ0E7QUFDSjtBQUNGO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vaW5kZXguanM/ODI3NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBDYXB0dXJlQ29uc29sZSB9IGZyb20gJy4vY2FwdHVyZWNvbnNvbGUuanMnO1xuZXhwb3J0IHsgRGVidWcgfSBmcm9tICcuL2RlYnVnLmpzJztcbmV4cG9ydCB7IERlZHVwZSB9IGZyb20gJy4vZGVkdXBlLmpzJztcbmV4cG9ydCB7IEV4dHJhRXJyb3JEYXRhIH0gZnJvbSAnLi9leHRyYWVycm9yZGF0YS5qcyc7XG5leHBvcnQgeyBPZmZsaW5lIH0gZnJvbSAnLi9vZmZsaW5lLmpzJztcbmV4cG9ydCB7IFJlcG9ydGluZ09ic2VydmVyIH0gZnJvbSAnLi9yZXBvcnRpbmdvYnNlcnZlci5qcyc7XG5leHBvcnQgeyBSZXdyaXRlRnJhbWVzIH0gZnJvbSAnLi9yZXdyaXRlZnJhbWVzLmpzJztcbmV4cG9ydCB7IFNlc3Npb25UaW1pbmcgfSBmcm9tICcuL3Nlc3Npb250aW1pbmcuanMnO1xuZXhwb3J0IHsgVHJhbnNhY3Rpb24gfSBmcm9tICcuL3RyYW5zYWN0aW9uLmpzJztcbmV4cG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICcuL2h0dHBjbGllbnQuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/offline.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/offline.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Offline\": function() { return /* binding */ Offline; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! localforage */ \"./node_modules/localforage/dist/localforage.js\");\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(localforage__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.GLOBAL_OBJ ;\n\n/**\n * cache offline errors and send when connected\n * @deprecated The offline integration has been deprecated in favor of the offline transport wrapper.\n *\n * http://docs.sentry.io/platforms/javascript/configuration/transports/#offline-caching\n */\nclass Offline  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Offline';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = Offline.id;}\n\n  /**\n   * the current hub instance\n   */\n\n  /**\n   * maximum number of events to store while offline\n   */\n\n  /**\n   * event cache\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Offline.prototype.__init.call(this);\n    this.maxStoredEvents = options.maxStoredEvents || 30; // set a reasonable default\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    this.offlineEventStore = localforage__WEBPACK_IMPORTED_MODULE_0___default().createInstance({\n      name: 'sentry/offlineEventStore',\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    this.hub = getCurrentHub();\n\n    if ('addEventListener' in WINDOW) {\n      WINDOW.addEventListener('online', () => {\n        void this._sendEvents().catch(() => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('could not send cached events');\n        });\n      });\n    }\n\n    const eventProcessor = event => {\n      if (this.hub && this.hub.getIntegration(Offline)) {\n        // cache if we are positively offline\n        if ('navigator' in WINDOW && 'onLine' in WINDOW.navigator && !WINDOW.navigator.onLine) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('Event dropped due to being a offline - caching instead');\n\n          void this._cacheEvent(event)\n            .then((_event) => this._enforceMaxEvents())\n            .catch((_error) => {\n              (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('could not cache event while offline');\n            });\n\n          // return null on success or failure, because being offline will still result in an error\n          return null;\n        }\n      }\n\n      return event;\n    };\n\n    eventProcessor.id = this.name;\n    addGlobalEventProcessor(eventProcessor);\n\n    // if online now, send any events stored in a previous offline session\n    if ('navigator' in WINDOW && 'onLine' in WINDOW.navigator && WINDOW.navigator.onLine) {\n      void this._sendEvents().catch(() => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('could not send cached events');\n      });\n    }\n  }\n\n  /**\n   * cache an event to send later\n   * @param event an event\n   */\n   async _cacheEvent(event) {\n    return this.offlineEventStore.setItem((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.uuid4)(), (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.normalize)(event));\n  }\n\n  /**\n   * purge excess events if necessary\n   */\n   async _enforceMaxEvents() {\n    const events = [];\n\n    return this.offlineEventStore\n      .iterate((event, cacheKey, _index) => {\n        // aggregate events\n        events.push({ cacheKey, event });\n      })\n      .then(\n        () =>\n          // this promise resolves when the iteration is finished\n          this._purgeEvents(\n            // purge all events past maxStoredEvents in reverse chronological order\n            events\n              .sort((a, b) => (b.event.timestamp || 0) - (a.event.timestamp || 0))\n              .slice(this.maxStoredEvents < events.length ? this.maxStoredEvents : events.length)\n              .map(event => event.cacheKey),\n          ),\n      )\n      .catch((_error) => {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('could not enforce max events');\n      });\n  }\n\n  /**\n   * purge event from cache\n   */\n   async _purgeEvent(cacheKey) {\n    return this.offlineEventStore.removeItem(cacheKey);\n  }\n\n  /**\n   * purge events from cache\n   */\n   async _purgeEvents(cacheKeys) {\n    // trail with .then to ensure the return type as void and not void|void[]\n    return Promise.all(cacheKeys.map(cacheKey => this._purgeEvent(cacheKey))).then();\n  }\n\n  /**\n   * send all events\n   */\n   async _sendEvents() {\n    return this.offlineEventStore.iterate((event, cacheKey, _index) => {\n      if (this.hub) {\n        this.hub.captureEvent(event);\n\n        void this._purgeEvent(cacheKey).catch((_error) => {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('could not purge event from cache');\n        });\n      } else {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('no hub found - could not send cached event');\n      }\n    });\n  }\n} Offline.__initStatic();\n\n\n//# sourceMappingURL=offline.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/offline.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/reportingobserver.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/reportingobserver.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ReportingObserver\": function() { return /* binding */ ReportingObserver; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\n/** Reporting API integration - https://w3c.github.io/reporting/ */\nclass ReportingObserver  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'ReportingObserver';}\n\n  /**\n   * @inheritDoc\n   */\n    __init() {this.name = ReportingObserver.id;}\n\n  /**\n   * Returns current hub.\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n      _options\n\n = {\n      types: ['crash', 'deprecation', 'intervention'],\n    },\n  ) {this._options = _options;ReportingObserver.prototype.__init.call(this);}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.supportsReportingObserver)()) {\n      return;\n    }\n\n    this._getCurrentHub = getCurrentHub;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n    const observer = new (WINDOW ).ReportingObserver(this.handler.bind(this), {\n      buffered: true,\n      types: this._options.types,\n    });\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    observer.observe();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   handler(reports) {\n    const hub = this._getCurrentHub && this._getCurrentHub();\n    if (!hub || !hub.getIntegration(ReportingObserver)) {\n      return;\n    }\n    for (const report of reports) {\n      hub.withScope(scope => {\n        scope.setExtra('url', report.url);\n\n        const label = `ReportingObserver [${report.type}]`;\n        let details = 'No details available';\n\n        if (report.body) {\n          // Object.keys doesn't work on ReportBody, as all properties are inheirted\n          const plainBody\n\n = {};\n\n          // eslint-disable-next-line guard-for-in\n          for (const prop in report.body) {\n            plainBody[prop] = report.body[prop];\n          }\n\n          scope.setExtra('body', plainBody);\n\n          if (report.type === 'crash') {\n            const body = report.body ;\n            // A fancy way to create a message out of crashId OR reason OR both OR fallback\n            details = [body.crashId || '', body.reason || ''].join(' ').trim() || details;\n          } else {\n            const body = report.body ;\n            details = body.message || details;\n          }\n        }\n\n        hub.captureMessage(`${label}: ${details}`);\n      });\n    }\n  }\n} ReportingObserver.__initStatic();\n\n\n//# sourceMappingURL=reportingobserver.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3JlcG9ydGluZ29ic2VydmVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNFOztBQUV0RSxlQUFlLHFEQUFVOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxjQUFjOztBQUVkO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsS0FBSyx5QkFBeUI7O0FBRTlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx3RUFBeUI7QUFDbEM7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNENBQTRDLFlBQVk7QUFDeEQ7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBOztBQUVBLDhCQUE4QixNQUFNLElBQUksUUFBUTtBQUNoRCxPQUFPO0FBQ1A7QUFDQTtBQUNBLEVBQUU7O0FBRTJCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vcmVwb3J0aW5nb2JzZXJ2ZXIuanM/MTVkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBwb3J0c1JlcG9ydGluZ09ic2VydmVyLCBHTE9CQUxfT0JKIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFdJTkRPVyA9IEdMT0JBTF9PQkogO1xuXG4vKiogUmVwb3J0aW5nIEFQSSBpbnRlZ3JhdGlvbiAtIGh0dHBzOi8vdzNjLmdpdGh1Yi5pby9yZXBvcnRpbmcvICovXG5jbGFzcyBSZXBvcnRpbmdPYnNlcnZlciAge1xuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzdGF0aWMgX19pbml0U3RhdGljKCkge3RoaXMuaWQgPSAnUmVwb3J0aW5nT2JzZXJ2ZXInO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICAgX19pbml0KCkge3RoaXMubmFtZSA9IFJlcG9ydGluZ09ic2VydmVyLmlkO31cblxuICAvKipcbiAgICogUmV0dXJucyBjdXJyZW50IGh1Yi5cbiAgICovXG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY29uc3RydWN0b3IoXG4gICAgICBfb3B0aW9uc1xuXG4gPSB7XG4gICAgICB0eXBlczogWydjcmFzaCcsICdkZXByZWNhdGlvbicsICdpbnRlcnZlbnRpb24nXSxcbiAgICB9LFxuICApIHt0aGlzLl9vcHRpb25zID0gX29wdGlvbnM7UmVwb3J0aW5nT2JzZXJ2ZXIucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXR1cE9uY2UoXywgZ2V0Q3VycmVudEh1Yikge1xuICAgIGlmICghc3VwcG9ydHNSZXBvcnRpbmdPYnNlcnZlcigpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fZ2V0Q3VycmVudEh1YiA9IGdldEN1cnJlbnRIdWI7XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzLCBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgY29uc3Qgb2JzZXJ2ZXIgPSBuZXcgKFdJTkRPVyApLlJlcG9ydGluZ09ic2VydmVyKHRoaXMuaGFuZGxlci5iaW5kKHRoaXMpLCB7XG4gICAgICBidWZmZXJlZDogdHJ1ZSxcbiAgICAgIHR5cGVzOiB0aGlzLl9vcHRpb25zLnR5cGVzLFxuICAgIH0pO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgIG9ic2VydmVyLm9ic2VydmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGhhbmRsZXIocmVwb3J0cykge1xuICAgIGNvbnN0IGh1YiA9IHRoaXMuX2dldEN1cnJlbnRIdWIgJiYgdGhpcy5fZ2V0Q3VycmVudEh1YigpO1xuICAgIGlmICghaHViIHx8ICFodWIuZ2V0SW50ZWdyYXRpb24oUmVwb3J0aW5nT2JzZXJ2ZXIpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAoY29uc3QgcmVwb3J0IG9mIHJlcG9ydHMpIHtcbiAgICAgIGh1Yi53aXRoU2NvcGUoc2NvcGUgPT4ge1xuICAgICAgICBzY29wZS5zZXRFeHRyYSgndXJsJywgcmVwb3J0LnVybCk7XG5cbiAgICAgICAgY29uc3QgbGFiZWwgPSBgUmVwb3J0aW5nT2JzZXJ2ZXIgWyR7cmVwb3J0LnR5cGV9XWA7XG4gICAgICAgIGxldCBkZXRhaWxzID0gJ05vIGRldGFpbHMgYXZhaWxhYmxlJztcblxuICAgICAgICBpZiAocmVwb3J0LmJvZHkpIHtcbiAgICAgICAgICAvLyBPYmplY3Qua2V5cyBkb2Vzbid0IHdvcmsgb24gUmVwb3J0Qm9keSwgYXMgYWxsIHByb3BlcnRpZXMgYXJlIGluaGVpcnRlZFxuICAgICAgICAgIGNvbnN0IHBsYWluQm9keVxuXG4gPSB7fTtcblxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBndWFyZC1mb3ItaW5cbiAgICAgICAgICBmb3IgKGNvbnN0IHByb3AgaW4gcmVwb3J0LmJvZHkpIHtcbiAgICAgICAgICAgIHBsYWluQm9keVtwcm9wXSA9IHJlcG9ydC5ib2R5W3Byb3BdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHNjb3BlLnNldEV4dHJhKCdib2R5JywgcGxhaW5Cb2R5KTtcblxuICAgICAgICAgIGlmIChyZXBvcnQudHlwZSA9PT0gJ2NyYXNoJykge1xuICAgICAgICAgICAgY29uc3QgYm9keSA9IHJlcG9ydC5ib2R5IDtcbiAgICAgICAgICAgIC8vIEEgZmFuY3kgd2F5IHRvIGNyZWF0ZSBhIG1lc3NhZ2Ugb3V0IG9mIGNyYXNoSWQgT1IgcmVhc29uIE9SIGJvdGggT1IgZmFsbGJhY2tcbiAgICAgICAgICAgIGRldGFpbHMgPSBbYm9keS5jcmFzaElkIHx8ICcnLCBib2R5LnJlYXNvbiB8fCAnJ10uam9pbignICcpLnRyaW0oKSB8fCBkZXRhaWxzO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBib2R5ID0gcmVwb3J0LmJvZHkgO1xuICAgICAgICAgICAgZGV0YWlscyA9IGJvZHkubWVzc2FnZSB8fCBkZXRhaWxzO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGh1Yi5jYXB0dXJlTWVzc2FnZShgJHtsYWJlbH06ICR7ZGV0YWlsc31gKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxufSBSZXBvcnRpbmdPYnNlcnZlci5fX2luaXRTdGF0aWMoKTtcblxuZXhwb3J0IHsgUmVwb3J0aW5nT2JzZXJ2ZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcG9ydGluZ29ic2VydmVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/reportingobserver.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/rewriteframes.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/rewriteframes.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RewriteFrames\": function() { return /* binding */ RewriteFrames; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n/** Rewrite event frames paths */\nclass RewriteFrames  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'RewriteFrames';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = RewriteFrames.id;}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n    __init2() {this._prefix = 'app:///';}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {RewriteFrames.prototype.__init.call(this);RewriteFrames.prototype.__init2.call(this);RewriteFrames.prototype.__init3.call(this);\n    if (options.root) {\n      this._root = options.root;\n    }\n    if (options.prefix) {\n      this._prefix = options.prefix;\n    }\n    if (options.iteratee) {\n      this._iteratee = options.iteratee;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(RewriteFrames);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /** JSDoc */\n   process(originalEvent) {\n    let processedEvent = originalEvent;\n\n    if (originalEvent.exception && Array.isArray(originalEvent.exception.values)) {\n      processedEvent = this._processExceptionsEvent(processedEvent);\n    }\n\n    return processedEvent;\n  }\n\n  /**\n   * @inheritDoc\n   */\n    __init3() {this._iteratee = (frame) => {\n    if (!frame.filename) {\n      return frame;\n    }\n    // Check if the frame filename begins with `/` or a Windows-style prefix such as `C:\\`\n    const isWindowsFrame = /^[A-Z]:\\\\/.test(frame.filename);\n    const startsWithSlash = /^\\//.test(frame.filename);\n    if (isWindowsFrame || startsWithSlash) {\n      const filename = isWindowsFrame\n        ? frame.filename\n            .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n            .replace(/\\\\/g, '/') // replace all `\\\\` instances with `/`\n        : frame.filename;\n      const base = this._root ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.relative)(this._root, filename) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.basename)(filename);\n      frame.filename = `${this._prefix}${base}`;\n    }\n    return frame;\n  };}\n\n  /** JSDoc */\n   _processExceptionsEvent(event) {\n    try {\n      return {\n        ...event,\n        exception: {\n          ...event.exception,\n          // The check for this is performed inside `process` call itself, safe to skip here\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          values: event.exception.values.map(value => ({\n            ...value,\n            ...(value.stacktrace && { stacktrace: this._processStacktrace(value.stacktrace) }),\n          })),\n        },\n      };\n    } catch (_oO) {\n      return event;\n    }\n  }\n\n  /** JSDoc */\n   _processStacktrace(stacktrace) {\n    return {\n      ...stacktrace,\n      frames: stacktrace && stacktrace.frames && stacktrace.frames.map(f => this._iteratee(f)),\n    };\n  }\n} RewriteFrames.__initStatic();\n\n\n//# sourceMappingURL=rewriteframes.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3Jld3JpdGVmcmFtZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBbUQ7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7O0FBRWI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLEdBQUcsMENBQTBDLDJDQUEyQztBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx1REFBUSx5QkFBeUIsdURBQVE7QUFDekUsMEJBQTBCLGFBQWEsRUFBRSxLQUFLO0FBQzlDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHVEQUF1RDtBQUM3RixXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7O0FBRXVCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vcmV3cml0ZWZyYW1lcy5qcz9iYjM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbGF0aXZlLCBiYXNlbmFtZSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKiogUmV3cml0ZSBldmVudCBmcmFtZXMgcGF0aHMgKi9cbmNsYXNzIFJld3JpdGVGcmFtZXMgIHtcbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhdGljIF9faW5pdFN0YXRpYygpIHt0aGlzLmlkID0gJ1Jld3JpdGVGcmFtZXMnO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBfX2luaXQoKSB7dGhpcy5uYW1lID0gUmV3cml0ZUZyYW1lcy5pZDt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgICBfX2luaXQyKCkge3RoaXMuX3ByZWZpeCA9ICdhcHA6Ly8vJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7UmV3cml0ZUZyYW1lcy5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7UmV3cml0ZUZyYW1lcy5wcm90b3R5cGUuX19pbml0Mi5jYWxsKHRoaXMpO1Jld3JpdGVGcmFtZXMucHJvdG90eXBlLl9faW5pdDMuY2FsbCh0aGlzKTtcbiAgICBpZiAob3B0aW9ucy5yb290KSB7XG4gICAgICB0aGlzLl9yb290ID0gb3B0aW9ucy5yb290O1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5wcmVmaXgpIHtcbiAgICAgIHRoaXMuX3ByZWZpeCA9IG9wdGlvbnMucHJlZml4O1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5pdGVyYXRlZSkge1xuICAgICAgdGhpcy5faXRlcmF0ZWUgPSBvcHRpb25zLml0ZXJhdGVlO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldHVwT25jZShhZGRHbG9iYWxFdmVudFByb2Nlc3NvciwgZ2V0Q3VycmVudEh1Yikge1xuICAgIGFkZEdsb2JhbEV2ZW50UHJvY2Vzc29yKGV2ZW50ID0+IHtcbiAgICAgIGNvbnN0IHNlbGYgPSBnZXRDdXJyZW50SHViKCkuZ2V0SW50ZWdyYXRpb24oUmV3cml0ZUZyYW1lcyk7XG4gICAgICBpZiAoc2VsZikge1xuICAgICAgICByZXR1cm4gc2VsZi5wcm9jZXNzKGV2ZW50KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBldmVudDtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgcHJvY2VzcyhvcmlnaW5hbEV2ZW50KSB7XG4gICAgbGV0IHByb2Nlc3NlZEV2ZW50ID0gb3JpZ2luYWxFdmVudDtcblxuICAgIGlmIChvcmlnaW5hbEV2ZW50LmV4Y2VwdGlvbiAmJiBBcnJheS5pc0FycmF5KG9yaWdpbmFsRXZlbnQuZXhjZXB0aW9uLnZhbHVlcykpIHtcbiAgICAgIHByb2Nlc3NlZEV2ZW50ID0gdGhpcy5fcHJvY2Vzc0V4Y2VwdGlvbnNFdmVudChwcm9jZXNzZWRFdmVudCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHByb2Nlc3NlZEV2ZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgIF9faW5pdDMoKSB7dGhpcy5faXRlcmF0ZWUgPSAoZnJhbWUpID0+IHtcbiAgICBpZiAoIWZyYW1lLmZpbGVuYW1lKSB7XG4gICAgICByZXR1cm4gZnJhbWU7XG4gICAgfVxuICAgIC8vIENoZWNrIGlmIHRoZSBmcmFtZSBmaWxlbmFtZSBiZWdpbnMgd2l0aCBgL2Agb3IgYSBXaW5kb3dzLXN0eWxlIHByZWZpeCBzdWNoIGFzIGBDOlxcYFxuICAgIGNvbnN0IGlzV2luZG93c0ZyYW1lID0gL15bQS1aXTpcXFxcLy50ZXN0KGZyYW1lLmZpbGVuYW1lKTtcbiAgICBjb25zdCBzdGFydHNXaXRoU2xhc2ggPSAvXlxcLy8udGVzdChmcmFtZS5maWxlbmFtZSk7XG4gICAgaWYgKGlzV2luZG93c0ZyYW1lIHx8IHN0YXJ0c1dpdGhTbGFzaCkge1xuICAgICAgY29uc3QgZmlsZW5hbWUgPSBpc1dpbmRvd3NGcmFtZVxuICAgICAgICA/IGZyYW1lLmZpbGVuYW1lXG4gICAgICAgICAgICAucmVwbGFjZSgvXltBLVpdOi8sICcnKSAvLyByZW1vdmUgV2luZG93cy1zdHlsZSBwcmVmaXhcbiAgICAgICAgICAgIC5yZXBsYWNlKC9cXFxcL2csICcvJykgLy8gcmVwbGFjZSBhbGwgYFxcXFxgIGluc3RhbmNlcyB3aXRoIGAvYFxuICAgICAgICA6IGZyYW1lLmZpbGVuYW1lO1xuICAgICAgY29uc3QgYmFzZSA9IHRoaXMuX3Jvb3QgPyByZWxhdGl2ZSh0aGlzLl9yb290LCBmaWxlbmFtZSkgOiBiYXNlbmFtZShmaWxlbmFtZSk7XG4gICAgICBmcmFtZS5maWxlbmFtZSA9IGAke3RoaXMuX3ByZWZpeH0ke2Jhc2V9YDtcbiAgICB9XG4gICAgcmV0dXJuIGZyYW1lO1xuICB9O31cblxuICAvKiogSlNEb2MgKi9cbiAgIF9wcm9jZXNzRXhjZXB0aW9uc0V2ZW50KGV2ZW50KSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmV2ZW50LFxuICAgICAgICBleGNlcHRpb246IHtcbiAgICAgICAgICAuLi5ldmVudC5leGNlcHRpb24sXG4gICAgICAgICAgLy8gVGhlIGNoZWNrIGZvciB0aGlzIGlzIHBlcmZvcm1lZCBpbnNpZGUgYHByb2Nlc3NgIGNhbGwgaXRzZWxmLCBzYWZlIHRvIHNraXAgaGVyZVxuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICAgICAgdmFsdWVzOiBldmVudC5leGNlcHRpb24udmFsdWVzLm1hcCh2YWx1ZSA9PiAoe1xuICAgICAgICAgICAgLi4udmFsdWUsXG4gICAgICAgICAgICAuLi4odmFsdWUuc3RhY2t0cmFjZSAmJiB7IHN0YWNrdHJhY2U6IHRoaXMuX3Byb2Nlc3NTdGFja3RyYWNlKHZhbHVlLnN0YWNrdHJhY2UpIH0pLFxuICAgICAgICAgIH0pKSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSBjYXRjaCAoX29PKSB7XG4gICAgICByZXR1cm4gZXZlbnQ7XG4gICAgfVxuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICBfcHJvY2Vzc1N0YWNrdHJhY2Uoc3RhY2t0cmFjZSkge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5zdGFja3RyYWNlLFxuICAgICAgZnJhbWVzOiBzdGFja3RyYWNlICYmIHN0YWNrdHJhY2UuZnJhbWVzICYmIHN0YWNrdHJhY2UuZnJhbWVzLm1hcChmID0+IHRoaXMuX2l0ZXJhdGVlKGYpKSxcbiAgICB9O1xuICB9XG59IFJld3JpdGVGcmFtZXMuX19pbml0U3RhdGljKCk7XG5cbmV4cG9ydCB7IFJld3JpdGVGcmFtZXMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJld3JpdGVmcmFtZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/rewriteframes.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/sessiontiming.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/sessiontiming.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SessionTiming\": function() { return /* binding */ SessionTiming; }\n/* harmony export */ });\n/** This function adds duration since Sentry was initialized till the time event was sent */\nclass SessionTiming  {constructor() { SessionTiming.prototype.__init.call(this);SessionTiming.prototype.__init2.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'SessionTiming';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = SessionTiming.id;}\n\n  /** Exact time Client was initialized expressed in milliseconds since Unix Epoch. */\n    __init2() {this._startTime = Date.now();}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(SessionTiming);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   process(event) {\n    const now = Date.now();\n\n    return {\n      ...event,\n      extra: {\n        ...event.extra,\n        ['session:start']: this._startTime,\n        ['session:duration']: now - this._startTime,\n        ['session:end']: now,\n      },\n    };\n  }\n} SessionTiming.__initStatic();\n\n\n//# sourceMappingURL=sessiontiming.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3Nlc3Npb250aW1pbmcuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0Esc0JBQXNCLGdCQUFnQiwwQ0FBMEM7QUFDaEY7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0EsZUFBZTs7QUFFZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxFQUFFOztBQUV1QjtBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3Nlc3Npb250aW1pbmcuanM/MWZjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVGhpcyBmdW5jdGlvbiBhZGRzIGR1cmF0aW9uIHNpbmNlIFNlbnRyeSB3YXMgaW5pdGlhbGl6ZWQgdGlsbCB0aGUgdGltZSBldmVudCB3YXMgc2VudCAqL1xuY2xhc3MgU2Vzc2lvblRpbWluZyAge2NvbnN0cnVjdG9yKCkgeyBTZXNzaW9uVGltaW5nLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtTZXNzaW9uVGltaW5nLnByb3RvdHlwZS5fX2luaXQyLmNhbGwodGhpcyk7IH1cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhdGljIF9faW5pdFN0YXRpYygpIHt0aGlzLmlkID0gJ1Nlc3Npb25UaW1pbmcnO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBfX2luaXQoKSB7dGhpcy5uYW1lID0gU2Vzc2lvblRpbWluZy5pZDt9XG5cbiAgLyoqIEV4YWN0IHRpbWUgQ2xpZW50IHdhcyBpbml0aWFsaXplZCBleHByZXNzZWQgaW4gbWlsbGlzZWNvbmRzIHNpbmNlIFVuaXggRXBvY2guICovXG4gICAgX19pbml0MigpIHt0aGlzLl9zdGFydFRpbWUgPSBEYXRlLm5vdygpO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXR1cE9uY2UoYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IsIGdldEN1cnJlbnRIdWIpIHtcbiAgICBhZGRHbG9iYWxFdmVudFByb2Nlc3NvcihldmVudCA9PiB7XG4gICAgICBjb25zdCBzZWxmID0gZ2V0Q3VycmVudEh1YigpLmdldEludGVncmF0aW9uKFNlc3Npb25UaW1pbmcpO1xuICAgICAgaWYgKHNlbGYpIHtcbiAgICAgICAgcmV0dXJuIHNlbGYucHJvY2VzcyhldmVudCk7XG4gICAgICB9XG4gICAgICByZXR1cm4gZXZlbnQ7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBwcm9jZXNzKGV2ZW50KSB7XG4gICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcblxuICAgIHJldHVybiB7XG4gICAgICAuLi5ldmVudCxcbiAgICAgIGV4dHJhOiB7XG4gICAgICAgIC4uLmV2ZW50LmV4dHJhLFxuICAgICAgICBbJ3Nlc3Npb246c3RhcnQnXTogdGhpcy5fc3RhcnRUaW1lLFxuICAgICAgICBbJ3Nlc3Npb246ZHVyYXRpb24nXTogbm93IC0gdGhpcy5fc3RhcnRUaW1lLFxuICAgICAgICBbJ3Nlc3Npb246ZW5kJ106IG5vdyxcbiAgICAgIH0sXG4gICAgfTtcbiAgfVxufSBTZXNzaW9uVGltaW5nLl9faW5pdFN0YXRpYygpO1xuXG5leHBvcnQgeyBTZXNzaW9uVGltaW5nIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXNzaW9udGltaW5nLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/sessiontiming.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/integrations/esm/transaction.js":
/*!**************************************************************!*\
  !*** ./node_modules/@sentry/integrations/esm/transaction.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Transaction\": function() { return /* binding */ Transaction; }\n/* harmony export */ });\n/** Add node transaction to the event */\nclass Transaction  {constructor() { Transaction.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Transaction';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Transaction.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(addGlobalEventProcessor, getCurrentHub) {\n    addGlobalEventProcessor(event => {\n      const self = getCurrentHub().getIntegration(Transaction);\n      if (self) {\n        return self.process(event);\n      }\n      return event;\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   process(event) {\n    const frames = this._getFramesFromEvent(event);\n\n    // use for loop so we don't have to reverse whole frames array\n    for (let i = frames.length - 1; i >= 0; i--) {\n      const frame = frames[i];\n\n      if (frame.in_app === true) {\n        event.transaction = this._getTransaction(frame);\n        break;\n      }\n    }\n\n    return event;\n  }\n\n  /** JSDoc */\n   _getFramesFromEvent(event) {\n    const exception = event.exception && event.exception.values && event.exception.values[0];\n    return (exception && exception.stacktrace && exception.stacktrace.frames) || [];\n  }\n\n  /** JSDoc */\n   _getTransaction(frame) {\n    return frame.module || frame.function ? `${frame.module || '?'}/${frame.function || '?'}` : '<unknown>';\n  }\n} Transaction.__initStatic();\n\n\n//# sourceMappingURL=transaction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9pbnRlZ3JhdGlvbnMvZXNtL3RyYW5zYWN0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQ0FBb0MsUUFBUTtBQUM1Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsK0NBQStDLG9CQUFvQixHQUFHLHNCQUFzQjtBQUM1RjtBQUNBLEVBQUU7O0FBRXFCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L2ludGVncmF0aW9ucy9lc20vdHJhbnNhY3Rpb24uanM/OWQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQWRkIG5vZGUgdHJhbnNhY3Rpb24gdG8gdGhlIGV2ZW50ICovXG5jbGFzcyBUcmFuc2FjdGlvbiAge2NvbnN0cnVjdG9yKCkgeyBUcmFuc2FjdGlvbi5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7IH1cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhdGljIF9faW5pdFN0YXRpYygpIHt0aGlzLmlkID0gJ1RyYW5zYWN0aW9uJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX19pbml0KCkge3RoaXMubmFtZSA9IFRyYW5zYWN0aW9uLmlkO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXR1cE9uY2UoYWRkR2xvYmFsRXZlbnRQcm9jZXNzb3IsIGdldEN1cnJlbnRIdWIpIHtcbiAgICBhZGRHbG9iYWxFdmVudFByb2Nlc3NvcihldmVudCA9PiB7XG4gICAgICBjb25zdCBzZWxmID0gZ2V0Q3VycmVudEh1YigpLmdldEludGVncmF0aW9uKFRyYW5zYWN0aW9uKTtcbiAgICAgIGlmIChzZWxmKSB7XG4gICAgICAgIHJldHVybiBzZWxmLnByb2Nlc3MoZXZlbnQpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGV2ZW50O1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgcHJvY2VzcyhldmVudCkge1xuICAgIGNvbnN0IGZyYW1lcyA9IHRoaXMuX2dldEZyYW1lc0Zyb21FdmVudChldmVudCk7XG5cbiAgICAvLyB1c2UgZm9yIGxvb3Agc28gd2UgZG9uJ3QgaGF2ZSB0byByZXZlcnNlIHdob2xlIGZyYW1lcyBhcnJheVxuICAgIGZvciAobGV0IGkgPSBmcmFtZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgIGNvbnN0IGZyYW1lID0gZnJhbWVzW2ldO1xuXG4gICAgICBpZiAoZnJhbWUuaW5fYXBwID09PSB0cnVlKSB7XG4gICAgICAgIGV2ZW50LnRyYW5zYWN0aW9uID0gdGhpcy5fZ2V0VHJhbnNhY3Rpb24oZnJhbWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZXZlbnQ7XG4gIH1cblxuICAvKiogSlNEb2MgKi9cbiAgIF9nZXRGcmFtZXNGcm9tRXZlbnQoZXZlbnQpIHtcbiAgICBjb25zdCBleGNlcHRpb24gPSBldmVudC5leGNlcHRpb24gJiYgZXZlbnQuZXhjZXB0aW9uLnZhbHVlcyAmJiBldmVudC5leGNlcHRpb24udmFsdWVzWzBdO1xuICAgIHJldHVybiAoZXhjZXB0aW9uICYmIGV4Y2VwdGlvbi5zdGFja3RyYWNlICYmIGV4Y2VwdGlvbi5zdGFja3RyYWNlLmZyYW1lcykgfHwgW107XG4gIH1cblxuICAvKiogSlNEb2MgKi9cbiAgIF9nZXRUcmFuc2FjdGlvbihmcmFtZSkge1xuICAgIHJldHVybiBmcmFtZS5tb2R1bGUgfHwgZnJhbWUuZnVuY3Rpb24gPyBgJHtmcmFtZS5tb2R1bGUgfHwgJz8nfS8ke2ZyYW1lLmZ1bmN0aW9uIHx8ICc/J31gIDogJzx1bmtub3duPic7XG4gIH1cbn0gVHJhbnNhY3Rpb24uX19pbml0U3RhdGljKCk7XG5cbmV4cG9ydCB7IFRyYW5zYWN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2FjdGlvbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/integrations/esm/transaction.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserTracing\": function() { return /* reexport safe */ _sentry_tracing__WEBPACK_IMPORTED_MODULE_1__.BrowserTracing; },\n/* harmony export */   \"Integrations\": function() { return /* reexport safe */ _sentry_react__WEBPACK_IMPORTED_MODULE_0__.Integrations; },\n/* harmony export */   \"captureUnderscoreErrorException\": function() { return /* reexport safe */ _common_error_js__WEBPACK_IMPORTED_MODULE_8__.captureUnderscoreErrorException; },\n/* harmony export */   \"init\": function() { return /* binding */ init; },\n/* harmony export */   \"nextRouterInstrumentation\": function() { return /* reexport safe */ _performance_js__WEBPACK_IMPORTED_MODULE_6__.nextRouterInstrumentation; },\n/* harmony export */   \"withSentryGetServerSideProps\": function() { return /* reexport safe */ _wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_13__.withSentryGetServerSideProps; },\n/* harmony export */   \"withSentryGetStaticProps\": function() { return /* reexport safe */ _wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_14__.withSentryGetStaticProps; },\n/* harmony export */   \"withSentryServerSideAppGetInitialProps\": function() { return /* reexport safe */ _wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_10__.withSentryServerSideAppGetInitialProps; },\n/* harmony export */   \"withSentryServerSideDocumentGetInitialProps\": function() { return /* reexport safe */ _wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_11__.withSentryServerSideDocumentGetInitialProps; },\n/* harmony export */   \"withSentryServerSideErrorGetInitialProps\": function() { return /* reexport safe */ _wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_12__.withSentryServerSideErrorGetInitialProps; },\n/* harmony export */   \"withSentryServerSideGetInitialProps\": function() { return /* reexport safe */ _wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_9__.withSentryServerSideGetInitialProps; },\n/* harmony export */   \"wrapAppGetInitialPropsWithSentry\": function() { return /* reexport safe */ _wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_10__.wrapAppGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapDocumentGetInitialPropsWithSentry\": function() { return /* reexport safe */ _wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_11__.wrapDocumentGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapErrorGetInitialPropsWithSentry\": function() { return /* reexport safe */ _wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_12__.wrapErrorGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGetInitialPropsWithSentry\": function() { return /* reexport safe */ _wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_9__.wrapGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGetServerSidePropsWithSentry\": function() { return /* reexport safe */ _wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_13__.wrapGetServerSidePropsWithSentry; },\n/* harmony export */   \"wrapGetStaticPropsWithSentry\": function() { return /* reexport safe */ _wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_14__.wrapGetStaticPropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_integrations__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/integrations */ \"./node_modules/@sentry/integrations/esm/index.js\");\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sentry_react__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"Integrations\",\"BrowserTracing\",\"nextRouterInstrumentation\",\"captureUnderscoreErrorException\",\"withSentryServerSideGetInitialProps\",\"wrapGetInitialPropsWithSentry\",\"withSentryServerSideAppGetInitialProps\",\"wrapAppGetInitialPropsWithSentry\",\"withSentryServerSideDocumentGetInitialProps\",\"wrapDocumentGetInitialPropsWithSentry\",\"withSentryServerSideErrorGetInitialProps\",\"wrapErrorGetInitialPropsWithSentry\",\"withSentryGetServerSideProps\",\"wrapGetServerSidePropsWithSentry\",\"withSentryGetStaticProps\",\"wrapGetStaticPropsWithSentry\",\"init\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _sentry_react__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _sentry_tracing__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/tracing */ \"./node_modules/@sentry/tracing/esm/index.js\");\n/* harmony import */ var _common_devErrorSymbolicationEventProcessor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/devErrorSymbolicationEventProcessor.js */ \"./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js\");\n/* harmony import */ var _common_getVercelEnv_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/getVercelEnv.js */ \"./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js\");\n/* harmony import */ var _common_metadata_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/metadata.js */ \"./node_modules/@sentry/nextjs/esm/common/metadata.js\");\n/* harmony import */ var _common_userIntegrations_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/userIntegrations.js */ \"./node_modules/@sentry/nextjs/esm/common/userIntegrations.js\");\n/* harmony import */ var _performance_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./performance.js */ \"./node_modules/@sentry/nextjs/esm/client/performance.js\");\n/* harmony import */ var _tunnelRoute_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tunnelRoute.js */ \"./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js\");\n/* harmony import */ var _common_error_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/_error.js */ \"./node_modules/@sentry/nextjs/esm/common/_error.js\");\n/* harmony import */ var _wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./wrapGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapGetInitialPropsWithSentry.js\");\n/* harmony import */ var _wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./wrapAppGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapAppGetInitialPropsWithSentry.js\");\n/* harmony import */ var _wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./wrapDocumentGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapDocumentGetInitialPropsWithSentry.js\");\n/* harmony import */ var _wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./wrapErrorGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapErrorGetInitialPropsWithSentry.js\");\n/* harmony import */ var _wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./wrapGetServerSidePropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapGetServerSidePropsWithSentry.js\");\n/* harmony import */ var _wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./wrapGetStaticPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapGetStaticPropsWithSentry.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Treeshakable guard to remove all code related to tracing\n\nconst globalWithInjectedValues = __webpack_require__.g\n\n;\n\n/** Inits the Sentry NextJS SDK on the browser with the React SDK. */\nfunction init(options) {\n  (0,_tunnelRoute_js__WEBPACK_IMPORTED_MODULE_7__.applyTunnelRouteOption)(options);\n  (0,_common_metadata_js__WEBPACK_IMPORTED_MODULE_4__.buildMetadata)(options, ['nextjs', 'react']);\n\n  options.environment = options.environment || (0,_common_getVercelEnv_js__WEBPACK_IMPORTED_MODULE_3__.getVercelEnv)(true) || \"development\";\n\n  addClientIntegrations(options);\n\n  (0,_sentry_react__WEBPACK_IMPORTED_MODULE_0__.init)(options);\n\n  (0,_sentry_react__WEBPACK_IMPORTED_MODULE_0__.configureScope)(scope => {\n    scope.setTag('runtime', 'browser');\n    const filterTransactions = event =>\n      event.type === 'transaction' && event.transaction === '/404' ? null : event;\n    filterTransactions.id = 'NextClient404Filter';\n    scope.addEventProcessor(filterTransactions);\n\n    if (true) {\n      scope.addEventProcessor(_common_devErrorSymbolicationEventProcessor_js__WEBPACK_IMPORTED_MODULE_2__.devErrorSymbolicationEventProcessor);\n    }\n  });\n}\n\nfunction addClientIntegrations(options) {\n  let integrations = options.integrations || [];\n\n  // This value is injected at build time, based on the output directory specified in the build config. Though a default\n  // is set there, we set it here as well, just in case something has gone wrong with the injection.\n  const assetPrefixPath = globalWithInjectedValues.__rewriteFramesAssetPrefixPath__ || '';\n\n  const defaultRewriteFramesIntegration = new _sentry_integrations__WEBPACK_IMPORTED_MODULE_15__.RewriteFrames({\n    // Turn `<origin>/<path>/_next/static/...` into `app:///_next/static/...`\n    iteratee: frame => {\n      try {\n        const { origin } = new URL(frame.filename );\n        frame.filename = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_16__._optionalChain)([frame, 'access', _ => _.filename, 'optionalAccess', _2 => _2.replace, 'call', _3 => _3(origin, 'app://'), 'access', _4 => _4.replace, 'call', _5 => _5(assetPrefixPath, '')]);\n      } catch (err) {\n        // Filename wasn't a properly formed URL, so there's nothing we can do\n      }\n\n      if (frame.filename && frame.filename.startsWith('app:///_next')) {\n        // We need to URI-decode the filename because Next.js has wildcard routes like \"/users/[id].js\" which show up as \"/users/%5id%5.js\" in Error stacktraces.\n        // The corresponding sources that Next.js generates have proper brackets so we also need proper brackets in the frame so that source map resolving works.\n        frame.filename = decodeURI(frame.filename);\n      }\n\n      if (\n        frame.filename &&\n        frame.filename.match(\n          /^app:\\/\\/\\/_next\\/static\\/chunks\\/(main-|main-app-|polyfills-|webpack-|framework-|framework\\.)[0-9a-f]+\\.js$/,\n        )\n      ) {\n        // We don't care about these frames. It's Next.js internal code.\n        frame.in_app = false;\n      }\n\n      return frame;\n    },\n  });\n  integrations = (0,_common_userIntegrations_js__WEBPACK_IMPORTED_MODULE_5__.addOrUpdateIntegration)(defaultRewriteFramesIntegration, integrations);\n\n  // This evaluates to true unless __SENTRY_TRACING__ is text-replaced with \"false\", in which case everything inside\n  // will get treeshaken away\n  if (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n    if ((0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.hasTracingEnabled)(options)) {\n      const defaultBrowserTracingIntegration = new _sentry_tracing__WEBPACK_IMPORTED_MODULE_1__.BrowserTracing({\n        // eslint-disable-next-line deprecation/deprecation\n        tracingOrigins: [..._sentry_tracing__WEBPACK_IMPORTED_MODULE_1__.defaultRequestInstrumentationOptions.tracingOrigins, /^(api\\/)/],\n        routingInstrumentation: _performance_js__WEBPACK_IMPORTED_MODULE_6__.nextRouterInstrumentation,\n      });\n\n      integrations = (0,_common_userIntegrations_js__WEBPACK_IMPORTED_MODULE_5__.addOrUpdateIntegration)(defaultBrowserTracingIntegration, integrations, {\n        'options.routingInstrumentation': _performance_js__WEBPACK_IMPORTED_MODULE_6__.nextRouterInstrumentation,\n      });\n    }\n  }\n\n  options.integrations = integrations;\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/performance.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/performance.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"nextRouterInstrumentation\": function() { return /* binding */ nextRouterInstrumentation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\n\n\nconst globalObject = _sentry_react__WEBPACK_IMPORTED_MODULE_1__.WINDOW\n\n;\n\n/**\n * Every Next.js page (static and dynamic ones) comes with a script tag with the id \"__NEXT_DATA__\". This script tag\n * contains a JSON object with data that was either generated at build time for static pages (`getStaticProps`), or at\n * runtime with data fetchers like `getServerSideProps.`.\n *\n * We can use this information to:\n * - Always get the parameterized route we're in when loading a page.\n * - Send trace information (trace-id, baggage) from the server to the client.\n *\n * This function extracts this information.\n */\nfunction extractNextDataTagInformation() {\n  let nextData;\n  // Let's be on the safe side and actually check first if there is really a __NEXT_DATA__ script tag on the page.\n  // Theoretically this should always be the case though.\n  const nextDataTag = globalObject.document.getElementById('__NEXT_DATA__');\n  if (nextDataTag && nextDataTag.innerHTML) {\n    try {\n      nextData = JSON.parse(nextDataTag.innerHTML);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Could not extract __NEXT_DATA__');\n    }\n  }\n\n  if (!nextData) {\n    return {};\n  }\n\n  const nextDataTagInfo = {};\n\n  const { page, query, props } = nextData;\n\n  // `nextData.page` always contains the parameterized route - except for when an error occurs in a data fetching\n  // function, then it is \"/_error\", but that isn't a problem since users know which route threw by looking at the\n  // parent transaction\n  // TODO: Actually this is a problem (even though it is not that big), because the DSC and the transaction payload will contain\n  // a different transaction name. Maybe we can fix this. Idea: Also send transaction name via pageProps when available.\n  nextDataTagInfo.route = page;\n  nextDataTagInfo.params = query;\n\n  if (props && props.pageProps) {\n    if (props.pageProps._sentryBaggage) {\n      nextDataTagInfo.baggage = props.pageProps._sentryBaggage;\n    }\n\n    if (props.pageProps._sentryTraceData) {\n      nextDataTagInfo.traceParentData = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.extractTraceparentData)(props.pageProps._sentryTraceData);\n    }\n  }\n\n  return nextDataTagInfo;\n}\n\nconst DEFAULT_TAGS = {\n  'routing.instrumentation': 'next-router',\n} ;\n\n// We keep track of the active transaction so we can finish it when we start a navigation transaction.\nlet activeTransaction = undefined;\n\n// We keep track of the previous location name so we can set the `from` field on navigation transactions.\n// This is either a route or a pathname.\nlet prevLocationName = undefined;\n\nconst client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentHub)().getClient();\n\n/**\n * Creates routing instrumention for Next Router. Only supported for\n * client side routing. Works for Next >= 10.\n *\n * Leverages the SingletonRouter from the `next/router` to\n * generate pageload/navigation transactions and parameterize\n * transaction names.\n */\nfunction nextRouterInstrumentation(\n  startTransactionCb,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  const { route, traceParentData, baggage, params } = extractNextDataTagInformation();\n  prevLocationName = route || globalObject.location.pathname;\n\n  if (startTransactionOnPageLoad) {\n    const source = route ? 'route' : 'url';\n    const dynamicSamplingContext = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.baggageHeaderToDynamicSamplingContext)(baggage);\n\n    activeTransaction = startTransactionCb({\n      name: prevLocationName,\n      op: 'pageload',\n      tags: DEFAULT_TAGS,\n      ...(params && client && client.getOptions().sendDefaultPii && { data: params }),\n      ...traceParentData,\n      metadata: {\n        source,\n        dynamicSamplingContext: traceParentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    next_router__WEBPACK_IMPORTED_MODULE_0___default().events.on('routeChangeStart', (navigationTarget) => {\n      const matchedRoute = getNextRouteFromPathname((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.stripUrlQueryAndFragment)(navigationTarget));\n\n      let transactionName;\n      let transactionSource;\n\n      if (matchedRoute) {\n        transactionName = matchedRoute;\n        transactionSource = 'route';\n      } else {\n        transactionName = navigationTarget;\n        transactionSource = 'url';\n      }\n\n      const tags = {\n        ...DEFAULT_TAGS,\n        from: prevLocationName,\n      };\n\n      prevLocationName = transactionName;\n\n      if (activeTransaction) {\n        activeTransaction.finish();\n      }\n\n      const navigationTransaction = startTransactionCb({\n        name: transactionName,\n        op: 'navigation',\n        tags,\n        metadata: { source: transactionSource },\n      });\n\n      if (navigationTransaction) {\n        // In addition to the navigation transaction we're also starting a span to mark Next.js's `routeChangeStart`\n        // and `routeChangeComplete` events.\n        // We don't want to finish the navigation transaction on `routeChangeComplete`, since users might want to attach\n        // spans to that transaction even after `routeChangeComplete` is fired (eg. HTTP requests in some useEffect\n        // hooks). Instead, we'll simply let the navigation transaction finish itself (it's an `IdleTransaction`).\n        const nextRouteChangeSpan = navigationTransaction.startChild({\n          op: 'ui.nextjs.route-change',\n          description: 'Next.js Route Change',\n        });\n\n        const finishRouteChangeSpan = () => {\n          nextRouteChangeSpan.finish();\n          next_router__WEBPACK_IMPORTED_MODULE_0___default().events.off('routeChangeComplete', finishRouteChangeSpan);\n        };\n\n        next_router__WEBPACK_IMPORTED_MODULE_0___default().events.on('routeChangeComplete', finishRouteChangeSpan);\n      }\n    });\n  }\n}\n\nfunction getNextRouteFromPathname(pathname) {\n  const pageRoutes = (globalObject.__BUILD_MANIFEST || {}).sortedPages;\n\n  // Page route should in 99.999% of the cases be defined by now but just to be sure we make a check here\n  if (!pageRoutes) {\n    return;\n  }\n\n  return pageRoutes.find(route => {\n    const routeRegExp = convertNextRouteToRegExp(route);\n    return pathname.match(routeRegExp);\n  });\n}\n\n/**\n * Converts a Next.js style route to a regular expression that matches on pathnames (no query params or URL fragments).\n *\n * In general this involves replacing any instances of square brackets in a route with a wildcard:\n * e.g. \"/users/[id]/info\" becomes /\\/users\\/([^/]+?)\\/info/\n *\n * Some additional edgecases need to be considered:\n * - All routes have an optional slash at the end, meaning users can navigate to \"/users/[id]/info\" or\n *   \"/users/[id]/info/\" - both will be resolved to \"/users/[id]/info\".\n * - Non-optional \"catchall\"s at the end of a route must be considered when matching (e.g. \"/users/[...params]\").\n * - Optional \"catchall\"s at the end of a route must be considered when matching (e.g. \"/users/[[...params]]\").\n *\n * @param route A Next.js style route as it is found in `global.__BUILD_MANIFEST.sortedPages`\n */\nfunction convertNextRouteToRegExp(route) {\n  // We can assume a route is at least \"/\".\n  const routeParts = route.split('/');\n\n  let optionalCatchallWildcardRegex = '';\n  if (routeParts[routeParts.length - 1].match(/^\\[\\[\\.\\.\\..+\\]\\]$/)) {\n    // If last route part has pattern \"[[...xyz]]\" we pop the latest route part to get rid of the required trailing\n    // slash that would come before it if we didn't pop it.\n    routeParts.pop();\n    optionalCatchallWildcardRegex = '(?:/(.+?))?';\n  }\n\n  const rejoinedRouteParts = routeParts\n    .map(\n      routePart =>\n        routePart\n          .replace(/^\\[\\.\\.\\..+\\]$/, '(.+?)') // Replace catch all wildcard with regex wildcard\n          .replace(/^\\[.*\\]$/, '([^/]+?)'), // Replace route wildcards with lazy regex wildcards\n    )\n    .join('/');\n\n  return new RegExp(\n    `^${rejoinedRouteParts}${optionalCatchallWildcardRegex}(?:/)?$`, // optional slash at the end\n  );\n}\n\n\n//# sourceMappingURL=performance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/performance.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js":
/*!***************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyTunnelRouteOption\": function() { return /* binding */ applyTunnelRouteOption; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst globalWithInjectedValues = __webpack_require__.g\n\n;\n\n/**\n * Applies the `tunnel` option to the Next.js SDK options based on `withSentryConfig`'s `tunnelRoute` option.\n */\nfunction applyTunnelRouteOption(options) {\n  const tunnelRouteOption = globalWithInjectedValues.__sentryRewritesTunnelPath__;\n  if (tunnelRouteOption && options.dsn) {\n    const dsnComponents = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnFromString)(options.dsn);\n    const sentrySaasDsnMatch = dsnComponents.host.match(/^o(\\d+)\\.ingest\\.sentry\\.io$/);\n    if (sentrySaasDsnMatch) {\n      const orgId = sentrySaasDsnMatch[1];\n      const tunnelPath = `${tunnelRouteOption}?o=${orgId}&p=${dsnComponents.projectId}`;\n      options.tunnel = tunnelPath;\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.info(`Tunneling events to \"${tunnelPath}\"`);\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('Provided DSN is not a Sentry SaaS DSN. Will not tunnel events.');\n    }\n  }\n}\n\n\n//# sourceMappingURL=tunnelRoute.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC90dW5uZWxSb3V0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzRDs7QUFFdEQsaUNBQWlDLHFCQUFNOztBQUV2Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsNERBQWE7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtCQUFrQixLQUFLLE1BQU0sS0FBSyx3QkFBd0I7QUFDdEY7QUFDQSx1RUFBdUUsc0RBQVcseUJBQXlCLFdBQVc7QUFDdEgsTUFBTTtBQUNOLHVFQUF1RSxzREFBVztBQUNsRjtBQUNBO0FBQ0E7O0FBRWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY2xpZW50L3R1bm5lbFJvdXRlLmpzPzg4ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZHNuRnJvbVN0cmluZywgbG9nZ2VyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IGdsb2JhbFdpdGhJbmplY3RlZFZhbHVlcyA9IGdsb2JhbFxuXG47XG5cbi8qKlxuICogQXBwbGllcyB0aGUgYHR1bm5lbGAgb3B0aW9uIHRvIHRoZSBOZXh0LmpzIFNESyBvcHRpb25zIGJhc2VkIG9uIGB3aXRoU2VudHJ5Q29uZmlnYCdzIGB0dW5uZWxSb3V0ZWAgb3B0aW9uLlxuICovXG5mdW5jdGlvbiBhcHBseVR1bm5lbFJvdXRlT3B0aW9uKG9wdGlvbnMpIHtcbiAgY29uc3QgdHVubmVsUm91dGVPcHRpb24gPSBnbG9iYWxXaXRoSW5qZWN0ZWRWYWx1ZXMuX19zZW50cnlSZXdyaXRlc1R1bm5lbFBhdGhfXztcbiAgaWYgKHR1bm5lbFJvdXRlT3B0aW9uICYmIG9wdGlvbnMuZHNuKSB7XG4gICAgY29uc3QgZHNuQ29tcG9uZW50cyA9IGRzbkZyb21TdHJpbmcob3B0aW9ucy5kc24pO1xuICAgIGNvbnN0IHNlbnRyeVNhYXNEc25NYXRjaCA9IGRzbkNvbXBvbmVudHMuaG9zdC5tYXRjaCgvXm8oXFxkKylcXC5pbmdlc3RcXC5zZW50cnlcXC5pbyQvKTtcbiAgICBpZiAoc2VudHJ5U2Fhc0Rzbk1hdGNoKSB7XG4gICAgICBjb25zdCBvcmdJZCA9IHNlbnRyeVNhYXNEc25NYXRjaFsxXTtcbiAgICAgIGNvbnN0IHR1bm5lbFBhdGggPSBgJHt0dW5uZWxSb3V0ZU9wdGlvbn0/bz0ke29yZ0lkfSZwPSR7ZHNuQ29tcG9uZW50cy5wcm9qZWN0SWR9YDtcbiAgICAgIG9wdGlvbnMudHVubmVsID0gdHVubmVsUGF0aDtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmluZm8oYFR1bm5lbGluZyBldmVudHMgdG8gXCIke3R1bm5lbFBhdGh9XCJgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIud2FybignUHJvdmlkZWQgRFNOIGlzIG5vdCBhIFNlbnRyeSBTYWFTIERTTi4gV2lsbCBub3QgdHVubmVsIGV2ZW50cy4nKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgYXBwbHlUdW5uZWxSb3V0ZU9wdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHVubmVsUm91dGUuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/tunnelRoute.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/wrapAppGetInitialPropsWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/wrapAppGetInitialPropsWithSentry.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withSentryServerSideAppGetInitialProps\": function() { return /* binding */ withSentryServerSideAppGetInitialProps; },\n/* harmony export */   \"wrapAppGetInitialPropsWithSentry\": function() { return /* binding */ wrapAppGetInitialPropsWithSentry; }\n/* harmony export */ });\n/**\n * A passthrough function in case this function is used on the clientside. We need to make the returned function async\n * so we are consistent with the serverside implementation.\n */\nfunction wrapAppGetInitialPropsWithSentry(origAppGetInitialProps) {\n  return new Proxy(origAppGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      return await wrappingTarget.apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapAppGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideAppGetInitialProps = wrapAppGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapAppGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVvRjtBQUNwRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcz9lYmUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBwYXNzdGhyb3VnaCBmdW5jdGlvbiBpbiBjYXNlIHRoaXMgZnVuY3Rpb24gaXMgdXNlZCBvbiB0aGUgY2xpZW50c2lkZS4gV2UgbmVlZCB0byBtYWtlIHRoZSByZXR1cm5lZCBmdW5jdGlvbiBhc3luY1xuICogc28gd2UgYXJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgc2VydmVyc2lkZSBpbXBsZW1lbnRhdGlvbi5cbiAqL1xuZnVuY3Rpb24gd3JhcEFwcEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkob3JpZ0FwcEdldEluaXRpYWxQcm9wcykge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdBcHBHZXRJbml0aWFsUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeWAgaW5zdGVhZC5cbiAqL1xuY29uc3Qgd2l0aFNlbnRyeVNlcnZlclNpZGVBcHBHZXRJbml0aWFsUHJvcHMgPSB3cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeTtcblxuZXhwb3J0IHsgd2l0aFNlbnRyeVNlcnZlclNpZGVBcHBHZXRJbml0aWFsUHJvcHMsIHdyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/wrapAppGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/wrapDocumentGetInitialPropsWithSentry.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/wrapDocumentGetInitialPropsWithSentry.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withSentryServerSideDocumentGetInitialProps\": function() { return /* binding */ withSentryServerSideDocumentGetInitialProps; },\n/* harmony export */   \"wrapDocumentGetInitialPropsWithSentry\": function() { return /* binding */ wrapDocumentGetInitialPropsWithSentry; }\n/* harmony export */ });\n/**\n * A passthrough function in case this function is used on the clientside. We need to make the returned function async\n * so we are consistent with the serverside implementation.\n */\nfunction wrapDocumentGetInitialPropsWithSentry(\n  origDocumentGetInitialProps,\n) {\n  return new Proxy(origDocumentGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      return await wrappingTarget.apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapDocumentGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideDocumentGetInitialProps = wrapDocumentGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapDocumentGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUU4RjtBQUM5RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzP2E2M2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHBhc3N0aHJvdWdoIGZ1bmN0aW9uIGluIGNhc2UgdGhpcyBmdW5jdGlvbiBpcyB1c2VkIG9uIHRoZSBjbGllbnRzaWRlLiBXZSBuZWVkIHRvIG1ha2UgdGhlIHJldHVybmVkIGZ1bmN0aW9uIGFzeW5jXG4gKiBzbyB3ZSBhcmUgY29uc2lzdGVudCB3aXRoIHRoZSBzZXJ2ZXJzaWRlIGltcGxlbWVudGF0aW9uLlxuICovXG5mdW5jdGlvbiB3cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5KFxuICBvcmlnRG9jdW1lbnRHZXRJbml0aWFsUHJvcHMsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm94eShvcmlnRG9jdW1lbnRHZXRJbml0aWFsUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5YCBpbnN0ZWFkLlxuICovXG5jb25zdCB3aXRoU2VudHJ5U2VydmVyU2lkZURvY3VtZW50R2V0SW5pdGlhbFByb3BzID0gd3JhcERvY3VtZW50R2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeTtcblxuZXhwb3J0IHsgd2l0aFNlbnRyeVNlcnZlclNpZGVEb2N1bWVudEdldEluaXRpYWxQcm9wcywgd3JhcERvY3VtZW50R2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcERvY3VtZW50R2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/wrapDocumentGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/wrapErrorGetInitialPropsWithSentry.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/wrapErrorGetInitialPropsWithSentry.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withSentryServerSideErrorGetInitialProps\": function() { return /* binding */ withSentryServerSideErrorGetInitialProps; },\n/* harmony export */   \"wrapErrorGetInitialPropsWithSentry\": function() { return /* binding */ wrapErrorGetInitialPropsWithSentry; }\n/* harmony export */ });\n/**\n * A passthrough function in case this function is used on the clientside. We need to make the returned function async\n * so we are consistent with the serverside implementation.\n */\nfunction wrapErrorGetInitialPropsWithSentry(\n  origErrorGetInitialProps,\n) {\n  return new Proxy(origErrorGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      return await wrappingTarget.apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapErrorGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideErrorGetInitialProps = wrapErrorGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapErrorGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUV3RjtBQUN4RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzPzU1YWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHBhc3N0aHJvdWdoIGZ1bmN0aW9uIGluIGNhc2UgdGhpcyBmdW5jdGlvbiBpcyB1c2VkIG9uIHRoZSBjbGllbnRzaWRlLiBXZSBuZWVkIHRvIG1ha2UgdGhlIHJldHVybmVkIGZ1bmN0aW9uIGFzeW5jXG4gKiBzbyB3ZSBhcmUgY29uc2lzdGVudCB3aXRoIHRoZSBzZXJ2ZXJzaWRlIGltcGxlbWVudGF0aW9uLlxuICovXG5mdW5jdGlvbiB3cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5KFxuICBvcmlnRXJyb3JHZXRJbml0aWFsUHJvcHMsXG4pIHtcbiAgcmV0dXJuIG5ldyBQcm94eShvcmlnRXJyb3JHZXRJbml0aWFsUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5YCBpbnN0ZWFkLlxuICovXG5jb25zdCB3aXRoU2VudHJ5U2VydmVyU2lkZUVycm9yR2V0SW5pdGlhbFByb3BzID0gd3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeTtcblxuZXhwb3J0IHsgd2l0aFNlbnRyeVNlcnZlclNpZGVFcnJvckdldEluaXRpYWxQcm9wcywgd3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcEVycm9yR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/wrapErrorGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/wrapGetInitialPropsWithSentry.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/wrapGetInitialPropsWithSentry.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withSentryServerSideGetInitialProps\": function() { return /* binding */ withSentryServerSideGetInitialProps; },\n/* harmony export */   \"wrapGetInitialPropsWithSentry\": function() { return /* binding */ wrapGetInitialPropsWithSentry; }\n/* harmony export */ });\n/**\n * A passthrough function in case this function is used on the clientside. We need to make the returned function async\n * so we are consistent with the serverside implementation.\n */\nfunction wrapGetInitialPropsWithSentry(origGetInitialProps) {\n  return new Proxy(origGetInitialProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      return await wrappingTarget.apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapGetInitialPropsWithSentry` instead.\n */\nconst withSentryServerSideGetInitialProps = wrapGetInitialPropsWithSentry;\n\n\n//# sourceMappingURL=wrapGetInitialPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUU4RTtBQUM5RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcz85OTE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBwYXNzdGhyb3VnaCBmdW5jdGlvbiBpbiBjYXNlIHRoaXMgZnVuY3Rpb24gaXMgdXNlZCBvbiB0aGUgY2xpZW50c2lkZS4gV2UgbmVlZCB0byBtYWtlIHRoZSByZXR1cm5lZCBmdW5jdGlvbiBhc3luY1xuICogc28gd2UgYXJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgc2VydmVyc2lkZSBpbXBsZW1lbnRhdGlvbi5cbiAqL1xuZnVuY3Rpb24gd3JhcEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkob3JpZ0dldEluaXRpYWxQcm9wcykge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdHZXRJbml0aWFsUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeWAgaW5zdGVhZC5cbiAqL1xuY29uc3Qgd2l0aFNlbnRyeVNlcnZlclNpZGVHZXRJbml0aWFsUHJvcHMgPSB3cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeTtcblxuZXhwb3J0IHsgd2l0aFNlbnRyeVNlcnZlclNpZGVHZXRJbml0aWFsUHJvcHMsIHdyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/wrapGetInitialPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/wrapGetServerSidePropsWithSentry.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/wrapGetServerSidePropsWithSentry.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withSentryGetServerSideProps\": function() { return /* binding */ withSentryGetServerSideProps; },\n/* harmony export */   \"wrapGetServerSidePropsWithSentry\": function() { return /* binding */ wrapGetServerSidePropsWithSentry; }\n/* harmony export */ });\n/**\n * A passthrough function in case this function is used on the clientside. We need to make the returned function async\n * so we are consistent with the serverside implementation.\n */\nfunction wrapGetServerSidePropsWithSentry(origGetServerSideProps) {\n  return new Proxy(origGetServerSideProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      return await wrappingTarget.apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `withSentryGetServerSideProps` instead.\n */\nconst withSentryGetServerSideProps = wrapGetServerSidePropsWithSentry;\n\n\n//# sourceMappingURL=wrapGetServerSidePropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUUwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcz9iM2Q5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBwYXNzdGhyb3VnaCBmdW5jdGlvbiBpbiBjYXNlIHRoaXMgZnVuY3Rpb24gaXMgdXNlZCBvbiB0aGUgY2xpZW50c2lkZS4gV2UgbmVlZCB0byBtYWtlIHRoZSByZXR1cm5lZCBmdW5jdGlvbiBhc3luY1xuICogc28gd2UgYXJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgc2VydmVyc2lkZSBpbXBsZW1lbnRhdGlvbi5cbiAqL1xuZnVuY3Rpb24gd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnkob3JpZ0dldFNlcnZlclNpZGVQcm9wcykge1xuICByZXR1cm4gbmV3IFByb3h5KG9yaWdHZXRTZXJ2ZXJTaWRlUHJvcHMsIHtcbiAgICBhcHBseTogYXN5bmMgKHdyYXBwaW5nVGFyZ2V0LCB0aGlzQXJnLCBhcmdzKSA9PiB7XG4gICAgICByZXR1cm4gYXdhaXQgd3JhcHBpbmdUYXJnZXQuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIGB3aXRoU2VudHJ5R2V0U2VydmVyU2lkZVByb3BzYCBpbnN0ZWFkLlxuICovXG5jb25zdCB3aXRoU2VudHJ5R2V0U2VydmVyU2lkZVByb3BzID0gd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnk7XG5cbmV4cG9ydCB7IHdpdGhTZW50cnlHZXRTZXJ2ZXJTaWRlUHJvcHMsIHdyYXBHZXRTZXJ2ZXJTaWRlUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwR2V0U2VydmVyU2lkZVByb3BzV2l0aFNlbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/wrapGetServerSidePropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/client/wrapGetStaticPropsWithSentry.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/client/wrapGetStaticPropsWithSentry.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"withSentryGetStaticProps\": function() { return /* binding */ withSentryGetStaticProps; },\n/* harmony export */   \"wrapGetStaticPropsWithSentry\": function() { return /* binding */ wrapGetStaticPropsWithSentry; }\n/* harmony export */ });\n/**\n * A passthrough function in case this function is used on the clientside. We need to make the returned function async\n * so we are consistent with the serverside implementation.\n */\nfunction wrapGetStaticPropsWithSentry(origGetStaticProps) {\n  return new Proxy(origGetStaticProps, {\n    apply: async (wrappingTarget, thisArg, args) => {\n      return await wrappingTarget.apply(thisArg, args);\n    },\n  });\n}\n\n/**\n * @deprecated Use `wrapGetStaticPropsWithSentry` instead.\n */\nconst withSentryGetStaticProps = wrapGetStaticPropsWithSentry;\n\n\n//# sourceMappingURL=wrapGetStaticPropsWithSentry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NsaWVudC93cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRWtFO0FBQ2xFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vY2xpZW50L3dyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkuanM/ZWM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgcGFzc3Rocm91Z2ggZnVuY3Rpb24gaW4gY2FzZSB0aGlzIGZ1bmN0aW9uIGlzIHVzZWQgb24gdGhlIGNsaWVudHNpZGUuIFdlIG5lZWQgdG8gbWFrZSB0aGUgcmV0dXJuZWQgZnVuY3Rpb24gYXN5bmNcbiAqIHNvIHdlIGFyZSBjb25zaXN0ZW50IHdpdGggdGhlIHNlcnZlcnNpZGUgaW1wbGVtZW50YXRpb24uXG4gKi9cbmZ1bmN0aW9uIHdyYXBHZXRTdGF0aWNQcm9wc1dpdGhTZW50cnkob3JpZ0dldFN0YXRpY1Byb3BzKSB7XG4gIHJldHVybiBuZXcgUHJveHkob3JpZ0dldFN0YXRpY1Byb3BzLCB7XG4gICAgYXBwbHk6IGFzeW5jICh3cmFwcGluZ1RhcmdldCwgdGhpc0FyZywgYXJncykgPT4ge1xuICAgICAgcmV0dXJuIGF3YWl0IHdyYXBwaW5nVGFyZ2V0LmFwcGx5KHRoaXNBcmcsIGFyZ3MpO1xuICAgIH0sXG4gIH0pO1xufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkIFVzZSBgd3JhcEdldFN0YXRpY1Byb3BzV2l0aFNlbnRyeWAgaW5zdGVhZC5cbiAqL1xuY29uc3Qgd2l0aFNlbnRyeUdldFN0YXRpY1Byb3BzID0gd3JhcEdldFN0YXRpY1Byb3BzV2l0aFNlbnRyeTtcblxuZXhwb3J0IHsgd2l0aFNlbnRyeUdldFN0YXRpY1Byb3BzLCB3cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD13cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/client/wrapGetStaticPropsWithSentry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/_error.js":
/*!**********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/_error.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"captureUnderscoreErrorException\": function() { return /* binding */ captureUnderscoreErrorException; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/** Platform-agnostic version of `flush` */\nfunction flush(timeout) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n  return client ? client.flush(timeout) : Promise.resolve(false);\n}\n\n/**\n * Capture the exception passed by nextjs to the `_error` page, adding context data as appropriate.\n *\n * @param contextOrProps The data passed to either `getInitialProps` or `render` by nextjs\n */\nasync function captureUnderscoreErrorException(contextOrProps) {\n  const { req, res, err } = contextOrProps;\n\n  // 404s (and other 400-y friends) can trigger `_error`, but we don't want to send them to Sentry\n  const statusCode = (res && res.statusCode) || contextOrProps.statusCode;\n  if (statusCode && statusCode < 500) {\n    return Promise.resolve();\n  }\n\n  // In previous versions of the suggested `_error.js` page in which this function is meant to be used, there was a\n  // workaround for https://github.com/vercel/next.js/issues/8592 which involved an extra call to this function, in the\n  // custom error component's `render` method, just in case it hadn't been called by `getInitialProps`. Now that that\n  // issue has been fixed, the second call is unnecessary, but since it lives in user code rather than our code, users\n  // have to be the ones to get rid of it, and guaraneteedly, not all of them will. So, rather than capture the error\n  // twice, we just bail if we sense we're in that now-extraneous second call. (We can tell which function we're in\n  // because Nextjs passes `pathname` to `getInitialProps` but not to `render`.)\n  if (!contextOrProps.pathname) {\n    return Promise.resolve();\n  }\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.withScope)(scope => {\n    scope.addEventProcessor(event => {\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addExceptionMechanism)(event, {\n        type: 'instrument',\n        handled: true,\n        data: {\n          function: '_error.getInitialProps',\n        },\n      });\n      return event;\n    });\n\n    if (req) {\n      scope.setSDKProcessingMetadata({ request: req });\n    }\n\n    // If third-party libraries (or users themselves) throw something falsy, we want to capture it as a message (which\n    // is what passing a string to `captureException` will wind up doing)\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.captureException)(err || `_error.js called with falsy error (${err})`);\n  });\n\n  // In case this is being run as part of a serverless function (as is the case with the server half of nextjs apps\n  // deployed to vercel), make sure the error gets sent to Sentry before the lambda exits.\n  await flush(2000);\n}\n\n\n//# sourceMappingURL=_error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9fZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBFO0FBQ3BCOztBQUV0RDtBQUNBO0FBQ0EsaUJBQWlCLDJEQUFhO0FBQzlCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxnQkFBZ0I7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsRUFBRSx1REFBUztBQUNYO0FBQ0EsTUFBTSxvRUFBcUI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLHVDQUF1QyxjQUFjO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQSxJQUFJLDhEQUFnQiw4Q0FBOEMsSUFBSTtBQUN0RSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUUyQztBQUMzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9fZXJyb3IuanM/N2Y2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3aXRoU2NvcGUsIGNhcHR1cmVFeGNlcHRpb24sIGdldEN1cnJlbnRIdWIgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgYWRkRXhjZXB0aW9uTWVjaGFuaXNtIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKiBQbGF0Zm9ybS1hZ25vc3RpYyB2ZXJzaW9uIG9mIGBmbHVzaGAgKi9cbmZ1bmN0aW9uIGZsdXNoKHRpbWVvdXQpIHtcbiAgY29uc3QgY2xpZW50ID0gZ2V0Q3VycmVudEh1YigpLmdldENsaWVudCgpO1xuICByZXR1cm4gY2xpZW50ID8gY2xpZW50LmZsdXNoKHRpbWVvdXQpIDogUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTtcbn1cblxuLyoqXG4gKiBDYXB0dXJlIHRoZSBleGNlcHRpb24gcGFzc2VkIGJ5IG5leHRqcyB0byB0aGUgYF9lcnJvcmAgcGFnZSwgYWRkaW5nIGNvbnRleHQgZGF0YSBhcyBhcHByb3ByaWF0ZS5cbiAqXG4gKiBAcGFyYW0gY29udGV4dE9yUHJvcHMgVGhlIGRhdGEgcGFzc2VkIHRvIGVpdGhlciBgZ2V0SW5pdGlhbFByb3BzYCBvciBgcmVuZGVyYCBieSBuZXh0anNcbiAqL1xuYXN5bmMgZnVuY3Rpb24gY2FwdHVyZVVuZGVyc2NvcmVFcnJvckV4Y2VwdGlvbihjb250ZXh0T3JQcm9wcykge1xuICBjb25zdCB7IHJlcSwgcmVzLCBlcnIgfSA9IGNvbnRleHRPclByb3BzO1xuXG4gIC8vIDQwNHMgKGFuZCBvdGhlciA0MDAteSBmcmllbmRzKSBjYW4gdHJpZ2dlciBgX2Vycm9yYCwgYnV0IHdlIGRvbid0IHdhbnQgdG8gc2VuZCB0aGVtIHRvIFNlbnRyeVxuICBjb25zdCBzdGF0dXNDb2RlID0gKHJlcyAmJiByZXMuc3RhdHVzQ29kZSkgfHwgY29udGV4dE9yUHJvcHMuc3RhdHVzQ29kZTtcbiAgaWYgKHN0YXR1c0NvZGUgJiYgc3RhdHVzQ29kZSA8IDUwMCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgfVxuXG4gIC8vIEluIHByZXZpb3VzIHZlcnNpb25zIG9mIHRoZSBzdWdnZXN0ZWQgYF9lcnJvci5qc2AgcGFnZSBpbiB3aGljaCB0aGlzIGZ1bmN0aW9uIGlzIG1lYW50IHRvIGJlIHVzZWQsIHRoZXJlIHdhcyBhXG4gIC8vIHdvcmthcm91bmQgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS92ZXJjZWwvbmV4dC5qcy9pc3N1ZXMvODU5MiB3aGljaCBpbnZvbHZlZCBhbiBleHRyYSBjYWxsIHRvIHRoaXMgZnVuY3Rpb24sIGluIHRoZVxuICAvLyBjdXN0b20gZXJyb3IgY29tcG9uZW50J3MgYHJlbmRlcmAgbWV0aG9kLCBqdXN0IGluIGNhc2UgaXQgaGFkbid0IGJlZW4gY2FsbGVkIGJ5IGBnZXRJbml0aWFsUHJvcHNgLiBOb3cgdGhhdCB0aGF0XG4gIC8vIGlzc3VlIGhhcyBiZWVuIGZpeGVkLCB0aGUgc2Vjb25kIGNhbGwgaXMgdW5uZWNlc3NhcnksIGJ1dCBzaW5jZSBpdCBsaXZlcyBpbiB1c2VyIGNvZGUgcmF0aGVyIHRoYW4gb3VyIGNvZGUsIHVzZXJzXG4gIC8vIGhhdmUgdG8gYmUgdGhlIG9uZXMgdG8gZ2V0IHJpZCBvZiBpdCwgYW5kIGd1YXJhbmV0ZWVkbHksIG5vdCBhbGwgb2YgdGhlbSB3aWxsLiBTbywgcmF0aGVyIHRoYW4gY2FwdHVyZSB0aGUgZXJyb3JcbiAgLy8gdHdpY2UsIHdlIGp1c3QgYmFpbCBpZiB3ZSBzZW5zZSB3ZSdyZSBpbiB0aGF0IG5vdy1leHRyYW5lb3VzIHNlY29uZCBjYWxsLiAoV2UgY2FuIHRlbGwgd2hpY2ggZnVuY3Rpb24gd2UncmUgaW5cbiAgLy8gYmVjYXVzZSBOZXh0anMgcGFzc2VzIGBwYXRobmFtZWAgdG8gYGdldEluaXRpYWxQcm9wc2AgYnV0IG5vdCB0byBgcmVuZGVyYC4pXG4gIGlmICghY29udGV4dE9yUHJvcHMucGF0aG5hbWUpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuICB3aXRoU2NvcGUoc2NvcGUgPT4ge1xuICAgIHNjb3BlLmFkZEV2ZW50UHJvY2Vzc29yKGV2ZW50ID0+IHtcbiAgICAgIGFkZEV4Y2VwdGlvbk1lY2hhbmlzbShldmVudCwge1xuICAgICAgICB0eXBlOiAnaW5zdHJ1bWVudCcsXG4gICAgICAgIGhhbmRsZWQ6IHRydWUsXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICBmdW5jdGlvbjogJ19lcnJvci5nZXRJbml0aWFsUHJvcHMnLFxuICAgICAgICB9LFxuICAgICAgfSk7XG4gICAgICByZXR1cm4gZXZlbnQ7XG4gICAgfSk7XG5cbiAgICBpZiAocmVxKSB7XG4gICAgICBzY29wZS5zZXRTREtQcm9jZXNzaW5nTWV0YWRhdGEoeyByZXF1ZXN0OiByZXEgfSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhpcmQtcGFydHkgbGlicmFyaWVzIChvciB1c2VycyB0aGVtc2VsdmVzKSB0aHJvdyBzb21ldGhpbmcgZmFsc3ksIHdlIHdhbnQgdG8gY2FwdHVyZSBpdCBhcyBhIG1lc3NhZ2UgKHdoaWNoXG4gICAgLy8gaXMgd2hhdCBwYXNzaW5nIGEgc3RyaW5nIHRvIGBjYXB0dXJlRXhjZXB0aW9uYCB3aWxsIHdpbmQgdXAgZG9pbmcpXG4gICAgY2FwdHVyZUV4Y2VwdGlvbihlcnIgfHwgYF9lcnJvci5qcyBjYWxsZWQgd2l0aCBmYWxzeSBlcnJvciAoJHtlcnJ9KWApO1xuICB9KTtcblxuICAvLyBJbiBjYXNlIHRoaXMgaXMgYmVpbmcgcnVuIGFzIHBhcnQgb2YgYSBzZXJ2ZXJsZXNzIGZ1bmN0aW9uIChhcyBpcyB0aGUgY2FzZSB3aXRoIHRoZSBzZXJ2ZXIgaGFsZiBvZiBuZXh0anMgYXBwc1xuICAvLyBkZXBsb3llZCB0byB2ZXJjZWwpLCBtYWtlIHN1cmUgdGhlIGVycm9yIGdldHMgc2VudCB0byBTZW50cnkgYmVmb3JlIHRoZSBsYW1iZGEgZXhpdHMuXG4gIGF3YWl0IGZsdXNoKDIwMDApO1xufVxuXG5leHBvcnQgeyBjYXB0dXJlVW5kZXJzY29yZUVycm9yRXhjZXB0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fZXJyb3IuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/_error.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"devErrorSymbolicationEventProcessor\": function() { return /* binding */ devErrorSymbolicationEventProcessor; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var stacktrace_parser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stacktrace-parser */ \"./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js\");\n\n\n\nasync function resolveStackFrame(\n  frame,\n  error,\n) {\n  try {\n    if (!((0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([frame, 'access', _ => _.file, 'optionalAccess', _2 => _2.startsWith, 'call', _3 => _3('webpack-internal:')]) || (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([frame, 'access', _4 => _4.file, 'optionalAccess', _5 => _5.startsWith, 'call', _6 => _6('file:')]))) {\n      return null;\n    }\n\n    const params = new URLSearchParams();\n    params.append('isServer', String(false)); // doesn't matter since it is overwritten by isAppDirectory\n    params.append('isEdgeServer', String(false)); // doesn't matter since it is overwritten by isAppDirectory\n    params.append('isAppDirectory', String(true)); // will force server to do more thorough checking\n    params.append('errorMessage', error.toString());\n    Object.keys(frame).forEach(key => {\n      params.append(key, ((0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_1__._nullishCoalesce)(frame[key ], () => ( ''))).toString());\n    });\n\n    const controller = new AbortController();\n    const timer = setTimeout(() => controller.abort(), 3000);\n    const res = await fetch(\n      `${\n        // eslint-disable-next-line no-restricted-globals\n        typeof window === 'undefined' ? 'http://localhost:3000' : '' // TODO: handle the case where users define a different port\n      }/__nextjs_original-stack-frame?${params.toString()}`,\n      {\n        signal: controller.signal,\n      },\n    ).finally(() => {\n      clearTimeout(timer);\n    });\n\n    if (!res.ok || res.status === 204) {\n      return null;\n    }\n\n    const body = await res.json();\n\n    return {\n      originalCodeFrame: body.originalCodeFrame,\n      originalStackFrame: body.originalStackFrame,\n    };\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction parseOriginalCodeFrame(codeFrame)\n\n {\n  const preProcessedLines = codeFrame\n    // Remove ASCII control characters that are used for syntax highlighting\n    .replace(\n      // eslint-disable-next-line no-control-regex\n      /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g, // https://stackoverflow.com/a/29497680\n      '',\n    )\n    .split('\\n')\n    // Remove line that is supposed to indicate where the error happened\n    .filter(line => !line.match(/^\\s*\\|/))\n    // Find the error line\n    .map(line => ({\n      line,\n      isErrorLine: !!line.match(/^>/),\n    }))\n    // Remove the leading part that is just for prettier output\n    .map(lineObj => ({\n      ...lineObj,\n      line: lineObj.line.replace(/^.*\\|/, ''),\n    }));\n\n  const preContextLines = [];\n  let contextLine = undefined;\n  const postContextLines = [];\n\n  let reachedContextLine = false;\n\n  for (const preProcessedLine of preProcessedLines) {\n    if (preProcessedLine.isErrorLine) {\n      contextLine = preProcessedLine.line;\n      reachedContextLine = true;\n    } else if (reachedContextLine) {\n      postContextLines.push(preProcessedLine.line);\n    } else {\n      preContextLines.push(preProcessedLine.line);\n    }\n  }\n\n  return {\n    contextLine,\n    preContextLines,\n    postContextLines,\n  };\n}\n\n/**\n * Event processor that will symbolicate errors by using the webpack/nextjs dev server that is used to show stack traces\n * in the dev overlay.\n */\nasync function devErrorSymbolicationEventProcessor(event, hint) {\n  // Due to changes across Next.js versions, there are a million things that can go wrong here so we just try-catch the  // entire event processor.Symbolicated stack traces are just a nice to have.\n  try {\n    if (hint.originalException && hint.originalException instanceof Error && hint.originalException.stack) {\n      const frames = stacktrace_parser__WEBPACK_IMPORTED_MODULE_0__.parse(hint.originalException.stack);\n\n      const resolvedFrames = await Promise.all(\n        frames.map(async frame => await resolveStackFrame(frame, hint.originalException )),\n      );\n\n      if ((0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([event, 'access', _7 => _7.exception, 'optionalAccess', _8 => _8.values, 'optionalAccess', _9 => _9[0], 'access', _10 => _10.stacktrace, 'optionalAccess', _11 => _11.frames])) {\n        event.exception.values[0].stacktrace.frames = event.exception.values[0].stacktrace.frames.map(\n          (frame, i, frames) => {\n            const resolvedFrame = resolvedFrames[frames.length - 1 - i];\n            if (!resolvedFrame || !resolvedFrame.originalStackFrame || !resolvedFrame.originalCodeFrame) {\n              return {\n                ...frame,\n                platform: (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_1__._optionalChain)([frame, 'access', _12 => _12.abs_path, 'optionalAccess', _13 => _13.startsWith, 'call', _14 => _14('node:internal')]) ? 'nodejs' : undefined, // simple hack that will prevent a source mapping error from showing up\n                in_app: false,\n              };\n            }\n\n            const { contextLine, preContextLines, postContextLines } = parseOriginalCodeFrame(\n              resolvedFrame.originalCodeFrame,\n            );\n\n            return {\n              ...frame,\n              pre_context: preContextLines,\n              context_line: contextLine,\n              post_context: postContextLines,\n              function: resolvedFrame.originalStackFrame.methodName,\n              filename: resolvedFrame.originalStackFrame.file || undefined,\n              lineno: resolvedFrame.originalStackFrame.lineNumber || undefined,\n              colno: resolvedFrame.originalStackFrame.column || undefined,\n            };\n          },\n        );\n      }\n    }\n  } catch (e) {\n    return event;\n  }\n\n  return event;\n}\n\n\n//# sourceMappingURL=devErrorSymbolicationEventProcessor.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/devErrorSymbolicationEventProcessor.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVercelEnv\": function() { return /* binding */ getVercelEnv; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/**\n * Returns an environment setting value determined by Vercel's `VERCEL_ENV` environment variable.\n *\n * @param isClient Flag to indicate whether to use the `NEXT_PUBLIC_` prefixed version of the environment variable.\n */\nfunction getVercelEnv(isClient) {\n  const vercelEnvVar = isClient ? process.env.NEXT_PUBLIC_VERCEL_ENV : process.env.VERCEL_ENV;\n  return vercelEnvVar ? `vercel-${vercelEnvVar}` : undefined;\n}\n\n\n//# sourceMappingURL=getVercelEnv.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9nZXRWZXJjZWxFbnYuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsT0FBTyw4QkFBOEIsT0FBTztBQUM5RSxrQ0FBa0MsYUFBYTtBQUMvQzs7QUFFd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vZ2V0VmVyY2VsRW52LmpzPzlmOTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIGFuIGVudmlyb25tZW50IHNldHRpbmcgdmFsdWUgZGV0ZXJtaW5lZCBieSBWZXJjZWwncyBgVkVSQ0VMX0VOVmAgZW52aXJvbm1lbnQgdmFyaWFibGUuXG4gKlxuICogQHBhcmFtIGlzQ2xpZW50IEZsYWcgdG8gaW5kaWNhdGUgd2hldGhlciB0byB1c2UgdGhlIGBORVhUX1BVQkxJQ19gIHByZWZpeGVkIHZlcnNpb24gb2YgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlLlxuICovXG5mdW5jdGlvbiBnZXRWZXJjZWxFbnYoaXNDbGllbnQpIHtcbiAgY29uc3QgdmVyY2VsRW52VmFyID0gaXNDbGllbnQgPyBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19WRVJDRUxfRU5WIDogcHJvY2Vzcy5lbnYuVkVSQ0VMX0VOVjtcbiAgcmV0dXJuIHZlcmNlbEVudlZhciA/IGB2ZXJjZWwtJHt2ZXJjZWxFbnZWYXJ9YCA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IHsgZ2V0VmVyY2VsRW52IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRWZXJjZWxFbnYuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/getVercelEnv.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/metadata.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/metadata.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"buildMetadata\": function() { return /* binding */ buildMetadata; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n\n\nconst PACKAGE_NAME_PREFIX = 'npm:@sentry/';\n\n/**\n * A builder for the SDK metadata in the options for the SDK initialization.\n * @param options sdk options object that gets mutated\n * @param names list of package names\n */\nfunction buildMetadata(options, names) {\n  options._metadata = options._metadata || {};\n  options._metadata.sdk =\n    options._metadata.sdk ||\n    ({\n      name: 'sentry.javascript.nextjs',\n      packages: names.map(name => ({\n        name: `${PACKAGE_NAME_PREFIX}${name}`,\n        version: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n      })),\n      version: _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n    } );\n}\n\n\n//# sourceMappingURL=metadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi9tZXRhZGF0YS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQzs7QUFFM0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLG9CQUFvQixFQUFFLEtBQUs7QUFDNUMsaUJBQWlCLHFEQUFXO0FBQzVCLE9BQU87QUFDUCxlQUFlLHFEQUFXO0FBQzFCLE1BQU07QUFDTjs7QUFFeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvbmV4dGpzL2VzbS9jb21tb24vbWV0YWRhdGEuanM/OGNlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTREtfVkVSU0lPTiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5cbmNvbnN0IFBBQ0tBR0VfTkFNRV9QUkVGSVggPSAnbnBtOkBzZW50cnkvJztcblxuLyoqXG4gKiBBIGJ1aWxkZXIgZm9yIHRoZSBTREsgbWV0YWRhdGEgaW4gdGhlIG9wdGlvbnMgZm9yIHRoZSBTREsgaW5pdGlhbGl6YXRpb24uXG4gKiBAcGFyYW0gb3B0aW9ucyBzZGsgb3B0aW9ucyBvYmplY3QgdGhhdCBnZXRzIG11dGF0ZWRcbiAqIEBwYXJhbSBuYW1lcyBsaXN0IG9mIHBhY2thZ2UgbmFtZXNcbiAqL1xuZnVuY3Rpb24gYnVpbGRNZXRhZGF0YShvcHRpb25zLCBuYW1lcykge1xuICBvcHRpb25zLl9tZXRhZGF0YSA9IG9wdGlvbnMuX21ldGFkYXRhIHx8IHt9O1xuICBvcHRpb25zLl9tZXRhZGF0YS5zZGsgPVxuICAgIG9wdGlvbnMuX21ldGFkYXRhLnNkayB8fFxuICAgICh7XG4gICAgICBuYW1lOiAnc2VudHJ5LmphdmFzY3JpcHQubmV4dGpzJyxcbiAgICAgIHBhY2thZ2VzOiBuYW1lcy5tYXAobmFtZSA9PiAoe1xuICAgICAgICBuYW1lOiBgJHtQQUNLQUdFX05BTUVfUFJFRklYfSR7bmFtZX1gLFxuICAgICAgICB2ZXJzaW9uOiBTREtfVkVSU0lPTixcbiAgICAgIH0pKSxcbiAgICAgIHZlcnNpb246IFNES19WRVJTSU9OLFxuICAgIH0gKTtcbn1cblxuZXhwb3J0IHsgYnVpbGRNZXRhZGF0YSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWV0YWRhdGEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/metadata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/common/userIntegrations.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/common/userIntegrations.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addOrUpdateIntegration\": function() { return /* binding */ addOrUpdateIntegration; }\n/* harmony export */ });\n/**\n * Recursively traverses an object to update an existing nested key.\n * Note: The provided key path must include existing properties,\n * the function will not create objects while traversing.\n *\n * @param obj An object to update\n * @param value The value to update the nested key with\n * @param keyPath The path to the key to update ex. fizz.buzz.foo\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setNestedKey(obj, keyPath, value) {\n  // Ex. foo.bar.zoop will extract foo and bar.zoop\n  const match = keyPath.match(/([a-z_]+)\\.(.*)/i);\n  // The match will be null when there's no more recursing to do, i.e., when we've reached the right level of the object\n  if (match === null) {\n    obj[keyPath] = value;\n  } else {\n    // `match[1]` is the initial segment of the path, and `match[2]` is the remainder of the path\n    const innerObj = obj[match[1]];\n    setNestedKey(innerObj, match[2], value);\n  }\n}\n\n/**\n * Enforces inclusion of a given integration with specified options in an integration array originally determined by the\n * user, by either including the given default instance or by patching an existing user instance with the given options.\n *\n * Ideally this would happen when integrations are set up, but there isn't currently a mechanism there for merging\n * options from a default integration instance with those from a user-provided instance of the same integration, only\n * for allowing the user to override a default instance entirely. (TODO: Fix that.)\n *\n * @param defaultIntegrationInstance An instance of the integration with the correct options already set\n * @param userIntegrations Integrations defined by the user.\n * @param forcedOptions Options with which to patch an existing user-derived instance on the integration.\n * @returns A final integrations array.\n */\nfunction addOrUpdateIntegration(\n  defaultIntegrationInstance,\n  userIntegrations,\n  forcedOptions = {},\n) {\n  return (\n    Array.isArray(userIntegrations)\n      ? addOrUpdateIntegrationInArray(defaultIntegrationInstance, userIntegrations, forcedOptions)\n      : addOrUpdateIntegrationInFunction(\n          defaultIntegrationInstance,\n          // Somehow TS can't figure out that not being an array makes this necessarily a function\n          userIntegrations ,\n          forcedOptions,\n        )\n  ) ;\n}\n\nfunction addOrUpdateIntegrationInArray(\n  defaultIntegrationInstance,\n  userIntegrations,\n  forcedOptions,\n) {\n  const userInstance = userIntegrations.find(integration => integration.name === defaultIntegrationInstance.name);\n\n  if (userInstance) {\n    for (const [keyPath, value] of Object.entries(forcedOptions)) {\n      setNestedKey(userInstance, keyPath, value);\n    }\n\n    return userIntegrations;\n  }\n\n  return [...userIntegrations, defaultIntegrationInstance];\n}\n\nfunction addOrUpdateIntegrationInFunction(\n  defaultIntegrationInstance,\n  userIntegrationsFunc,\n  forcedOptions,\n) {\n  const wrapper = defaultIntegrations => {\n    const userFinalIntegrations = userIntegrationsFunc(defaultIntegrations);\n\n    // There are instances where we want the user to be able to prevent an integration from appearing at all, which they\n    // would do by providing a function which filters out the integration in question. If that's happened in one of\n    // those cases, don't add our default back in.\n    if (defaultIntegrationInstance.allowExclusionByUser) {\n      const userFinalInstance = userFinalIntegrations.find(\n        integration => integration.name === defaultIntegrationInstance.name,\n      );\n      if (!userFinalInstance) {\n        return userFinalIntegrations;\n      }\n    }\n\n    return addOrUpdateIntegrationInArray(defaultIntegrationInstance, userFinalIntegrations, forcedOptions);\n  };\n\n  return wrapper;\n}\n\n\n//# sourceMappingURL=userIntegrations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91c2VySW50ZWdyYXRpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2NvbW1vbi91c2VySW50ZWdyYXRpb25zLmpzPzkzMjgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWN1cnNpdmVseSB0cmF2ZXJzZXMgYW4gb2JqZWN0IHRvIHVwZGF0ZSBhbiBleGlzdGluZyBuZXN0ZWQga2V5LlxuICogTm90ZTogVGhlIHByb3ZpZGVkIGtleSBwYXRoIG11c3QgaW5jbHVkZSBleGlzdGluZyBwcm9wZXJ0aWVzLFxuICogdGhlIGZ1bmN0aW9uIHdpbGwgbm90IGNyZWF0ZSBvYmplY3RzIHdoaWxlIHRyYXZlcnNpbmcuXG4gKlxuICogQHBhcmFtIG9iaiBBbiBvYmplY3QgdG8gdXBkYXRlXG4gKiBAcGFyYW0gdmFsdWUgVGhlIHZhbHVlIHRvIHVwZGF0ZSB0aGUgbmVzdGVkIGtleSB3aXRoXG4gKiBAcGFyYW0ga2V5UGF0aCBUaGUgcGF0aCB0byB0aGUga2V5IHRvIHVwZGF0ZSBleC4gZml6ei5idXp6LmZvb1xuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gc2V0TmVzdGVkS2V5KG9iaiwga2V5UGF0aCwgdmFsdWUpIHtcbiAgLy8gRXguIGZvby5iYXIuem9vcCB3aWxsIGV4dHJhY3QgZm9vIGFuZCBiYXIuem9vcFxuICBjb25zdCBtYXRjaCA9IGtleVBhdGgubWF0Y2goLyhbYS16X10rKVxcLiguKikvaSk7XG4gIC8vIFRoZSBtYXRjaCB3aWxsIGJlIG51bGwgd2hlbiB0aGVyZSdzIG5vIG1vcmUgcmVjdXJzaW5nIHRvIGRvLCBpLmUuLCB3aGVuIHdlJ3ZlIHJlYWNoZWQgdGhlIHJpZ2h0IGxldmVsIG9mIHRoZSBvYmplY3RcbiAgaWYgKG1hdGNoID09PSBudWxsKSB7XG4gICAgb2JqW2tleVBhdGhdID0gdmFsdWU7XG4gIH0gZWxzZSB7XG4gICAgLy8gYG1hdGNoWzFdYCBpcyB0aGUgaW5pdGlhbCBzZWdtZW50IG9mIHRoZSBwYXRoLCBhbmQgYG1hdGNoWzJdYCBpcyB0aGUgcmVtYWluZGVyIG9mIHRoZSBwYXRoXG4gICAgY29uc3QgaW5uZXJPYmogPSBvYmpbbWF0Y2hbMV1dO1xuICAgIHNldE5lc3RlZEtleShpbm5lck9iaiwgbWF0Y2hbMl0sIHZhbHVlKTtcbiAgfVxufVxuXG4vKipcbiAqIEVuZm9yY2VzIGluY2x1c2lvbiBvZiBhIGdpdmVuIGludGVncmF0aW9uIHdpdGggc3BlY2lmaWVkIG9wdGlvbnMgaW4gYW4gaW50ZWdyYXRpb24gYXJyYXkgb3JpZ2luYWxseSBkZXRlcm1pbmVkIGJ5IHRoZVxuICogdXNlciwgYnkgZWl0aGVyIGluY2x1ZGluZyB0aGUgZ2l2ZW4gZGVmYXVsdCBpbnN0YW5jZSBvciBieSBwYXRjaGluZyBhbiBleGlzdGluZyB1c2VyIGluc3RhbmNlIHdpdGggdGhlIGdpdmVuIG9wdGlvbnMuXG4gKlxuICogSWRlYWxseSB0aGlzIHdvdWxkIGhhcHBlbiB3aGVuIGludGVncmF0aW9ucyBhcmUgc2V0IHVwLCBidXQgdGhlcmUgaXNuJ3QgY3VycmVudGx5IGEgbWVjaGFuaXNtIHRoZXJlIGZvciBtZXJnaW5nXG4gKiBvcHRpb25zIGZyb20gYSBkZWZhdWx0IGludGVncmF0aW9uIGluc3RhbmNlIHdpdGggdGhvc2UgZnJvbSBhIHVzZXItcHJvdmlkZWQgaW5zdGFuY2Ugb2YgdGhlIHNhbWUgaW50ZWdyYXRpb24sIG9ubHlcbiAqIGZvciBhbGxvd2luZyB0aGUgdXNlciB0byBvdmVycmlkZSBhIGRlZmF1bHQgaW5zdGFuY2UgZW50aXJlbHkuIChUT0RPOiBGaXggdGhhdC4pXG4gKlxuICogQHBhcmFtIGRlZmF1bHRJbnRlZ3JhdGlvbkluc3RhbmNlIEFuIGluc3RhbmNlIG9mIHRoZSBpbnRlZ3JhdGlvbiB3aXRoIHRoZSBjb3JyZWN0IG9wdGlvbnMgYWxyZWFkeSBzZXRcbiAqIEBwYXJhbSB1c2VySW50ZWdyYXRpb25zIEludGVncmF0aW9ucyBkZWZpbmVkIGJ5IHRoZSB1c2VyLlxuICogQHBhcmFtIGZvcmNlZE9wdGlvbnMgT3B0aW9ucyB3aXRoIHdoaWNoIHRvIHBhdGNoIGFuIGV4aXN0aW5nIHVzZXItZGVyaXZlZCBpbnN0YW5jZSBvbiB0aGUgaW50ZWdyYXRpb24uXG4gKiBAcmV0dXJucyBBIGZpbmFsIGludGVncmF0aW9ucyBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYWRkT3JVcGRhdGVJbnRlZ3JhdGlvbihcbiAgZGVmYXVsdEludGVncmF0aW9uSW5zdGFuY2UsXG4gIHVzZXJJbnRlZ3JhdGlvbnMsXG4gIGZvcmNlZE9wdGlvbnMgPSB7fSxcbikge1xuICByZXR1cm4gKFxuICAgIEFycmF5LmlzQXJyYXkodXNlckludGVncmF0aW9ucylcbiAgICAgID8gYWRkT3JVcGRhdGVJbnRlZ3JhdGlvbkluQXJyYXkoZGVmYXVsdEludGVncmF0aW9uSW5zdGFuY2UsIHVzZXJJbnRlZ3JhdGlvbnMsIGZvcmNlZE9wdGlvbnMpXG4gICAgICA6IGFkZE9yVXBkYXRlSW50ZWdyYXRpb25JbkZ1bmN0aW9uKFxuICAgICAgICAgIGRlZmF1bHRJbnRlZ3JhdGlvbkluc3RhbmNlLFxuICAgICAgICAgIC8vIFNvbWVob3cgVFMgY2FuJ3QgZmlndXJlIG91dCB0aGF0IG5vdCBiZWluZyBhbiBhcnJheSBtYWtlcyB0aGlzIG5lY2Vzc2FyaWx5IGEgZnVuY3Rpb25cbiAgICAgICAgICB1c2VySW50ZWdyYXRpb25zICxcbiAgICAgICAgICBmb3JjZWRPcHRpb25zLFxuICAgICAgICApXG4gICkgO1xufVxuXG5mdW5jdGlvbiBhZGRPclVwZGF0ZUludGVncmF0aW9uSW5BcnJheShcbiAgZGVmYXVsdEludGVncmF0aW9uSW5zdGFuY2UsXG4gIHVzZXJJbnRlZ3JhdGlvbnMsXG4gIGZvcmNlZE9wdGlvbnMsXG4pIHtcbiAgY29uc3QgdXNlckluc3RhbmNlID0gdXNlckludGVncmF0aW9ucy5maW5kKGludGVncmF0aW9uID0+IGludGVncmF0aW9uLm5hbWUgPT09IGRlZmF1bHRJbnRlZ3JhdGlvbkluc3RhbmNlLm5hbWUpO1xuXG4gIGlmICh1c2VySW5zdGFuY2UpIHtcbiAgICBmb3IgKGNvbnN0IFtrZXlQYXRoLCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZm9yY2VkT3B0aW9ucykpIHtcbiAgICAgIHNldE5lc3RlZEtleSh1c2VySW5zdGFuY2UsIGtleVBhdGgsIHZhbHVlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdXNlckludGVncmF0aW9ucztcbiAgfVxuXG4gIHJldHVybiBbLi4udXNlckludGVncmF0aW9ucywgZGVmYXVsdEludGVncmF0aW9uSW5zdGFuY2VdO1xufVxuXG5mdW5jdGlvbiBhZGRPclVwZGF0ZUludGVncmF0aW9uSW5GdW5jdGlvbihcbiAgZGVmYXVsdEludGVncmF0aW9uSW5zdGFuY2UsXG4gIHVzZXJJbnRlZ3JhdGlvbnNGdW5jLFxuICBmb3JjZWRPcHRpb25zLFxuKSB7XG4gIGNvbnN0IHdyYXBwZXIgPSBkZWZhdWx0SW50ZWdyYXRpb25zID0+IHtcbiAgICBjb25zdCB1c2VyRmluYWxJbnRlZ3JhdGlvbnMgPSB1c2VySW50ZWdyYXRpb25zRnVuYyhkZWZhdWx0SW50ZWdyYXRpb25zKTtcblxuICAgIC8vIFRoZXJlIGFyZSBpbnN0YW5jZXMgd2hlcmUgd2Ugd2FudCB0aGUgdXNlciB0byBiZSBhYmxlIHRvIHByZXZlbnQgYW4gaW50ZWdyYXRpb24gZnJvbSBhcHBlYXJpbmcgYXQgYWxsLCB3aGljaCB0aGV5XG4gICAgLy8gd291bGQgZG8gYnkgcHJvdmlkaW5nIGEgZnVuY3Rpb24gd2hpY2ggZmlsdGVycyBvdXQgdGhlIGludGVncmF0aW9uIGluIHF1ZXN0aW9uLiBJZiB0aGF0J3MgaGFwcGVuZWQgaW4gb25lIG9mXG4gICAgLy8gdGhvc2UgY2FzZXMsIGRvbid0IGFkZCBvdXIgZGVmYXVsdCBiYWNrIGluLlxuICAgIGlmIChkZWZhdWx0SW50ZWdyYXRpb25JbnN0YW5jZS5hbGxvd0V4Y2x1c2lvbkJ5VXNlcikge1xuICAgICAgY29uc3QgdXNlckZpbmFsSW5zdGFuY2UgPSB1c2VyRmluYWxJbnRlZ3JhdGlvbnMuZmluZChcbiAgICAgICAgaW50ZWdyYXRpb24gPT4gaW50ZWdyYXRpb24ubmFtZSA9PT0gZGVmYXVsdEludGVncmF0aW9uSW5zdGFuY2UubmFtZSxcbiAgICAgICk7XG4gICAgICBpZiAoIXVzZXJGaW5hbEluc3RhbmNlKSB7XG4gICAgICAgIHJldHVybiB1c2VyRmluYWxJbnRlZ3JhdGlvbnM7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGFkZE9yVXBkYXRlSW50ZWdyYXRpb25JbkFycmF5KGRlZmF1bHRJbnRlZ3JhdGlvbkluc3RhbmNlLCB1c2VyRmluYWxJbnRlZ3JhdGlvbnMsIGZvcmNlZE9wdGlvbnMpO1xuICB9O1xuXG4gIHJldHVybiB3cmFwcGVyO1xufVxuXG5leHBvcnQgeyBhZGRPclVwZGF0ZUludGVncmF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VySW50ZWdyYXRpb25zLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/common/userIntegrations.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/nextjs/esm/index.client.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/nextjs/esm/index.client.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BrowserTracing\": function() { return /* reexport safe */ _sentry_tracing__WEBPACK_IMPORTED_MODULE_10__.BrowserTracing; },\n/* harmony export */   \"Integrations\": function() { return /* reexport safe */ _sentry_react__WEBPACK_IMPORTED_MODULE_9__.Integrations; },\n/* harmony export */   \"_SENTRY_SDK_MULTIPLEXER\": function() { return /* binding */ _SENTRY_SDK_MULTIPLEXER; },\n/* harmony export */   \"captureUnderscoreErrorException\": function() { return /* reexport safe */ _common_error_js__WEBPACK_IMPORTED_MODULE_2__.captureUnderscoreErrorException; },\n/* harmony export */   \"init\": function() { return /* reexport safe */ _client_index_js__WEBPACK_IMPORTED_MODULE_0__.init; },\n/* harmony export */   \"nextRouterInstrumentation\": function() { return /* reexport safe */ _client_performance_js__WEBPACK_IMPORTED_MODULE_1__.nextRouterInstrumentation; },\n/* harmony export */   \"withSentryGetServerSideProps\": function() { return /* reexport safe */ _client_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__.withSentryGetServerSideProps; },\n/* harmony export */   \"withSentryGetStaticProps\": function() { return /* reexport safe */ _client_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__.withSentryGetStaticProps; },\n/* harmony export */   \"withSentryServerSideAppGetInitialProps\": function() { return /* reexport safe */ _client_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__.withSentryServerSideAppGetInitialProps; },\n/* harmony export */   \"withSentryServerSideDocumentGetInitialProps\": function() { return /* reexport safe */ _client_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__.withSentryServerSideDocumentGetInitialProps; },\n/* harmony export */   \"withSentryServerSideErrorGetInitialProps\": function() { return /* reexport safe */ _client_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__.withSentryServerSideErrorGetInitialProps; },\n/* harmony export */   \"withSentryServerSideGetInitialProps\": function() { return /* reexport safe */ _client_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__.withSentryServerSideGetInitialProps; },\n/* harmony export */   \"wrapAppGetInitialPropsWithSentry\": function() { return /* reexport safe */ _client_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__.wrapAppGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapDocumentGetInitialPropsWithSentry\": function() { return /* reexport safe */ _client_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__.wrapDocumentGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapErrorGetInitialPropsWithSentry\": function() { return /* reexport safe */ _client_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__.wrapErrorGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGetInitialPropsWithSentry\": function() { return /* reexport safe */ _client_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__.wrapGetInitialPropsWithSentry; },\n/* harmony export */   \"wrapGetServerSidePropsWithSentry\": function() { return /* reexport safe */ _client_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__.wrapGetServerSidePropsWithSentry; },\n/* harmony export */   \"wrapGetStaticPropsWithSentry\": function() { return /* reexport safe */ _client_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__.wrapGetStaticPropsWithSentry; }\n/* harmony export */ });\n/* harmony import */ var _client_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./client/index.js */ \"./node_modules/@sentry/nextjs/esm/client/index.js\");\n/* harmony import */ var _client_performance_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client/performance.js */ \"./node_modules/@sentry/nextjs/esm/client/performance.js\");\n/* harmony import */ var _common_error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/_error.js */ \"./node_modules/@sentry/nextjs/esm/common/_error.js\");\n/* harmony import */ var _client_wrapGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client/wrapGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapGetInitialPropsWithSentry.js\");\n/* harmony import */ var _client_wrapAppGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./client/wrapAppGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapAppGetInitialPropsWithSentry.js\");\n/* harmony import */ var _client_wrapDocumentGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./client/wrapDocumentGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapDocumentGetInitialPropsWithSentry.js\");\n/* harmony import */ var _client_wrapErrorGetInitialPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./client/wrapErrorGetInitialPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapErrorGetInitialPropsWithSentry.js\");\n/* harmony import */ var _client_wrapGetServerSidePropsWithSentry_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./client/wrapGetServerSidePropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapGetServerSidePropsWithSentry.js\");\n/* harmony import */ var _client_wrapGetStaticPropsWithSentry_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./client/wrapGetStaticPropsWithSentry.js */ \"./node_modules/@sentry/nextjs/esm/client/wrapGetStaticPropsWithSentry.js\");\n/* harmony import */ var _sentry_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/react */ \"./node_modules/@sentry/react/esm/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sentry_react__WEBPACK_IMPORTED_MODULE_9__) if([\"default\",\"init\",\"nextRouterInstrumentation\",\"captureUnderscoreErrorException\",\"withSentryServerSideGetInitialProps\",\"wrapGetInitialPropsWithSentry\",\"withSentryServerSideAppGetInitialProps\",\"wrapAppGetInitialPropsWithSentry\",\"withSentryServerSideDocumentGetInitialProps\",\"wrapDocumentGetInitialPropsWithSentry\",\"withSentryServerSideErrorGetInitialProps\",\"wrapErrorGetInitialPropsWithSentry\",\"withSentryGetServerSideProps\",\"wrapGetServerSidePropsWithSentry\",\"withSentryGetStaticProps\",\"wrapGetStaticPropsWithSentry\",\"Integrations\",\"BrowserTracing\",\"_SENTRY_SDK_MULTIPLEXER\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _sentry_react__WEBPACK_IMPORTED_MODULE_9__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _sentry_tracing__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/tracing */ \"./node_modules/@sentry/tracing/esm/index.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n// This file is the main entrypoint for non-Next.js build pipelines that use\n// the package.json's \"browser\" field or the Edge runtime (Edge API routes and middleware)\n\n/**\n * This const serves no purpose besides being an identifier for this file that the SDK multiplexer loader can use to\n * determine that this is in fact a file that wants to be multiplexed.\n */\nconst _SENTRY_SDK_MULTIPLEXER = true;\n\n\n//# sourceMappingURL=index.client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9uZXh0anMvZXNtL2luZGV4LmNsaWVudC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUF5QztBQUMyQjtBQUNDO0FBQzBEO0FBQ1M7QUFDZTtBQUNUO0FBQ2hCO0FBQ1o7QUFDcEY7QUFDZTtBQUNJOztBQUVqRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW1DO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L25leHRqcy9lc20vaW5kZXguY2xpZW50LmpzP2FkZTUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgaW5pdCB9IGZyb20gJy4vY2xpZW50L2luZGV4LmpzJztcbmV4cG9ydCB7IG5leHRSb3V0ZXJJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL2NsaWVudC9wZXJmb3JtYW5jZS5qcyc7XG5leHBvcnQgeyBjYXB0dXJlVW5kZXJzY29yZUVycm9yRXhjZXB0aW9uIH0gZnJvbSAnLi9jb21tb24vX2Vycm9yLmpzJztcbmV4cG9ydCB7IHdpdGhTZW50cnlTZXJ2ZXJTaWRlR2V0SW5pdGlhbFByb3BzLCB3cmFwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9IGZyb20gJy4vY2xpZW50L3dyYXBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdpdGhTZW50cnlTZXJ2ZXJTaWRlQXBwR2V0SW5pdGlhbFByb3BzLCB3cmFwQXBwR2V0SW5pdGlhbFByb3BzV2l0aFNlbnRyeSB9IGZyb20gJy4vY2xpZW50L3dyYXBBcHBHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdpdGhTZW50cnlTZXJ2ZXJTaWRlRG9jdW1lbnRHZXRJbml0aWFsUHJvcHMsIHdyYXBEb2N1bWVudEdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkgfSBmcm9tICcuL2NsaWVudC93cmFwRG9jdW1lbnRHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdpdGhTZW50cnlTZXJ2ZXJTaWRlRXJyb3JHZXRJbml0aWFsUHJvcHMsIHdyYXBFcnJvckdldEluaXRpYWxQcm9wc1dpdGhTZW50cnkgfSBmcm9tICcuL2NsaWVudC93cmFwRXJyb3JHZXRJbml0aWFsUHJvcHNXaXRoU2VudHJ5LmpzJztcbmV4cG9ydCB7IHdpdGhTZW50cnlHZXRTZXJ2ZXJTaWRlUHJvcHMsIHdyYXBHZXRTZXJ2ZXJTaWRlUHJvcHNXaXRoU2VudHJ5IH0gZnJvbSAnLi9jbGllbnQvd3JhcEdldFNlcnZlclNpZGVQcm9wc1dpdGhTZW50cnkuanMnO1xuZXhwb3J0IHsgd2l0aFNlbnRyeUdldFN0YXRpY1Byb3BzLCB3cmFwR2V0U3RhdGljUHJvcHNXaXRoU2VudHJ5IH0gZnJvbSAnLi9jbGllbnQvd3JhcEdldFN0YXRpY1Byb3BzV2l0aFNlbnRyeS5qcyc7XG5leHBvcnQgKiBmcm9tICdAc2VudHJ5L3JlYWN0JztcbmV4cG9ydCB7IEludGVncmF0aW9ucyB9IGZyb20gJ0BzZW50cnkvcmVhY3QnO1xuZXhwb3J0IHsgQnJvd3NlclRyYWNpbmcgfSBmcm9tICdAc2VudHJ5L3RyYWNpbmcnO1xuXG4vLyBUaGlzIGZpbGUgaXMgdGhlIG1haW4gZW50cnlwb2ludCBmb3Igbm9uLU5leHQuanMgYnVpbGQgcGlwZWxpbmVzIHRoYXQgdXNlXG4vLyB0aGUgcGFja2FnZS5qc29uJ3MgXCJicm93c2VyXCIgZmllbGQgb3IgdGhlIEVkZ2UgcnVudGltZSAoRWRnZSBBUEkgcm91dGVzIGFuZCBtaWRkbGV3YXJlKVxuXG4vKipcbiAqIFRoaXMgY29uc3Qgc2VydmVzIG5vIHB1cnBvc2UgYmVzaWRlcyBiZWluZyBhbiBpZGVudGlmaWVyIGZvciB0aGlzIGZpbGUgdGhhdCB0aGUgU0RLIG11bHRpcGxleGVyIGxvYWRlciBjYW4gdXNlIHRvXG4gKiBkZXRlcm1pbmUgdGhhdCB0aGlzIGlzIGluIGZhY3QgYSBmaWxlIHRoYXQgd2FudHMgdG8gYmUgbXVsdGlwbGV4ZWQuXG4gKi9cbmNvbnN0IF9TRU5UUllfU0RLX01VTFRJUExFWEVSID0gdHJ1ZTtcblxuZXhwb3J0IHsgX1NFTlRSWV9TREtfTVVMVElQTEVYRVIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmNsaWVudC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/nextjs/esm/index.client.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/react/esm/constants.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"REACT_MOUNT_OP\": function() { return /* binding */ REACT_MOUNT_OP; },\n/* harmony export */   \"REACT_RENDER_OP\": function() { return /* binding */ REACT_RENDER_OP; },\n/* harmony export */   \"REACT_UPDATE_OP\": function() { return /* binding */ REACT_UPDATE_OP; }\n/* harmony export */ });\nconst REACT_RENDER_OP = 'ui.react.render';\n\nconst REACT_UPDATE_OP = 'ui.react.update';\n\nconst REACT_MOUNT_OP = 'ui.react.mount';\n\n\n//# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vY29uc3RhbnRzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBOztBQUVBOztBQUU0RDtBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vY29uc3RhbnRzLmpzP2VlOTUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUkVBQ1RfUkVOREVSX09QID0gJ3VpLnJlYWN0LnJlbmRlcic7XG5cbmNvbnN0IFJFQUNUX1VQREFURV9PUCA9ICd1aS5yZWFjdC51cGRhdGUnO1xuXG5jb25zdCBSRUFDVF9NT1VOVF9PUCA9ICd1aS5yZWFjdC5tb3VudCc7XG5cbmV4cG9ydCB7IFJFQUNUX01PVU5UX09QLCBSRUFDVF9SRU5ERVJfT1AsIFJFQUNUX1VQREFURV9PUCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/constants.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/errorboundary.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/react/esm/errorboundary.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ErrorBoundary\": function() { return /* binding */ ErrorBoundary; },\n/* harmony export */   \"UNKNOWN_COMPONENT\": function() { return /* binding */ UNKNOWN_COMPONENT; },\n/* harmony export */   \"isAtLeastReact17\": function() { return /* binding */ isAtLeastReact17; },\n/* harmony export */   \"withErrorBoundary\": function() { return /* binding */ withErrorBoundary; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/errorboundary.tsx\";\n\nfunction isAtLeastReact17(version) {\n  const major = version.match(/^([^.]+)/);\n  return major !== null && parseInt(major[0]) >= 17;\n}\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\nconst INITIAL_STATE = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\n/**\n * A ErrorBoundary component that logs errors to Sentry. Requires React >= 16.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends react__WEBPACK_IMPORTED_MODULE_1__.Component {constructor(...args) { super(...args); ErrorBoundary.prototype.__init.call(this);ErrorBoundary.prototype.__init2.call(this); }\n   __init() {this.state = INITIAL_STATE;}\n\n   componentDidCatch(error, { componentStack }) {\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n\n    (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_2__.withScope)(scope => {\n      // If on React version >= 17, create stack trace from componentStack param and links\n      // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n      // Linking errors requires the `LinkedErrors` integration be enabled.\n      // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n      //\n      // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n      // with non-error objects. This is why we need to check if the error is an error-like object.\n      // See: https://github.com/getsentry/sentry-javascript/issues/6167\n      if (isAtLeastReact17(react__WEBPACK_IMPORTED_MODULE_1__.version) && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isError)(error)) {\n        const errorBoundaryError = new Error(error.message);\n        errorBoundaryError.name = `React ErrorBoundary ${errorBoundaryError.name}`;\n        errorBoundaryError.stack = componentStack;\n\n        // Using the `LinkedErrors` integration to link the errors together.\n        error.cause = errorBoundaryError;\n      }\n\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n      const eventId = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_2__.captureException)(error, { contexts: { react: { componentStack } } });\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_2__.showReportDialog)({ ...dialogOptions, eventId });\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n   componentDidMount() {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n   componentWillUnmount() {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      onUnmount(error, componentStack, eventId);\n    }\n  }\n\n   __init2() {this.resetErrorBoundary = () => {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      onReset(error, componentStack, eventId);\n    }\n    this.setState(INITIAL_STATE);\n  };}\n\n   render() {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    if (state.error) {\n      let element = undefined;\n      if (typeof fallback === 'function') {\n        element = fallback({\n          error: state.error,\n          componentStack: state.componentStack,\n          resetError: this.resetErrorBoundary,\n          eventId: state.eventId,\n        });\n      } else {\n        element = fallback;\n      }\n\n      if (react__WEBPACK_IMPORTED_MODULE_1__.isValidElement(element)) {\n        return element;\n      }\n\n      if (fallback) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn('fallback did not produce a valid ReactElement');\n      }\n\n      // Fail gracefully if no fallback provided or is not valid\n      return null;\n    }\n\n    if (typeof children === 'function') {\n      return (children )();\n    }\n    return children;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary(\n  WrappedComponent,\n  errorBoundaryOptions,\n) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    react__WEBPACK_IMPORTED_MODULE_1__.createElement(ErrorBoundary, { ...errorBoundaryOptions, __self: this, __source: {fileName: _jsxFileName, lineNumber: 185}}\n      , react__WEBPACK_IMPORTED_MODULE_1__.createElement(WrappedComponent, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 186}} )\n    )\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default()(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n\n//# sourceMappingURL=errorboundary.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/errorboundary.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/react/esm/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ErrorBoundary\": function() { return /* reexport safe */ _errorboundary_js__WEBPACK_IMPORTED_MODULE_3__.ErrorBoundary; },\n/* harmony export */   \"Profiler\": function() { return /* reexport safe */ _profiler_js__WEBPACK_IMPORTED_MODULE_2__.Profiler; },\n/* harmony export */   \"createReduxEnhancer\": function() { return /* reexport safe */ _redux_js__WEBPACK_IMPORTED_MODULE_4__.createReduxEnhancer; },\n/* harmony export */   \"init\": function() { return /* reexport safe */ _sdk_js__WEBPACK_IMPORTED_MODULE_1__.init; },\n/* harmony export */   \"reactRouterV3Instrumentation\": function() { return /* reexport safe */ _reactrouterv3_js__WEBPACK_IMPORTED_MODULE_5__.reactRouterV3Instrumentation; },\n/* harmony export */   \"reactRouterV4Instrumentation\": function() { return /* reexport safe */ _reactrouter_js__WEBPACK_IMPORTED_MODULE_6__.reactRouterV4Instrumentation; },\n/* harmony export */   \"reactRouterV5Instrumentation\": function() { return /* reexport safe */ _reactrouter_js__WEBPACK_IMPORTED_MODULE_6__.reactRouterV5Instrumentation; },\n/* harmony export */   \"reactRouterV6Instrumentation\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_7__.reactRouterV6Instrumentation; },\n/* harmony export */   \"useProfiler\": function() { return /* reexport safe */ _profiler_js__WEBPACK_IMPORTED_MODULE_2__.useProfiler; },\n/* harmony export */   \"withErrorBoundary\": function() { return /* reexport safe */ _errorboundary_js__WEBPACK_IMPORTED_MODULE_3__.withErrorBoundary; },\n/* harmony export */   \"withProfiler\": function() { return /* reexport safe */ _profiler_js__WEBPACK_IMPORTED_MODULE_2__.withProfiler; },\n/* harmony export */   \"withSentryReactRouterV6Routing\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_7__.withSentryReactRouterV6Routing; },\n/* harmony export */   \"withSentryRouting\": function() { return /* reexport safe */ _reactrouter_js__WEBPACK_IMPORTED_MODULE_6__.withSentryRouting; },\n/* harmony export */   \"wrapCreateBrowserRouter\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_7__.wrapCreateBrowserRouter; },\n/* harmony export */   \"wrapUseRoutes\": function() { return /* reexport safe */ _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_7__.wrapUseRoutes; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _sentry_browser__WEBPACK_IMPORTED_MODULE_0__) if([\"default\",\"init\",\"Profiler\",\"useProfiler\",\"withProfiler\",\"ErrorBoundary\",\"withErrorBoundary\",\"createReduxEnhancer\",\"reactRouterV3Instrumentation\",\"reactRouterV4Instrumentation\",\"reactRouterV5Instrumentation\",\"withSentryRouting\",\"reactRouterV6Instrumentation\",\"withSentryReactRouterV6Routing\",\"wrapCreateBrowserRouter\",\"wrapUseRoutes\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = function(key) { return _sentry_browser__WEBPACK_IMPORTED_MODULE_0__[key]; }.bind(0, __WEBPACK_IMPORT_KEY__)\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _sdk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sdk.js */ \"./node_modules/@sentry/react/esm/sdk.js\");\n/* harmony import */ var _profiler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./profiler.js */ \"./node_modules/@sentry/react/esm/profiler.js\");\n/* harmony import */ var _errorboundary_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errorboundary.js */ \"./node_modules/@sentry/react/esm/errorboundary.js\");\n/* harmony import */ var _redux_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./redux.js */ \"./node_modules/@sentry/react/esm/redux.js\");\n/* harmony import */ var _reactrouterv3_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./reactrouterv3.js */ \"./node_modules/@sentry/react/esm/reactrouterv3.js\");\n/* harmony import */ var _reactrouter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reactrouter.js */ \"./node_modules/@sentry/react/esm/reactrouter.js\");\n/* harmony import */ var _reactrouterv6_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reactrouterv6.js */ \"./node_modules/@sentry/react/esm/reactrouterv6.js\");\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDQTtBQUNvQztBQUNFO0FBQ3JCO0FBQ2lCO0FBQytDO0FBQ3lCO0FBQzFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3JlYWN0L2VzbS9pbmRleC5qcz9lNmNjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJ0BzZW50cnkvYnJvd3Nlcic7XG5leHBvcnQgeyBpbml0IH0gZnJvbSAnLi9zZGsuanMnO1xuZXhwb3J0IHsgUHJvZmlsZXIsIHVzZVByb2ZpbGVyLCB3aXRoUHJvZmlsZXIgfSBmcm9tICcuL3Byb2ZpbGVyLmpzJztcbmV4cG9ydCB7IEVycm9yQm91bmRhcnksIHdpdGhFcnJvckJvdW5kYXJ5IH0gZnJvbSAnLi9lcnJvcmJvdW5kYXJ5LmpzJztcbmV4cG9ydCB7IGNyZWF0ZVJlZHV4RW5oYW5jZXIgfSBmcm9tICcuL3JlZHV4LmpzJztcbmV4cG9ydCB7IHJlYWN0Um91dGVyVjNJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL3JlYWN0cm91dGVydjMuanMnO1xuZXhwb3J0IHsgcmVhY3RSb3V0ZXJWNEluc3RydW1lbnRhdGlvbiwgcmVhY3RSb3V0ZXJWNUluc3RydW1lbnRhdGlvbiwgd2l0aFNlbnRyeVJvdXRpbmcgfSBmcm9tICcuL3JlYWN0cm91dGVyLmpzJztcbmV4cG9ydCB7IHJlYWN0Um91dGVyVjZJbnN0cnVtZW50YXRpb24sIHdpdGhTZW50cnlSZWFjdFJvdXRlclY2Um91dGluZywgd3JhcENyZWF0ZUJyb3dzZXJSb3V0ZXIsIHdyYXBVc2VSb3V0ZXMgfSBmcm9tICcuL3JlYWN0cm91dGVydjYuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/profiler.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/react/esm/profiler.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Profiler\": function() { return /* binding */ Profiler; },\n/* harmony export */   \"UNKNOWN_COMPONENT\": function() { return /* binding */ UNKNOWN_COMPONENT; },\n/* harmony export */   \"getActiveTransaction\": function() { return /* binding */ getActiveTransaction; },\n/* harmony export */   \"useProfiler\": function() { return /* binding */ useProfiler; },\n/* harmony export */   \"withProfiler\": function() { return /* binding */ withProfiler; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"./node_modules/@sentry/react/esm/constants.js\");\n\n\n\n\n\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/profiler.tsx\";\n\nconst UNKNOWN_COMPONENT = 'unknown';\n\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nclass Profiler extends react__WEBPACK_IMPORTED_MODULE_1__.Component {\n  /**\n   * The span of the mount activity\n   * Made protected for the React Native SDK to access\n   */\n   __init() {this._mountSpan = undefined;}\n  /**\n   * The span that represents the duration of time between shouldComponentUpdate and componentDidUpdate\n   */\n   __init2() {this._updateSpan = undefined;}\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n   static __initStatic() {this.defaultProps = {\n    disabled: false,\n    includeRender: true,\n    includeUpdates: true,\n  };}\n\n   constructor(props) {\n    super(props);Profiler.prototype.__init.call(this);Profiler.prototype.__init2.call(this);    const { name, disabled = false } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    const activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n      this._mountSpan = activeTransaction.startChild({\n        description: `<${name}>`,\n        op: _constants_js__WEBPACK_IMPORTED_MODULE_2__.REACT_MOUNT_OP,\n      });\n    }\n  }\n\n  // If a component mounted, we can finish the mount activity.\n   componentDidMount() {\n    if (this._mountSpan) {\n      this._mountSpan.finish();\n    }\n  }\n\n   shouldComponentUpdate({ updateProps, includeUpdates = true }) {\n    // Only generate an update span if includeUpdates is true, if there is a valid mountSpan,\n    // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n    // We are just trying to give baseline clues for further investigation.\n    if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n      // See what props haved changed between the previous props, and the current props. This is\n      // set as data on the span. We just store the prop keys as the values could be potenially very large.\n      const changedProps = Object.keys(updateProps).filter(k => updateProps[k] !== this.props.updateProps[k]);\n      if (changedProps.length > 0) {\n        const now = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.timestampWithMs)();\n        this._updateSpan = this._mountSpan.startChild({\n          data: {\n            changedProps,\n          },\n          description: `<${this.props.name}>`,\n          op: _constants_js__WEBPACK_IMPORTED_MODULE_2__.REACT_UPDATE_OP,\n          startTimestamp: now,\n        });\n      }\n    }\n\n    return true;\n  }\n\n   componentDidUpdate() {\n    if (this._updateSpan) {\n      this._updateSpan.finish();\n      this._updateSpan = undefined;\n    }\n  }\n\n  // If a component is unmounted, we can say it is no longer on the screen.\n  // This means we can finish the span representing the component render.\n   componentWillUnmount() {\n    const { name, includeRender = true } = this.props;\n\n    if (this._mountSpan && includeRender) {\n      // If we were able to obtain the spanId of the mount activity, we should set the\n      // next activity as a child to the component mount activity.\n      this._mountSpan.startChild({\n        description: `<${name}>`,\n        endTimestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.timestampWithMs)(),\n        op: _constants_js__WEBPACK_IMPORTED_MODULE_2__.REACT_RENDER_OP,\n        startTimestamp: this._mountSpan.endTimestamp,\n      });\n    }\n  }\n\n   render() {\n    return this.props.children;\n  }\n} Profiler.__initStatic();\n\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\nfunction withProfiler(\n  WrappedComponent,\n  // We do not want to have `updateProps` given in options, it is instead filled through the HOC.\n  options,\n) {\n  const componentDisplayName =\n    (options && options.name) || WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped = (props) => (\n    react__WEBPACK_IMPORTED_MODULE_1__.createElement(Profiler, { ...options, name: componentDisplayName, updateProps: props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 146}}\n      , react__WEBPACK_IMPORTED_MODULE_1__.createElement(WrappedComponent, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 147}} )\n    )\n  );\n\n  Wrapped.displayName = `profiler(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default()(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(\n  name,\n  options = {\n    disabled: false,\n    hasRenderSpan: true,\n  },\n) {\n  const [mountSpan] = react__WEBPACK_IMPORTED_MODULE_1__.useState(() => {\n    if (options && options.disabled) {\n      return undefined;\n    }\n\n    const activeTransaction = getActiveTransaction();\n    if (activeTransaction) {\n      return activeTransaction.startChild({\n        description: `<${name}>`,\n        op: _constants_js__WEBPACK_IMPORTED_MODULE_2__.REACT_MOUNT_OP,\n      });\n    }\n\n    return undefined;\n  });\n\n  react__WEBPACK_IMPORTED_MODULE_1__.useEffect(() => {\n    if (mountSpan) {\n      mountSpan.finish();\n    }\n\n    return () => {\n      if (mountSpan && options.hasRenderSpan) {\n        mountSpan.startChild({\n          description: `<${name}>`,\n          endTimestamp: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.timestampWithMs)(),\n          op: _constants_js__WEBPACK_IMPORTED_MODULE_2__.REACT_RENDER_OP,\n          startTimestamp: mountSpan.endTimestamp,\n        });\n      }\n    };\n    // We only want this to run once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\n/** Grabs active transaction off scope */\nfunction getActiveTransaction(hub = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_4__.getCurrentHub)()) {\n  if (hub) {\n    const scope = hub.getScope();\n    if (scope) {\n      return scope.getTransaction() ;\n    }\n  }\n\n  return undefined;\n}\n\n\n//# sourceMappingURL=profiler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/profiler.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/reactrouter.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/react/esm/reactrouter.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reactRouterV4Instrumentation\": function() { return /* binding */ reactRouterV4Instrumentation; },\n/* harmony export */   \"reactRouterV5Instrumentation\": function() { return /* binding */ reactRouterV5Instrumentation; },\n/* harmony export */   \"withSentryRouting\": function() { return /* binding */ withSentryRouting; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/reactrouter.tsx\";\n// We need to disable eslint no-explict-any because any is required for the\n// react-router typings.\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nlet activeTransaction;\n\nfunction reactRouterV4Instrumentation(\n  history,\n  routes,\n  matchPath,\n) {\n  return createReactRouterInstrumentation(history, 'react-router-v4', routes, matchPath);\n}\n\nfunction reactRouterV5Instrumentation(\n  history,\n  routes,\n  matchPath,\n) {\n  return createReactRouterInstrumentation(history, 'react-router-v5', routes, matchPath);\n}\n\nfunction createReactRouterInstrumentation(\n  history,\n  name,\n  allRoutes = [],\n  matchPath,\n) {\n  function getInitPathName() {\n    if (history && history.location) {\n      return history.location.pathname;\n    }\n\n    if (_sentry_browser__WEBPACK_IMPORTED_MODULE_2__.WINDOW && _sentry_browser__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location) {\n      return _sentry_browser__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location.pathname;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n  function normalizeTransactionName(pathname) {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      if (branches[x].match.isExact) {\n        return [branches[x].match.path, 'route'];\n      }\n    }\n\n    return [pathname, 'url'];\n  }\n\n  const tags = {\n    'routing.instrumentation': name,\n  };\n\n  return (customStartTransaction, startTransactionOnPageLoad = true, startTransactionOnLocationChange = true) => {\n    const initPathName = getInitPathName();\n    if (startTransactionOnPageLoad && initPathName) {\n      const [name, source] = normalizeTransactionName(initPathName);\n      activeTransaction = customStartTransaction({\n        name,\n        op: 'pageload',\n        tags,\n        metadata: {\n          source,\n        },\n      });\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen((location, action) => {\n        if (action && (action === 'PUSH' || action === 'POP')) {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n\n          const [name, source] = normalizeTransactionName(location.pathname);\n          activeTransaction = customStartTransaction({\n            name,\n            op: 'navigation',\n            tags,\n            metadata: {\n              source,\n            },\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes,\n  pathname,\n  matchPath,\n  branch = [],\n) {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n      ? branch[branch.length - 1].match // use parent match\n      : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname) {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nfunction withSentryRouting(Route) {\n  const componentDisplayName = (Route ).displayName || (Route ).name;\n\n  const WrappedRoute = (props) => {\n    if (activeTransaction && props && props.computedMatch && props.computedMatch.isExact) {\n      activeTransaction.setName(props.computedMatch.path, 'route');\n    }\n\n    // @ts-ignore Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(Route, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 174}} );\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default()(WrappedRoute, Route);\n  // @ts-ignore Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\n\n//# sourceMappingURL=reactrouter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/reactrouter.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/reactrouterv3.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/react/esm/reactrouterv3.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reactRouterV3Instrumentation\": function() { return /* binding */ reactRouterV3Instrumentation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\n/**\n * Creates routing instrumentation for React Router v3\n * Works for React Router >= 3.2.0 and < 4.0.0\n *\n * @param history object from the `history` library\n * @param routes a list of all routes, should be\n * @param match `Router.match` utility\n */\nfunction reactRouterV3Instrumentation(\n  history,\n  routes,\n  match,\n) {\n  return (\n    startTransaction,\n    startTransactionOnPageLoad = true,\n    startTransactionOnLocationChange = true,\n  ) => {\n    let activeTransaction;\n    let prevName;\n\n    // Have to use window.location because history.location might not be defined.\n    if (startTransactionOnPageLoad && _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location) {\n      normalizeTransactionName(\n        routes,\n        _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location ,\n        match,\n        (localName, source = 'url') => {\n          prevName = localName;\n          activeTransaction = startTransaction({\n            name: prevName,\n            op: 'pageload',\n            tags: {\n              'routing.instrumentation': 'react-router-v3',\n            },\n            metadata: {\n              source,\n            },\n          });\n        },\n      );\n    }\n\n    if (startTransactionOnLocationChange && history.listen) {\n      history.listen(location => {\n        if (location.action === 'PUSH' || location.action === 'POP') {\n          if (activeTransaction) {\n            activeTransaction.finish();\n          }\n          const tags = {\n            'routing.instrumentation': 'react-router-v3',\n          };\n          if (prevName) {\n            tags.from = prevName;\n          }\n          normalizeTransactionName(routes, location, match, (localName, source = 'url') => {\n            prevName = localName;\n            activeTransaction = startTransaction({\n              name: prevName,\n              op: 'navigation',\n              tags,\n              metadata: {\n                source,\n              },\n            });\n          });\n        }\n      });\n    }\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(\n  appRoutes,\n  location,\n  match,\n  callback,\n) {\n  let name = location.pathname;\n  match(\n    {\n      location,\n      routes: appRoutes,\n    },\n    (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n\n      name = routePath;\n      return callback(name, 'route');\n    },\n  );\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes) {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n\n  const routesWithPaths = routes.filter((route) => !!route.path);\n\n  let index = -1;\n  for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n    const route = routesWithPaths[x];\n    if (route.path && route.path.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n\n  return routesWithPaths\n    .slice(index)\n    .filter(({ path }) => !!path)\n    .map(({ path }) => path)\n    .join('');\n}\n\n\n//# sourceMappingURL=reactrouterv3.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vcmVhY3Ryb3V0ZXJ2My5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5Qzs7QUFFekM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0NBQXNDLG1EQUFNLElBQUksNERBQWU7QUFDL0Q7QUFDQTtBQUNBLFFBQVEsNERBQWU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmLGFBQWE7QUFDYixXQUFXO0FBQ1g7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsMkNBQTJDLFFBQVE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxlQUFlLE1BQU07QUFDckIsWUFBWSxNQUFNO0FBQ2xCO0FBQ0E7O0FBRXdDO0FBQ3hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3JlYWN0L2VzbS9yZWFjdHJvdXRlcnYzLmpzPzAzN2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnQHNlbnRyeS9icm93c2VyJztcblxuLy8gTWFueSBvZiB0aGUgdHlwZXMgYmVsb3cgaGFkIHRvIGJlIG1vY2tlZCBvdXQgdG8gcHJldmVudCB0eXBlc2NyaXB0IGlzc3Vlc1xuLy8gdGhlc2UgdHlwZXMgYXJlIHJlcXVpcmVkIGZvciBjb3JyZWN0IGZ1bmN0aW9uYWxpdHkuXG5cbi8qKlxuICogQ3JlYXRlcyByb3V0aW5nIGluc3RydW1lbnRhdGlvbiBmb3IgUmVhY3QgUm91dGVyIHYzXG4gKiBXb3JrcyBmb3IgUmVhY3QgUm91dGVyID49IDMuMi4wIGFuZCA8IDQuMC4wXG4gKlxuICogQHBhcmFtIGhpc3Rvcnkgb2JqZWN0IGZyb20gdGhlIGBoaXN0b3J5YCBsaWJyYXJ5XG4gKiBAcGFyYW0gcm91dGVzIGEgbGlzdCBvZiBhbGwgcm91dGVzLCBzaG91bGQgYmVcbiAqIEBwYXJhbSBtYXRjaCBgUm91dGVyLm1hdGNoYCB1dGlsaXR5XG4gKi9cbmZ1bmN0aW9uIHJlYWN0Um91dGVyVjNJbnN0cnVtZW50YXRpb24oXG4gIGhpc3RvcnksXG4gIHJvdXRlcyxcbiAgbWF0Y2gsXG4pIHtcbiAgcmV0dXJuIChcbiAgICBzdGFydFRyYW5zYWN0aW9uLFxuICAgIHN0YXJ0VHJhbnNhY3Rpb25PblBhZ2VMb2FkID0gdHJ1ZSxcbiAgICBzdGFydFRyYW5zYWN0aW9uT25Mb2NhdGlvbkNoYW5nZSA9IHRydWUsXG4gICkgPT4ge1xuICAgIGxldCBhY3RpdmVUcmFuc2FjdGlvbjtcbiAgICBsZXQgcHJldk5hbWU7XG5cbiAgICAvLyBIYXZlIHRvIHVzZSB3aW5kb3cubG9jYXRpb24gYmVjYXVzZSBoaXN0b3J5LmxvY2F0aW9uIG1pZ2h0IG5vdCBiZSBkZWZpbmVkLlxuICAgIGlmIChzdGFydFRyYW5zYWN0aW9uT25QYWdlTG9hZCAmJiBXSU5ET1cgJiYgV0lORE9XLmxvY2F0aW9uKSB7XG4gICAgICBub3JtYWxpemVUcmFuc2FjdGlvbk5hbWUoXG4gICAgICAgIHJvdXRlcyxcbiAgICAgICAgV0lORE9XLmxvY2F0aW9uICxcbiAgICAgICAgbWF0Y2gsXG4gICAgICAgIChsb2NhbE5hbWUsIHNvdXJjZSA9ICd1cmwnKSA9PiB7XG4gICAgICAgICAgcHJldk5hbWUgPSBsb2NhbE5hbWU7XG4gICAgICAgICAgYWN0aXZlVHJhbnNhY3Rpb24gPSBzdGFydFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgIG5hbWU6IHByZXZOYW1lLFxuICAgICAgICAgICAgb3A6ICdwYWdlbG9hZCcsXG4gICAgICAgICAgICB0YWdzOiB7XG4gICAgICAgICAgICAgICdyb3V0aW5nLmluc3RydW1lbnRhdGlvbic6ICdyZWFjdC1yb3V0ZXItdjMnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgICAgIHNvdXJjZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChzdGFydFRyYW5zYWN0aW9uT25Mb2NhdGlvbkNoYW5nZSAmJiBoaXN0b3J5Lmxpc3Rlbikge1xuICAgICAgaGlzdG9yeS5saXN0ZW4obG9jYXRpb24gPT4ge1xuICAgICAgICBpZiAobG9jYXRpb24uYWN0aW9uID09PSAnUFVTSCcgfHwgbG9jYXRpb24uYWN0aW9uID09PSAnUE9QJykge1xuICAgICAgICAgIGlmIChhY3RpdmVUcmFuc2FjdGlvbikge1xuICAgICAgICAgICAgYWN0aXZlVHJhbnNhY3Rpb24uZmluaXNoKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnN0IHRhZ3MgPSB7XG4gICAgICAgICAgICAncm91dGluZy5pbnN0cnVtZW50YXRpb24nOiAncmVhY3Qtcm91dGVyLXYzJyxcbiAgICAgICAgICB9O1xuICAgICAgICAgIGlmIChwcmV2TmFtZSkge1xuICAgICAgICAgICAgdGFncy5mcm9tID0gcHJldk5hbWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIG5vcm1hbGl6ZVRyYW5zYWN0aW9uTmFtZShyb3V0ZXMsIGxvY2F0aW9uLCBtYXRjaCwgKGxvY2FsTmFtZSwgc291cmNlID0gJ3VybCcpID0+IHtcbiAgICAgICAgICAgIHByZXZOYW1lID0gbG9jYWxOYW1lO1xuICAgICAgICAgICAgYWN0aXZlVHJhbnNhY3Rpb24gPSBzdGFydFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICAgICAgbmFtZTogcHJldk5hbWUsXG4gICAgICAgICAgICAgIG9wOiAnbmF2aWdhdGlvbicsXG4gICAgICAgICAgICAgIHRhZ3MsXG4gICAgICAgICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgICAgICAgc291cmNlLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiBOb3JtYWxpemUgdHJhbnNhY3Rpb24gbmFtZXMgdXNpbmcgYFJvdXRlci5tYXRjaGBcbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplVHJhbnNhY3Rpb25OYW1lKFxuICBhcHBSb3V0ZXMsXG4gIGxvY2F0aW9uLFxuICBtYXRjaCxcbiAgY2FsbGJhY2ssXG4pIHtcbiAgbGV0IG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZTtcbiAgbWF0Y2goXG4gICAge1xuICAgICAgbG9jYXRpb24sXG4gICAgICByb3V0ZXM6IGFwcFJvdXRlcyxcbiAgICB9LFxuICAgIChlcnJvciwgX3JlZGlyZWN0TG9jYXRpb24sIHJlbmRlclByb3BzKSA9PiB7XG4gICAgICBpZiAoZXJyb3IgfHwgIXJlbmRlclByb3BzKSB7XG4gICAgICAgIHJldHVybiBjYWxsYmFjayhuYW1lKTtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgcm91dGVQYXRoID0gZ2V0Um91dGVTdHJpbmdGcm9tUm91dGVzKHJlbmRlclByb3BzLnJvdXRlcyB8fCBbXSk7XG4gICAgICBpZiAocm91dGVQYXRoLmxlbmd0aCA9PT0gMCB8fCByb3V0ZVBhdGggPT09ICcvKicpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5hbWUpO1xuICAgICAgfVxuXG4gICAgICBuYW1lID0gcm91dGVQYXRoO1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKG5hbWUsICdyb3V0ZScpO1xuICAgIH0sXG4gICk7XG59XG5cbi8qKlxuICogR2VuZXJhdGUgcm91dGUgbmFtZSBmcm9tIGFycmF5IG9mIHJvdXRlc1xuICovXG5mdW5jdGlvbiBnZXRSb3V0ZVN0cmluZ0Zyb21Sb3V0ZXMocm91dGVzKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShyb3V0ZXMpIHx8IHJvdXRlcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBjb25zdCByb3V0ZXNXaXRoUGF0aHMgPSByb3V0ZXMuZmlsdGVyKChyb3V0ZSkgPT4gISFyb3V0ZS5wYXRoKTtcblxuICBsZXQgaW5kZXggPSAtMTtcbiAgZm9yIChsZXQgeCA9IHJvdXRlc1dpdGhQYXRocy5sZW5ndGggLSAxOyB4ID49IDA7IHgtLSkge1xuICAgIGNvbnN0IHJvdXRlID0gcm91dGVzV2l0aFBhdGhzW3hdO1xuICAgIGlmIChyb3V0ZS5wYXRoICYmIHJvdXRlLnBhdGguc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICBpbmRleCA9IHg7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcm91dGVzV2l0aFBhdGhzXG4gICAgLnNsaWNlKGluZGV4KVxuICAgIC5maWx0ZXIoKHsgcGF0aCB9KSA9PiAhIXBhdGgpXG4gICAgLm1hcCgoeyBwYXRoIH0pID0+IHBhdGgpXG4gICAgLmpvaW4oJycpO1xufVxuXG5leHBvcnQgeyByZWFjdFJvdXRlclYzSW5zdHJ1bWVudGF0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdHJvdXRlcnYzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/reactrouterv3.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/reactrouterv6.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/react/esm/reactrouterv6.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"reactRouterV6Instrumentation\": function() { return /* binding */ reactRouterV6Instrumentation; },\n/* harmony export */   \"withSentryReactRouterV6Routing\": function() { return /* binding */ withSentryReactRouterV6Routing; },\n/* harmony export */   \"wrapCreateBrowserRouter\": function() { return /* binding */ wrapCreateBrowserRouter; },\n/* harmony export */   \"wrapUseRoutes\": function() { return /* binding */ wrapUseRoutes; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! hoist-non-react-statics */ \"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n/* harmony import */ var hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n\n\nconst _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/reactrouterv6.tsx\";// Inspired from Donnie McNeal's solution:\n\nlet activeTransaction;\n\nlet _useEffect;\nlet _useLocation;\nlet _useNavigationType;\nlet _createRoutesFromChildren;\nlet _matchRoutes;\nlet _customStartTransaction;\nlet _startTransactionOnLocationChange;\n\nconst SENTRY_TAGS = {\n  'routing.instrumentation': 'react-router-v6',\n};\n\nfunction reactRouterV6Instrumentation(\n  useEffect,\n  useLocation,\n  useNavigationType,\n  createRoutesFromChildren,\n  matchRoutes,\n) {\n  return (\n    customStartTransaction,\n    startTransactionOnPageLoad = true,\n    startTransactionOnLocationChange = true,\n  ) => {\n    const initPathName = _sentry_browser__WEBPACK_IMPORTED_MODULE_2__.WINDOW && _sentry_browser__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location && _sentry_browser__WEBPACK_IMPORTED_MODULE_2__.WINDOW.location.pathname;\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: initPathName,\n        op: 'pageload',\n        tags: SENTRY_TAGS,\n        metadata: {\n          source: 'url',\n        },\n      });\n    }\n\n    _useEffect = useEffect;\n    _useLocation = useLocation;\n    _useNavigationType = useNavigationType;\n    _matchRoutes = matchRoutes;\n    _createRoutesFromChildren = createRoutesFromChildren;\n\n    _customStartTransaction = customStartTransaction;\n    _startTransactionOnLocationChange = startTransactionOnLocationChange;\n  };\n}\n\nfunction getNormalizedName(\n  routes,\n  location,\n  branches,\n) {\n  if (!routes || routes.length === 0) {\n    return [location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      const branch = branches[x];\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return [branch.pathname, 'route'];\n        }\n\n        const path = route.path;\n        if (path) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder += newPath;\n          if (branch.pathname === location.pathname) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / seperators\n              (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getNumberOfUrlSegments)(pathBuilder) !== (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getNumberOfUrlSegments)(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              pathBuilder.slice(-2) !== '/*'\n            ) {\n              return [newPath, 'route'];\n            }\n            return [pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  return [location.pathname, 'url'];\n}\n\nfunction updatePageloadTransaction(location, routes, matches) {\n  const branches = Array.isArray(matches) ? matches : (_matchRoutes(routes, location) );\n\n  if (activeTransaction && branches) {\n    activeTransaction.setName(...getNormalizedName(routes, location, branches));\n  }\n}\n\nfunction handleNavigation(\n  location,\n  routes,\n  navigationType,\n  matches,\n) {\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location);\n\n  if (_startTransactionOnLocationChange && (navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    if (activeTransaction) {\n      activeTransaction.finish();\n    }\n\n    const [name, source] = getNormalizedName(routes, location, branches);\n    activeTransaction = _customStartTransaction({\n      name,\n      op: 'navigation',\n      tags: SENTRY_TAGS,\n      metadata: {\n        source,\n      },\n    });\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withSentryReactRouterV6Routing(Routes) {\n  if (\n    !_useEffect ||\n    !_useLocation ||\n    !_useNavigationType ||\n    !_createRoutesFromChildren ||\n    !_matchRoutes ||\n    !_customStartTransaction\n  ) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}. customStartTransaction: ${_customStartTransaction}.`);\n\n    return Routes;\n  }\n\n  let isMountRenderPass = true;\n\n  const SentryRoutes = (props) => {\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) ;\n\n        if (isMountRenderPass) {\n          updatePageloadTransaction(location, routes);\n          isMountRenderPass = false;\n        } else {\n          handleNavigation(location, routes, navigationType);\n        }\n      },\n      // `props.children` is purpusely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-ignore Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(Routes, { ...props, __self: this, __source: {fileName: _jsxFileName, lineNumber: 197}} );\n  };\n\n  hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_0___default()(SentryRoutes, Routes);\n\n  // @ts-ignore Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nfunction wrapUseRoutes(origUseRoutes) {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes || !_customStartTransaction) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  let isMountRenderPass = true;\n\n  // eslint-disable-next-line react/display-name\n  return (routes, locationArg) => {\n    const SentryRoutes = () => {\n      const Routes = origUseRoutes(routes, locationArg);\n\n      const location = _useLocation();\n      const navigationType = _useNavigationType();\n\n      // A value with stable identity to either pick `locationArg` if available or `location` if not\n      const stableLocationParam =\n        typeof locationArg === 'string' || (locationArg && locationArg.pathname)\n          ? (locationArg )\n          : location;\n\n      _useEffect(() => {\n        const normalizedLocation =\n          typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n        if (isMountRenderPass) {\n          updatePageloadTransaction(normalizedLocation, routes);\n          isMountRenderPass = false;\n        } else {\n          handleNavigation(normalizedLocation, routes, navigationType);\n        }\n      }, [navigationType, stableLocationParam]);\n\n      return Routes;\n    };\n\n    return react__WEBPACK_IMPORTED_MODULE_1__.createElement(SentryRoutes, {__self: this, __source: {fileName: _jsxFileName, lineNumber: 248}} );\n  };\n}\n\nfunction wrapCreateBrowserRouter\n\n(createRouterFunction) {\n  // `opts` for createBrowserHistory and createMemoryHistory are different, but also not relevant for us at the moment.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return function (routes, opts) {\n    const router = createRouterFunction(routes, opts);\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeTransaction) {\n      updatePageloadTransaction(router.state.location, routes);\n    }\n\n    router.subscribe((state) => {\n      const location = state.location;\n\n      if (\n        _startTransactionOnLocationChange &&\n        (state.historyAction === 'PUSH' || state.historyAction === 'POP') &&\n        activeTransaction\n      ) {\n        handleNavigation(location, routes, state.historyAction);\n      }\n    });\n\n    return router;\n  };\n}\n\n\n//# sourceMappingURL=reactrouterv6.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/reactrouterv6.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/redux.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/react/esm/redux.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createReduxEnhancer\": function() { return /* binding */ createReduxEnhancer; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nconst ACTION_BREADCRUMB_CATEGORY = 'redux.action';\nconst ACTION_BREADCRUMB_TYPE = 'info';\n\nconst defaultOptions = {\n  actionTransformer: action => action,\n  stateTransformer: state => state || null,\n};\n\n/**\n * Creates an enhancer that would be passed to Redux's createStore to log actions and the latest state to Sentry.\n *\n * @param enhancerOptions Options to pass to the enhancer\n */\nfunction createReduxEnhancer(enhancerOptions) {\n  // Note: We return an any type as to not have type conflicts.\n  const options = {\n    ...defaultOptions,\n    ...enhancerOptions,\n  };\n\n  return (next) =>\n    (reducer, initialState) => {\n      const sentryReducer = (state, action) => {\n        const newState = reducer(state, action);\n\n        (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.configureScope)(scope => {\n          /* Action breadcrumbs */\n          const transformedAction = options.actionTransformer(action);\n          if (typeof transformedAction !== 'undefined' && transformedAction !== null) {\n            scope.addBreadcrumb({\n              category: ACTION_BREADCRUMB_CATEGORY,\n              data: transformedAction,\n              type: ACTION_BREADCRUMB_TYPE,\n            });\n          }\n\n          /* Set latest state to scope */\n          const transformedState = options.stateTransformer(newState);\n          if (typeof transformedState !== 'undefined' && transformedState !== null) {\n            const client = (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();\n            const options = client && client.getOptions();\n            const normalizationDepth = (options && options.normalizeDepth) || 3; // default state normalization depth to 3\n\n            // Set the normalization depth of the redux state to the configured `normalizeDepth` option or a sane number as a fallback\n            const newStateContext = { state: { type: 'redux', value: transformedState } };\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addNonEnumerableProperty)(\n              newStateContext,\n              '__sentry_override_normalization_depth__',\n              3 + // 3 layers for `state.value.transformedState`\n                normalizationDepth, // rest for the actual state\n            );\n\n            scope.setContext('state', newStateContext);\n          } else {\n            scope.setContext('state', null);\n          }\n\n          /* Allow user to configure scope with latest state */\n          const { configureScopeWithState } = options;\n          if (typeof configureScopeWithState === 'function') {\n            configureScopeWithState(scope, newState);\n          }\n        });\n\n        return newState;\n      };\n\n      return next(sentryReducer, initialState);\n    };\n}\n\n\n//# sourceMappingURL=redux.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vcmVkdXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdFO0FBQ1A7O0FBRXpEOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxRQUFRLCtEQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw4REFBYTtBQUN4QztBQUNBLGlGQUFpRjs7QUFFakY7QUFDQSxzQ0FBc0MsU0FBUztBQUMvQyxZQUFZLHVFQUF3QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsMEJBQTBCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7O0FBRVQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3JlYWN0L2VzbS9yZWR1eC5qcz9jNWZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbmZpZ3VyZVNjb3BlLCBnZXRDdXJyZW50SHViIH0gZnJvbSAnQHNlbnRyeS9icm93c2VyJztcbmltcG9ydCB7IGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55ICovXG5cbmNvbnN0IEFDVElPTl9CUkVBRENSVU1CX0NBVEVHT1JZID0gJ3JlZHV4LmFjdGlvbic7XG5jb25zdCBBQ1RJT05fQlJFQURDUlVNQl9UWVBFID0gJ2luZm8nO1xuXG5jb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgYWN0aW9uVHJhbnNmb3JtZXI6IGFjdGlvbiA9PiBhY3Rpb24sXG4gIHN0YXRlVHJhbnNmb3JtZXI6IHN0YXRlID0+IHN0YXRlIHx8IG51bGwsXG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gZW5oYW5jZXIgdGhhdCB3b3VsZCBiZSBwYXNzZWQgdG8gUmVkdXgncyBjcmVhdGVTdG9yZSB0byBsb2cgYWN0aW9ucyBhbmQgdGhlIGxhdGVzdCBzdGF0ZSB0byBTZW50cnkuXG4gKlxuICogQHBhcmFtIGVuaGFuY2VyT3B0aW9ucyBPcHRpb25zIHRvIHBhc3MgdG8gdGhlIGVuaGFuY2VyXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVJlZHV4RW5oYW5jZXIoZW5oYW5jZXJPcHRpb25zKSB7XG4gIC8vIE5vdGU6IFdlIHJldHVybiBhbiBhbnkgdHlwZSBhcyB0byBub3QgaGF2ZSB0eXBlIGNvbmZsaWN0cy5cbiAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAuLi5kZWZhdWx0T3B0aW9ucyxcbiAgICAuLi5lbmhhbmNlck9wdGlvbnMsXG4gIH07XG5cbiAgcmV0dXJuIChuZXh0KSA9PlxuICAgIChyZWR1Y2VyLCBpbml0aWFsU3RhdGUpID0+IHtcbiAgICAgIGNvbnN0IHNlbnRyeVJlZHVjZXIgPSAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgICBjb25zdCBuZXdTdGF0ZSA9IHJlZHVjZXIoc3RhdGUsIGFjdGlvbik7XG5cbiAgICAgICAgY29uZmlndXJlU2NvcGUoc2NvcGUgPT4ge1xuICAgICAgICAgIC8qIEFjdGlvbiBicmVhZGNydW1icyAqL1xuICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybWVkQWN0aW9uID0gb3B0aW9ucy5hY3Rpb25UcmFuc2Zvcm1lcihhY3Rpb24pO1xuICAgICAgICAgIGlmICh0eXBlb2YgdHJhbnNmb3JtZWRBY3Rpb24gIT09ICd1bmRlZmluZWQnICYmIHRyYW5zZm9ybWVkQWN0aW9uICE9PSBudWxsKSB7XG4gICAgICAgICAgICBzY29wZS5hZGRCcmVhZGNydW1iKHtcbiAgICAgICAgICAgICAgY2F0ZWdvcnk6IEFDVElPTl9CUkVBRENSVU1CX0NBVEVHT1JZLFxuICAgICAgICAgICAgICBkYXRhOiB0cmFuc2Zvcm1lZEFjdGlvbixcbiAgICAgICAgICAgICAgdHlwZTogQUNUSU9OX0JSRUFEQ1JVTUJfVFlQRSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8qIFNldCBsYXRlc3Qgc3RhdGUgdG8gc2NvcGUgKi9cbiAgICAgICAgICBjb25zdCB0cmFuc2Zvcm1lZFN0YXRlID0gb3B0aW9ucy5zdGF0ZVRyYW5zZm9ybWVyKG5ld1N0YXRlKTtcbiAgICAgICAgICBpZiAodHlwZW9mIHRyYW5zZm9ybWVkU3RhdGUgIT09ICd1bmRlZmluZWQnICYmIHRyYW5zZm9ybWVkU3RhdGUgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IGNsaWVudCA9IGdldEN1cnJlbnRIdWIoKS5nZXRDbGllbnQoKTtcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSBjbGllbnQgJiYgY2xpZW50LmdldE9wdGlvbnMoKTtcbiAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6YXRpb25EZXB0aCA9IChvcHRpb25zICYmIG9wdGlvbnMubm9ybWFsaXplRGVwdGgpIHx8IDM7IC8vIGRlZmF1bHQgc3RhdGUgbm9ybWFsaXphdGlvbiBkZXB0aCB0byAzXG5cbiAgICAgICAgICAgIC8vIFNldCB0aGUgbm9ybWFsaXphdGlvbiBkZXB0aCBvZiB0aGUgcmVkdXggc3RhdGUgdG8gdGhlIGNvbmZpZ3VyZWQgYG5vcm1hbGl6ZURlcHRoYCBvcHRpb24gb3IgYSBzYW5lIG51bWJlciBhcyBhIGZhbGxiYWNrXG4gICAgICAgICAgICBjb25zdCBuZXdTdGF0ZUNvbnRleHQgPSB7IHN0YXRlOiB7IHR5cGU6ICdyZWR1eCcsIHZhbHVlOiB0cmFuc2Zvcm1lZFN0YXRlIH0gfTtcbiAgICAgICAgICAgIGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eShcbiAgICAgICAgICAgICAgbmV3U3RhdGVDb250ZXh0LFxuICAgICAgICAgICAgICAnX19zZW50cnlfb3ZlcnJpZGVfbm9ybWFsaXphdGlvbl9kZXB0aF9fJyxcbiAgICAgICAgICAgICAgMyArIC8vIDMgbGF5ZXJzIGZvciBgc3RhdGUudmFsdWUudHJhbnNmb3JtZWRTdGF0ZWBcbiAgICAgICAgICAgICAgICBub3JtYWxpemF0aW9uRGVwdGgsIC8vIHJlc3QgZm9yIHRoZSBhY3R1YWwgc3RhdGVcbiAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgIHNjb3BlLnNldENvbnRleHQoJ3N0YXRlJywgbmV3U3RhdGVDb250ZXh0KTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2NvcGUuc2V0Q29udGV4dCgnc3RhdGUnLCBudWxsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvKiBBbGxvdyB1c2VyIHRvIGNvbmZpZ3VyZSBzY29wZSB3aXRoIGxhdGVzdCBzdGF0ZSAqL1xuICAgICAgICAgIGNvbnN0IHsgY29uZmlndXJlU2NvcGVXaXRoU3RhdGUgfSA9IG9wdGlvbnM7XG4gICAgICAgICAgaWYgKHR5cGVvZiBjb25maWd1cmVTY29wZVdpdGhTdGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY29uZmlndXJlU2NvcGVXaXRoU3RhdGUoc2NvcGUsIG5ld1N0YXRlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBuZXdTdGF0ZTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBuZXh0KHNlbnRyeVJlZHVjZXIsIGluaXRpYWxTdGF0ZSk7XG4gICAgfTtcbn1cblxuZXhwb3J0IHsgY3JlYXRlUmVkdXhFbmhhbmNlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkdXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/redux.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/react/esm/sdk.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/react/esm/sdk.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": function() { return /* binding */ init; }\n/* harmony export */ });\n/* harmony import */ var _sentry_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/browser */ \"./node_modules/@sentry/browser/esm/index.js\");\n\n\n/**\n * Inits the React SDK\n */\nfunction init(options) {\n  options._metadata = options._metadata || {};\n  options._metadata.sdk = options._metadata.sdk || {\n    name: 'sentry.javascript.react',\n    packages: [\n      {\n        name: 'npm:@sentry/react',\n        version: _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n      },\n    ],\n    version: _sentry_browser__WEBPACK_IMPORTED_MODULE_0__.SDK_VERSION,\n  };\n  (0,_sentry_browser__WEBPACK_IMPORTED_MODULE_0__.init)(options);\n}\n\n\n//# sourceMappingURL=sdk.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vc2RrLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThEOztBQUU5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix3REFBVztBQUM1QixPQUFPO0FBQ1A7QUFDQSxhQUFhLHdEQUFXO0FBQ3hCO0FBQ0EsRUFBRSxxREFBTTtBQUNSOztBQUVnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS9yZWFjdC9lc20vc2RrLmpzPzEyNTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU0RLX1ZFUlNJT04sIGluaXQgYXMgaW5pdCQxIH0gZnJvbSAnQHNlbnRyeS9icm93c2VyJztcblxuLyoqXG4gKiBJbml0cyB0aGUgUmVhY3QgU0RLXG4gKi9cbmZ1bmN0aW9uIGluaXQob3B0aW9ucykge1xuICBvcHRpb25zLl9tZXRhZGF0YSA9IG9wdGlvbnMuX21ldGFkYXRhIHx8IHt9O1xuICBvcHRpb25zLl9tZXRhZGF0YS5zZGsgPSBvcHRpb25zLl9tZXRhZGF0YS5zZGsgfHwge1xuICAgIG5hbWU6ICdzZW50cnkuamF2YXNjcmlwdC5yZWFjdCcsXG4gICAgcGFja2FnZXM6IFtcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ25wbTpAc2VudHJ5L3JlYWN0JyxcbiAgICAgICAgdmVyc2lvbjogU0RLX1ZFUlNJT04sXG4gICAgICB9LFxuICAgIF0sXG4gICAgdmVyc2lvbjogU0RLX1ZFUlNJT04sXG4gIH07XG4gIGluaXQkMShvcHRpb25zKTtcbn1cblxuZXhwb3J0IHsgaW5pdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2RrLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/react/esm/sdk.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/replay/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/replay/esm/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Replay\": function() { return /* binding */ Replay; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst REPLAY_SESSION_KEY = 'sentryReplaySession';\nconst REPLAY_EVENT_NAME = 'replay_event';\nconst UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session\nconst SESSION_IDLE_DURATION = 300000; // 5 minutes in ms\n\n// The maximum length of a session\nconst MAX_SESSION_LIFE = 3600000; // 60 minutes\n\n/** Default flush delays */\nconst DEFAULT_FLUSH_MIN_DELAY = 5000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nconst DEFAULT_FLUSH_MAX_DELAY = 5500;\n\n/* How long to wait for error checkouts */\nconst ERROR_CHECKOUT_TIME = 60000;\n\nconst RETRY_BASE_INTERVAL = 5000;\nconst RETRY_MAX_COUNT = 3;\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\n    return n.nodeType === n.ELEMENT_NODE;\n}\nfunction isShadowRoot(n) {\n    const host = n === null || n === void 0 ? void 0 : n.host;\n    return Boolean(host && host.shadowRoot && host.shadowRoot === n);\n}\nfunction isInputTypeMasked({ maskInputOptions, tagName, type, }) {\n    return (maskInputOptions[tagName.toLowerCase()] ||\n        maskInputOptions[type] ||\n        (tagName === 'input' && !type && maskInputOptions['text']));\n}\nfunction hasInputMaskOptions({ tagName, type, maskInputOptions, maskInputSelector, }) {\n    return (maskInputSelector || isInputTypeMasked({ maskInputOptions, tagName, type }));\n}\nfunction maskInputValue({ input, maskInputSelector, unmaskInputSelector, maskInputOptions, tagName, type, value, maskInputFn, }) {\n    let text = value || '';\n    if (unmaskInputSelector && input.matches(unmaskInputSelector)) {\n        return text;\n    }\n    if (isInputTypeMasked({ maskInputOptions, tagName, type }) ||\n        (maskInputSelector && input.matches(maskInputSelector))) {\n        if (maskInputFn) {\n            text = maskInputFn(text);\n        }\n        else {\n            text = '*'.repeat(text.length);\n        }\n    }\n    return text;\n}\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\nfunction is2DCanvasBlank(canvas) {\n    const ctx = canvas.getContext('2d');\n    if (!ctx)\n        return true;\n    const chunkSize = 50;\n    for (let x = 0; x < canvas.width; x += chunkSize) {\n        for (let y = 0; y < canvas.height; y += chunkSize) {\n            const getImageData = ctx.getImageData;\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\n                : getImageData;\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\n            if (pixelBuffer.some((pixel) => pixel !== 0))\n                return false;\n        }\n    }\n    return true;\n}\n\nlet _id = 1;\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\nconst IGNORED_NODE = -2;\nfunction defaultMaskFn(str) {\n    return str ? str.replace(/[\\S]/g, '*') : '';\n}\nfunction genId() {\n    return _id++;\n}\nfunction getValidTagName(element) {\n    if (element instanceof HTMLFormElement) {\n        return 'form';\n    }\n    const processedTagName = element.tagName.toLowerCase().trim();\n    if (tagNameRegex.test(processedTagName)) {\n        return 'div';\n    }\n    return processedTagName;\n}\nfunction getCssRulesString(s) {\n    try {\n        const rules = s.rules || s.cssRules;\n        return rules ? Array.from(rules).map(getCssRuleString).join('') : null;\n    }\n    catch (error) {\n        return null;\n    }\n}\nfunction getCssRuleString(rule) {\n    let cssStringified = rule.cssText;\n    if (isCSSImportRule(rule)) {\n        try {\n            cssStringified = getCssRulesString(rule.styleSheet) || cssStringified;\n        }\n        catch (_a) {\n        }\n    }\n    return cssStringified;\n}\nfunction isCSSImportRule(rule) {\n    return 'styleSheet' in rule;\n}\nfunction stringifyStyleSheet(sheet) {\n    return sheet.cssRules\n        ? Array.from(sheet.cssRules)\n            .map((rule) => rule.cssText || '')\n            .join('')\n        : '';\n}\nfunction extractOrigin(url) {\n    let origin = '';\n    if (url.indexOf('//') > -1) {\n        origin = url.split('/').slice(0, 3).join('/');\n    }\n    else {\n        origin = url.split('/')[0];\n    }\n    origin = origin.split('?')[0];\n    return origin;\n}\nlet canvasService;\nlet canvasCtx;\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\nconst RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/|#).*/;\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\nfunction absoluteToStylesheet(cssText, href) {\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\n        const filePath = path1 || path2 || path3;\n        const maybeQuote = quote1 || quote2 || '';\n        if (!filePath) {\n            return origin;\n        }\n        if (!RELATIVE_PATH.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (DATA_URI.test(filePath)) {\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\n        }\n        if (filePath[0] === '/') {\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\n        }\n        const stack = href.split('/');\n        const parts = filePath.split('/');\n        stack.pop();\n        for (const part of parts) {\n            if (part === '.') {\n                continue;\n            }\n            else if (part === '..') {\n                stack.pop();\n            }\n            else {\n                stack.push(part);\n            }\n        }\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\n    });\n}\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\n    if (attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    let pos = 0;\n    function collectCharacters(regEx) {\n        let chars;\n        let match = regEx.exec(attributeValue.substring(pos));\n        if (match) {\n            chars = match[0];\n            pos += chars.length;\n            return chars;\n        }\n        return '';\n    }\n    let output = [];\n    while (true) {\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\n        if (pos >= attributeValue.length) {\n            break;\n        }\n        let url = collectCharacters(SRCSET_NOT_SPACES);\n        if (url.slice(-1) === ',') {\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\n            output.push(url);\n        }\n        else {\n            let descriptorsStr = '';\n            url = absoluteToDoc(doc, url);\n            let inParens = false;\n            while (true) {\n                let c = attributeValue.charAt(pos);\n                if (c === '') {\n                    output.push((url + descriptorsStr).trim());\n                    break;\n                }\n                else if (!inParens) {\n                    if (c === ',') {\n                        pos += 1;\n                        output.push((url + descriptorsStr).trim());\n                        break;\n                    }\n                    else if (c === '(') {\n                        inParens = true;\n                    }\n                }\n                else {\n                    if (c === ')') {\n                        inParens = false;\n                    }\n                }\n                descriptorsStr += c;\n                pos += 1;\n            }\n        }\n    }\n    return output.join(', ');\n}\nfunction absoluteToDoc(doc, attributeValue) {\n    if (!attributeValue || attributeValue.trim() === '') {\n        return attributeValue;\n    }\n    const a = doc.createElement('a');\n    a.href = attributeValue;\n    return a.href;\n}\nfunction isSVGElement(el) {\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\n}\nfunction getHref() {\n    const a = document.createElement('a');\n    a.href = '';\n    return a.href;\n}\nfunction transformAttribute(doc, element, tagName, name, value, maskAllText, maskTextFn) {\n    if (!value) {\n        return value;\n    }\n    if (name === 'src' || name === 'href') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'xlink:href' && value[0] !== '#') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'background' &&\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\n        return absoluteToDoc(doc, value);\n    }\n    else if (name === 'srcset') {\n        return getAbsoluteSrcsetString(doc, value);\n    }\n    else if (name === 'style') {\n        return absoluteToStylesheet(value, getHref());\n    }\n    else if (tagName === 'object' && name === 'data') {\n        return absoluteToDoc(doc, value);\n    }\n    else if (maskAllText &&\n        (['placeholder', 'title', 'aria-label'].indexOf(name) > -1 ||\n            (tagName === 'input' &&\n                name === 'value' &&\n                element.getAttribute('type') &&\n                ['submit', 'button'].indexOf(element.getAttribute('type').toLowerCase()) > -1))) {\n        return maskTextFn ? maskTextFn(value) : defaultMaskFn(value);\n    }\n    return value;\n}\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\n    if (unblockSelector && element.matches(unblockSelector)) {\n        return false;\n    }\n    if (typeof blockClass === 'string') {\n        if (element.classList.contains(blockClass)) {\n            return true;\n        }\n    }\n    else {\n        for (let eIndex = 0; eIndex < element.classList.length; eIndex++) {\n            const className = element.classList[eIndex];\n            if (blockClass.test(className)) {\n                return true;\n            }\n        }\n    }\n    if (blockSelector) {\n        return element.matches(blockSelector);\n    }\n    return false;\n}\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType !== node.ELEMENT_NODE) {\n        return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText);\n    }\n    if (unmaskTextSelector) {\n        if (node.matches(unmaskTextSelector) ||\n            node.closest(unmaskTextSelector)) {\n            return false;\n        }\n    }\n    if (maskAllText) {\n        return true;\n    }\n    if (typeof maskTextClass === 'string') {\n        if (node.classList.contains(maskTextClass)) {\n            return true;\n        }\n    }\n    else {\n        for (let eIndex = 0; eIndex < node.classList.length; eIndex++) {\n            const className = node.classList[eIndex];\n            if (maskTextClass.test(className)) {\n                return true;\n            }\n        }\n    }\n    if (maskTextSelector) {\n        if (node.matches(maskTextSelector)) {\n            return true;\n        }\n    }\n    return needMaskingText(node.parentNode, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText);\n}\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\n    const win = iframeEl.contentWindow;\n    if (!win) {\n        return;\n    }\n    let fired = false;\n    let readyState;\n    try {\n        readyState = win.document.readyState;\n    }\n    catch (error) {\n        return;\n    }\n    if (readyState !== 'complete') {\n        const timer = setTimeout(() => {\n            if (!fired) {\n                listener();\n                fired = true;\n            }\n        }, iframeLoadTimeout);\n        iframeEl.addEventListener('load', () => {\n            clearTimeout(timer);\n            fired = true;\n            listener();\n        });\n        return;\n    }\n    const blankUrl = 'about:blank';\n    if (win.location.href !== blankUrl ||\n        iframeEl.src === blankUrl ||\n        iframeEl.src === '') {\n        setTimeout(listener, 0);\n        return;\n    }\n    iframeEl.addEventListener('load', listener);\n}\nfunction serializeNode(n, options) {\n    var _a;\n    const { doc, blockClass, blockSelector, unblockSelector, maskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputSelector, unmaskInputSelector, maskAllText, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, } = options;\n    let rootId;\n    if (doc.__sn) {\n        const docId = doc.__sn.id;\n        rootId = docId === 1 ? undefined : docId;\n    }\n    switch (n.nodeType) {\n        case n.DOCUMENT_NODE:\n            if (n.compatMode !== 'CSS1Compat') {\n                return {\n                    type: NodeType.Document,\n                    childNodes: [],\n                    compatMode: n.compatMode,\n                    rootId,\n                };\n            }\n            else {\n                return {\n                    type: NodeType.Document,\n                    childNodes: [],\n                    rootId,\n                };\n            }\n        case n.DOCUMENT_TYPE_NODE:\n            return {\n                type: NodeType.DocumentType,\n                name: n.name,\n                publicId: n.publicId,\n                systemId: n.systemId,\n                rootId,\n            };\n        case n.ELEMENT_NODE:\n            const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\n            const tagName = getValidTagName(n);\n            let attributes = {};\n            for (const { name, value } of Array.from(n.attributes)) {\n                if (!skipAttribute(tagName, name)) {\n                    attributes[name] = transformAttribute(doc, n, tagName, name, value, maskAllText, maskTextFn);\n                }\n            }\n            if (tagName === 'link' && inlineStylesheet) {\n                const stylesheet = Array.from(doc.styleSheets).find((s) => {\n                    return s.href === n.href;\n                });\n                let cssText = null;\n                if (stylesheet) {\n                    cssText = getCssRulesString(stylesheet);\n                }\n                if (cssText) {\n                    delete attributes.rel;\n                    delete attributes.href;\n                    attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\n                }\n            }\n            if (tagName === 'style' &&\n                n.sheet &&\n                !(n.innerText ||\n                    n.textContent ||\n                    '').trim().length) {\n                const cssText = getCssRulesString(n.sheet);\n                if (cssText) {\n                    attributes._cssText = absoluteToStylesheet(cssText, getHref());\n                }\n            }\n            if (tagName === 'input' ||\n                tagName === 'textarea' ||\n                tagName === 'select') {\n                const value = n.value;\n                if (attributes.type !== 'radio' &&\n                    attributes.type !== 'checkbox' &&\n                    attributes.type !== 'submit' &&\n                    attributes.type !== 'button' &&\n                    value) {\n                    attributes.value = maskInputValue({\n                        input: n,\n                        type: attributes.type,\n                        tagName,\n                        value,\n                        maskInputSelector,\n                        unmaskInputSelector,\n                        maskInputOptions,\n                        maskInputFn,\n                    });\n                }\n                else if (n.checked) {\n                    attributes.checked = n.checked;\n                }\n            }\n            if (tagName === 'option') {\n                if (n.selected && !maskInputOptions['select']) {\n                    attributes.selected = true;\n                }\n                else {\n                    delete attributes.selected;\n                }\n            }\n            if (tagName === 'canvas' && recordCanvas) {\n                if (n.__context === '2d') {\n                    if (!is2DCanvasBlank(n)) {\n                        attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                }\n                else if (!('__context' in n)) {\n                    const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    const blankCanvas = document.createElement('canvas');\n                    blankCanvas.width = n.width;\n                    blankCanvas.height = n.height;\n                    const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    if (canvasDataURL !== blankCanvasDataURL) {\n                        attributes.rr_dataURL = canvasDataURL;\n                    }\n                }\n            }\n            if (tagName === 'img' && inlineImages) {\n                if (!canvasService) {\n                    canvasService = doc.createElement('canvas');\n                    canvasCtx = canvasService.getContext('2d');\n                }\n                const image = n;\n                const oldValue = image.crossOrigin;\n                image.crossOrigin = 'anonymous';\n                const recordInlineImage = () => {\n                    try {\n                        canvasService.width = image.naturalWidth;\n                        canvasService.height = image.naturalHeight;\n                        canvasCtx.drawImage(image, 0, 0);\n                        attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\n                    }\n                    catch (err) {\n                        console.warn(`Cannot inline img src=${image.currentSrc}! Error: ${err}`);\n                    }\n                    oldValue\n                        ? (attributes.crossOrigin = oldValue)\n                        : delete attributes.crossOrigin;\n                };\n                if (image.complete && image.naturalWidth !== 0)\n                    recordInlineImage();\n                else\n                    image.onload = recordInlineImage;\n            }\n            if (tagName === 'audio' || tagName === 'video') {\n                attributes.rr_mediaState = n.paused\n                    ? 'paused'\n                    : 'played';\n                attributes.rr_mediaCurrentTime = n.currentTime;\n            }\n            if (n.scrollLeft) {\n                attributes.rr_scrollLeft = n.scrollLeft;\n            }\n            if (n.scrollTop) {\n                attributes.rr_scrollTop = n.scrollTop;\n            }\n            if (needBlock) {\n                const { width, height } = n.getBoundingClientRect();\n                attributes = {\n                    class: attributes.class,\n                    rr_width: `${width}px`,\n                    rr_height: `${height}px`,\n                };\n            }\n            if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\n                if (!n.contentDocument) {\n                    attributes.rr_src = attributes.src;\n                }\n                delete attributes.src;\n            }\n            return {\n                type: NodeType.Element,\n                tagName,\n                attributes,\n                childNodes: [],\n                isSVG: isSVGElement(n) || undefined,\n                needBlock,\n                rootId,\n            };\n        case n.TEXT_NODE:\n            const parentTagName = n.parentNode && n.parentNode.tagName;\n            let textContent = n.textContent;\n            const isStyle = parentTagName === 'STYLE' ? true : undefined;\n            const isScript = parentTagName === 'SCRIPT' ? true : undefined;\n            if (isStyle && textContent) {\n                try {\n                    if (n.nextSibling || n.previousSibling) {\n                    }\n                    else if ((_a = n.parentNode.sheet) === null || _a === void 0 ? void 0 : _a.cssRules) {\n                        textContent = stringifyStyleSheet(n.parentNode.sheet);\n                    }\n                }\n                catch (err) {\n                    console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\n                }\n                textContent = absoluteToStylesheet(textContent, getHref());\n            }\n            if (isScript) {\n                textContent = 'SCRIPT_PLACEHOLDER';\n            }\n            if (parentTagName === 'TEXTAREA' && textContent) {\n                textContent = '';\n            }\n            else if (!isStyle &&\n                !isScript &&\n                needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextSelector, maskAllText) &&\n                textContent) {\n                textContent = maskTextFn\n                    ? maskTextFn(textContent)\n                    : defaultMaskFn(textContent);\n            }\n            return {\n                type: NodeType.Text,\n                textContent: textContent || '',\n                isStyle,\n                rootId,\n            };\n        case n.CDATA_SECTION_NODE:\n            return {\n                type: NodeType.CDATA,\n                textContent: '',\n                rootId,\n            };\n        case n.COMMENT_NODE:\n            return {\n                type: NodeType.Comment,\n                textContent: n.textContent || '',\n                rootId,\n            };\n        default:\n            return false;\n    }\n}\nfunction lowerIfExists(maybeAttr) {\n    if (maybeAttr === undefined || maybeAttr === null) {\n        return '';\n    }\n    else {\n        return maybeAttr.toLowerCase();\n    }\n}\nfunction slimDOMExcluded(sn, slimDOMOptions) {\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\n        return true;\n    }\n    else if (sn.type === NodeType.Element) {\n        if (slimDOMOptions.script &&\n            (sn.tagName === 'script' ||\n                (sn.tagName === 'link' &&\n                    (sn.attributes.rel === 'preload' ||\n                        sn.attributes.rel === 'modulepreload') &&\n                    sn.attributes.as === 'script') ||\n                (sn.tagName === 'link' &&\n                    sn.attributes.rel === 'prefetch' &&\n                    typeof sn.attributes.href === 'string' &&\n                    sn.attributes.href.endsWith('.js')))) {\n            return true;\n        }\n        else if (slimDOMOptions.headFavicon &&\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\n                (sn.tagName === 'meta' &&\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\n            return true;\n        }\n        else if (sn.tagName === 'meta') {\n            if (slimDOMOptions.headMetaDescKeywords &&\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaSocial &&\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaRobots &&\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaHttpEquiv &&\n                sn.attributes['http-equiv'] !== undefined) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaAuthorship &&\n                (lowerIfExists(sn.attributes.name) === 'author' ||\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\n                return true;\n            }\n            else if (slimDOMOptions.headMetaVerification &&\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction serializeNodeWithId(n, options) {\n    const { doc, map, blockClass, blockSelector, unblockSelector, maskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputSelector, unmaskInputSelector, maskAllText, maskInputOptions = {}, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, keepIframeSrcFn = () => false, } = options;\n    let { preserveWhiteSpace = true } = options;\n    const _serializedNode = serializeNode(n, {\n        doc,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        maskTextClass,\n        maskTextSelector,\n        unmaskTextSelector,\n        inlineStylesheet,\n        maskInputSelector,\n        unmaskInputSelector,\n        maskAllText,\n        maskInputOptions,\n        maskTextFn,\n        maskInputFn,\n        dataURLOptions,\n        inlineImages,\n        recordCanvas,\n        keepIframeSrcFn,\n    });\n    if (!_serializedNode) {\n        console.warn(n, 'not serialized');\n        return null;\n    }\n    let id;\n    if ('__sn' in n) {\n        id = n.__sn.id;\n    }\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\n        (!preserveWhiteSpace &&\n            _serializedNode.type === NodeType.Text &&\n            !_serializedNode.isStyle &&\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\n        id = IGNORED_NODE;\n    }\n    else {\n        id = genId();\n    }\n    const serializedNode = Object.assign(_serializedNode, { id });\n    n.__sn = serializedNode;\n    if (id === IGNORED_NODE) {\n        return null;\n    }\n    map[id] = n;\n    if (onSerialize) {\n        onSerialize(n);\n    }\n    let recordChild = !skipChild;\n    if (serializedNode.type === NodeType.Element) {\n        recordChild = recordChild && !serializedNode.needBlock;\n        delete serializedNode.needBlock;\n        if (n.shadowRoot)\n            serializedNode.isShadowHost = true;\n    }\n    if ((serializedNode.type === NodeType.Document ||\n        serializedNode.type === NodeType.Element) &&\n        recordChild) {\n        if (slimDOMOptions.headWhitespace &&\n            _serializedNode.type === NodeType.Element &&\n            _serializedNode.tagName === 'head') {\n            preserveWhiteSpace = false;\n        }\n        const bypassOptions = {\n            doc,\n            map,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild,\n            inlineStylesheet,\n            maskInputSelector,\n            unmaskInputSelector,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            keepIframeSrcFn,\n        };\n        for (const childN of Array.from(n.childNodes)) {\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n            if (serializedChildNode) {\n                serializedNode.childNodes.push(serializedChildNode);\n            }\n        }\n        if (isElement(n) && n.shadowRoot) {\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\n                if (serializedChildNode) {\n                    serializedChildNode.isShadow = true;\n                    serializedNode.childNodes.push(serializedChildNode);\n                }\n            }\n        }\n    }\n    if (n.parentNode && isShadowRoot(n.parentNode)) {\n        serializedNode.isShadow = true;\n    }\n    if (serializedNode.type === NodeType.Element &&\n        serializedNode.tagName === 'iframe') {\n        onceIframeLoaded(n, () => {\n            const iframeDoc = n.contentDocument;\n            if (iframeDoc && onIframeLoad) {\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\n                    doc: iframeDoc,\n                    map,\n                    blockClass,\n                    blockSelector,\n                    unblockSelector,\n                    maskTextClass,\n                    maskTextSelector,\n                    unmaskTextSelector,\n                    skipChild: false,\n                    inlineStylesheet,\n                    maskInputSelector,\n                    unmaskInputSelector,\n                    maskAllText,\n                    maskInputOptions,\n                    maskTextFn,\n                    maskInputFn,\n                    slimDOMOptions,\n                    dataURLOptions,\n                    inlineImages,\n                    recordCanvas,\n                    preserveWhiteSpace,\n                    onSerialize,\n                    onIframeLoad,\n                    iframeLoadTimeout,\n                    keepIframeSrcFn,\n                });\n                if (serializedIframeNode) {\n                    onIframeLoad(n, serializedIframeNode);\n                }\n            }\n        }, iframeLoadTimeout);\n    }\n    return serializedNode;\n}\nfunction snapshot(n, options) {\n    const { blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskTextClass = 'rr-mask', maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskInputSelector = null, unmaskInputSelector = null, maskAllText = false, maskAllInputs = false, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\n    const idNodeMap = {};\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            password: true,\n        }\n        : maskAllInputs === false\n            ? {\n                password: true,\n            }\n            : maskAllInputs;\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\n        ?\n            {\n                script: true,\n                comment: true,\n                headFavicon: true,\n                headWhitespace: true,\n                headMetaDescKeywords: slimDOM === 'all',\n                headMetaSocial: true,\n                headMetaRobots: true,\n                headMetaHttpEquiv: true,\n                headMetaAuthorship: true,\n                headMetaVerification: true,\n            }\n        : slimDOM === false\n            ? {}\n            : slimDOM;\n    return [\n        serializeNodeWithId(n, {\n            doc: n,\n            map: idNodeMap,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            skipChild: false,\n            inlineStylesheet,\n            maskInputSelector,\n            unmaskInputSelector,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            slimDOMOptions,\n            dataURLOptions,\n            inlineImages,\n            recordCanvas,\n            preserveWhiteSpace,\n            onSerialize,\n            onIframeLoad,\n            iframeLoadTimeout,\n            keepIframeSrcFn,\n        }),\n        idNodeMap,\n    ];\n}\nfunction skipAttribute(tagName, attributeName, value) {\n    return ((tagName === 'video' || tagName === 'audio') && attributeName === 'autoplay');\n}\n\nvar EventType;\n(function (EventType) {\n    EventType[EventType[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n    EventType[EventType[\"Load\"] = 1] = \"Load\";\n    EventType[EventType[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n    EventType[EventType[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n    EventType[EventType[\"Meta\"] = 4] = \"Meta\";\n    EventType[EventType[\"Custom\"] = 5] = \"Custom\";\n    EventType[EventType[\"Plugin\"] = 6] = \"Plugin\";\n})(EventType || (EventType = {}));\nvar IncrementalSource;\n(function (IncrementalSource) {\n    IncrementalSource[IncrementalSource[\"Mutation\"] = 0] = \"Mutation\";\n    IncrementalSource[IncrementalSource[\"MouseMove\"] = 1] = \"MouseMove\";\n    IncrementalSource[IncrementalSource[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n    IncrementalSource[IncrementalSource[\"Scroll\"] = 3] = \"Scroll\";\n    IncrementalSource[IncrementalSource[\"ViewportResize\"] = 4] = \"ViewportResize\";\n    IncrementalSource[IncrementalSource[\"Input\"] = 5] = \"Input\";\n    IncrementalSource[IncrementalSource[\"TouchMove\"] = 6] = \"TouchMove\";\n    IncrementalSource[IncrementalSource[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n    IncrementalSource[IncrementalSource[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n    IncrementalSource[IncrementalSource[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n    IncrementalSource[IncrementalSource[\"Font\"] = 10] = \"Font\";\n    IncrementalSource[IncrementalSource[\"Log\"] = 11] = \"Log\";\n    IncrementalSource[IncrementalSource[\"Drag\"] = 12] = \"Drag\";\n    IncrementalSource[IncrementalSource[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n})(IncrementalSource || (IncrementalSource = {}));\nvar MouseInteractions;\n(function (MouseInteractions) {\n    MouseInteractions[MouseInteractions[\"MouseUp\"] = 0] = \"MouseUp\";\n    MouseInteractions[MouseInteractions[\"MouseDown\"] = 1] = \"MouseDown\";\n    MouseInteractions[MouseInteractions[\"Click\"] = 2] = \"Click\";\n    MouseInteractions[MouseInteractions[\"ContextMenu\"] = 3] = \"ContextMenu\";\n    MouseInteractions[MouseInteractions[\"DblClick\"] = 4] = \"DblClick\";\n    MouseInteractions[MouseInteractions[\"Focus\"] = 5] = \"Focus\";\n    MouseInteractions[MouseInteractions[\"Blur\"] = 6] = \"Blur\";\n    MouseInteractions[MouseInteractions[\"TouchStart\"] = 7] = \"TouchStart\";\n    MouseInteractions[MouseInteractions[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n    MouseInteractions[MouseInteractions[\"TouchEnd\"] = 9] = \"TouchEnd\";\n    MouseInteractions[MouseInteractions[\"TouchCancel\"] = 10] = \"TouchCancel\";\n})(MouseInteractions || (MouseInteractions = {}));\nvar CanvasContext;\n(function (CanvasContext) {\n    CanvasContext[CanvasContext[\"2D\"] = 0] = \"2D\";\n    CanvasContext[CanvasContext[\"WebGL\"] = 1] = \"WebGL\";\n    CanvasContext[CanvasContext[\"WebGL2\"] = 2] = \"WebGL2\";\n})(CanvasContext || (CanvasContext = {}));\nvar MediaInteractions;\n(function (MediaInteractions) {\n    MediaInteractions[MediaInteractions[\"Play\"] = 0] = \"Play\";\n    MediaInteractions[MediaInteractions[\"Pause\"] = 1] = \"Pause\";\n    MediaInteractions[MediaInteractions[\"Seeked\"] = 2] = \"Seeked\";\n    MediaInteractions[MediaInteractions[\"VolumeChange\"] = 3] = \"VolumeChange\";\n})(MediaInteractions || (MediaInteractions = {}));\nvar ReplayerEvents;\n(function (ReplayerEvents) {\n    ReplayerEvents[\"Start\"] = \"start\";\n    ReplayerEvents[\"Pause\"] = \"pause\";\n    ReplayerEvents[\"Resume\"] = \"resume\";\n    ReplayerEvents[\"Resize\"] = \"resize\";\n    ReplayerEvents[\"Finish\"] = \"finish\";\n    ReplayerEvents[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n    ReplayerEvents[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n    ReplayerEvents[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n    ReplayerEvents[\"SkipStart\"] = \"skip-start\";\n    ReplayerEvents[\"SkipEnd\"] = \"skip-end\";\n    ReplayerEvents[\"MouseInteraction\"] = \"mouse-interaction\";\n    ReplayerEvents[\"EventCast\"] = \"event-cast\";\n    ReplayerEvents[\"CustomEvent\"] = \"custom-event\";\n    ReplayerEvents[\"Flush\"] = \"flush\";\n    ReplayerEvents[\"StateChange\"] = \"state-change\";\n    ReplayerEvents[\"PlayBack\"] = \"play-back\";\n})(ReplayerEvents || (ReplayerEvents = {}));\n\nfunction on(type, fn, target = document) {\n    const options = { capture: true, passive: true };\n    target.addEventListener(type, fn, options);\n    return () => target.removeEventListener(type, fn, options);\n}\nfunction createMirror() {\n    return {\n        map: {},\n        getId(n) {\n            if (!n || !n.__sn) {\n                return -1;\n            }\n            return n.__sn.id;\n        },\n        getNode(id) {\n            return this.map[id] || null;\n        },\n        removeNodeFromMap(n) {\n            const id = n.__sn && n.__sn.id;\n            delete this.map[id];\n            if (n.childNodes) {\n                n.childNodes.forEach((child) => this.removeNodeFromMap(child));\n            }\n        },\n        has(id) {\n            return this.map.hasOwnProperty(id);\n        },\n        reset() {\n            this.map = {};\n        },\n    };\n}\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction throttle(func, wait, options = {}) {\n    let timeout = null;\n    let previous = 0;\n    return function (arg) {\n        let now = Date.now();\n        if (!previous && options.leading === false) {\n            previous = now;\n        }\n        let remaining = wait - (now - previous);\n        let context = this;\n        let args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            func.apply(context, args);\n        }\n        else if (!timeout && options.trailing !== false) {\n            timeout = setTimeout(() => {\n                previous = options.leading === false ? 0 : Date.now();\n                timeout = null;\n                func.apply(context, args);\n            }, remaining);\n        }\n    };\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => { };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (_a) {\n        return () => { };\n    }\n}\nfunction getWindowHeight() {\n    return (window.innerHeight ||\n        (document.documentElement && document.documentElement.clientHeight) ||\n        (document.body && document.body.clientHeight));\n}\nfunction getWindowWidth() {\n    return (window.innerWidth ||\n        (document.documentElement && document.documentElement.clientWidth) ||\n        (document.body && document.body.clientWidth));\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector) {\n    if (!node) {\n        return false;\n    }\n    if (node.nodeType === node.ELEMENT_NODE) {\n        let needBlock = false;\n        const needUnblock = unblockSelector && node.matches(unblockSelector);\n        if (typeof blockClass === 'string') {\n            if (node.closest !== undefined) {\n                needBlock =\n                    !needUnblock &&\n                        node.closest('.' + blockClass) !== null;\n            }\n            else {\n                needBlock =\n                    !needUnblock && node.classList.contains(blockClass);\n            }\n        }\n        else {\n            !needUnblock &&\n                node.classList.forEach((className) => {\n                    if (blockClass.test(className)) {\n                        needBlock = true;\n                    }\n                });\n        }\n        if (!needBlock && blockSelector) {\n            needBlock = node.matches(blockSelector);\n        }\n        return ((!needUnblock && needBlock) ||\n            isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector));\n    }\n    if (node.nodeType === node.TEXT_NODE) {\n        return isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector);\n    }\n    return isBlocked(node.parentNode, blockClass, blockSelector, unblockSelector);\n}\nfunction isIgnored(n) {\n    if ('__sn' in n) {\n        return n.__sn.id === IGNORED_NODE;\n    }\n    return false;\n}\nfunction isAncestorRemoved(target, mirror) {\n    if (isShadowRoot(target)) {\n        return false;\n    }\n    const id = mirror.getId(target);\n    if (!mirror.has(id)) {\n        return true;\n    }\n    if (target.parentNode &&\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\n        return false;\n    }\n    if (!target.parentNode) {\n        return true;\n    }\n    return isAncestorRemoved(target.parentNode, mirror);\n}\nfunction isTouchEvent(event) {\n    return Boolean(event.changedTouches);\n}\nfunction polyfill(win = window) {\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\n        win.NodeList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\n        win.DOMTokenList.prototype.forEach = Array.prototype\n            .forEach;\n    }\n    if (!Node.prototype.contains) {\n        Node.prototype.contains = function contains(node) {\n            if (!(0 in arguments)) {\n                throw new TypeError('1 argument is required');\n            }\n            do {\n                if (this === node) {\n                    return true;\n                }\n            } while ((node = node && node.parentNode));\n            return false;\n        };\n    }\n}\nfunction isIframeINode(node) {\n    if ('__sn' in node) {\n        return (node.__sn.type === NodeType.Element && node.__sn.tagName === 'iframe');\n    }\n    return false;\n}\nfunction hasShadowRoot(n) {\n    return Boolean(n === null || n === void 0 ? void 0 : n.shadowRoot);\n}\n\nfunction isNodeInLinkedList(n) {\n    return '__ln' in n;\n}\nclass DoubleLinkedList {\n    constructor() {\n        this.length = 0;\n        this.head = null;\n    }\n    get(position) {\n        if (position >= this.length) {\n            throw new Error('Position outside of list range');\n        }\n        let current = this.head;\n        for (let index = 0; index < position; index++) {\n            current = (current === null || current === void 0 ? void 0 : current.next) || null;\n        }\n        return current;\n    }\n    addNode(n) {\n        const node = {\n            value: n,\n            previous: null,\n            next: null,\n        };\n        n.__ln = node;\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\n            const current = n.previousSibling.__ln.next;\n            node.next = current;\n            node.previous = n.previousSibling.__ln;\n            n.previousSibling.__ln.next = node;\n            if (current) {\n                current.previous = node;\n            }\n        }\n        else if (n.nextSibling &&\n            isNodeInLinkedList(n.nextSibling) &&\n            n.nextSibling.__ln.previous) {\n            const current = n.nextSibling.__ln.previous;\n            node.previous = current;\n            node.next = n.nextSibling.__ln;\n            n.nextSibling.__ln.previous = node;\n            if (current) {\n                current.next = node;\n            }\n        }\n        else {\n            if (this.head) {\n                this.head.previous = node;\n            }\n            node.next = this.head;\n            this.head = node;\n        }\n        this.length++;\n    }\n    removeNode(n) {\n        const current = n.__ln;\n        if (!this.head) {\n            return;\n        }\n        if (!current.previous) {\n            this.head = current.next;\n            if (this.head) {\n                this.head.previous = null;\n            }\n        }\n        else {\n            current.previous.next = current.next;\n            if (current.next) {\n                current.next.previous = current.previous;\n            }\n        }\n        if (n.__ln) {\n            delete n.__ln;\n        }\n        this.length--;\n    }\n}\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\nfunction isINode(n) {\n    return '__sn' in n;\n}\nclass MutationBuffer {\n    constructor() {\n        this.frozen = false;\n        this.locked = false;\n        this.texts = [];\n        this.attributes = [];\n        this.removes = [];\n        this.mapRemoves = [];\n        this.movedMap = {};\n        this.addedSet = new Set();\n        this.movedSet = new Set();\n        this.droppedSet = new Set();\n        this.processMutations = (mutations) => {\n            mutations.forEach(this.processMutation);\n            this.emit();\n        };\n        this.emit = () => {\n            if (this.frozen || this.locked) {\n                return;\n            }\n            const adds = [];\n            const addList = new DoubleLinkedList();\n            const getNextId = (n) => {\n                let ns = n;\n                let nextId = IGNORED_NODE;\n                while (nextId === IGNORED_NODE) {\n                    ns = ns && ns.nextSibling;\n                    nextId = ns && this.mirror.getId(ns);\n                }\n                return nextId;\n            };\n            const pushAdd = (n) => {\n                var _a, _b, _c, _d, _e;\n                const shadowHost = n.getRootNode\n                    ? (_a = n.getRootNode()) === null || _a === void 0 ? void 0 : _a.host\n                    : null;\n                let rootShadowHost = shadowHost;\n                while ((_c = (_b = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _b === void 0 ? void 0 : _b.call(rootShadowHost)) === null || _c === void 0 ? void 0 : _c.host)\n                    rootShadowHost =\n                        ((_e = (_d = rootShadowHost === null || rootShadowHost === void 0 ? void 0 : rootShadowHost.getRootNode) === null || _d === void 0 ? void 0 : _d.call(rootShadowHost)) === null || _e === void 0 ? void 0 : _e.host) ||\n                            null;\n                const notInDoc = !this.doc.contains(n) &&\n                    (!rootShadowHost || !this.doc.contains(rootShadowHost));\n                if (!n.parentNode || notInDoc) {\n                    return;\n                }\n                const parentId = isShadowRoot(n.parentNode)\n                    ? this.mirror.getId(shadowHost)\n                    : this.mirror.getId(n.parentNode);\n                const nextId = getNextId(n);\n                if (parentId === -1 || nextId === -1) {\n                    return addList.addNode(n);\n                }\n                let sn = serializeNodeWithId(n, {\n                    doc: this.doc,\n                    map: this.mirror.map,\n                    blockClass: this.blockClass,\n                    blockSelector: this.blockSelector,\n                    unblockSelector: this.unblockSelector,\n                    maskTextClass: this.maskTextClass,\n                    maskTextSelector: this.maskTextSelector,\n                    unmaskTextSelector: this.unmaskTextSelector,\n                    maskInputSelector: this.maskInputSelector,\n                    unmaskInputSelector: this.unmaskInputSelector,\n                    skipChild: true,\n                    inlineStylesheet: this.inlineStylesheet,\n                    maskAllText: this.maskAllText,\n                    maskInputOptions: this.maskInputOptions,\n                    maskTextFn: this.maskTextFn,\n                    maskInputFn: this.maskInputFn,\n                    slimDOMOptions: this.slimDOMOptions,\n                    recordCanvas: this.recordCanvas,\n                    inlineImages: this.inlineImages,\n                    onSerialize: (currentN) => {\n                        if (isIframeINode(currentN)) {\n                            this.iframeManager.addIframe(currentN);\n                        }\n                        if (hasShadowRoot(n)) {\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                        }\n                    },\n                    onIframeLoad: (iframe, childSn) => {\n                        this.iframeManager.attachIframe(iframe, childSn);\n                        this.shadowDomManager.observeAttachShadow(iframe);\n                    },\n                });\n                if (sn) {\n                    adds.push({\n                        parentId,\n                        nextId,\n                        node: sn,\n                    });\n                }\n            };\n            while (this.mapRemoves.length) {\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\n            }\n            for (const n of this.movedSet) {\n                if (isParentRemoved(this.removes, n, this.mirror) &&\n                    !this.movedSet.has(n.parentNode)) {\n                    continue;\n                }\n                pushAdd(n);\n            }\n            for (const n of this.addedSet) {\n                if (!isAncestorInSet(this.droppedSet, n) &&\n                    !isParentRemoved(this.removes, n, this.mirror)) {\n                    pushAdd(n);\n                }\n                else if (isAncestorInSet(this.movedSet, n)) {\n                    pushAdd(n);\n                }\n                else {\n                    this.droppedSet.add(n);\n                }\n            }\n            let candidate = null;\n            while (addList.length) {\n                let node = null;\n                if (candidate) {\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\n                    const nextId = getNextId(candidate.value);\n                    if (parentId !== -1 && nextId !== -1) {\n                        node = candidate;\n                    }\n                }\n                if (!node) {\n                    for (let index = addList.length - 1; index >= 0; index--) {\n                        const _node = addList.get(index);\n                        if (_node) {\n                            const parentId = this.mirror.getId(_node.value.parentNode);\n                            const nextId = getNextId(_node.value);\n                            if (parentId !== -1 && nextId !== -1) {\n                                node = _node;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (!node) {\n                    while (addList.head) {\n                        addList.removeNode(addList.head.value);\n                    }\n                    break;\n                }\n                candidate = node.previous;\n                addList.removeNode(node.value);\n                pushAdd(node.value);\n            }\n            const payload = {\n                texts: this.texts\n                    .map((text) => ({\n                    id: this.mirror.getId(text.node),\n                    value: text.value,\n                }))\n                    .filter((text) => this.mirror.has(text.id)),\n                attributes: this.attributes\n                    .map((attribute) => ({\n                    id: this.mirror.getId(attribute.node),\n                    attributes: attribute.attributes,\n                }))\n                    .filter((attribute) => this.mirror.has(attribute.id)),\n                removes: this.removes,\n                adds,\n            };\n            if (!payload.texts.length &&\n                !payload.attributes.length &&\n                !payload.removes.length &&\n                !payload.adds.length) {\n                return;\n            }\n            this.texts = [];\n            this.attributes = [];\n            this.removes = [];\n            this.addedSet = new Set();\n            this.movedSet = new Set();\n            this.droppedSet = new Set();\n            this.movedMap = {};\n            this.mutationCb(payload);\n        };\n        this.processMutation = (m) => {\n            if (isIgnored(m.target)) {\n                return;\n            }\n            switch (m.type) {\n                case 'characterData': {\n                    const value = m.target.textContent;\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) && value !== m.oldValue) {\n                        this.texts.push({\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextSelector, this.maskAllText) && value\n                                ? this.maskTextFn\n                                    ? this.maskTextFn(value)\n                                    : value.replace(/[\\S]/g, '*')\n                                : value,\n                            node: m.target,\n                        });\n                    }\n                    break;\n                }\n                case 'attributes': {\n                    const target = m.target;\n                    let value = m.target.getAttribute(m.attributeName);\n                    if (m.attributeName === 'value') {\n                        value = maskInputValue({\n                            input: target,\n                            maskInputSelector: this.maskInputSelector,\n                            unmaskInputSelector: this.unmaskInputSelector,\n                            maskInputOptions: this.maskInputOptions,\n                            tagName: m.target.tagName,\n                            type: m.target.getAttribute('type'),\n                            value,\n                            maskInputFn: this.maskInputFn,\n                        });\n                    }\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) || value === m.oldValue) {\n                        return;\n                    }\n                    let item = this.attributes.find((a) => a.node === m.target);\n                    if (!item) {\n                        item = {\n                            node: m.target,\n                            attributes: {},\n                        };\n                        this.attributes.push(item);\n                    }\n                    if (m.attributeName === 'style') {\n                        const old = this.doc.createElement('span');\n                        if (m.oldValue) {\n                            old.setAttribute('style', m.oldValue);\n                        }\n                        if (item.attributes.style === undefined ||\n                            item.attributes.style === null) {\n                            item.attributes.style = {};\n                        }\n                        try {\n                            const styleObj = item.attributes.style;\n                            for (const pname of Array.from(target.style)) {\n                                const newValue = target.style.getPropertyValue(pname);\n                                const newPriority = target.style.getPropertyPriority(pname);\n                                if (newValue !== old.style.getPropertyValue(pname) ||\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\n                                    if (newPriority === '') {\n                                        styleObj[pname] = newValue;\n                                    }\n                                    else {\n                                        styleObj[pname] = [newValue, newPriority];\n                                    }\n                                }\n                            }\n                            for (const pname of Array.from(old.style)) {\n                                if (target.style.getPropertyValue(pname) === '') {\n                                    styleObj[pname] = false;\n                                }\n                            }\n                        }\n                        catch (error) {\n                            console.warn('[rrweb] Error when parsing update to style attribute:', error);\n                        }\n                    }\n                    else {\n                        const element = m.target;\n                        item.attributes[m.attributeName] = transformAttribute(this.doc, element, element.tagName, m.attributeName, value, this.maskAllText, this.maskTextFn);\n                    }\n                    break;\n                }\n                case 'childList': {\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\n                    m.removedNodes.forEach((n) => {\n                        const nodeId = this.mirror.getId(n);\n                        const parentId = isShadowRoot(m.target)\n                            ? this.mirror.getId(m.target.host)\n                            : this.mirror.getId(m.target);\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector) || isIgnored(n)) {\n                            return;\n                        }\n                        if (this.addedSet.has(n)) {\n                            deepDelete(this.addedSet, n);\n                            this.droppedSet.add(n);\n                        }\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\n                        else if (this.movedSet.has(n) &&\n                            this.movedMap[moveKey(nodeId, parentId)]) {\n                            deepDelete(this.movedSet, n);\n                        }\n                        else {\n                            this.removes.push({\n                                parentId,\n                                id: nodeId,\n                                isShadow: isShadowRoot(m.target) ? true : undefined,\n                            });\n                        }\n                        this.mapRemoves.push(n);\n                    });\n                    break;\n                }\n            }\n        };\n        this.genAdds = (n, target) => {\n            if (target && isBlocked(target, this.blockClass, this.blockSelector, this.unblockSelector)) {\n                return;\n            }\n            if (isINode(n)) {\n                if (isIgnored(n)) {\n                    return;\n                }\n                this.movedSet.add(n);\n                let targetId = null;\n                if (target && isINode(target)) {\n                    targetId = target.__sn.id;\n                }\n                if (targetId) {\n                    this.movedMap[moveKey(n.__sn.id, targetId)] = true;\n                }\n            }\n            else {\n                this.addedSet.add(n);\n                this.droppedSet.delete(n);\n            }\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector))\n                n.childNodes.forEach((childN) => this.genAdds(childN));\n        };\n    }\n    init(options) {\n        [\n            'mutationCb',\n            'blockClass',\n            'blockSelector',\n            'unblockSelector',\n            'maskTextClass',\n            'maskTextSelector',\n            'unmaskTextSelector',\n            'maskInputSelector',\n            'unmaskInputSelector',\n            'inlineStylesheet',\n            'maskAllText',\n            'maskInputOptions',\n            'maskTextFn',\n            'maskInputFn',\n            'recordCanvas',\n            'inlineImages',\n            'slimDOMOptions',\n            'doc',\n            'mirror',\n            'iframeManager',\n            'shadowDomManager',\n            'canvasManager',\n        ].forEach((key) => {\n            this[key] = options[key];\n        });\n    }\n    freeze() {\n        this.frozen = true;\n        this.canvasManager.freeze();\n    }\n    unfreeze() {\n        this.frozen = false;\n        this.canvasManager.unfreeze();\n        this.emit();\n    }\n    isFrozen() {\n        return this.frozen;\n    }\n    lock() {\n        this.locked = true;\n        this.canvasManager.lock();\n    }\n    unlock() {\n        this.locked = false;\n        this.canvasManager.unlock();\n        this.emit();\n    }\n    reset() {\n        this.shadowDomManager.reset();\n        this.canvasManager.reset();\n    }\n}\nfunction deepDelete(addsSet, n) {\n    addsSet.delete(n);\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\n}\nfunction isParentRemoved(removes, n, mirror) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    const parentId = mirror.getId(parentNode);\n    if (removes.some((r) => r.id === parentId)) {\n        return true;\n    }\n    return isParentRemoved(removes, parentNode, mirror);\n}\nfunction isAncestorInSet(set, n) {\n    const { parentNode } = n;\n    if (!parentNode) {\n        return false;\n    }\n    if (set.has(parentNode)) {\n        return true;\n    }\n    return isAncestorInSet(set, parentNode);\n}\n\nconst callbackWrapper = (cb) => {\n    const rrwebWrapped = (...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            try {\n                error.__rrweb__ = true;\n            }\n            catch (_a) {\n            }\n            throw error;\n        }\n    };\n    return rrwebWrapped;\n};\n\nconst mutationBuffers = [];\nfunction getEventTarget(event) {\n    try {\n        if ('composedPath' in event) {\n            const path = event.composedPath();\n            if (path.length) {\n                return path[0];\n            }\n        }\n        else if ('path' in event && event.path.length) {\n            return event.path[0];\n        }\n    }\n    catch (_a) { }\n    return event && event.target;\n}\nfunction initMutationObserver(options, rootEl) {\n    var _a, _b;\n    const mutationBuffer = new MutationBuffer();\n    mutationBuffers.push(mutationBuffer);\n    mutationBuffer.init(options);\n    let mutationObserverCtor = window.MutationObserver ||\n        window.__rrMutationObserver;\n    const angularZoneSymbol = (_b = (_a = window === null || window === void 0 ? void 0 : window.Zone) === null || _a === void 0 ? void 0 : _a.__symbol__) === null || _b === void 0 ? void 0 : _b.call(_a, 'MutationObserver');\n    if (angularZoneSymbol &&\n        window[angularZoneSymbol]) {\n        mutationObserverCtor = window[angularZoneSymbol];\n    }\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\n        if (options.onMutation && options.onMutation(mutations) === false) {\n            return;\n        }\n        mutationBuffer.processMutations(mutations);\n    }));\n    observer.observe(rootEl, {\n        attributes: true,\n        attributeOldValue: true,\n        characterData: true,\n        characterDataOldValue: true,\n        childList: true,\n        subtree: true,\n    });\n    return observer;\n}\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\n    if (sampling.mousemove === false) {\n        return () => { };\n    }\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\n        ? sampling.mousemoveCallback\n        : 500;\n    let positions = [];\n    let timeBaseline;\n    const wrappedCb = throttle((source) => {\n        const totalOffset = Date.now() - timeBaseline;\n        callbackWrapper(mousemoveCb)(positions.map((p) => {\n            p.timeOffset -= totalOffset;\n            return p;\n        }), source);\n        positions = [];\n        timeBaseline = null;\n    }, callbackThreshold);\n    const updatePosition = throttle((evt) => {\n        const target = getEventTarget(evt);\n        const { clientX, clientY } = isTouchEvent(evt)\n            ? evt.changedTouches[0]\n            : evt;\n        if (!timeBaseline) {\n            timeBaseline = Date.now();\n        }\n        positions.push({\n            x: clientX,\n            y: clientY,\n            id: mirror.getId(target),\n            timeOffset: Date.now() - timeBaseline,\n        });\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\n            ? IncrementalSource.Drag\n            : evt instanceof MouseEvent\n                ? IncrementalSource.MouseMove\n                : IncrementalSource.TouchMove);\n    }, threshold, {\n        trailing: false,\n    });\n    const handlers = [\n        on('mousemove', callbackWrapper(updatePosition), doc),\n        on('touchmove', callbackWrapper(updatePosition), doc),\n        on('drag', callbackWrapper(updatePosition), doc),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    if (sampling.mouseInteraction === false) {\n        return () => { };\n    }\n    const disableMap = sampling.mouseInteraction === true ||\n        sampling.mouseInteraction === undefined\n        ? {}\n        : sampling.mouseInteraction;\n    const handlers = [];\n    const getHandler = (eventKey) => {\n        return (event) => {\n            const target = getEventTarget(event);\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n                return;\n            }\n            const e = isTouchEvent(event) ? event.changedTouches[0] : event;\n            if (!e) {\n                return;\n            }\n            const id = mirror.getId(target);\n            const { clientX, clientY } = e;\n            callbackWrapper(mouseInteractionCb)({\n                type: MouseInteractions[eventKey],\n                id,\n                x: clientX,\n                y: clientY,\n            });\n        };\n    };\n    Object.keys(MouseInteractions)\n        .filter((key) => Number.isNaN(Number(key)) &&\n        !key.endsWith('_Departed') &&\n        disableMap[key] !== false)\n        .forEach((eventKey) => {\n        const eventName = eventKey.toLowerCase();\n        const handler = callbackWrapper(getHandler(eventKey));\n        handlers.push(on(eventName, handler, doc));\n    });\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\n    const updatePosition = throttle((evt) => {\n        const target = getEventTarget(evt);\n        if (!target || isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const id = mirror.getId(target);\n        if (target === doc) {\n            const scrollEl = (doc.scrollingElement || doc.documentElement);\n            callbackWrapper(scrollCb)({\n                id,\n                x: scrollEl.scrollLeft,\n                y: scrollEl.scrollTop,\n            });\n        }\n        else {\n            callbackWrapper(scrollCb)({\n                id,\n                x: target.scrollLeft,\n                y: target.scrollTop,\n            });\n        }\n    }, sampling.scroll || 100);\n    return on('scroll', callbackWrapper(updatePosition), doc);\n}\nfunction initViewportResizeObserver({ viewportResizeCb, }) {\n    let lastH = -1;\n    let lastW = -1;\n    const updateDimension = throttle(() => {\n        const height = getWindowHeight();\n        const width = getWindowWidth();\n        if (lastH !== height || lastW !== width) {\n            callbackWrapper(viewportResizeCb)({\n                width: Number(width),\n                height: Number(height),\n            });\n            lastH = height;\n            lastW = width;\n        }\n    }, 200);\n    return on('resize', callbackWrapper(updateDimension), window);\n}\nfunction wrapEventWithUserTriggeredFlag(v, enable) {\n    const value = Object.assign({}, v);\n    if (!enable)\n        delete value.userTriggered;\n    return value;\n}\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap = new WeakMap();\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputSelector, unmaskInputSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, }) {\n    function eventHandler(event) {\n        let target = getEventTarget(event);\n        const userTriggered = event.isTrusted;\n        if (target && target.tagName === 'OPTION')\n            target = target.parentElement;\n        if (!target ||\n            !target.tagName ||\n            INPUT_TAGS.indexOf(target.tagName) < 0 ||\n            isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const type = target.type;\n        if (target.classList.contains(ignoreClass) ||\n            (ignoreSelector && target.matches(ignoreSelector))) {\n            return;\n        }\n        let text = target.value;\n        let isChecked = false;\n        if (type === 'radio' || type === 'checkbox') {\n            isChecked = target.checked;\n        }\n        else if (hasInputMaskOptions({\n            maskInputOptions,\n            maskInputSelector,\n            tagName: target.tagName,\n            type,\n        })) {\n            text = maskInputValue({\n                input: target,\n                maskInputOptions,\n                maskInputSelector,\n                unmaskInputSelector,\n                tagName: target.tagName,\n                type,\n                value: text,\n                maskInputFn,\n            });\n        }\n        cbWithDedup(target, callbackWrapper(wrapEventWithUserTriggeredFlag)({ text, isChecked, userTriggered }, userTriggeredOnInput));\n        const name = target.name;\n        if (type === 'radio' && name && isChecked) {\n            doc\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n                .forEach((el) => {\n                if (el !== target) {\n                    cbWithDedup(el, callbackWrapper(wrapEventWithUserTriggeredFlag)({\n                        text: el.value,\n                        isChecked: !isChecked,\n                        userTriggered: false,\n                    }, userTriggeredOnInput));\n                }\n            });\n        }\n    }\n    function cbWithDedup(target, v) {\n        const lastInputValue = lastInputValueMap.get(target);\n        if (!lastInputValue ||\n            lastInputValue.text !== v.text ||\n            lastInputValue.isChecked !== v.isChecked) {\n            lastInputValueMap.set(target, v);\n            const id = mirror.getId(target);\n            inputCb(Object.assign(Object.assign({}, v), { id }));\n        }\n    }\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(HTMLInputElement.prototype, 'value');\n    const hookProperties = [\n        [HTMLInputElement.prototype, 'value'],\n        [HTMLInputElement.prototype, 'checked'],\n        [HTMLSelectElement.prototype, 'value'],\n        [HTMLTextAreaElement.prototype, 'value'],\n        [HTMLSelectElement.prototype, 'selectedIndex'],\n        [HTMLOptionElement.prototype, 'selected'],\n    ];\n    if (propertyDescriptor && propertyDescriptor.set) {\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\n            set() {\n                callbackWrapper(eventHandler)({ target: this });\n            },\n        })));\n    }\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction getNestedCSSRulePositions(rule) {\n    const positions = [];\n    function recurse(childRule, pos) {\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\n            childRule.parentRule instanceof CSSGroupingRule) ||\n            (hasNestedCSSRule('CSSMediaRule') &&\n                childRule.parentRule instanceof CSSMediaRule) ||\n            (hasNestedCSSRule('CSSSupportsRule') &&\n                childRule.parentRule instanceof CSSSupportsRule) ||\n            (hasNestedCSSRule('CSSConditionRule') &&\n                childRule.parentRule instanceof CSSConditionRule)) {\n            const rules = Array.from(childRule.parentRule.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        else {\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\n            const index = rules.indexOf(childRule);\n            pos.unshift(index);\n        }\n        return pos;\n    }\n    return recurse(rule, positions);\n}\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror }, { win }) {\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\n        return () => { };\n    }\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [rule, index] = argumentsList;\n            const id = mirror.getId(thisArg.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id,\n                    adds: [{ rule, index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            const [index] = argumentsList;\n            const id = mirror.getId(thisArg.ownerNode);\n            if (id !== -1) {\n                styleSheetRuleCb({\n                    id,\n                    removes: [{ index }],\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const supportedNestedCSSRuleTypes = {};\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\n    }\n    else {\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\n        }\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\n        }\n    }\n    const unmodifiedFunctions = {};\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n        unmodifiedFunctions[typeKey] = {\n            insertRule: type.prototype.insertRule,\n            deleteRule: type.prototype.deleteRule,\n        };\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [rule, index] = argumentsList;\n                const id = mirror.getId(thisArg.parentStyleSheet.ownerNode);\n                if (id !== -1) {\n                    styleSheetRuleCb({\n                        id,\n                        adds: [\n                            {\n                                rule,\n                                index: [\n                                    ...getNestedCSSRulePositions(thisArg),\n                                    index || 0,\n                                ],\n                            },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\n                const [index] = argumentsList;\n                const id = mirror.getId(thisArg.parentStyleSheet.ownerNode);\n                if (id !== -1) {\n                    styleSheetRuleCb({\n                        id,\n                        removes: [\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\n                        ],\n                    });\n                }\n                return target.apply(thisArg, argumentsList);\n            }),\n        });\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\n        });\n    });\n}\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror }, { win }) {\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a, _b;\n            const [property, value, priority] = argumentsList;\n            const id = mirror.getId((_b = (_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n            if (id !== -1) {\n                styleDeclarationCb({\n                    id,\n                    set: {\n                        property,\n                        value,\n                        priority,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\n            var _a, _b;\n            const [property] = argumentsList;\n            const id = mirror.getId((_b = (_a = thisArg.parentRule) === null || _a === void 0 ? void 0 : _a.parentStyleSheet) === null || _b === void 0 ? void 0 : _b.ownerNode);\n            if (id !== -1) {\n                styleDeclarationCb({\n                    id,\n                    remove: {\n                        property,\n                    },\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\n                });\n            }\n            return target.apply(thisArg, argumentsList);\n        }),\n    });\n    return callbackWrapper(() => {\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\n    });\n}\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, }) {\n    const handler = (type) => throttle(callbackWrapper((event) => {\n        const target = getEventTarget(event);\n        if (!target || isBlocked(target, blockClass, blockSelector, unblockSelector)) {\n            return;\n        }\n        const { currentTime, volume, muted } = target;\n        mediaInteractionCb({\n            type,\n            id: mirror.getId(target),\n            currentTime,\n            volume,\n            muted,\n        });\n    }), sampling.media || 500);\n    const handlers = [\n        on('play', handler(0)),\n        on('pause', handler(1)),\n        on('seeked', handler(2)),\n        on('volumechange', handler(3)),\n    ];\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction initFontObserver({ fontCb, doc }) {\n    const win = doc.defaultView;\n    if (!win) {\n        return () => { };\n    }\n    const handlers = [];\n    const fontMap = new WeakMap();\n    const originalFontFace = win.FontFace;\n    win.FontFace = function FontFace(family, source, descriptors) {\n        const fontFace = new originalFontFace(family, source, descriptors);\n        fontMap.set(fontFace, {\n            family,\n            buffer: typeof source !== 'string',\n            descriptors,\n            fontSource: typeof source === 'string'\n                ? source\n                :\n                    JSON.stringify(Array.from(new Uint8Array(source))),\n        });\n        return fontFace;\n    };\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\n        return function (fontFace) {\n            setTimeout(() => {\n                const p = fontMap.get(fontFace);\n                if (p) {\n                    fontCb(p);\n                    fontMap.delete(fontFace);\n                }\n            }, 0);\n            return original.apply(this, [fontFace]);\n        };\n    });\n    handlers.push(() => {\n        win.FontFace = originalFontFace;\n    });\n    handlers.push(restoreHandler);\n    return callbackWrapper(() => {\n        handlers.forEach((h) => h());\n    });\n}\nfunction mergeHooks(o, hooks) {\n    const { mutationCb, mousemoveCb, mouseInteractionCb, scrollCb, viewportResizeCb, inputCb, mediaInteractionCb, styleSheetRuleCb, styleDeclarationCb, canvasMutationCb, fontCb, } = o;\n    o.mutationCb = (...p) => {\n        if (hooks.mutation) {\n            hooks.mutation(...p);\n        }\n        mutationCb(...p);\n    };\n    o.mousemoveCb = (...p) => {\n        if (hooks.mousemove) {\n            hooks.mousemove(...p);\n        }\n        mousemoveCb(...p);\n    };\n    o.mouseInteractionCb = (...p) => {\n        if (hooks.mouseInteraction) {\n            hooks.mouseInteraction(...p);\n        }\n        mouseInteractionCb(...p);\n    };\n    o.scrollCb = (...p) => {\n        if (hooks.scroll) {\n            hooks.scroll(...p);\n        }\n        scrollCb(...p);\n    };\n    o.viewportResizeCb = (...p) => {\n        if (hooks.viewportResize) {\n            hooks.viewportResize(...p);\n        }\n        viewportResizeCb(...p);\n    };\n    o.inputCb = (...p) => {\n        if (hooks.input) {\n            hooks.input(...p);\n        }\n        inputCb(...p);\n    };\n    o.mediaInteractionCb = (...p) => {\n        if (hooks.mediaInteaction) {\n            hooks.mediaInteaction(...p);\n        }\n        mediaInteractionCb(...p);\n    };\n    o.styleSheetRuleCb = (...p) => {\n        if (hooks.styleSheetRule) {\n            hooks.styleSheetRule(...p);\n        }\n        styleSheetRuleCb(...p);\n    };\n    o.styleDeclarationCb = (...p) => {\n        if (hooks.styleDeclaration) {\n            hooks.styleDeclaration(...p);\n        }\n        styleDeclarationCb(...p);\n    };\n    o.canvasMutationCb = (...p) => {\n        if (hooks.canvasMutation) {\n            hooks.canvasMutation(...p);\n        }\n        canvasMutationCb(...p);\n    };\n    o.fontCb = (...p) => {\n        if (hooks.font) {\n            hooks.font(...p);\n        }\n        fontCb(...p);\n    };\n}\nfunction initObservers(o, hooks = {}) {\n    const currentWindow = o.doc.defaultView;\n    if (!currentWindow) {\n        return () => { };\n    }\n    mergeHooks(o, hooks);\n    const mutationObserver = initMutationObserver(o, o.doc);\n    const mousemoveHandler = initMoveObserver(o);\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\n    const scrollHandler = initScrollObserver(o);\n    const viewportResizeHandler = initViewportResizeObserver(o);\n    const inputHandler = initInputObserver(o);\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\n    const styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\n    const styleDeclarationObserver = initStyleDeclarationObserver(o, {\n        win: currentWindow,\n    });\n    const fontObserver = o.collectFonts ? initFontObserver(o) : () => { };\n    const pluginHandlers = [];\n    for (const plugin of o.plugins) {\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\n    }\n    return callbackWrapper(() => {\n        mutationBuffers.forEach((b) => b.reset());\n        mutationObserver.disconnect();\n        mousemoveHandler();\n        mouseInteractionHandler();\n        scrollHandler();\n        viewportResizeHandler();\n        inputHandler();\n        mediaInteractionHandler();\n        try {\n            styleSheetObserver();\n            styleDeclarationObserver();\n        }\n        catch (e) {\n        }\n        fontObserver();\n        pluginHandlers.forEach((h) => h());\n    });\n}\nfunction hasNestedCSSRule(prop) {\n    return typeof window[prop] !== 'undefined';\n}\nfunction canMonkeyPatchNestedCSSRule(prop) {\n    return Boolean(typeof window[prop] !== 'undefined' &&\n        window[prop].prototype &&\n        'insertRule' in window[prop].prototype &&\n        'deleteRule' in window[prop].prototype);\n}\n\nclass IframeManager {\n    constructor(options) {\n        this.iframes = new WeakMap();\n        this.mutationCb = options.mutationCb;\n    }\n    addIframe(iframeEl) {\n        this.iframes.set(iframeEl, true);\n    }\n    addLoadListener(cb) {\n        this.loadListener = cb;\n    }\n    attachIframe(iframeEl, childSn) {\n        var _a;\n        this.mutationCb({\n            adds: [\n                {\n                    parentId: iframeEl.__sn.id,\n                    nextId: null,\n                    node: childSn,\n                },\n            ],\n            removes: [],\n            texts: [],\n            attributes: [],\n            isAttachIframe: true,\n        });\n        (_a = this.loadListener) === null || _a === void 0 ? void 0 : _a.call(this, iframeEl);\n    }\n}\n\nclass ShadowDomManager {\n    constructor(options) {\n        this.restorePatches = [];\n        this.mutationCb = options.mutationCb;\n        this.scrollCb = options.scrollCb;\n        this.bypassOptions = options.bypassOptions;\n        this.mirror = options.mirror;\n        const manager = this;\n        this.restorePatches.push(patch(HTMLElement.prototype, 'attachShadow', function (original) {\n            return function () {\n                const shadowRoot = original.apply(this, arguments);\n                if (this.shadowRoot)\n                    manager.addShadowRoot(this.shadowRoot, this.ownerDocument);\n                return shadowRoot;\n            };\n        }));\n    }\n    addShadowRoot(shadowRoot, doc) {\n        initMutationObserver(Object.assign(Object.assign({}, this.bypassOptions), { doc, mutationCb: this.mutationCb, mirror: this.mirror, shadowDomManager: this }), shadowRoot);\n        initScrollObserver(Object.assign(Object.assign({}, this.bypassOptions), { scrollCb: this.scrollCb, doc: shadowRoot, mirror: this.mirror }));\n    }\n    observeAttachShadow(iframeElement) {\n        if (iframeElement.contentWindow) {\n            const manager = this;\n            this.restorePatches.push(patch(iframeElement.contentWindow.HTMLElement.prototype, 'attachShadow', function (original) {\n                return function () {\n                    const shadowRoot = original.apply(this, arguments);\n                    if (this.shadowRoot)\n                        manager.addShadowRoot(this.shadowRoot, iframeElement.contentDocument);\n                    return shadowRoot;\n                };\n            }));\n        }\n    }\n    reset() {\n        this.restorePatches.forEach((restorePatch) => restorePatch());\n    }\n}\n\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n\nfunction __rest(s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n}\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, unblockSelector, blockSelector, mirror) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function (...args) {\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector)) {\n                        setTimeout(() => {\n                            const recordArgs = [...args];\n                            if (prop === 'drawImage') {\n                                if (recordArgs[0] &&\n                                    recordArgs[0] instanceof HTMLCanvasElement) {\n                                    const canvas = recordArgs[0];\n                                    const ctx = canvas.getContext('2d');\n                                    let imgd = ctx === null || ctx === void 0 ? void 0 : ctx.getImageData(0, 0, canvas.width, canvas.height);\n                                    let pix = imgd === null || imgd === void 0 ? void 0 : imgd.data;\n                                    recordArgs[0] = JSON.stringify(pix);\n                                }\n                            }\n                            cb(this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    try {\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType, ...args) {\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector)) {\n                    if (!('__context' in this))\n                        this.__context = contextType;\n                }\n                return original.apply(this, [contextType, ...args]);\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (_a) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\n/*\n * base64-arraybuffer 1.0.2 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2022 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\n\nconst webGLVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    let contextMap = webGLVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        webGLVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map((arg) => serializeArg(arg, win, ctx));\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        const name = value.constructor.name;\n        const base64 = encode(value);\n        return {\n            rr_type: name,\n            base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        const name = value.constructor.name;\n        const { src } = value;\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        const name = value.constructor.name;\n        const index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name,\n            index: index,\n        };\n    }\n    return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n    return [...args].map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\n};\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, unblockSelector, blockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(prototype, prop, function (original) {\n                return function (...args) {\n                    const result = original.apply(this, args);\n                    saveWebGLVar(result, win, prototype);\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector)) {\n                        const id = mirror.getId(this.canvas);\n                        const recordArgs = serializeArgs([...args], win, prototype);\n                        const mutation = {\n                            type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (_a) {\n            const hookHandler = hookSetter(prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nclass CanvasManager {\n    reset() {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    }\n    freeze() {\n        this.frozen = true;\n    }\n    unfreeze() {\n        this.frozen = false;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    constructor(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = function (target, mutation) {\n            const newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        if (options.recordCanvas === true)\n            this.initCanvasMutationObserver(options.win, options.blockClass, options.blockSelector, options.unblockSelector);\n    }\n    initCanvasMutationObserver(win, blockClass, unblockSelector, blockSelector) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector);\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        this.resetObservers = () => {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    }\n    startPendingCanvasMutationFlusher() {\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n        const setLatestRAFTimestamp = (timestamp) => {\n            this.rafStamps.latestId = timestamp;\n            requestAnimationFrame(setLatestRAFTimestamp);\n        };\n        requestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n        this.pendingCanvasMutations.forEach((values, canvas) => {\n            const id = this.mirror.getId(canvas);\n            this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        requestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        const values = valuesWithType.map((value) => {\n            const rest = __rest(value, [\"type\"]);\n            return rest;\n        });\n        const { type } = valuesWithType[0];\n        this.mutationCb({ id, type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    }\n}\n\nfunction wrapEvent(e) {\n    return Object.assign(Object.assign({}, e), { timestamp: Date.now() });\n}\nlet wrappedEmit;\nlet takeFullSnapshot;\nconst mirror = createMirror();\nfunction record(options = {}) {\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskTextClass = 'rr-mask', maskTextSelector = null, maskInputSelector = null, unmaskTextSelector = null, unmaskInputSelector = null, inlineStylesheet = true, maskAllText = false, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskInputFn, maskTextFn, hooks, packFn, sampling = {}, mousemoveWait, recordCanvas = false, userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, onMutation, } = options;\n    if (!emit) {\n        throw new Error('emit function is required');\n    }\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\n        sampling.mousemove = mousemoveWait;\n    }\n    const maskInputOptions = maskAllInputs === true\n        ? {\n            color: true,\n            date: true,\n            'datetime-local': true,\n            email: true,\n            month: true,\n            number: true,\n            range: true,\n            search: true,\n            tel: true,\n            text: true,\n            time: true,\n            url: true,\n            week: true,\n            textarea: true,\n            select: true,\n            password: true,\n        }\n        : _maskInputOptions !== undefined\n            ? _maskInputOptions\n            : { password: true };\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\n        ? {\n            script: true,\n            comment: true,\n            headFavicon: true,\n            headWhitespace: true,\n            headMetaSocial: true,\n            headMetaRobots: true,\n            headMetaHttpEquiv: true,\n            headMetaVerification: true,\n            headMetaAuthorship: _slimDOMOptions === 'all',\n            headMetaDescKeywords: _slimDOMOptions === 'all',\n        }\n        : _slimDOMOptions\n            ? _slimDOMOptions\n            : {};\n    polyfill();\n    let lastFullSnapshotEvent;\n    let incrementalSnapshotCount = 0;\n    const eventProcessor = (e) => {\n        for (const plugin of plugins || []) {\n            if (plugin.eventProcessor) {\n                e = plugin.eventProcessor(e);\n            }\n        }\n        if (packFn) {\n            e = packFn(e);\n        }\n        return e;\n    };\n    wrappedEmit = (e, isCheckout) => {\n        var _a;\n        if (((_a = mutationBuffers[0]) === null || _a === void 0 ? void 0 : _a.isFrozen()) &&\n            e.type !== EventType.FullSnapshot &&\n            !(e.type === EventType.IncrementalSnapshot &&\n                e.data.source === IncrementalSource.Mutation)) {\n            mutationBuffers.forEach((buf) => buf.unfreeze());\n        }\n        emit(eventProcessor(e), isCheckout);\n        if (e.type === EventType.FullSnapshot) {\n            lastFullSnapshotEvent = e;\n            incrementalSnapshotCount = 0;\n        }\n        else if (e.type === EventType.IncrementalSnapshot) {\n            if (e.data.source === IncrementalSource.Mutation &&\n                e.data.isAttachIframe) {\n                return;\n            }\n            incrementalSnapshotCount++;\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\n            const exceedTime = checkoutEveryNms &&\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\n            if (exceedCount || exceedTime) {\n                takeFullSnapshot(true);\n            }\n        }\n    };\n    const wrappedMutationEmit = (m) => {\n        wrappedEmit(wrapEvent({\n            type: EventType.IncrementalSnapshot,\n            data: Object.assign({ source: IncrementalSource.Mutation }, m),\n        }));\n    };\n    const wrappedScrollEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.Scroll }, p),\n    }));\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit(wrapEvent({\n        type: EventType.IncrementalSnapshot,\n        data: Object.assign({ source: IncrementalSource.CanvasMutation }, p),\n    }));\n    const iframeManager = new IframeManager({\n        mutationCb: wrappedMutationEmit,\n    });\n    const canvasManager = new CanvasManager({\n        recordCanvas,\n        mutationCb: wrappedCanvasMutationEmit,\n        win: window,\n        blockClass,\n        blockSelector,\n        unblockSelector,\n        mirror,\n    });\n    const shadowDomManager = new ShadowDomManager({\n        mutationCb: wrappedMutationEmit,\n        scrollCb: wrappedScrollEmit,\n        bypassOptions: {\n            onMutation,\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            maskInputSelector,\n            unmaskInputSelector,\n            inlineStylesheet,\n            maskAllText,\n            maskInputOptions,\n            maskTextFn,\n            maskInputFn,\n            recordCanvas,\n            inlineImages,\n            sampling,\n            slimDOMOptions,\n            iframeManager,\n            canvasManager,\n        },\n        mirror,\n    });\n    takeFullSnapshot = (isCheckout = false) => {\n        var _a, _b, _c, _d;\n        wrappedEmit(wrapEvent({\n            type: EventType.Meta,\n            data: {\n                href: window.location.href,\n                width: getWindowWidth(),\n                height: getWindowHeight(),\n            },\n        }), isCheckout);\n        mutationBuffers.forEach((buf) => buf.lock());\n        const [node, idNodeMap] = snapshot(document, {\n            blockClass,\n            blockSelector,\n            unblockSelector,\n            maskTextClass,\n            maskTextSelector,\n            unmaskTextSelector,\n            maskInputSelector,\n            unmaskInputSelector,\n            inlineStylesheet,\n            maskAllText,\n            maskAllInputs: maskInputOptions,\n            maskTextFn,\n            slimDOM: slimDOMOptions,\n            recordCanvas,\n            inlineImages,\n            onSerialize: (n) => {\n                if (isIframeINode(n)) {\n                    iframeManager.addIframe(n);\n                }\n                if (hasShadowRoot(n)) {\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\n                }\n            },\n            onIframeLoad: (iframe, childSn) => {\n                iframeManager.attachIframe(iframe, childSn);\n                shadowDomManager.observeAttachShadow(iframe);\n            },\n            keepIframeSrcFn,\n        });\n        if (!node) {\n            return console.warn('Failed to snapshot the document');\n        }\n        mirror.map = idNodeMap;\n        wrappedEmit(wrapEvent({\n            type: EventType.FullSnapshot,\n            data: {\n                node,\n                initialOffset: {\n                    left: window.pageXOffset !== undefined\n                        ? window.pageXOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollLeft) ||\n                            ((_b = (_a = document === null || document === void 0 ? void 0 : document.body) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.scrollLeft) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollLeft) ||\n                            0,\n                    top: window.pageYOffset !== undefined\n                        ? window.pageYOffset\n                        : (document === null || document === void 0 ? void 0 : document.documentElement.scrollTop) ||\n                            ((_d = (_c = document === null || document === void 0 ? void 0 : document.body) === null || _c === void 0 ? void 0 : _c.parentElement) === null || _d === void 0 ? void 0 : _d.scrollTop) ||\n                            (document === null || document === void 0 ? void 0 : document.body.scrollTop) ||\n                            0,\n                },\n            },\n        }));\n        mutationBuffers.forEach((buf) => buf.unlock());\n    };\n    try {\n        const handlers = [];\n        handlers.push(on('DOMContentLoaded', () => {\n            wrappedEmit(wrapEvent({\n                type: EventType.DomContentLoaded,\n                data: {},\n            }));\n        }));\n        const observe = (doc) => {\n            var _a;\n            return callbackWrapper(initObservers)({\n                onMutation,\n                mutationCb: wrappedMutationEmit,\n                mousemoveCb: (positions, source) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: {\n                        source,\n                        positions,\n                    },\n                })),\n                mouseInteractionCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MouseInteraction }, d),\n                })),\n                scrollCb: wrappedScrollEmit,\n                viewportResizeCb: (d) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.ViewportResize }, d),\n                })),\n                inputCb: (v) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Input }, v),\n                })),\n                mediaInteractionCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.MediaInteraction }, p),\n                })),\n                styleSheetRuleCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleSheetRule }, r),\n                })),\n                styleDeclarationCb: (r) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.StyleDeclaration }, r),\n                })),\n                canvasMutationCb: wrappedCanvasMutationEmit,\n                fontCb: (p) => wrappedEmit(wrapEvent({\n                    type: EventType.IncrementalSnapshot,\n                    data: Object.assign({ source: IncrementalSource.Font }, p),\n                })),\n                blockClass,\n                ignoreClass,\n                ignoreSelector,\n                maskTextClass,\n                maskTextSelector,\n                unmaskTextSelector,\n                maskInputSelector,\n                unmaskInputSelector,\n                maskInputOptions,\n                inlineStylesheet,\n                sampling,\n                recordCanvas,\n                inlineImages,\n                userTriggeredOnInput,\n                collectFonts,\n                doc,\n                maskAllText,\n                maskInputFn,\n                maskTextFn,\n                blockSelector,\n                unblockSelector,\n                slimDOMOptions,\n                mirror,\n                iframeManager,\n                shadowDomManager,\n                canvasManager,\n                plugins: ((_a = plugins === null || plugins === void 0 ? void 0 : plugins.filter((p) => p.observer)) === null || _a === void 0 ? void 0 : _a.map((p) => ({\n                    observer: p.observer,\n                    options: p.options,\n                    callback: (payload) => wrappedEmit(wrapEvent({\n                        type: EventType.Plugin,\n                        data: {\n                            plugin: p.name,\n                            payload,\n                        },\n                    })),\n                }))) || [],\n            }, hooks);\n        };\n        iframeManager.addLoadListener((iframeEl) => {\n            try {\n                handlers.push(observe(iframeEl.contentDocument));\n            }\n            catch (error) {\n                console.warn(error);\n            }\n        });\n        const init = () => {\n            takeFullSnapshot();\n            handlers.push(observe(document));\n        };\n        if (document.readyState === 'interactive' ||\n            document.readyState === 'complete') {\n            init();\n        }\n        else {\n            handlers.push(on('load', () => {\n                wrappedEmit(wrapEvent({\n                    type: EventType.Load,\n                    data: {},\n                }));\n                init();\n            }, window));\n        }\n        return () => {\n            handlers.forEach((h) => h());\n        };\n    }\n    catch (error) {\n        console.warn(error);\n    }\n}\nrecord.addCustomEvent = (tag, payload) => {\n    if (!wrappedEmit) {\n        throw new Error('please add custom event after start recording');\n    }\n    wrappedEmit(wrapEvent({\n        type: EventType.Custom,\n        data: {\n            tag,\n            payload,\n        },\n    }));\n};\nrecord.freezePage = () => {\n    mutationBuffers.forEach((buf) => buf.freeze());\n};\nrecord.takeFullSnapshot = (isCheckout) => {\n    if (!takeFullSnapshot) {\n        throw new Error('please take full snapshot after start recording');\n    }\n    takeFullSnapshot(isCheckout);\n};\nrecord.mirror = mirror;\n\nconst NAVIGATION_ENTRY_KEYS = [\n  'name',\n  'type',\n  'startTime',\n  'transferSize',\n  'duration',\n];\n\nfunction isNavigationEntryEqual(a) {\n  return function (b) {\n    return NAVIGATION_ENTRY_KEYS.every(key => a[key] === b[key]);\n  };\n}\n\n/**\n * There are some difficulties diagnosing why there are duplicate navigation\n * entries. We've witnessed several intermittent results:\n * - duplicate entries have duration = 0\n * - duplicate entries are the same object reference\n * - none of the above\n *\n * Compare the values of several keys to determine if the entries are duplicates or not.\n */\n// TODO (high-prio): Figure out wth is returned here\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction dedupePerformanceEntries(\n  currentList,\n  newList,\n) {\n  // Partition `currentList` into 3 different lists based on entryType\n  const [existingNavigationEntries, existingLcpEntries, existingEntries] = currentList.reduce(\n    (acc, entry) => {\n      if (entry.entryType === 'navigation') {\n        acc[0].push(entry );\n      } else if (entry.entryType === 'largest-contentful-paint') {\n        acc[1].push(entry );\n      } else {\n        acc[2].push(entry);\n      }\n      return acc;\n    },\n    [[], [], []],\n  );\n\n  const newEntries = [];\n  const newNavigationEntries = [];\n  let newLcpEntry = existingLcpEntries.length\n    ? existingLcpEntries[existingLcpEntries.length - 1] // Take the last element as list is sorted\n    : undefined;\n\n  newList.forEach(entry => {\n    if (entry.entryType === 'largest-contentful-paint') {\n      // We want the latest LCP event only\n      if (!newLcpEntry || newLcpEntry.startTime < entry.startTime) {\n        newLcpEntry = entry;\n      }\n      return;\n    }\n\n    if (entry.entryType === 'navigation') {\n      const navigationEntry = entry ;\n\n      // Check if the navigation entry is contained in currentList or newList\n      if (\n        // Ignore any navigation entries with duration 0, as they are likely duplicates\n        entry.duration > 0 &&\n        // Ensure new entry does not already exist in existing entries\n        !existingNavigationEntries.find(isNavigationEntryEqual(navigationEntry)) &&\n        // Ensure new entry does not already exist in new list of navigation entries\n        !newNavigationEntries.find(isNavigationEntryEqual(navigationEntry))\n      ) {\n        newNavigationEntries.push(navigationEntry);\n      }\n\n      // Otherwise this navigation entry is considered a duplicate and is thrown away\n      return;\n    }\n\n    newEntries.push(entry);\n  });\n\n  // Re-combine and sort by startTime\n  return [\n    ...(newLcpEntry ? [newLcpEntry] : []),\n    ...existingNavigationEntries,\n    ...existingEntries,\n    ...newEntries,\n    ...newNavigationEntries,\n  ].sort((a, b) => a.startTime - b.startTime);\n}\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n */\nfunction setupPerformanceObserver(replay) {\n  const performanceObserverHandler = (list) => {\n    // For whatever reason the observer was returning duplicate navigation\n    // entries (the other entry types were not duplicated).\n    const newPerformanceEntries = dedupePerformanceEntries(\n      replay.performanceEvents,\n      list.getEntries() ,\n    );\n    replay.performanceEvents = newPerformanceEntries;\n  };\n\n  const performanceObserver = new PerformanceObserver(performanceObserverHandler);\n\n  [\n    'element',\n    'event',\n    'first-input',\n    'largest-contentful-paint',\n    'layout-shift',\n    'longtask',\n    'navigation',\n    'paint',\n    'resource',\n  ].forEach(type => {\n    try {\n      performanceObserver.observe({\n        type,\n        buffered: true,\n      });\n    } catch (e) {\n      // This can throw if an entry type is not supported in the browser.\n      // Ignore these errors.\n    }\n  });\n\n  return performanceObserver;\n}\n\nconst r = `/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\nfunction t(t){let e=t.length;for(;--e>=0;)t[e]=0}const e=new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]),a=new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]),i=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]),n=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),s=new Array(576);t(s);const r=new Array(60);t(r);const o=new Array(512);t(o);const l=new Array(256);t(l);const h=new Array(29);t(h);const d=new Array(30);function _(t,e,a,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=a,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}let f,c,u;function w(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}t(d);const m=t=>t<256?o[t]:o[256+(t>>>7)],b=(t,e)=>{t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255},g=(t,e,a)=>{t.bi_valid>16-a?(t.bi_buf|=e<<t.bi_valid&65535,b(t,t.bi_buf),t.bi_buf=e>>16-t.bi_valid,t.bi_valid+=a-16):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=a)},p=(t,e,a)=>{g(t,a[2*e],a[2*e+1])},k=(t,e)=>{let a=0;do{a|=1&t,t>>>=1,a<<=1}while(--e>0);return a>>>1},v=(t,e,a)=>{const i=new Array(16);let n,s,r=0;for(n=1;n<=15;n++)r=r+a[n-1]<<1,i[n]=r;for(s=0;s<=e;s++){let e=t[2*s+1];0!==e&&(t[2*s]=k(i[e]++,e))}},y=t=>{let e;for(e=0;e<286;e++)t.dyn_ltree[2*e]=0;for(e=0;e<30;e++)t.dyn_dtree[2*e]=0;for(e=0;e<19;e++)t.bl_tree[2*e]=0;t.dyn_ltree[512]=1,t.opt_len=t.static_len=0,t.sym_next=t.matches=0},x=t=>{t.bi_valid>8?b(t,t.bi_buf):t.bi_valid>0&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0},z=(t,e,a,i)=>{const n=2*e,s=2*a;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[a]},A=(t,e,a)=>{const i=t.heap[a];let n=a<<1;for(;n<=t.heap_len&&(n<t.heap_len&&z(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!z(e,i,t.heap[n],t.depth));)t.heap[a]=t.heap[n],a=n,n<<=1;t.heap[a]=i},E=(t,i,n)=>{let s,r,o,_,f=0;if(0!==t.sym_next)do{s=255&t.pending_buf[t.sym_buf+f++],s+=(255&t.pending_buf[t.sym_buf+f++])<<8,r=t.pending_buf[t.sym_buf+f++],0===s?p(t,r,i):(o=l[r],p(t,o+256+1,i),_=e[o],0!==_&&(r-=h[o],g(t,r,_)),s--,o=m(s),p(t,o,n),_=a[o],0!==_&&(s-=d[o],g(t,s,_)))}while(f<t.sym_next);p(t,256,i)},R=(t,e)=>{const a=e.dyn_tree,i=e.stat_desc.static_tree,n=e.stat_desc.has_stree,s=e.stat_desc.elems;let r,o,l,h=-1;for(t.heap_len=0,t.heap_max=573,r=0;r<s;r++)0!==a[2*r]?(t.heap[++t.heap_len]=h=r,t.depth[r]=0):a[2*r+1]=0;for(;t.heap_len<2;)l=t.heap[++t.heap_len]=h<2?++h:0,a[2*l]=1,t.depth[l]=0,t.opt_len--,n&&(t.static_len-=i[2*l+1]);for(e.max_code=h,r=t.heap_len>>1;r>=1;r--)A(t,a,r);l=s;do{r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],A(t,a,1),o=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=o,a[2*l]=a[2*r]+a[2*o],t.depth[l]=(t.depth[r]>=t.depth[o]?t.depth[r]:t.depth[o])+1,a[2*r+1]=a[2*o+1]=l,t.heap[1]=l++,A(t,a,1)}while(t.heap_len>=2);t.heap[--t.heap_max]=t.heap[1],((t,e)=>{const a=e.dyn_tree,i=e.max_code,n=e.stat_desc.static_tree,s=e.stat_desc.has_stree,r=e.stat_desc.extra_bits,o=e.stat_desc.extra_base,l=e.stat_desc.max_length;let h,d,_,f,c,u,w=0;for(f=0;f<=15;f++)t.bl_count[f]=0;for(a[2*t.heap[t.heap_max]+1]=0,h=t.heap_max+1;h<573;h++)d=t.heap[h],f=a[2*a[2*d+1]+1]+1,f>l&&(f=l,w++),a[2*d+1]=f,d>i||(t.bl_count[f]++,c=0,d>=o&&(c=r[d-o]),u=a[2*d],t.opt_len+=u*(f+c),s&&(t.static_len+=u*(n[2*d+1]+c)));if(0!==w){do{for(f=l-1;0===t.bl_count[f];)f--;t.bl_count[f]--,t.bl_count[f+1]+=2,t.bl_count[l]--,w-=2}while(w>0);for(f=l;0!==f;f--)for(d=t.bl_count[f];0!==d;)_=t.heap[--h],_>i||(a[2*_+1]!==f&&(t.opt_len+=(f-a[2*_+1])*a[2*_],a[2*_+1]=f),d--)}})(t,e),v(a,h,t.bl_count)},Z=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),e[2*(a+1)+1]=65535,i=0;i<=a;i++)n=r,r=e[2*(i+1)+1],++o<l&&n===r||(o<h?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[32]++):o<=10?t.bl_tree[34]++:t.bl_tree[36]++,o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4))},U=(t,e,a)=>{let i,n,s=-1,r=e[1],o=0,l=7,h=4;for(0===r&&(l=138,h=3),i=0;i<=a;i++)if(n=r,r=e[2*(i+1)+1],!(++o<l&&n===r)){if(o<h)do{p(t,n,t.bl_tree)}while(0!=--o);else 0!==n?(n!==s&&(p(t,n,t.bl_tree),o--),p(t,16,t.bl_tree),g(t,o-3,2)):o<=10?(p(t,17,t.bl_tree),g(t,o-3,3)):(p(t,18,t.bl_tree),g(t,o-11,7));o=0,s=n,0===r?(l=138,h=3):n===r?(l=6,h=3):(l=7,h=4)}};let S=!1;const D=(t,e,a,i)=>{g(t,0+(i?1:0),3),x(t),b(t,a),b(t,~a),a&&t.pending_buf.set(t.window.subarray(e,e+a),t.pending),t.pending+=a};var T=(t,e,a,i)=>{let o,l,h=0;t.level>0?(2===t.strm.data_type&&(t.strm.data_type=(t=>{let e,a=4093624447;for(e=0;e<=31;e++,a>>>=1)if(1&a&&0!==t.dyn_ltree[2*e])return 0;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return 1;for(e=32;e<256;e++)if(0!==t.dyn_ltree[2*e])return 1;return 0})(t)),R(t,t.l_desc),R(t,t.d_desc),h=(t=>{let e;for(Z(t,t.dyn_ltree,t.l_desc.max_code),Z(t,t.dyn_dtree,t.d_desc.max_code),R(t,t.bl_desc),e=18;e>=3&&0===t.bl_tree[2*n[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e})(t),o=t.opt_len+3+7>>>3,l=t.static_len+3+7>>>3,l<=o&&(o=l)):o=l=a+5,a+4<=o&&-1!==e?D(t,e,a,i):4===t.strategy||l===o?(g(t,2+(i?1:0),3),E(t,s,r)):(g(t,4+(i?1:0),3),((t,e,a,i)=>{let s;for(g(t,e-257,5),g(t,a-1,5),g(t,i-4,4),s=0;s<i;s++)g(t,t.bl_tree[2*n[s]+1],3);U(t,t.dyn_ltree,e-1),U(t,t.dyn_dtree,a-1)})(t,t.l_desc.max_code+1,t.d_desc.max_code+1,h+1),E(t,t.dyn_ltree,t.dyn_dtree)),y(t),i&&x(t)},O={_tr_init:t=>{S||((()=>{let t,n,w,m,b;const g=new Array(16);for(w=0,m=0;m<28;m++)for(h[m]=w,t=0;t<1<<e[m];t++)l[w++]=m;for(l[w-1]=m,b=0,m=0;m<16;m++)for(d[m]=b,t=0;t<1<<a[m];t++)o[b++]=m;for(b>>=7;m<30;m++)for(d[m]=b<<7,t=0;t<1<<a[m]-7;t++)o[256+b++]=m;for(n=0;n<=15;n++)g[n]=0;for(t=0;t<=143;)s[2*t+1]=8,t++,g[8]++;for(;t<=255;)s[2*t+1]=9,t++,g[9]++;for(;t<=279;)s[2*t+1]=7,t++,g[7]++;for(;t<=287;)s[2*t+1]=8,t++,g[8]++;for(v(s,287,g),t=0;t<30;t++)r[2*t+1]=5,r[2*t]=k(t,5);f=new _(s,e,257,286,15),c=new _(r,a,0,30,15),u=new _(new Array(0),i,0,19,7)})(),S=!0),t.l_desc=new w(t.dyn_ltree,f),t.d_desc=new w(t.dyn_dtree,c),t.bl_desc=new w(t.bl_tree,u),t.bi_buf=0,t.bi_valid=0,y(t)},_tr_stored_block:D,_tr_flush_block:T,_tr_tally:(t,e,a)=>(t.pending_buf[t.sym_buf+t.sym_next++]=e,t.pending_buf[t.sym_buf+t.sym_next++]=e>>8,t.pending_buf[t.sym_buf+t.sym_next++]=a,0===e?t.dyn_ltree[2*a]++:(t.matches++,e--,t.dyn_ltree[2*(l[a]+256+1)]++,t.dyn_dtree[2*m(e)]++),t.sym_next===t.sym_end),_tr_align:t=>{g(t,2,3),p(t,256,s),(t=>{16===t.bi_valid?(b(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):t.bi_valid>=8&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)})(t)}};var F=(t,e,a,i)=>{let n=65535&t|0,s=t>>>16&65535|0,r=0;for(;0!==a;){r=a>2e3?2e3:a,a-=r;do{n=n+e[i++]|0,s=s+n|0}while(--r);n%=65521,s%=65521}return n|s<<16|0};const L=new Uint32Array((()=>{let t,e=[];for(var a=0;a<256;a++){t=a;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[a]=t}return e})());var N=(t,e,a,i)=>{const n=L,s=i+a;t^=-1;for(let a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t},I={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"},B={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_MEM_ERROR:-4,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};const{_tr_init:C,_tr_stored_block:H,_tr_flush_block:M,_tr_tally:j,_tr_align:K}=O,{Z_NO_FLUSH:P,Z_PARTIAL_FLUSH:Y,Z_FULL_FLUSH:G,Z_FINISH:X,Z_BLOCK:W,Z_OK:q,Z_STREAM_END:J,Z_STREAM_ERROR:Q,Z_DATA_ERROR:V,Z_BUF_ERROR:$,Z_DEFAULT_COMPRESSION:tt,Z_FILTERED:et,Z_HUFFMAN_ONLY:at,Z_RLE:it,Z_FIXED:nt,Z_DEFAULT_STRATEGY:st,Z_UNKNOWN:rt,Z_DEFLATED:ot}=B,lt=(t,e)=>(t.msg=I[e],e),ht=t=>2*t-(t>4?9:0),dt=t=>{let e=t.length;for(;--e>=0;)t[e]=0},_t=t=>{let e,a,i,n=t.w_size;e=t.hash_size,i=e;do{a=t.head[--i],t.head[i]=a>=n?a-n:0}while(--e);e=n,i=e;do{a=t.prev[--i],t.prev[i]=a>=n?a-n:0}while(--e)};let ft=(t,e,a)=>(e<<t.hash_shift^a)&t.hash_mask;const ct=t=>{const e=t.state;let a=e.pending;a>t.avail_out&&(a=t.avail_out),0!==a&&(t.output.set(e.pending_buf.subarray(e.pending_out,e.pending_out+a),t.next_out),t.next_out+=a,e.pending_out+=a,t.total_out+=a,t.avail_out-=a,e.pending-=a,0===e.pending&&(e.pending_out=0))},ut=(t,e)=>{M(t,t.block_start>=0?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,ct(t.strm)},wt=(t,e)=>{t.pending_buf[t.pending++]=e},mt=(t,e)=>{t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e},bt=(t,e,a,i)=>{let n=t.avail_in;return n>i&&(n=i),0===n?0:(t.avail_in-=n,e.set(t.input.subarray(t.next_in,t.next_in+n),a),1===t.state.wrap?t.adler=F(t.adler,e,n,a):2===t.state.wrap&&(t.adler=N(t.adler,e,n,a)),t.next_in+=n,t.total_in+=n,n)},gt=(t,e)=>{let a,i,n=t.max_chain_length,s=t.strstart,r=t.prev_length,o=t.nice_match;const l=t.strstart>t.w_size-262?t.strstart-(t.w_size-262):0,h=t.window,d=t.w_mask,_=t.prev,f=t.strstart+258;let c=h[s+r-1],u=h[s+r];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(a=e,h[a+r]===u&&h[a+r-1]===c&&h[a]===h[s]&&h[++a]===h[s+1]){s+=2,a++;do{}while(h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&h[++s]===h[++a]&&s<f);if(i=258-(f-s),s=f-258,i>r){if(t.match_start=e,r=i,i>=o)break;c=h[s+r-1],u=h[s+r]}}}while((e=_[e&d])>l&&0!=--n);return r<=t.lookahead?r:t.lookahead},pt=t=>{const e=t.w_size;let a,i,n;do{if(i=t.window_size-t.lookahead-t.strstart,t.strstart>=e+(e-262)&&(t.window.set(t.window.subarray(e,e+e-i),0),t.match_start-=e,t.strstart-=e,t.block_start-=e,t.insert>t.strstart&&(t.insert=t.strstart),_t(t),i+=e),0===t.strm.avail_in)break;if(a=bt(t.strm,t.window,t.strstart+t.lookahead,i),t.lookahead+=a,t.lookahead+t.insert>=3)for(n=t.strstart-t.insert,t.ins_h=t.window[n],t.ins_h=ft(t,t.ins_h,t.window[n+1]);t.insert&&(t.ins_h=ft(t,t.ins_h,t.window[n+3-1]),t.prev[n&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=n,n++,t.insert--,!(t.lookahead+t.insert<3)););}while(t.lookahead<262&&0!==t.strm.avail_in)},kt=(t,e)=>{let a,i,n,s=t.pending_buf_size-5>t.w_size?t.w_size:t.pending_buf_size-5,r=0,o=t.strm.avail_in;do{if(a=65535,n=t.bi_valid+42>>3,t.strm.avail_out<n)break;if(n=t.strm.avail_out-n,i=t.strstart-t.block_start,a>i+t.strm.avail_in&&(a=i+t.strm.avail_in),a>n&&(a=n),a<s&&(0===a&&e!==X||e===P||a!==i+t.strm.avail_in))break;r=e===X&&a===i+t.strm.avail_in?1:0,H(t,0,0,r),t.pending_buf[t.pending-4]=a,t.pending_buf[t.pending-3]=a>>8,t.pending_buf[t.pending-2]=~a,t.pending_buf[t.pending-1]=~a>>8,ct(t.strm),i&&(i>a&&(i=a),t.strm.output.set(t.window.subarray(t.block_start,t.block_start+i),t.strm.next_out),t.strm.next_out+=i,t.strm.avail_out-=i,t.strm.total_out+=i,t.block_start+=i,a-=i),a&&(bt(t.strm,t.strm.output,t.strm.next_out,a),t.strm.next_out+=a,t.strm.avail_out-=a,t.strm.total_out+=a)}while(0===r);return o-=t.strm.avail_in,o&&(o>=t.w_size?(t.matches=2,t.window.set(t.strm.input.subarray(t.strm.next_in-t.w_size,t.strm.next_in),0),t.strstart=t.w_size,t.insert=t.strstart):(t.window_size-t.strstart<=o&&(t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,t.insert>t.strstart&&(t.insert=t.strstart)),t.window.set(t.strm.input.subarray(t.strm.next_in-o,t.strm.next_in),t.strstart),t.strstart+=o,t.insert+=o>t.w_size-t.insert?t.w_size-t.insert:o),t.block_start=t.strstart),t.high_water<t.strstart&&(t.high_water=t.strstart),r?4:e!==P&&e!==X&&0===t.strm.avail_in&&t.strstart===t.block_start?2:(n=t.window_size-t.strstart,t.strm.avail_in>n&&t.block_start>=t.w_size&&(t.block_start-=t.w_size,t.strstart-=t.w_size,t.window.set(t.window.subarray(t.w_size,t.w_size+t.strstart),0),t.matches<2&&t.matches++,n+=t.w_size,t.insert>t.strstart&&(t.insert=t.strstart)),n>t.strm.avail_in&&(n=t.strm.avail_in),n&&(bt(t.strm,t.window,t.strstart,n),t.strstart+=n,t.insert+=n>t.w_size-t.insert?t.w_size-t.insert:n),t.high_water<t.strstart&&(t.high_water=t.strstart),n=t.bi_valid+42>>3,n=t.pending_buf_size-n>65535?65535:t.pending_buf_size-n,s=n>t.w_size?t.w_size:n,i=t.strstart-t.block_start,(i>=s||(i||e===X)&&e!==P&&0===t.strm.avail_in&&i<=n)&&(a=i>n?n:i,r=e===X&&0===t.strm.avail_in&&a===i?1:0,H(t,t.block_start,a,r),t.block_start+=a,ct(t.strm)),r?3:1)},vt=(t,e)=>{let a,i;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==a&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a)),t.match_length>=3)if(i=j(t,t.strstart-t.match_start,t.match_length-3),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=3){t.match_length--;do{t.strstart++,t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart}while(0!=--t.match_length);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=ft(t,t.ins_h,t.window[t.strstart+1]);else i=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2},yt=(t,e)=>{let a,i,n;for(;;){if(t.lookahead<262){if(pt(t),t.lookahead<262&&e===P)return 1;if(0===t.lookahead)break}if(a=0,t.lookahead>=3&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=2,0!==a&&t.prev_length<t.max_lazy_match&&t.strstart-a<=t.w_size-262&&(t.match_length=gt(t,a),t.match_length<=5&&(t.strategy===et||3===t.match_length&&t.strstart-t.match_start>4096)&&(t.match_length=2)),t.prev_length>=3&&t.match_length<=t.prev_length){n=t.strstart+t.lookahead-3,i=j(t,t.strstart-1-t.prev_match,t.prev_length-3),t.lookahead-=t.prev_length-1,t.prev_length-=2;do{++t.strstart<=n&&(t.ins_h=ft(t,t.ins_h,t.window[t.strstart+3-1]),a=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart)}while(0!=--t.prev_length);if(t.match_available=0,t.match_length=2,t.strstart++,i&&(ut(t,!1),0===t.strm.avail_out))return 1}else if(t.match_available){if(i=j(t,0,t.window[t.strstart-1]),i&&ut(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return 1}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=j(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<2?t.strstart:2,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2};function xt(t,e,a,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=a,this.max_chain=i,this.func=n}const zt=[new xt(0,0,0,0,kt),new xt(4,4,8,4,vt),new xt(4,5,16,8,vt),new xt(4,6,32,32,vt),new xt(4,4,16,16,yt),new xt(8,16,32,32,yt),new xt(8,16,128,128,yt),new xt(8,32,128,256,yt),new xt(32,128,258,1024,yt),new xt(32,258,258,4096,yt)];function At(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=ot,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Uint16Array(1146),this.dyn_dtree=new Uint16Array(122),this.bl_tree=new Uint16Array(78),dt(this.dyn_ltree),dt(this.dyn_dtree),dt(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Uint16Array(16),this.heap=new Uint16Array(573),dt(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Uint16Array(573),dt(this.depth),this.sym_buf=0,this.lit_bufsize=0,this.sym_next=0,this.sym_end=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}const Et=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||42!==e.status&&57!==e.status&&69!==e.status&&73!==e.status&&91!==e.status&&103!==e.status&&113!==e.status&&666!==e.status?1:0},Rt=t=>{if(Et(t))return lt(t,Q);t.total_in=t.total_out=0,t.data_type=rt;const e=t.state;return e.pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=2===e.wrap?57:e.wrap?42:113,t.adler=2===e.wrap?0:1,e.last_flush=-2,C(e),q},Zt=t=>{const e=Rt(t);var a;return e===q&&((a=t.state).window_size=2*a.w_size,dt(a.head),a.max_lazy_match=zt[a.level].max_lazy,a.good_match=zt[a.level].good_length,a.nice_match=zt[a.level].nice_length,a.max_chain_length=zt[a.level].max_chain,a.strstart=0,a.block_start=0,a.lookahead=0,a.insert=0,a.match_length=a.prev_length=2,a.match_available=0,a.ins_h=0),e},Ut=(t,e,a,i,n,s)=>{if(!t)return Q;let r=1;if(e===tt&&(e=6),i<0?(r=0,i=-i):i>15&&(r=2,i-=16),n<1||n>9||a!==ot||i<8||i>15||e<0||e>9||s<0||s>nt||8===i&&1!==r)return lt(t,Q);8===i&&(i=9);const o=new At;return t.state=o,o.strm=t,o.status=42,o.wrap=r,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+3-1)/3),o.window=new Uint8Array(2*o.w_size),o.head=new Uint16Array(o.hash_size),o.prev=new Uint16Array(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new Uint8Array(o.pending_buf_size),o.sym_buf=o.lit_bufsize,o.sym_end=3*(o.lit_bufsize-1),o.level=e,o.strategy=s,o.method=a,Zt(t)};var St={deflateInit:(t,e)=>Ut(t,e,ot,15,8,st),deflateInit2:Ut,deflateReset:Zt,deflateResetKeep:Rt,deflateSetHeader:(t,e)=>Et(t)||2!==t.state.wrap?Q:(t.state.gzhead=e,q),deflate:(t,e)=>{if(Et(t)||e>W||e<0)return t?lt(t,Q):Q;const a=t.state;if(!t.output||0!==t.avail_in&&!t.input||666===a.status&&e!==X)return lt(t,0===t.avail_out?$:Q);const i=a.last_flush;if(a.last_flush=e,0!==a.pending){if(ct(t),0===t.avail_out)return a.last_flush=-1,q}else if(0===t.avail_in&&ht(e)<=ht(i)&&e!==X)return lt(t,$);if(666===a.status&&0!==t.avail_in)return lt(t,$);if(42===a.status&&0===a.wrap&&(a.status=113),42===a.status){let e=ot+(a.w_bits-8<<4)<<8,i=-1;if(i=a.strategy>=at||a.level<2?0:a.level<6?1:6===a.level?2:3,e|=i<<6,0!==a.strstart&&(e|=32),e+=31-e%31,mt(a,e),0!==a.strstart&&(mt(a,t.adler>>>16),mt(a,65535&t.adler)),t.adler=1,a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(57===a.status)if(t.adler=0,wt(a,31),wt(a,139),wt(a,8),a.gzhead)wt(a,(a.gzhead.text?1:0)+(a.gzhead.hcrc?2:0)+(a.gzhead.extra?4:0)+(a.gzhead.name?8:0)+(a.gzhead.comment?16:0)),wt(a,255&a.gzhead.time),wt(a,a.gzhead.time>>8&255),wt(a,a.gzhead.time>>16&255),wt(a,a.gzhead.time>>24&255),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,255&a.gzhead.os),a.gzhead.extra&&a.gzhead.extra.length&&(wt(a,255&a.gzhead.extra.length),wt(a,a.gzhead.extra.length>>8&255)),a.gzhead.hcrc&&(t.adler=N(t.adler,a.pending_buf,a.pending,0)),a.gzindex=0,a.status=69;else if(wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,0),wt(a,9===a.level?2:a.strategy>=at||a.level<2?4:0),wt(a,3),a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q;if(69===a.status){if(a.gzhead.extra){let e=a.pending,i=(65535&a.gzhead.extra.length)-a.gzindex;for(;a.pending+i>a.pending_buf_size;){let n=a.pending_buf_size-a.pending;if(a.pending_buf.set(a.gzhead.extra.subarray(a.gzindex,a.gzindex+n),a.pending),a.pending=a.pending_buf_size,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex+=n,ct(t),0!==a.pending)return a.last_flush=-1,q;e=0,i-=n}let n=new Uint8Array(a.gzhead.extra);a.pending_buf.set(n.subarray(a.gzindex,a.gzindex+i),a.pending),a.pending+=i,a.gzhead.hcrc&&a.pending>e&&(t.adler=N(t.adler,a.pending_buf,a.pending-e,e)),a.gzindex=0}a.status=73}if(73===a.status){if(a.gzhead.name){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.name.length?255&a.gzhead.name.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),a.gzindex=0}a.status=91}if(91===a.status){if(a.gzhead.comment){let e,i=a.pending;do{if(a.pending===a.pending_buf_size){if(a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i)),ct(t),0!==a.pending)return a.last_flush=-1,q;i=0}e=a.gzindex<a.gzhead.comment.length?255&a.gzhead.comment.charCodeAt(a.gzindex++):0,wt(a,e)}while(0!==e);a.gzhead.hcrc&&a.pending>i&&(t.adler=N(t.adler,a.pending_buf,a.pending-i,i))}a.status=103}if(103===a.status){if(a.gzhead.hcrc){if(a.pending+2>a.pending_buf_size&&(ct(t),0!==a.pending))return a.last_flush=-1,q;wt(a,255&t.adler),wt(a,t.adler>>8&255),t.adler=0}if(a.status=113,ct(t),0!==a.pending)return a.last_flush=-1,q}if(0!==t.avail_in||0!==a.lookahead||e!==P&&666!==a.status){let i=0===a.level?kt(a,e):a.strategy===at?((t,e)=>{let a;for(;;){if(0===t.lookahead&&(pt(t),0===t.lookahead)){if(e===P)return 1;break}if(t.match_length=0,a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):a.strategy===it?((t,e)=>{let a,i,n,s;const r=t.window;for(;;){if(t.lookahead<=258){if(pt(t),t.lookahead<=258&&e===P)return 1;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=3&&t.strstart>0&&(n=t.strstart-1,i=r[n],i===r[++n]&&i===r[++n]&&i===r[++n])){s=t.strstart+258;do{}while(i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&i===r[++n]&&n<s);t.match_length=258-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=3?(a=j(t,1,t.match_length-3),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(a=j(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),a&&(ut(t,!1),0===t.strm.avail_out))return 1}return t.insert=0,e===X?(ut(t,!0),0===t.strm.avail_out?3:4):t.sym_next&&(ut(t,!1),0===t.strm.avail_out)?1:2})(a,e):zt[a.level].func(a,e);if(3!==i&&4!==i||(a.status=666),1===i||3===i)return 0===t.avail_out&&(a.last_flush=-1),q;if(2===i&&(e===Y?K(a):e!==W&&(H(a,0,0,!1),e===G&&(dt(a.head),0===a.lookahead&&(a.strstart=0,a.block_start=0,a.insert=0))),ct(t),0===t.avail_out))return a.last_flush=-1,q}return e!==X?q:a.wrap<=0?J:(2===a.wrap?(wt(a,255&t.adler),wt(a,t.adler>>8&255),wt(a,t.adler>>16&255),wt(a,t.adler>>24&255),wt(a,255&t.total_in),wt(a,t.total_in>>8&255),wt(a,t.total_in>>16&255),wt(a,t.total_in>>24&255)):(mt(a,t.adler>>>16),mt(a,65535&t.adler)),ct(t),a.wrap>0&&(a.wrap=-a.wrap),0!==a.pending?q:J)},deflateEnd:t=>{if(Et(t))return Q;const e=t.state.status;return t.state=null,113===e?lt(t,V):q},deflateSetDictionary:(t,e)=>{let a=e.length;if(Et(t))return Q;const i=t.state,n=i.wrap;if(2===n||1===n&&42!==i.status||i.lookahead)return Q;if(1===n&&(t.adler=F(t.adler,e,a,0)),i.wrap=0,a>=i.w_size){0===n&&(dt(i.head),i.strstart=0,i.block_start=0,i.insert=0);let t=new Uint8Array(i.w_size);t.set(e.subarray(a-i.w_size,a),0),e=t,a=i.w_size}const s=t.avail_in,r=t.next_in,o=t.input;for(t.avail_in=a,t.next_in=0,t.input=e,pt(i);i.lookahead>=3;){let t=i.strstart,e=i.lookahead-2;do{i.ins_h=ft(i,i.ins_h,i.window[t+3-1]),i.prev[t&i.w_mask]=i.head[i.ins_h],i.head[i.ins_h]=t,t++}while(--e);i.strstart=t,i.lookahead=2,pt(i)}return i.strstart+=i.lookahead,i.block_start=i.strstart,i.insert=i.lookahead,i.lookahead=0,i.match_length=i.prev_length=2,i.match_available=0,t.next_in=r,t.input=o,t.avail_in=s,i.wrap=n,q},deflateInfo:\"pako deflate (from Nodeca project)\"};const Dt=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var Tt=function(t){const e=Array.prototype.slice.call(arguments,1);for(;e.length;){const a=e.shift();if(a){if(\"object\"!=typeof a)throw new TypeError(a+\"must be non-object\");for(const e in a)Dt(a,e)&&(t[e]=a[e])}}return t},Ot=t=>{let e=0;for(let a=0,i=t.length;a<i;a++)e+=t[a].length;const a=new Uint8Array(e);for(let e=0,i=0,n=t.length;e<n;e++){let n=t[e];a.set(n,i),i+=n.length}return a};let Ft=!0;try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){Ft=!1}const Lt=new Uint8Array(256);for(let t=0;t<256;t++)Lt[t]=t>=252?6:t>=248?5:t>=240?4:t>=224?3:t>=192?2:1;Lt[254]=Lt[254]=1;var Nt=t=>{if(\"function\"==typeof TextEncoder&&TextEncoder.prototype.encode)return(new TextEncoder).encode(t);let e,a,i,n,s,r=t.length,o=0;for(n=0;n<r;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),o+=a<128?1:a<2048?2:a<65536?3:4;for(e=new Uint8Array(o),s=0,n=0;s<o;n++)a=t.charCodeAt(n),55296==(64512&a)&&n+1<r&&(i=t.charCodeAt(n+1),56320==(64512&i)&&(a=65536+(a-55296<<10)+(i-56320),n++)),a<128?e[s++]=a:a<2048?(e[s++]=192|a>>>6,e[s++]=128|63&a):a<65536?(e[s++]=224|a>>>12,e[s++]=128|a>>>6&63,e[s++]=128|63&a):(e[s++]=240|a>>>18,e[s++]=128|a>>>12&63,e[s++]=128|a>>>6&63,e[s++]=128|63&a);return e},It=(t,e)=>{const a=e||t.length;if(\"function\"==typeof TextDecoder&&TextDecoder.prototype.decode)return(new TextDecoder).decode(t.subarray(0,e));let i,n;const s=new Array(2*a);for(n=0,i=0;i<a;){let e=t[i++];if(e<128){s[n++]=e;continue}let r=Lt[e];if(r>4)s[n++]=65533,i+=r-1;else{for(e&=2===r?31:3===r?15:7;r>1&&i<a;)e=e<<6|63&t[i++],r--;r>1?s[n++]=65533:e<65536?s[n++]=e:(e-=65536,s[n++]=55296|e>>10&1023,s[n++]=56320|1023&e)}}return((t,e)=>{if(e<65534&&t.subarray&&Ft)return String.fromCharCode.apply(null,t.length===e?t:t.subarray(0,e));let a=\"\";for(let i=0;i<e;i++)a+=String.fromCharCode(t[i]);return a})(s,n)},Bt=(t,e)=>{(e=e||t.length)>t.length&&(e=t.length);let a=e-1;for(;a>=0&&128==(192&t[a]);)a--;return a<0||0===a?e:a+Lt[t[a]]>e?a:e};var Ct=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0};const Ht=Object.prototype.toString,{Z_NO_FLUSH:Mt,Z_SYNC_FLUSH:jt,Z_FULL_FLUSH:Kt,Z_FINISH:Pt,Z_OK:Yt,Z_STREAM_END:Gt,Z_DEFAULT_COMPRESSION:Xt,Z_DEFAULT_STRATEGY:Wt,Z_DEFLATED:qt}=B;function Jt(t){this.options=Tt({level:Xt,method:qt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Wt},t||{});let e=this.options;e.raw&&e.windowBits>0?e.windowBits=-e.windowBits:e.gzip&&e.windowBits>0&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=St.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(a!==Yt)throw new Error(I[a]);if(e.header&&St.deflateSetHeader(this.strm,e.header),e.dictionary){let t;if(t=\"string\"==typeof e.dictionary?Nt(e.dictionary):\"[object ArrayBuffer]\"===Ht.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,a=St.deflateSetDictionary(this.strm,t),a!==Yt)throw new Error(I[a]);this._dict_set=!0}}function Qt(t,e){const a=new Jt(e);if(a.push(t,!0),a.err)throw a.msg||I[a.err];return a.result}Jt.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize;let n,s;if(this.ended)return!1;for(s=e===~~e?e:!0===e?Pt:Mt,\"string\"==typeof t?a.input=Nt(t):\"[object ArrayBuffer]\"===Ht.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;)if(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),(s===jt||s===Kt)&&a.avail_out<=6)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else{if(n=St.deflate(a,s),n===Gt)return a.next_out>0&&this.onData(a.output.subarray(0,a.next_out)),n=St.deflateEnd(this.strm),this.onEnd(n),this.ended=!0,n===Yt;if(0!==a.avail_out){if(s>0&&a.next_out>0)this.onData(a.output.subarray(0,a.next_out)),a.avail_out=0;else if(0===a.avail_in)break}else this.onData(a.output)}return!0},Jt.prototype.onData=function(t){this.chunks.push(t)},Jt.prototype.onEnd=function(t){t===Yt&&(this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};var Vt={Deflate:Jt,deflate:Qt,deflateRaw:function(t,e){return(e=e||{}).raw=!0,Qt(t,e)},gzip:function(t,e){return(e=e||{}).gzip=!0,Qt(t,e)},constants:B};var $t=function(t,e){let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z,A;const E=t.state;a=t.next_in,z=t.input,i=a+(t.avail_in-5),n=t.next_out,A=t.output,s=n-(e-t.avail_out),r=n+(t.avail_out-257),o=E.dmax,l=E.wsize,h=E.whave,d=E.wnext,_=E.window,f=E.hold,c=E.bits,u=E.lencode,w=E.distcode,m=(1<<E.lenbits)-1,b=(1<<E.distbits)-1;t:do{c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=u[f&m];e:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,0===p)A[n++]=65535&g;else{if(!(16&p)){if(0==(64&p)){g=u[(65535&g)+(f&(1<<p)-1)];continue e}if(32&p){E.mode=16191;break t}t.msg=\"invalid literal/length code\",E.mode=16209;break t}k=65535&g,p&=15,p&&(c<p&&(f+=z[a++]<<c,c+=8),k+=f&(1<<p)-1,f>>>=p,c-=p),c<15&&(f+=z[a++]<<c,c+=8,f+=z[a++]<<c,c+=8),g=w[f&b];a:for(;;){if(p=g>>>24,f>>>=p,c-=p,p=g>>>16&255,!(16&p)){if(0==(64&p)){g=w[(65535&g)+(f&(1<<p)-1)];continue a}t.msg=\"invalid distance code\",E.mode=16209;break t}if(v=65535&g,p&=15,c<p&&(f+=z[a++]<<c,c+=8,c<p&&(f+=z[a++]<<c,c+=8)),v+=f&(1<<p)-1,v>o){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(f>>>=p,c-=p,p=n-s,v>p){if(p=v-p,p>h&&E.sane){t.msg=\"invalid distance too far back\",E.mode=16209;break t}if(y=0,x=_,0===d){if(y+=l-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}else if(d<p){if(y+=l+d-p,p-=d,p<k){k-=p;do{A[n++]=_[y++]}while(--p);if(y=0,d<k){p=d,k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}}}else if(y+=d-p,p<k){k-=p;do{A[n++]=_[y++]}while(--p);y=n-v,x=A}for(;k>2;)A[n++]=x[y++],A[n++]=x[y++],A[n++]=x[y++],k-=3;k&&(A[n++]=x[y++],k>1&&(A[n++]=x[y++]))}else{y=n-v;do{A[n++]=A[y++],A[n++]=A[y++],A[n++]=A[y++],k-=3}while(k>2);k&&(A[n++]=A[y++],k>1&&(A[n++]=A[y++]))}break}}break}}while(a<i&&n<r);k=c>>3,a-=k,c-=k<<3,f&=(1<<c)-1,t.next_in=a,t.next_out=n,t.avail_in=a<i?i-a+5:5-(a-i),t.avail_out=n<r?r-n+257:257-(n-r),E.hold=f,E.bits=c};const te=new Uint16Array([3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0]),ee=new Uint8Array([16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78]),ae=new Uint16Array([1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0]),ie=new Uint8Array([16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64]);var ne=(t,e,a,i,n,s,r,o)=>{const l=o.bits;let h,d,_,f,c,u,w=0,m=0,b=0,g=0,p=0,k=0,v=0,y=0,x=0,z=0,A=null;const E=new Uint16Array(16),R=new Uint16Array(16);let Z,U,S,D=null;for(w=0;w<=15;w++)E[w]=0;for(m=0;m<i;m++)E[e[a+m]]++;for(p=l,g=15;g>=1&&0===E[g];g--);if(p>g&&(p=g),0===g)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(b=1;b<g&&0===E[b];b++);for(p<b&&(p=b),y=1,w=1;w<=15;w++)if(y<<=1,y-=E[w],y<0)return-1;if(y>0&&(0===t||1!==g))return-1;for(R[1]=0,w=1;w<15;w++)R[w+1]=R[w]+E[w];for(m=0;m<i;m++)0!==e[a+m]&&(r[R[e[a+m]]++]=m);if(0===t?(A=D=r,u=20):1===t?(A=te,D=ee,u=257):(A=ae,D=ie,u=0),z=0,m=0,w=b,c=s,k=p,v=0,_=-1,x=1<<p,f=x-1,1===t&&x>852||2===t&&x>592)return 1;for(;;){Z=w-v,r[m]+1<u?(U=0,S=r[m]):r[m]>=u?(U=D[r[m]-u],S=A[r[m]-u]):(U=96,S=0),h=1<<w-v,d=1<<k,b=d;do{d-=h,n[c+(z>>v)+d]=Z<<24|U<<16|S|0}while(0!==d);for(h=1<<w-1;z&h;)h>>=1;if(0!==h?(z&=h-1,z+=h):z=0,m++,0==--E[w]){if(w===g)break;w=e[a+r[m]]}if(w>p&&(z&f)!==_){for(0===v&&(v=p),c+=b,k=w-v,y=1<<k;k+v<g&&(y-=E[k+v],!(y<=0));)k++,y<<=1;if(x+=1<<k,1===t&&x>852||2===t&&x>592)return 1;_=z&f,n[_]=p<<24|k<<16|c-s|0}}return 0!==z&&(n[c+z]=w-v<<24|64<<16|0),o.bits=p,0};const{Z_FINISH:se,Z_BLOCK:re,Z_TREES:oe,Z_OK:le,Z_STREAM_END:he,Z_NEED_DICT:de,Z_STREAM_ERROR:_e,Z_DATA_ERROR:fe,Z_MEM_ERROR:ce,Z_BUF_ERROR:ue,Z_DEFLATED:we}=B,me=16209,be=t=>(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24);function ge(){this.strm=null,this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Uint16Array(320),this.work=new Uint16Array(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}const pe=t=>{if(!t)return 1;const e=t.state;return!e||e.strm!==t||e.mode<16180||e.mode>16211?1:0},ke=t=>{if(pe(t))return _e;const e=t.state;return t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=16180,e.last=0,e.havedict=0,e.flags=-1,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new Int32Array(852),e.distcode=e.distdyn=new Int32Array(592),e.sane=1,e.back=-1,le},ve=t=>{if(pe(t))return _e;const e=t.state;return e.wsize=0,e.whave=0,e.wnext=0,ke(t)},ye=(t,e)=>{let a;if(pe(t))return _e;const i=t.state;return e<0?(a=0,e=-e):(a=5+(e>>4),e<48&&(e&=15)),e&&(e<8||e>15)?_e:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=a,i.wbits=e,ve(t))},xe=(t,e)=>{if(!t)return _e;const a=new ge;t.state=a,a.strm=t,a.window=null,a.mode=16180;const i=ye(t,e);return i!==le&&(t.state=null),i};let ze,Ae,Ee=!0;const Re=t=>{if(Ee){ze=new Int32Array(512),Ae=new Int32Array(32);let e=0;for(;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(ne(1,t.lens,0,288,ze,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;ne(2,t.lens,0,32,Ae,0,t.work,{bits:5}),Ee=!1}t.lencode=ze,t.lenbits=9,t.distcode=Ae,t.distbits=5},Ze=(t,e,a,i)=>{let n;const s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new Uint8Array(s.wsize)),i>=s.wsize?(s.window.set(e.subarray(a-s.wsize,a),0),s.wnext=0,s.whave=s.wsize):(n=s.wsize-s.wnext,n>i&&(n=i),s.window.set(e.subarray(a-i,a-i+n),s.wnext),(i-=n)?(s.window.set(e.subarray(a-i,a),0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0};var Ue={inflateReset:ve,inflateReset2:ye,inflateResetKeep:ke,inflateInit:t=>xe(t,15),inflateInit2:xe,inflate:(t,e)=>{let a,i,n,s,r,o,l,h,d,_,f,c,u,w,m,b,g,p,k,v,y,x,z=0;const A=new Uint8Array(4);let E,R;const Z=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);if(pe(t)||!t.output||!t.input&&0!==t.avail_in)return _e;a=t.state,16191===a.mode&&(a.mode=16192),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,_=o,f=l,x=le;t:for(;;)switch(a.mode){case 16180:if(0===a.wrap){a.mode=16192;break}for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(2&a.wrap&&35615===h){0===a.wbits&&(a.wbits=15),a.check=0,A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0),h=0,d=0,a.mode=16181;break}if(a.head&&(a.head.done=!1),!(1&a.wrap)||(((255&h)<<8)+(h>>8))%31){t.msg=\"incorrect header check\",a.mode=me;break}if((15&h)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(h>>>=4,d-=4,y=8+(15&h),0===a.wbits&&(a.wbits=y),y>15||y>a.wbits){t.msg=\"invalid window size\",a.mode=me;break}a.dmax=1<<a.wbits,a.flags=0,t.adler=a.check=1,a.mode=512&h?16189:16191,h=0,d=0;break;case 16181:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.flags=h,(255&a.flags)!==we){t.msg=\"unknown compression method\",a.mode=me;break}if(57344&a.flags){t.msg=\"unknown header flags set\",a.mode=me;break}a.head&&(a.head.text=h>>8&1),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16182;case 16182:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.time=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,A[2]=h>>>16&255,A[3]=h>>>24&255,a.check=N(a.check,A,4,0)),h=0,d=0,a.mode=16183;case 16183:for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.head&&(a.head.xflags=255&h,a.head.os=h>>8),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0,a.mode=16184;case 16184:if(1024&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length=h,a.head&&(a.head.extra_len=h),512&a.flags&&4&a.wrap&&(A[0]=255&h,A[1]=h>>>8&255,a.check=N(a.check,A,2,0)),h=0,d=0}else a.head&&(a.head.extra=null);a.mode=16185;case 16185:if(1024&a.flags&&(c=a.length,c>o&&(c=o),c&&(a.head&&(y=a.head.extra_len-a.length,a.head.extra||(a.head.extra=new Uint8Array(a.head.extra_len)),a.head.extra.set(i.subarray(s,s+c),y)),512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,a.length-=c),a.length))break t;a.length=0,a.mode=16186;case 16186:if(2048&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.name+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.name=null);a.length=0,a.mode=16187;case 16187:if(4096&a.flags){if(0===o)break t;c=0;do{y=i[s+c++],a.head&&y&&a.length<65536&&(a.head.comment+=String.fromCharCode(y))}while(y&&c<o);if(512&a.flags&&4&a.wrap&&(a.check=N(a.check,i,c,s)),o-=c,s+=c,y)break t}else a.head&&(a.head.comment=null);a.mode=16188;case 16188:if(512&a.flags){for(;d<16;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(65535&a.check)){t.msg=\"header crc mismatch\",a.mode=me;break}h=0,d=0}a.head&&(a.head.hcrc=a.flags>>9&1,a.head.done=!0),t.adler=a.check=0,a.mode=16191;break;case 16189:for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}t.adler=a.check=be(h),h=0,d=0,a.mode=16190;case 16190:if(0===a.havedict)return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,de;t.adler=a.check=1,a.mode=16191;case 16191:if(e===re||e===oe)break t;case 16192:if(a.last){h>>>=7&d,d-=7&d,a.mode=16206;break}for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}switch(a.last=1&h,h>>>=1,d-=1,3&h){case 0:a.mode=16193;break;case 1:if(Re(a),a.mode=16199,e===oe){h>>>=2,d-=2;break t}break;case 2:a.mode=16196;break;case 3:t.msg=\"invalid block type\",a.mode=me}h>>>=2,d-=2;break;case 16193:for(h>>>=7&d,d-=7&d;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if((65535&h)!=(h>>>16^65535)){t.msg=\"invalid stored block lengths\",a.mode=me;break}if(a.length=65535&h,h=0,d=0,a.mode=16194,e===oe)break t;case 16194:a.mode=16195;case 16195:if(c=a.length,c){if(c>o&&(c=o),c>l&&(c=l),0===c)break t;n.set(i.subarray(s,s+c),r),o-=c,s+=c,l-=c,r+=c,a.length-=c;break}a.mode=16191;break;case 16196:for(;d<14;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(a.nlen=257+(31&h),h>>>=5,d-=5,a.ndist=1+(31&h),h>>>=5,d-=5,a.ncode=4+(15&h),h>>>=4,d-=4,a.nlen>286||a.ndist>30){t.msg=\"too many length or distance symbols\",a.mode=me;break}a.have=0,a.mode=16197;case 16197:for(;a.have<a.ncode;){for(;d<3;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.lens[Z[a.have++]]=7&h,h>>>=3,d-=3}for(;a.have<19;)a.lens[Z[a.have++]]=0;if(a.lencode=a.lendyn,a.lenbits=7,E={bits:a.lenbits},x=ne(0,a.lens,0,19,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid code lengths set\",a.mode=me;break}a.have=0,a.mode=16198;case 16198:for(;a.have<a.nlen+a.ndist;){for(;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(g<16)h>>>=m,d-=m,a.lens[a.have++]=g;else{if(16===g){for(R=m+2;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(h>>>=m,d-=m,0===a.have){t.msg=\"invalid bit length repeat\",a.mode=me;break}y=a.lens[a.have-1],c=3+(3&h),h>>>=2,d-=2}else if(17===g){for(R=m+3;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=3+(7&h),h>>>=3,d-=3}else{for(R=m+7;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=m,d-=m,y=0,c=11+(127&h),h>>>=7,d-=7}if(a.have+c>a.nlen+a.ndist){t.msg=\"invalid bit length repeat\",a.mode=me;break}for(;c--;)a.lens[a.have++]=y}}if(a.mode===me)break;if(0===a.lens[256]){t.msg=\"invalid code -- missing end-of-block\",a.mode=me;break}if(a.lenbits=9,E={bits:a.lenbits},x=ne(1,a.lens,0,a.nlen,a.lencode,0,a.work,E),a.lenbits=E.bits,x){t.msg=\"invalid literal/lengths set\",a.mode=me;break}if(a.distbits=6,a.distcode=a.distdyn,E={bits:a.distbits},x=ne(2,a.lens,a.nlen,a.ndist,a.distcode,0,a.work,E),a.distbits=E.bits,x){t.msg=\"invalid distances set\",a.mode=me;break}if(a.mode=16199,e===oe)break t;case 16199:a.mode=16200;case 16200:if(o>=6&&l>=258){t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,$t(t,f),r=t.next_out,n=t.output,l=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,h=a.hold,d=a.bits,16191===a.mode&&(a.back=-1);break}for(a.back=0;z=a.lencode[h&(1<<a.lenbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(b&&0==(240&b)){for(p=m,k=b,v=g;z=a.lencode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,a.length=g,0===b){a.mode=16205;break}if(32&b){a.back=-1,a.mode=16191;break}if(64&b){t.msg=\"invalid literal/length code\",a.mode=me;break}a.extra=15&b,a.mode=16201;case 16201:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.length+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}a.was=a.length,a.mode=16202;case 16202:for(;z=a.distcode[h&(1<<a.distbits)-1],m=z>>>24,b=z>>>16&255,g=65535&z,!(m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(0==(240&b)){for(p=m,k=b,v=g;z=a.distcode[v+((h&(1<<p+k)-1)>>p)],m=z>>>24,b=z>>>16&255,g=65535&z,!(p+m<=d);){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}h>>>=p,d-=p,a.back+=p}if(h>>>=m,d-=m,a.back+=m,64&b){t.msg=\"invalid distance code\",a.mode=me;break}a.offset=g,a.extra=15&b,a.mode=16203;case 16203:if(a.extra){for(R=a.extra;d<R;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}a.offset+=h&(1<<a.extra)-1,h>>>=a.extra,d-=a.extra,a.back+=a.extra}if(a.offset>a.dmax){t.msg=\"invalid distance too far back\",a.mode=me;break}a.mode=16204;case 16204:if(0===l)break t;if(c=f-l,a.offset>c){if(c=a.offset-c,c>a.whave&&a.sane){t.msg=\"invalid distance too far back\",a.mode=me;break}c>a.wnext?(c-=a.wnext,u=a.wsize-c):u=a.wnext-c,c>a.length&&(c=a.length),w=a.window}else w=n,u=r-a.offset,c=a.length;c>l&&(c=l),l-=c,a.length-=c;do{n[r++]=w[u++]}while(--c);0===a.length&&(a.mode=16200);break;case 16205:if(0===l)break t;n[r++]=a.length,l--,a.mode=16200;break;case 16206:if(a.wrap){for(;d<32;){if(0===o)break t;o--,h|=i[s++]<<d,d+=8}if(f-=l,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,r-f):F(a.check,n,f,r-f)),f=l,4&a.wrap&&(a.flags?h:be(h))!==a.check){t.msg=\"incorrect data check\",a.mode=me;break}h=0,d=0}a.mode=16207;case 16207:if(a.wrap&&a.flags){for(;d<32;){if(0===o)break t;o--,h+=i[s++]<<d,d+=8}if(4&a.wrap&&h!==(4294967295&a.total)){t.msg=\"incorrect length check\",a.mode=me;break}h=0,d=0}a.mode=16208;case 16208:x=he;break t;case me:x=fe;break t;case 16210:return ce;default:return _e}return t.next_out=r,t.avail_out=l,t.next_in=s,t.avail_in=o,a.hold=h,a.bits=d,(a.wsize||f!==t.avail_out&&a.mode<me&&(a.mode<16206||e!==se))&&Ze(t,t.output,t.next_out,f-t.avail_out),_-=t.avail_in,f-=t.avail_out,t.total_in+=_,t.total_out+=f,a.total+=f,4&a.wrap&&f&&(t.adler=a.check=a.flags?N(a.check,n,f,t.next_out-f):F(a.check,n,f,t.next_out-f)),t.data_type=a.bits+(a.last?64:0)+(16191===a.mode?128:0)+(16199===a.mode||16194===a.mode?256:0),(0===_&&0===f||e===se)&&x===le&&(x=ue),x},inflateEnd:t=>{if(pe(t))return _e;let e=t.state;return e.window&&(e.window=null),t.state=null,le},inflateGetHeader:(t,e)=>{if(pe(t))return _e;const a=t.state;return 0==(2&a.wrap)?_e:(a.head=e,e.done=!1,le)},inflateSetDictionary:(t,e)=>{const a=e.length;let i,n,s;return pe(t)?_e:(i=t.state,0!==i.wrap&&16190!==i.mode?_e:16190===i.mode&&(n=1,n=F(n,e,a,0),n!==i.check)?fe:(s=Ze(t,e,a,a),s?(i.mode=16210,ce):(i.havedict=1,le)))},inflateInfo:\"pako inflate (from Nodeca project)\"};var Se=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1};const De=Object.prototype.toString,{Z_NO_FLUSH:Te,Z_FINISH:Oe,Z_OK:Fe,Z_STREAM_END:Le,Z_NEED_DICT:Ne,Z_STREAM_ERROR:Ie,Z_DATA_ERROR:Be,Z_MEM_ERROR:Ce}=B;function He(t){this.options=Tt({chunkSize:65536,windowBits:15,to:\"\"},t||{});const e=this.options;e.raw&&e.windowBits>=0&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(e.windowBits>=0&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),e.windowBits>15&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new Ct,this.strm.avail_out=0;let a=Ue.inflateInit2(this.strm,e.windowBits);if(a!==Fe)throw new Error(I[a]);if(this.header=new Se,Ue.inflateGetHeader(this.strm,this.header),e.dictionary&&(\"string\"==typeof e.dictionary?e.dictionary=Nt(e.dictionary):\"[object ArrayBuffer]\"===De.call(e.dictionary)&&(e.dictionary=new Uint8Array(e.dictionary)),e.raw&&(a=Ue.inflateSetDictionary(this.strm,e.dictionary),a!==Fe)))throw new Error(I[a])}He.prototype.push=function(t,e){const a=this.strm,i=this.options.chunkSize,n=this.options.dictionary;let s,r,o;if(this.ended)return!1;for(r=e===~~e?e:!0===e?Oe:Te,\"[object ArrayBuffer]\"===De.call(t)?a.input=new Uint8Array(t):a.input=t,a.next_in=0,a.avail_in=a.input.length;;){for(0===a.avail_out&&(a.output=new Uint8Array(i),a.next_out=0,a.avail_out=i),s=Ue.inflate(a,r),s===Ne&&n&&(s=Ue.inflateSetDictionary(a,n),s===Fe?s=Ue.inflate(a,r):s===Be&&(s=Ne));a.avail_in>0&&s===Le&&a.state.wrap>0&&0!==t[a.next_in];)Ue.inflateReset(a),s=Ue.inflate(a,r);switch(s){case Ie:case Be:case Ne:case Ce:return this.onEnd(s),this.ended=!0,!1}if(o=a.avail_out,a.next_out&&(0===a.avail_out||s===Le))if(\"string\"===this.options.to){let t=Bt(a.output,a.next_out),e=a.next_out-t,n=It(a.output,t);a.next_out=e,a.avail_out=i-e,e&&a.output.set(a.output.subarray(t,t+e),0),this.onData(n)}else this.onData(a.output.length===a.next_out?a.output:a.output.subarray(0,a.next_out));if(s!==Fe||0!==o){if(s===Le)return s=Ue.inflateEnd(this.strm),this.onEnd(s),this.ended=!0,!0;if(0===a.avail_in)break}}return!0},He.prototype.onData=function(t){this.chunks.push(t)},He.prototype.onEnd=function(t){t===Fe&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=Ot(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg};const{Deflate:Me,deflate:je,deflateRaw:Ke,gzip:Pe}=Vt;var Ye=Me,Ge=je,Xe=B;const We=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const e=this._hasEvents?\",\":\"\";this.deflate.push(e+t,Xe.Z_SYNC_FLUSH),this._hasEvents=!0}finish(){if(this.deflate.push(\"]\",Xe.Z_FINISH),this.deflate.err)throw this.deflate.err;const t=this.deflate.result;return this._init(),t}_init(){this._hasEvents=!1,this.deflate=new Ye,this.deflate.push(\"[\",Xe.Z_NO_FLUSH)}},qe={clear:()=>{We.clear()},addEvent:t=>We.addEvent(t),finish:()=>We.finish(),compress:t=>function(t){return Ge(t)}(t)};addEventListener(\"message\",(function(t){const e=t.data.method,a=t.data.id,i=t.data.arg;if(e in qe&&\"function\"==typeof qe[e])try{const t=qe[e](i);postMessage({id:a,method:e,success:!0,response:t})}catch(t){postMessage({id:a,method:e,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n\nfunction e(){const e=new Blob([r]);return URL.createObjectURL(e)}\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nclass EventBufferArray  {\n  /** All the events that are buffered to be sent. */\n\n   constructor() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   get hasEvents() {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n   destroy() {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n   async addEvent(event, isCheckout) {\n    if (isCheckout) {\n      this.events = [event];\n      return;\n    }\n\n    this.events.push(event);\n    return;\n  }\n\n  /** @inheritdoc */\n   finish() {\n    return new Promise(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.events = [];\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass WorkerHandler {\n\n   constructor(worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }) => {\n          if ((data ).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n   destroy() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n   postMessage(method, arg) {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }) => {\n        const response = data ;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay]', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response );\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n   _getAndIncrementId() {\n    return this._id++;\n  }\n}\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nclass EventBufferCompressionWorker  {\n  /** @inheritdoc */\n\n   constructor(worker) {\n    this._worker = new WorkerHandler(worker);\n    this.hasEvents = false;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occured.\n   */\n   ensureReady() {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n   destroy() {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfuly received and processed by worker.\n   */\n   async addEvent(event, isCheckout) {\n    this.hasEvents = true;\n\n    if (isCheckout) {\n      // This event is a checkout, make sure worker buffer is cleared before\n      // proceeding.\n      await this._clear();\n    }\n\n    return this._sendEventToWorker(event);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n   finish() {\n    return this._finishRequest();\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n   _sendEventToWorker(event) {\n    return this._worker.postMessage('addEvent', JSON.stringify(event));\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n   async _finishRequest() {\n    const response = await this._worker.postMessage('finish');\n\n    this.hasEvents = false;\n\n    return response;\n  }\n\n  /** Clear any pending events from the worker. */\n   _clear() {\n    return this._worker.postMessage('clear');\n  }\n}\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nclass EventBufferProxy  {\n\n   constructor(worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritDoc */\n   get hasEvents() {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritDoc */\n   destroy() {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n   addEvent(event, isCheckout) {\n    return this._used.addEvent(event, isCheckout);\n  }\n\n  /** @inheritDoc */\n   async finish() {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n   ensureWorkerIsLoaded() {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n   async _ensureWorkerIsLoaded() {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n   async _switchToCompressionWorker() {\n    const { events } = this._fallback;\n\n    const addEventPromises = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Failed to add events when switching buffers.', error);\n    }\n  }\n}\n\n/**\n * Create an event buffer for replays.\n */\nfunction createEventBuffer({ useCompression }) {\n  // eslint-disable-next-line no-restricted-globals\n  if (useCompression && window.Worker) {\n    try {\n      const workerUrl = e();\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Using compression worker');\n      const worker = new Worker(workerUrl);\n      return new EventBufferProxy(worker);\n    } catch (error) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Failed to create compression worker');\n      // Fall back to use simple event buffer array\n    }\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Using simple buffer');\n  return new EventBufferArray();\n}\n\n/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nfunction isExpired(\n  initialTime,\n  expiry,\n  targetTime = +new Date(),\n) {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n\n/**\n * Checks to see if session is expired\n */\nfunction isSessionExpired(session, timeouts, targetTime = +new Date()) {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, timeouts.maxSessionLife, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `idleTimeout` ms)\n    isExpired(session.lastActivity, timeouts.sessionIdle, targetTime)\n  );\n}\n\n/**\n * Save a session to session storage.\n */\nfunction saveSession(session) {\n  const hasSessionStorage = 'sessionStorage' in WINDOW;\n  if (!hasSessionStorage) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch (e) {\n    // Ignore potential SecurityError exceptions\n  }\n}\n\n/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nfunction isSampled(sampleRate) {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n\n/**\n * Get a session with defaults & applied sampling.\n */\nfunction makeSession(session) {\n  const now = new Date().getTime();\n  const id = session.id || (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n  };\n}\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nfunction getSessionSampleType(sessionSampleRate, errorSampleRate) {\n  return isSampled(sessionSampleRate) ? 'session' : isSampled(errorSampleRate) ? 'error' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nfunction createSession({ sessionSampleRate, errorSampleRate, stickySession = false }) {\n  const sampled = getSessionSampleType(sessionSampleRate, errorSampleRate);\n  const session = makeSession({\n    sampled,\n  });\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`[Replay] Creating new session: ${session.id}`);\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n\n/**\n * Fetches a session from storage\n */\nfunction fetchSession() {\n  const hasSessionStorage = 'sessionStorage' in WINDOW;\n\n  if (!hasSessionStorage) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) ;\n\n    return makeSession(sessionObj);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Get or create a session\n */\nfunction getSession({\n  timeouts,\n  currentSession,\n  stickySession,\n  sessionSampleRate,\n  errorSampleRate,\n}) {\n  // If session exists and is passed, use it instead of always hitting session storage\n  const session = currentSession || (stickySession && fetchSession());\n\n  if (session) {\n    // If there is a session, check if it is valid (e.g. \"last activity\" time\n    // should be within the \"session idle time\", and \"session started\" time is\n    // within \"max session time\").\n    const isExpired = isSessionExpired(session, timeouts);\n\n    if (!isExpired) {\n      return { type: 'saved', session };\n    } else if (session.sampled === 'error') {\n      // Error samples should not be re-created when expired, but instead we stop when the replay is done\n      const discardedSession = makeSession({ sampled: false });\n      return { type: 'new', session: discardedSession };\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Session has expired');\n    }\n    // Otherwise continue to create a new session\n  }\n\n  const newSession = createSession({\n    stickySession,\n    sessionSampleRate,\n    errorSampleRate,\n  });\n\n  return { type: 'new', session: newSession };\n}\n\n/**\n * Add an event to the event buffer.\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nasync function addEvent(\n  replay,\n  event,\n  isCheckout,\n) {\n  if (!replay.eventBuffer) {\n    // This implies that `_isEnabled` is false\n    return null;\n  }\n\n  if (replay.isPaused()) {\n    // Do not add to event buffer when recording is paused\n    return null;\n  }\n\n  // TODO: sadness -- we will want to normalize timestamps to be in ms -\n  // requires coordination with frontend\n  const isMs = event.timestamp > 9999999999;\n  const timestampInMs = isMs ? event.timestamp : event.timestamp * 1000;\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdle < new Date().getTime()) {\n    return null;\n  }\n\n  // Only record earliest event if a new session was created, otherwise it\n  // shouldn't be relevant\n  const earliestEvent = replay.getContext().earliestEvent;\n  if (replay.session && replay.session.segmentId === 0 && (!earliestEvent || timestampInMs < earliestEvent)) {\n    replay.getContext().earliestEvent = timestampInMs;\n  }\n\n  try {\n    return await replay.eventBuffer.addEvent(event, isCheckout);\n  } catch (error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(error);\n    replay.stop('addEvent');\n\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/**\n * Create a breadcrumb for a replay.\n */\nfunction createBreadcrumb(\n  breadcrumb,\n) {\n  return {\n    timestamp: new Date().getTime() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n\n/**\n * Add a breadcrumb event to replay.\n */\nfunction addBreadcrumbEvent(replay, breadcrumb) {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category )) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    void addEvent(replay, {\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: breadcrumb,\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n\nconst handleDomListener =\n  (replay) =>\n  (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to react to DOM events.\n */\nfunction handleDom(handlerData) {\n  // Taken from https://github.com/getsentry/sentry-javascript/blob/master/packages/browser/src/integrations/breadcrumbs.ts#L112\n  let target;\n  let targetNode;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    targetNode = getTargetNode(handlerData);\n    target = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.htmlTreeAsString)(targetNode);\n  } catch (e) {\n    target = '<unknown>';\n  }\n\n  if (target.length === 0) {\n    return null;\n  }\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    message: target,\n    data: {\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ...(targetNode ? { nodeId: record.mirror.getId(targetNode ) } : {}),\n    },\n  });\n}\n\nfunction getTargetNode(handlerData) {\n  if (isEventWithTarget(handlerData.event)) {\n    return handlerData.event.target;\n  }\n\n  return handlerData.event;\n}\n\nfunction isEventWithTarget(event) {\n  return !!(event ).target;\n}\n\n/**\n * Create a \"span\" for each performance entry. The parent transaction is `this.replayEvent`.\n */\nfunction createPerformanceSpans(\n  replay,\n  entries,\n) {\n  return entries.map(({ type, start, end, name, data }) =>\n    addEvent(replay, {\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    }),\n  );\n}\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nfunction shouldFilterRequest(replay, url) {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return _isSentryRequest(url);\n}\n\n/**\n * Checks wether a given URL belongs to the configured Sentry DSN.\n */\nfunction _isSentryRequest(url) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getClient();\n  const dsn = client && client.getDsn();\n  return dsn ? url.includes(dsn.host) : false;\n}\n\n/** only exported for tests */\nfunction handleFetch(handlerData) {\n  if (!handlerData.endTimestamp) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, fetchData, response } = handlerData;\n\n  return {\n    type: 'resource.fetch',\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: fetchData.url,\n    data: {\n      method: fetchData.method,\n      statusCode: response.status,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('fetch', listener)`.\n */\nfunction handleFetchSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleFetch(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    if (shouldFilterRequest(replay, result.name)) {\n      return;\n    }\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning true will cause `addUpdate` to not flush\n      // We do not want network requests to cause a flush. This will prevent\n      // recurring/polling requests from keeping the replay session alive.\n      return true;\n    });\n  };\n}\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nfunction isRrwebError(event, hint) {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-ignore this may be set by rrweb when it finds errors\n  if (hint.originalException && hint.originalException.__rrweb__) {\n    return true;\n  }\n\n  // Check if any exception originates from rrweb\n  return event.exception.values.some(exception => {\n    if (!exception.stacktrace || !exception.stacktrace.frames || !exception.stacktrace.frames.length) {\n      return false;\n    }\n\n    return exception.stacktrace.frames.some(frame => frame.filename && frame.filename.includes('/rrweb/src/'));\n  });\n}\n\n/**\n * Returns a listener to be added to `addGlobalEventProcessor(listener)`.\n */\nfunction handleGlobalEventListener(replay) {\n  return (event, hint) => {\n    // Do not apply replayId to the root event\n    if (event.type === REPLAY_EVENT_NAME) {\n      // Replays have separate set of breadcrumbs, do not include breadcrumbs\n      // from core SDK\n      delete event.breadcrumbs;\n      return event;\n    }\n\n    // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n    // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n    if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Ignoring error from rrweb internals', event);\n      return null;\n    }\n\n    // Only tag transactions with replayId if not waiting for an error\n    // @ts-ignore private\n    if (!event.type || replay.recordingMode === 'session') {\n      event.tags = { ...event.tags, replayId: replay.getSessionId() };\n    }\n\n    // Collect traceIds in _context regardless of `recordingMode` - if it's true,\n    // _context gets cleared on every checkout\n    if (event.type === 'transaction' && event.contexts && event.contexts.trace && event.contexts.trace.trace_id) {\n      replay.getContext().traceIds.add(event.contexts.trace.trace_id );\n      return event;\n    }\n\n    // no event type means error\n    if (!event.type) {\n      replay.getContext().errorIds.add(event.event_id );\n    }\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && replay.getOptions()._experiments.traceInternals) {\n      const exc = getEventExceptionValues(event);\n      addInternalBreadcrumb({\n        message: `Tagging event (${event.event_id}) - ${event.message} - ${exc.type}: ${exc.value}`,\n      });\n    }\n\n    // Need to be very careful that this does not cause an infinite loop\n    if (\n      replay.recordingMode === 'error' &&\n      event.exception &&\n      event.message !== UNABLE_TO_SEND_REPLAY // ignore this error because otherwise we could loop indefinitely with trying to capture replay and failing\n    ) {\n      setTimeout(async () => {\n        // Allow flush to complete before resuming as a session recording, otherwise\n        // the checkout from `startRecording` may be included in the payload.\n        // Prefer to keep the error replay as a separate (and smaller) segment\n        // than the session replay.\n        await replay.flushImmediate();\n\n        if (replay.stopRecording()) {\n          // Reset all \"capture on error\" configuration before\n          // starting a new recording\n          replay.recordingMode = 'session';\n          replay.startRecording();\n        }\n      });\n    }\n\n    return event;\n  };\n}\n\nfunction addInternalBreadcrumb(arg) {\n  const { category, level, message, ...rest } = arg;\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addBreadcrumb)({\n    category: category || 'console',\n    level: level || 'debug',\n    message: `[debug]: ${message}`,\n    ...rest,\n  });\n}\n\nfunction getEventExceptionValues(event) {\n  return {\n    type: 'Unknown',\n    value: 'n/a',\n    ...(event.exception && event.exception.values && event.exception.values[0]),\n  };\n}\n\nfunction handleHistory(handlerData) {\n  const { from, to } = handlerData;\n\n  const now = new Date().getTime() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('history', listener)`.\n */\nfunction handleHistorySpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n\nlet _LAST_BREADCRUMB = null;\n\nconst handleScopeListener =\n  (replay) =>\n  (scope) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleScope(scope);\n\n    if (!result) {\n      return;\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n\n/**\n * An event handler to handle scope changes.\n */\nfunction handleScope(scope) {\n  // TODO (v8): Remove this guard. This was put in place because we introduced\n  // Scope.getLastBreadcrumb mid-v7 which caused incompatibilities with older SDKs.\n  // For now, we'll just return null if the method doesn't exist but we should eventually\n  // get rid of this guard.\n  const newBreadcrumb = scope.getLastBreadcrumb && scope.getLastBreadcrumb();\n\n  // Listener can be called when breadcrumbs have not changed, so we store the\n  // reference to the last crumb and only return a crumb if it has changed\n  if (_LAST_BREADCRUMB === newBreadcrumb || !newBreadcrumb) {\n    return null;\n  }\n\n  _LAST_BREADCRUMB = newBreadcrumb;\n\n  if (\n    newBreadcrumb.category &&\n    (['fetch', 'xhr', 'sentry.event', 'sentry.transaction'].includes(newBreadcrumb.category) ||\n      newBreadcrumb.category.startsWith('ui.'))\n  ) {\n    return null;\n  }\n\n  return createBreadcrumb(newBreadcrumb);\n}\n\n// From sentry-javascript\n// e.g. https://github.com/getsentry/sentry-javascript/blob/c7fc025bf9fa8c073fdb56351808ce53909fbe45/packages/utils/src/instrument.ts#L180\n\nfunction handleXhr(handlerData) {\n  if (handlerData.xhr.__sentry_own_request__) {\n    // Taken from sentry-javascript\n    // Only capture non-sentry requests\n    return null;\n  }\n\n  if (handlerData.startTimestamp) {\n    // TODO: See if this is still needed\n    handlerData.xhr.__sentry_xhr__ = handlerData.xhr.__sentry_xhr__ || {};\n    handlerData.xhr.__sentry_xhr__.startTimestamp = handlerData.startTimestamp;\n  }\n\n  if (!handlerData.endTimestamp) {\n    return null;\n  }\n\n  const { method, url, status_code: statusCode } = handlerData.xhr.__sentry_xhr__ || {};\n\n  if (url === undefined) {\n    return null;\n  }\n\n  const timestamp = handlerData.xhr.__sentry_xhr__\n    ? handlerData.xhr.__sentry_xhr__.startTimestamp || 0\n    : handlerData.endTimestamp;\n\n  return {\n    type: 'resource.xhr',\n    name: url,\n    start: timestamp / 1000,\n    end: handlerData.endTimestamp / 1000,\n    data: {\n      method,\n      statusCode,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addInstrumentationHandler('xhr', listener)`.\n */\nfunction handleXhrSpanListener(replay) {\n  return (handlerData) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleXhr(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    if (shouldFilterRequest(replay, result.name)) {\n      return;\n    }\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning true will cause `addUpdate` to not flush\n      // We do not want network requests to cause a flush. This will prevent\n      // recurring/polling requests from keeping the replay session alive.\n      return true;\n    });\n  };\n}\n\n/**\n * Add global listeners that cannot be removed.\n */\nfunction addGlobalListeners(replay) {\n  // Listeners from core SDK //\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getScope();\n  if (scope) {\n    scope.addScopeListener(handleScopeListener(replay));\n  }\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('dom', handleDomListener(replay));\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('fetch', handleFetchSpanListener(replay));\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('xhr', handleXhrSpanListener(replay));\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('history', handleHistorySpanListener(replay));\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.addGlobalEventProcessor)(handleGlobalEventListener(replay));\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nasync function addMemoryEntry(replay) {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-ignore memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry) {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = new Date().getTime() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n\n// Map entryType -> function to normalize data for event\n// @ts-ignore TODO: entry type does not fit the create* functions entry type\nconst ENTRY_TYPES = {\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n  // @ts-ignore TODO: entry type does not fit the create* functions entry type\n  ['largest-contentful-paint']: createLargestContentfulPaint,\n};\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nfunction createPerformanceEntries(entries) {\n  return entries.map(createPerformanceEntry).filter(Boolean) ;\n}\n\nfunction createPerformanceEntry(entry) {\n  if (ENTRY_TYPES[entry.entryType] === undefined) {\n    return null;\n  }\n\n  return ENTRY_TYPES[entry.entryType](entry);\n}\n\nfunction getAbsoluteTime(time) {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.browserPerformanceTimeOrigin || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createPaintEntry(entry) {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createNavigationEntry(entry) {\n  // TODO: There looks to be some more interesting bits in here (domComplete, domContentLoaded)\n  const { entryType, name, duration, domComplete, startTime, transferSize, type } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      duration,\n    },\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createResourceEntry(entry) {\n  const { entryType, initiatorType, name, responseEnd, startTime, encodedBodySize, transferSize } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      encodedBodySize,\n    },\n  };\n}\n\n// TODO: type definition!\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction createLargestContentfulPaint(entry) {\n  const { entryType, startTime, size } = entry;\n\n  let startTimeOrNavigationActivation = 0;\n\n  if (WINDOW.performance) {\n    const navEntry = WINDOW.performance.getEntriesByType('navigation')[0]\n\n;\n\n    // See https://github.com/GoogleChrome/web-vitals/blob/9f11c4c6578fb4c5ee6fa4e32b9d1d756475f135/src/lib/getActivationStart.ts#L21\n    startTimeOrNavigationActivation = (navEntry && navEntry.activationStart) || 0;\n  }\n\n  // value is in ms\n  const value = Math.max(startTime - startTimeOrNavigationActivation, 0);\n  // LCP doesn't have a \"duration\", it just happens at a single point in time.\n  // But the UI expects both, so use end (in seconds) for both timestamps.\n  const end = getAbsoluteTime(startTimeOrNavigationActivation) + value / 1000;\n\n  return {\n    type: entryType,\n    name: entryType,\n    start: end,\n    end,\n    data: {\n      value, // LCP \"duration\" in ms\n      size,\n      // Not sure why this errors, Node should be correct (Argument of type 'Node' is not assignable to parameter of type 'INode')\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      nodeId: record.mirror.getId(entry.element ),\n    },\n  };\n}\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nfunction debounce(func, wait, options) {\n  let callbackReturnValue;\n\n  let timerId;\n  let maxTimerId;\n\n  const maxWait = options && options.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc() {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers() {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush() {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced() {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nfunction getHandleRecordingEmit(replay) {\n  let hadFirstEvent = false;\n\n  return (event, _isCheckout) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn('[Replay] Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'error' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // We need to clear existing events on a checkout, otherwise they are\n      // incremental event updates and should be appended\n      void addEvent(replay, event, isCheckout);\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (replay.session && replay.session.previousSessionId) {\n        return true;\n      }\n\n      // See note above re: session start needs to reflect the most recent\n      // checkout.\n      if (replay.recordingMode === 'error' && replay.session) {\n        const { earliestEvent } = replay.getContext();\n        if (earliestEvent) {\n          replay.session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(replay.session);\n          }\n        }\n      }\n\n      // Flush immediately so that we do not miss the first segment, otherwise\n      // it can prevent loading on the UI. This will cause an increase in short\n      // replays (e.g. opening and closing a tab quickly), but these can be\n      // filtered on the UI.\n      if (replay.recordingMode === 'session') {\n        // We want to ensure the worker is ready, as otherwise we'd always send the first event uncompressed\n        void replay.flushImmediate();\n      }\n\n      return true;\n    });\n  };\n}\n\nlet _originalRecordDroppedEvent;\n\n/**\n * Overwrite the `recordDroppedEvent` method on the client, so we can find out which events were dropped.\n * */\nfunction overwriteRecordDroppedEvent(errorIds) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getClient();\n\n  if (!client) {\n    return;\n  }\n\n  const _originalCallback = client.recordDroppedEvent.bind(client);\n\n  const recordDroppedEvent = (\n    reason,\n    category,\n    event,\n  ) => {\n    if (event && !event.type && event.event_id) {\n      errorIds.delete(event.event_id);\n    }\n\n    return _originalCallback(reason, category, event);\n  };\n\n  client.recordDroppedEvent = recordDroppedEvent;\n  _originalRecordDroppedEvent = _originalCallback;\n}\n\n/**\n * Restore the original method.\n * */\nfunction restoreRecordDroppedEvent() {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getClient();\n\n  if (!client || !_originalRecordDroppedEvent) {\n    return;\n  }\n\n  client.recordDroppedEvent = _originalRecordDroppedEvent;\n}\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nfunction createReplayEnvelope(\n  replayEvent,\n  recordingData,\n  dsn,\n  tunnel,\n) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEnvelope)(\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.createEventEnvelopeHeaders)(replayEvent, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getSdkMetadataForEnvelopeHeader)(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n\n/**\n * Prepare the recording data ready to be sent.\n */\nfunction prepareRecordingData({\n  recordingData,\n  headers,\n}\n\n) {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nasync function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}\n\n) {\n  const integrations =\n    typeof client._integrations === 'object' && client._integrations !== null && !Array.isArray(client._integrations)\n      ? Object.keys(client._integrations)\n      : undefined;\n  const preparedEvent = (await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.prepareEvent)(\n    client.getOptions(),\n    event,\n    { event_id, integrations },\n    scope,\n  )) ;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata && client.getSdkMetadata();\n  const { name, version } = (metadata && metadata.sdk) || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n\n/**\n * Send replay attachment using `fetch()`\n */\nasync function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  includeReplayStartTimestamp,\n  eventContext,\n  timestamp,\n  session,\n  options,\n}) {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();\n  const client = hub.getClient();\n  const scope = hub.getScope();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !scope || !transport || !dsn || !session.sampled) {\n    return;\n  }\n\n  const baseEvent = {\n    // @ts-ignore private api\n    type: REPLAY_EVENT_NAME,\n    ...(includeReplayStartTimestamp ? { replay_start_timestamp: initialTimestamp / 1000 } : {}),\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay', baseEvent);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('An event processor returned `null`, will not send event.');\n    return;\n  }\n\n  replayEvent.contexts = {\n    ...replayEvent.contexts,\n    replay: {\n      ...(replayEvent.contexts && replayEvent.contexts.replay),\n      session_sample_rate: options.sessionSampleRate,\n      error_sample_rate: options.errorSampleRate,\n    },\n  };\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n        \"replay\": {\n          \"session_sample_rate\": 1,\n          \"error_sample_rate\": 0,\n        },\n      },\n  }\n  */\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-ignore This needs lib es2022 and newer\n      error.cause = err;\n    } catch (e) {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n  if (!response) {\n    return response;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nclass TransportStatusCodeError extends Error {\n   constructor(statusCode) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nasync function sendReplay(\n  replayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n) {\n  const { recordingData, options } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.setContext)('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && options._experiments && options._experiments.captureExceptions) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-ignore This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return await new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n\n/* eslint-disable max-lines */ // TODO: We might want to split this file up\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nclass ReplayContainer  {\n   __init() {this.eventBuffer = null;}\n\n  /**\n   * List of PerformanceEntry from PerformanceObserver\n   */\n   __init2() {this.performanceEvents = [];}\n\n  /**\n   * Recording can happen in one of two modes:\n   * * session: Record the whole session, sending it continuously\n   * * error: Always keep the last 60s of recording, and when an error occurs, send it immediately\n   */\n   __init3() {this.recordingMode = 'session';}\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n    __init4() {this.timeouts = {\n    sessionIdle: SESSION_IDLE_DURATION,\n    maxSessionLife: MAX_SESSION_LIFE,\n  }; }\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n   __init5() {this._performanceObserver = null;}\n\n   __init6() {this._flushLock = null;}\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n   __init7() {this._lastActivity = new Date().getTime();}\n\n  /**\n   * Is the integration currently active?\n   */\n   __init8() {this._isEnabled = false;}\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n   __init9() {this._isPaused = false;}\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n   __init10() {this._hasInitializedCoreListeners = false;}\n\n  /**\n   * Function to stop recording\n   */\n   __init11() {this._stopRecording = null;}\n\n   __init12() {this._context = {\n    errorIds: new Set(),\n    traceIds: new Set(),\n    urls: [],\n    earliestEvent: null,\n    initialTimestamp: new Date().getTime(),\n    initialUrl: '',\n  };}\n\n   constructor({\n    options,\n    recordingOptions,\n  }\n\n) {ReplayContainer.prototype.__init.call(this);ReplayContainer.prototype.__init2.call(this);ReplayContainer.prototype.__init3.call(this);ReplayContainer.prototype.__init4.call(this);ReplayContainer.prototype.__init5.call(this);ReplayContainer.prototype.__init6.call(this);ReplayContainer.prototype.__init7.call(this);ReplayContainer.prototype.__init8.call(this);ReplayContainer.prototype.__init9.call(this);ReplayContainer.prototype.__init10.call(this);ReplayContainer.prototype.__init11.call(this);ReplayContainer.prototype.__init12.call(this);ReplayContainer.prototype.__init13.call(this);ReplayContainer.prototype.__init14.call(this);ReplayContainer.prototype.__init15.call(this);ReplayContainer.prototype.__init16.call(this);\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n  }\n\n  /** Get the event context. */\n   getContext() {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n   isEnabled() {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n   isPaused() {\n    return this._isPaused;\n  }\n\n  /** Get the replay integration options. */\n   getOptions() {\n    return this._options;\n  }\n\n  /**\n   * Initializes the plugin.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    this.setInitialState();\n\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    // If there is no session, then something bad has happened - can't continue\n    if (!this.session) {\n      this._handleException(new Error('No session found'));\n      return;\n    }\n\n    if (!this.session.sampled) {\n      // If session was not sampled, then we do not initialize the integration at all.\n      return;\n    }\n\n    // If session is sampled for errors, then we need to set the recordingMode\n    // to 'error', which will configure recording with different options.\n    if (this.session.sampled === 'error') {\n      this.recordingMode = 'error';\n    }\n\n    // setup() is generally called on page load or manually - in both cases we\n    // should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n    });\n\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n\n    this.startRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n   startRecording() {\n    try {\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'error' && { checkoutEveryNms: ERROR_CHECKOUT_TIME }),\n        emit: getHandleRecordingEmit(this),\n        onMutation: (mutations) => {\n          if (this._options._experiments.captureMutationSize) {\n            const count = mutations.length;\n\n            if (count > 500) {\n              const breadcrumb = createBreadcrumb({\n                category: 'replay.mutations',\n                data: {\n                  count,\n                },\n              });\n              this._createCustomBreadcrumb(breadcrumb);\n            }\n          }\n          // `true` means we use the regular mutation handling by rrweb\n          return true;\n        },\n      });\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   * Returns true if it was stopped, else false.\n   */\n   stopRecording() {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      this._handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop(reason) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    try {\n      if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n        const msg = `[Replay] Stopping Replay${reason ? ` triggered by ${reason}` : ''}`;\n\n        // When `traceInternals` is enabled, we want to log this to the console\n        // Else, use the regular debug output\n        // eslint-disable-next-line\n        const log = this.getOptions()._experiments.traceInternals ? console.warn : _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log;\n        log(msg);\n      }\n\n      this._isEnabled = false;\n      this._removeListeners();\n      this.stopRecording();\n      this.eventBuffer && this.eventBuffer.destroy();\n      this.eventBuffer = null;\n      this._debouncedFlush.cancel();\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n   pause() {\n    this._isPaused = true;\n    this.stopRecording();\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n   resume() {\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n   addUpdate(cb) {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'error'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'error') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n   triggerUserActivity() {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._loadAndCheckSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   *\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of mulitple flushes happening closely together.\n   */\n   flushImmediate() {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() ;\n  }\n\n  /** Get the current sesion (=replay) ID */\n   getSessionId() {\n    return this.session && this.session.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n   checkAndHandleExpiredSession() {\n    const oldSessionId = this.getSessionId();\n\n    // Prevent starting a new session if the last user activity is older than\n    // MAX_SESSION_LIFE. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (this._lastActivity && isExpired(this._lastActivity, this.timeouts.maxSessionLife)) {\n      // Pause recording\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._loadAndCheckSession()) {\n      return;\n    }\n\n    // Session was expired if session ids do not match\n    const expired = oldSessionId !== this.getSessionId();\n\n    if (!expired) {\n      return true;\n    }\n\n    // Session is expired, trigger a full snapshot (which will create a new session)\n    this._triggerFullSnapshot();\n\n    return false;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n   setInitialState() {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEvents = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = new Date().getTime();\n    this._context.urls.push(url);\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n   _handleException(error) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay]', error);\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && this._options._experiments && this._options._experiments.captureExceptions) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.captureException)(error);\n    }\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   * Returns false if session is not recorded.\n   */\n   _loadAndCheckSession() {\n    const { type, session } = getSession({\n      timeouts: this.timeouts,\n      stickySession: Boolean(this._options.stickySession),\n      currentSession: this.session,\n      sessionSampleRate: this._options.sessionSampleRate,\n      errorSampleRate: this._options.errorSampleRate,\n    });\n\n    // If session was newly created (i.e. was not loaded from storage), then\n    // enable flag to create the root replay\n    if (type === 'new') {\n      this.setInitialState();\n    }\n\n    const currentSessionId = this.getSessionId();\n    if (session.id !== currentSessionId) {\n      session.previousSessionId = currentSessionId;\n    }\n\n    this.session = session;\n\n    if (!this.session.sampled) {\n      this.stop('session unsampled');\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n   _addListeners() {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n\n      // We need to filter out dropped events captured by `addGlobalEventProcessor(this.handleGlobalEvent)` below\n      overwriteRecordDroppedEvent(this._context.errorIds);\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this);\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n\n    // PerformanceObserver //\n    if (!('PerformanceObserver' in WINDOW)) {\n      return;\n    }\n\n    this._performanceObserver = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n   _removeListeners() {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n\n      restoreRecordDroppedEvent();\n\n      if (this._performanceObserver) {\n        this._performanceObserver.disconnect();\n        this._performanceObserver = null;\n      }\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n   __init13() {this._handleVisibilityChange = () => {\n    if (WINDOW.document.visibilityState === 'visible') {\n      this._doChangeToForegroundTasks();\n    } else {\n      this._doChangeToBackgroundTasks();\n    }\n  };}\n\n  /**\n   * Handle when page is blurred\n   */\n   __init14() {this._handleWindowBlur = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.blur',\n    });\n\n    // Do not count blur as a user action -- it's part of the process of them\n    // leaving the page\n    this._doChangeToBackgroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Handle when page is focused\n   */\n   __init15() {this._handleWindowFocus = () => {\n    const breadcrumb = createBreadcrumb({\n      category: 'ui.focus',\n    });\n\n    // Do not count focus as a user action -- instead wait until they focus and\n    // interactive with page\n    this._doChangeToForegroundTasks(breadcrumb);\n  };}\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n   _doChangeToBackgroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, this.timeouts);\n\n    if (breadcrumb && !expired) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    this._conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n   _doChangeToForegroundTasks(breadcrumb) {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Trigger rrweb to take a full snapshot which will cause this plugin to\n   * create a new Replay event.\n   */\n   _triggerFullSnapshot() {\n    try {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('[Replay] Taking full rrweb snapshot');\n      record.takeFullSnapshot(true);\n    } catch (err) {\n      this._handleException(err);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n   _updateUserActivity(_lastActivity = new Date().getTime()) {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n   _updateSessionActivity(_lastActivity = new Date().getTime()) {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n   _createCustomBreadcrumb(breadcrumb) {\n    this.addUpdate(() => {\n      void addEvent(this, {\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEvents`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n   _addPerformanceEntries() {\n    // Copy and reset entries before processing\n    const entries = [...this.performanceEvents];\n    this.performanceEvents = [];\n\n    return Promise.all(createPerformanceSpans(this, createPerformanceEntries(entries)));\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n   _conditionalFlush() {\n    if (this.recordingMode === 'error') {\n      return;\n    }\n\n    void this.flushImmediate();\n  }\n\n  /**\n   * Clear _context\n   */\n   _clearContext() {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n    this._context.earliestEvent = null;\n  }\n\n  /**\n   * Return and clear _context\n   */\n   _popEventContext() {\n    if (this._context.earliestEvent && this._context.earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = this._context.earliestEvent;\n    }\n\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds).filter(Boolean),\n      traceIds: Array.from(this._context.traceIds).filter(Boolean),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n   async _runFlush() {\n    if (!this.session || !this.eventBuffer) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer || !this.eventBuffer.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    try {\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      // NOTE: Copy values from instance members, as it's possible they could\n      // change before the flush finishes.\n      const replayId = this.session.id;\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        includeReplayStartTimestamp: segmentId === 0,\n        eventContext,\n        session: this.session,\n        options: this.getOptions(),\n        timestamp: new Date().getTime(),\n      });\n    } catch (err) {\n      this._handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      this.stop('sendReplay');\n\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getClient();\n\n      if (client) {\n        client.recordDroppedEvent('send_error', 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n   __init16() {this._flush = async () => {\n    if (!this._isEnabled) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('[Replay] No session found to flush.');\n      return;\n    }\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // this._flushLock acts as a lock so that future calls to `_flush()`\n    // will be blocked until this promise resolves\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n      await this._flushLock;\n      this._flushLock = null;\n      return;\n    }\n\n    // Wait for previous flush to finish, then call the debounced `_flush()`.\n    // It's possible there are other flush requests queued and waiting for it\n    // to resolve. We want to reduce all outstanding requests (as well as any\n    // new flush requests that occur within a second of the locked flush\n    // completing) into a single flush.\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error(err);\n    } finally {\n      this._debouncedFlush();\n    }\n  };}\n\n  /** Save the session, if it is sticky */\n   _maybeSaveSession() {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n}\n\nfunction getOption(\n  selectors,\n  defaultSelectors,\n  deprecatedClassOption,\n  deprecatedSelectorOption,\n) {\n  const deprecatedSelectors = typeof deprecatedSelectorOption === 'string' ? deprecatedSelectorOption.split(',') : [];\n\n  const allSelectors = [\n    ...selectors,\n    // @deprecated\n    ...deprecatedSelectors,\n\n    // sentry defaults\n    ...defaultSelectors,\n  ];\n\n  // @deprecated\n  if (typeof deprecatedClassOption !== 'undefined') {\n    // NOTE: No support for RegExp\n    if (typeof deprecatedClassOption === 'string') {\n      allSelectors.push(`.${deprecatedClassOption}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[Replay] You are using a deprecated configuration item for privacy. Read the documentation on how to use the new privacy configuration.',\n    );\n  }\n\n  return allSelectors.join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nfunction getPrivacyOptions({\n  mask,\n  unmask,\n  block,\n  unblock,\n  ignore,\n\n  // eslint-disable-next-line deprecation/deprecation\n  blockClass,\n  // eslint-disable-next-line deprecation/deprecation\n  blockSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextClass,\n  // eslint-disable-next-line deprecation/deprecation\n  maskTextSelector,\n  // eslint-disable-next-line deprecation/deprecation\n  ignoreClass,\n}) {\n  const defaultBlockedElements = ['base[href=\"/\"]'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]'], maskTextClass, maskTextSelector);\n  const unmaskSelector = getOption(unmask, ['.sentry-unmask', '[data-sentry-unmask]']);\n\n  const options = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n    maskInputSelector: maskSelector,\n    unmaskInputSelector: unmaskSelector,\n\n    blockSelector: getOption(\n      block,\n      ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements],\n      blockClass,\n      blockSelector,\n    ),\n    unblockSelector: getOption(unblock, ['.sentry-unblock', '[data-sentry-unblock]']),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]'], ignoreClass),\n  };\n\n  if (blockClass instanceof RegExp) {\n    options.blockClass = blockClass;\n  }\n\n  if (maskTextClass instanceof RegExp) {\n    options.maskTextClass = maskTextClass;\n  }\n\n  return options;\n}\n\n/**\n * Returns true if we are in the browser.\n */\nfunction isBrowser() {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof window !== 'undefined' && (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isNodeEnv)() || isElectronNodeRenderer());\n}\n\n// Electron renderers with nodeIntegration enabled are detected as Node.js so we specifically test for them\nfunction isElectronNodeRenderer() {\n  return typeof process !== 'undefined' && (process ).type === 'renderer';\n}\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nlet _initialized = false;\n\n/**\n * The main replay integration class, to be passed to `init({  integrations: [] })`.\n */\nclass Replay  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Replay';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Replay.id;}\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n\n   constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    stickySession = true,\n    useCompression = true,\n    _experiments = {},\n    sessionSampleRate,\n    errorSampleRate,\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mask = [],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    // eslint-disable-next-line deprecation/deprecation\n    blockClass,\n    // eslint-disable-next-line deprecation/deprecation\n    blockSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    maskInputOptions,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextClass,\n    // eslint-disable-next-line deprecation/deprecation\n    maskTextSelector,\n    // eslint-disable-next-line deprecation/deprecation\n    ignoreClass,\n  } = {}) {Replay.prototype.__init.call(this);\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { ...(maskInputOptions || {}), password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n\n      ...getPrivacyOptions({\n        mask,\n        unmask,\n        block,\n        unblock,\n        ignore,\n        blockClass,\n        blockSelector,\n        maskTextClass,\n        maskTextSelector,\n        ignoreClass,\n      }),\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      stickySession,\n      sessionSampleRate,\n      errorSampleRate,\n      useCompression,\n      blockAllMedia,\n      _experiments,\n    };\n\n    if (typeof sessionSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`sessionSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysSessionSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysSessionSampleRate: ${sessionSampleRate} })`,\n      );\n\n      this._initialOptions.sessionSampleRate = sessionSampleRate;\n    }\n\n    if (typeof errorSampleRate === 'number') {\n      // eslint-disable-next-line\n      console.warn(\n        `[Replay] You are passing \\`errorSampleRate\\` to the Replay integration.\nThis option is deprecated and will be removed soon.\nInstead, configure \\`replaysOnErrorSampleRate\\` directly in the SDK init options, e.g.:\nSentry.init({ replaysOnErrorSampleRate: ${errorSampleRate} })`,\n      );\n\n      this._initialOptions.errorSampleRate = errorSampleRate;\n    }\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n   get _isInitialized() {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n   set _isInitialized(value) {\n    _initialized = value;\n  }\n\n  /**\n   * We previously used to create a transaction in `setupOnce` and it would\n   * potentially create a transaction before some native SDK integrations have run\n   * and applied their own global event processor. An example is:\n   * https://github.com/getsentry/sentry-javascript/blob/b47ceafbdac7f8b99093ce6023726ad4687edc48/packages/browser/src/integrations/useragent.ts\n   *\n   * So we call `replay.setup` in next event loop as a workaround to wait for other\n   * global event processors to finish. This is no longer needed, but keeping it\n   * here to avoid any future issues.\n   */\n   setupOnce() {\n    if (!isBrowser()) {\n      return;\n    }\n\n    this._setup();\n\n    // XXX: See method comments above\n    setTimeout(() => this.start());\n  }\n\n  /**\n   * Initializes the plugin.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n   start() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.start();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n   stop() {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.stop();\n  }\n\n  /**\n   * Immediately send all pending events.\n   */\n   flush() {\n    if (!this._replay || !this._replay.isEnabled()) {\n      return;\n    }\n\n    return this._replay.flushImmediate();\n  }\n\n  /** Setup the integration. */\n   _setup() {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n} Replay.__initStatic();\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getClient();\n  const opt = client && (client.getOptions() );\n\n  const finalOptions = { sessionSampleRate: 0, errorSampleRate: 0, ...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dropUndefinedKeys)(initialOptions) };\n\n  if (!opt) {\n    // eslint-disable-next-line no-console\n    console.warn('SDK client is not available.');\n    return finalOptions;\n  }\n\n  if (\n    initialOptions.sessionSampleRate == null && // TODO remove once deprecated rates are removed\n    initialOptions.errorSampleRate == null && // TODO remove once deprecated rates are removed\n    opt.replaysSessionSampleRate == null &&\n    opt.replaysOnErrorSampleRate == null\n  ) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n    );\n  }\n\n  if (typeof opt.replaysSessionSampleRate === 'number') {\n    finalOptions.sessionSampleRate = opt.replaysSessionSampleRate;\n  }\n\n  if (typeof opt.replaysOnErrorSampleRate === 'number') {\n    finalOptions.errorSampleRate = opt.replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/replay/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/backgroundtab.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/backgroundtab.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerBackgroundTabDetection\": function() { return /* binding */ registerBackgroundTabDetection; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n\n\n\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.addEventListener('visibilitychange', () => {\n      const activeTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveTransaction)() ;\n      if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(\n            `[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${activeTransaction.op}`,\n          );\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!activeTransaction.status) {\n          activeTransaction.setStatus(statusType);\n        }\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.finish();\n      }\n    });\n  } else {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\n\n//# sourceMappingURL=backgroundtab.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL2JhY2tncm91bmR0YWIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNiO0FBQ0g7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLDZDQUFNLElBQUksc0RBQWU7QUFDL0IsSUFBSSx1RUFBZ0M7QUFDcEMsZ0NBQWdDLGtFQUFvQjtBQUNwRCxVQUFVLDZEQUFzQjtBQUNoQzs7QUFFQTtBQUNBLFVBQVUscURBQVU7QUFDcEIsc0NBQXNDLFlBQVksNENBQTRDLHFCQUFxQjtBQUNuSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0EsTUFBTSxzREFBVztBQUNqQjtBQUNBOztBQUUwQztBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL2JhY2tncm91bmR0YWIuanM/ZjZkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBY3RpdmVUcmFuc2FjdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4vdHlwZXMuanMnO1xuXG4vKipcbiAqIEFkZCBhIGxpc3RlbmVyIHRoYXQgY2FuY2VscyBhbmQgZmluaXNoZXMgYSB0cmFuc2FjdGlvbiB3aGVuIHRoZSBnbG9iYWxcbiAqIGRvY3VtZW50IGlzIGhpZGRlbi5cbiAqL1xuZnVuY3Rpb24gcmVnaXN0ZXJCYWNrZ3JvdW5kVGFiRGV0ZWN0aW9uKCkge1xuICBpZiAoV0lORE9XICYmIFdJTkRPVy5kb2N1bWVudCkge1xuICAgIFdJTkRPVy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgKCkgPT4ge1xuICAgICAgY29uc3QgYWN0aXZlVHJhbnNhY3Rpb24gPSBnZXRBY3RpdmVUcmFuc2FjdGlvbigpIDtcbiAgICAgIGlmIChXSU5ET1cuZG9jdW1lbnQuaGlkZGVuICYmIGFjdGl2ZVRyYW5zYWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IHN0YXR1c1R5cGUgPSAnY2FuY2VsbGVkJztcblxuICAgICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmXG4gICAgICAgICAgbG9nZ2VyLmxvZyhcbiAgICAgICAgICAgIGBbVHJhY2luZ10gVHJhbnNhY3Rpb246ICR7c3RhdHVzVHlwZX0gLT4gc2luY2UgdGFiIG1vdmVkIHRvIHRoZSBiYWNrZ3JvdW5kLCBvcDogJHthY3RpdmVUcmFuc2FjdGlvbi5vcH1gLFxuICAgICAgICAgICk7XG4gICAgICAgIC8vIFdlIHNob3VsZCBub3Qgc2V0IHN0YXR1cyBpZiBpdCBpcyBhbHJlYWR5IHNldCwgdGhpcyBwcmV2ZW50IGltcG9ydGFudCBzdGF0dXNlcyBsaWtlXG4gICAgICAgIC8vIGVycm9yIG9yIGRhdGEgbG9zcyBmcm9tIGJlaW5nIG92ZXJ3cml0dGVuIG9uIHRyYW5zYWN0aW9uLlxuICAgICAgICBpZiAoIWFjdGl2ZVRyYW5zYWN0aW9uLnN0YXR1cykge1xuICAgICAgICAgIGFjdGl2ZVRyYW5zYWN0aW9uLnNldFN0YXR1cyhzdGF0dXNUeXBlKTtcbiAgICAgICAgfVxuICAgICAgICBhY3RpdmVUcmFuc2FjdGlvbi5zZXRUYWcoJ3Zpc2liaWxpdHljaGFuZ2UnLCAnZG9jdW1lbnQuaGlkZGVuJyk7XG4gICAgICAgIGFjdGl2ZVRyYW5zYWN0aW9uLmZpbmlzaCgpO1xuICAgICAgfVxuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiZcbiAgICAgIGxvZ2dlci53YXJuKCdbVHJhY2luZ10gQ291bGQgbm90IHNldCB1cCBiYWNrZ3JvdW5kIHRhYiBkZXRlY3Rpb24gZHVlIHRvIGxhY2sgb2YgZ2xvYmFsIGRvY3VtZW50Jyk7XG4gIH1cbn1cblxuZXhwb3J0IHsgcmVnaXN0ZXJCYWNrZ3JvdW5kVGFiRGV0ZWN0aW9uIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYWNrZ3JvdW5kdGFiLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/backgroundtab.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/browsertracing.js":
/*!********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/browsertracing.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BROWSER_TRACING_INTEGRATION_ID\": function() { return /* binding */ BROWSER_TRACING_INTEGRATION_ID; },\n/* harmony export */   \"BrowserTracing\": function() { return /* binding */ BrowserTracing; },\n/* harmony export */   \"getMetaContent\": function() { return /* binding */ getMetaContent; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _backgroundtab_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./backgroundtab.js */ \"./node_modules/@sentry/tracing/esm/browser/backgroundtab.js\");\n/* harmony import */ var _metrics_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./metrics/index.js */ \"./node_modules/@sentry/tracing/esm/browser/metrics/index.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request.js */ \"./node_modules/@sentry/tracing/esm/browser/request.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router.js */ \"./node_modules/@sentry/tracing/esm/browser/router.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n\n\n\n\n\n\n\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_0__.TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: _router_js__WEBPACK_IMPORTED_MODULE_1__.instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  _experiments: {},\n  ..._request_js__WEBPACK_IMPORTED_MODULE_2__.defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {BrowserTracing.prototype.__init.call(this);\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_3__.startTrackingWebVitals)();\n    if (this.options.enableLongTask) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_3__.startTrackingLongTasks)();\n    }\n    if (this.options._experiments.enableInteractions) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_3__.startTrackingInteractions)();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      _experiments,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      (0,_backgroundtab_js__WEBPACK_IMPORTED_MODULE_4__.registerBackgroundTabDetection)();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    (0,_request_js__WEBPACK_IMPORTED_MODULE_2__.instrumentOutgoingRequests)({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTraceMetaTagValue = isPageloadTransaction ? getMetaContent('sentry-trace') : null;\n    const baggageMetaTagValue = isPageloadTransaction ? getMetaContent('baggage') : null;\n\n    const traceParentData = sentryTraceMetaTagValue ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.extractTraceparentData)(sentryTraceMetaTagValue) : undefined;\n    const dynamicSamplingContext = baggageMetaTagValue\n      ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.baggageHeaderToDynamicSamplingContext)(baggageMetaTagValue)\n      : undefined;\n\n    const expandedContext = {\n      ...context,\n      ...traceParentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceParentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = finalContext.metadata && finalContext.metadata.source;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const hub = this._getCurrentHub();\n    const { location } = _types_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW;\n\n    const idleTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startIdleTransaction)(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_3__.addPerformanceEntries)(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n      const op = 'ui.action.click';\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = _types_js__WEBPACK_IMPORTED_MODULE_6__.WINDOW;\n\n      const context = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.startIdleTransaction)(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.getDomElement)(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : null;\n}\n\n\n//# sourceMappingURL=browsertracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/browsertracing.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/metrics/index.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/metrics/index.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_addMeasureSpans\": function() { return /* binding */ _addMeasureSpans; },\n/* harmony export */   \"_addResourceSpans\": function() { return /* binding */ _addResourceSpans; },\n/* harmony export */   \"addPerformanceEntries\": function() { return /* binding */ addPerformanceEntries; },\n/* harmony export */   \"startTrackingInteractions\": function() { return /* binding */ startTrackingInteractions; },\n/* harmony export */   \"startTrackingLongTasks\": function() { return /* binding */ startTrackingLongTasks; },\n/* harmony export */   \"startTrackingWebVitals\": function() { return /* binding */ startTrackingWebVitals; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n/* harmony import */ var _web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../web-vitals/getCLS.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js\");\n/* harmony import */ var _web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../web-vitals/getFID.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js\");\n/* harmony import */ var _web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../web-vitals/getLCP.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js\");\n/* harmony import */ var _web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../web-vitals/lib/getVisibilityWatcher.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web-vitals/lib/observe.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils.js */ \"./node_modules/@sentry/tracing/esm/browser/metrics/utils.js\");\n\n\n\n\n\n\n\n\n\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI() {\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.addEventListener && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    if (performance.mark) {\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.mark('sentry-tracing-init');\n    }\n    _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n\n    return () => {\n      if (clsCallback) {\n        clsCallback();\n      }\n      if (lcpCallback) {\n        lcpCallback();\n      }\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  const entryHandler = (entries) => {\n    for (const entry of entries) {\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  };\n\n  (0,_web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('longtask', entryHandler);\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  const entryHandler = (entries) => {\n    for (const entry of entries) {\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        transaction.startChild({\n          description: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        });\n      }\n    }\n  };\n\n  (0,_web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('event', entryHandler, { durationThreshold: 0 });\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  // See:\n  // https://web.dev/evolving-cls/\n  // https://web.dev/cls-web-tooling/\n  return (0,_web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_4__.onCLS)(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  });\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return (0,_web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_5__.onLCP)(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  });\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  (0,_web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_6__.onFID)(metric => {\n    const entry = metric.entries.pop();\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.getEntries || !_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  let responseStartTimestamp;\n  let requestStartTimestamp;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    if (transaction.op === 'navigation' && timeOrigin + startTime < transaction.startTimestamp) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        responseStartTimestamp = timeOrigin + msToSec(entry.responseStart);\n        requestStartTimestamp = timeOrigin + msToSec(entry.requestStart);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = (0,_web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_7__.getVisibilityWatcher)();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        const resourceName = (entry.name ).replace(_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.origin, '');\n        _addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (transaction.op === 'pageload') {\n    // Generate TTFB (Time to First Byte), which measured as the time between the beginning of the transaction and the\n    // start of the response in milliseconds\n    if (typeof responseStartTimestamp === 'number') {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding TTFB');\n      _measurements['ttfb'] = {\n        value: (responseStartTimestamp - transaction.startTimestamp) * 1000,\n        unit: 'millisecond',\n      };\n\n      if (typeof requestStartTimestamp === 'number' && requestStartTimestamp <= responseStartTimestamp) {\n        // Capture the time spent making the request and receiving the first byte of the response.\n        // This is the time between the start of the request and the start of the response in milliseconds.\n        _measurements['ttfb.requestTime'] = {\n          value: (responseStartTimestamp - requestStartTimestamp) * 1000,\n          unit: 'millisecond',\n        };\n      }\n    }\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || timeOrigin >= transaction.startTimestamp) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transaction.startTimestamp) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_8__._startChild)(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      transaction.setMeasurement(\n        measurementName,\n        _measurements[measurementName].value,\n        _measurements[measurementName].unit,\n      );\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_8__._startChild)(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_8__._startChild)(transaction, {\n    op: 'browser',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_8__._startChild)(transaction, {\n    op: 'browser',\n    description: 'request',\n    startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_8__._startChild)(transaction, {\n    op: 'browser',\n    description: 'response',\n    startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n    endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n  });\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceName,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data = {};\n  if ('transferSize' in entry) {\n    data['Transfer Size'] = entry.transferSize;\n  }\n  if ('encodedBodySize' in entry) {\n    data['Encoded Body Size'] = entry.encodedBodySize;\n  }\n  if ('decodedBodySize' in entry) {\n    data['Decoded Body Size'] = entry.decodedBodySize;\n  }\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_8__._startChild)(transaction, {\n    description: resourceName,\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  const navigator = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_8__.isMeasurementValue)(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_8__.isMeasurementValue)(navigator.deviceMemory)) {\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_8__.isMeasurementValue)(navigator.hardwareConcurrency)) {\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      transaction.setTag('lcp.element', (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      transaction.setTag(`cls.source.${index + 1}`, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(source.node)),\n    );\n  }\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/metrics/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/metrics/utils.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/metrics/utils.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_startChild\": function() { return /* binding */ _startChild; },\n/* harmony export */   \"isMeasurementValue\": function() { return /* binding */ isMeasurementValue; }\n/* harmony export */ });\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL21ldHJpY3MvdXRpbHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyx3QkFBd0I7QUFDNUQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFMkM7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdHJhY2luZy9lc20vYnJvd3Nlci9tZXRyaWNzL3V0aWxzLmpzPzI3MTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiB2YWx1ZSBpcyBhIHZhbGlkIG1lYXN1cmVtZW50IHZhbHVlLlxuICovXG5mdW5jdGlvbiBpc01lYXN1cmVtZW50VmFsdWUodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgaXNGaW5pdGUodmFsdWUpO1xufVxuXG4vKipcbiAqIEhlbHBlciBmdW5jdGlvbiB0byBzdGFydCBjaGlsZCBvbiB0cmFuc2FjdGlvbnMuIFRoaXMgZnVuY3Rpb24gd2lsbCBtYWtlIHN1cmUgdGhhdCB0aGUgdHJhbnNhY3Rpb24gd2lsbFxuICogdXNlIHRoZSBzdGFydCB0aW1lc3RhbXAgb2YgdGhlIGNyZWF0ZWQgY2hpbGQgc3BhbiBpZiBpdCBpcyBlYXJsaWVyIHRoYW4gdGhlIHRyYW5zYWN0aW9ucyBhY3R1YWxcbiAqIHN0YXJ0IHRpbWVzdGFtcC5cbiAqL1xuZnVuY3Rpb24gX3N0YXJ0Q2hpbGQodHJhbnNhY3Rpb24sIHsgc3RhcnRUaW1lc3RhbXAsIC4uLmN0eCB9KSB7XG4gIGlmIChzdGFydFRpbWVzdGFtcCAmJiB0cmFuc2FjdGlvbi5zdGFydFRpbWVzdGFtcCA+IHN0YXJ0VGltZXN0YW1wKSB7XG4gICAgdHJhbnNhY3Rpb24uc3RhcnRUaW1lc3RhbXAgPSBzdGFydFRpbWVzdGFtcDtcbiAgfVxuXG4gIHJldHVybiB0cmFuc2FjdGlvbi5zdGFydENoaWxkKHtcbiAgICBzdGFydFRpbWVzdGFtcCxcbiAgICAuLi5jdHgsXG4gIH0pO1xufVxuXG5leHBvcnQgeyBfc3RhcnRDaGlsZCwgaXNNZWFzdXJlbWVudFZhbHVlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/metrics/utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/request.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/request.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_TRACE_PROPAGATION_TARGETS\": function() { return /* binding */ DEFAULT_TRACE_PROPAGATION_TARGETS; },\n/* harmony export */   \"defaultRequestInstrumentationOptions\": function() { return /* binding */ defaultRequestInstrumentationOptions; },\n/* harmony export */   \"fetchCallback\": function() { return /* binding */ fetchCallback; },\n/* harmony export */   \"instrumentOutgoingRequests\": function() { return /* binding */ instrumentOutgoingRequests; },\n/* harmony export */   \"shouldAttachHeaders\": function() { return /* binding */ shouldAttachHeaders; },\n/* harmony export */   \"xhrCallback\": function() { return /* binding */ xhrCallback; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/* eslint-disable max-lines */\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceFetch, traceXHR, tracePropagationTargets, tracingOrigins, shouldCreateSpanForRequest } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n\n  if (traceXHR) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.stringMatchesSomePattern)(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.hasTracingEnabled)() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  const currentScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getScope();\n  const currentSpan = currentScope && currentScope.getSpan();\n  const activeTransaction = currentSpan && currentSpan.transaction;\n\n  if (currentSpan && activeTransaction) {\n    const span = currentSpan.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    if (shouldAttachHeaders(handlerData.fetchData.url)) {\n      options.headers = addTracingHeadersToFetchRequest(\n        request,\n        activeTransaction.getDynamicSamplingContext(),\n        span,\n        options,\n      );\n    }\n  }\n}\n\nfunction addTracingHeadersToFetchRequest(\n  request,\n  dynamicSamplingContext,\n  span,\n  options\n\n,\n) {\n  const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n  const sentryTraceHeader = span.toTraceparent();\n\n  const headers =\n    typeof Request !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(request, Request) ? (request ).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended miultiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (\n    !(0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.hasTracingEnabled)() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  const xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  const currentScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getScope();\n  const currentSpan = currentScope && currentScope.getSpan();\n  const activeTransaction = currentSpan && currentSpan.transaction;\n\n  if (currentSpan && activeTransaction) {\n    const span = currentSpan.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader && shouldAttachHeaders(handlerData.xhr.__sentry_xhr__.url)) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        const dynamicSamplingContext = activeTransaction.getDynamicSamplingContext();\n        const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dynamicSamplingContextToSentryBaggageHeader)(dynamicSamplingContext);\n\n        if (sentryBaggageHeader) {\n          // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n          // We can therefore simply set a baggage header without checking what was there before\n          // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n          handlerData.xhr.setRequestHeader(_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n        }\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\n\n//# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/request.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/router.js":
/*!************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/router.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"instrumentRoutingWithDefaults\": function() { return /* binding */ instrumentRoutingWithDefaults; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n\n\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n      op: 'pageload',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addInstrumentationHandler)('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n          op: 'navigation',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\n\n//# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3JvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0U7QUFDOUI7O0FBRXBDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLDZDQUFNLEtBQUssc0RBQWU7QUFDakMscUVBQXFFLHNEQUFXO0FBQ2hGO0FBQ0E7O0FBRUEsb0JBQW9CLDJEQUFvQjs7QUFFeEM7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBd0I7QUFDcEM7QUFDQSxrQkFBa0IsZUFBZTtBQUNqQyxLQUFLO0FBQ0w7O0FBRUE7QUFDQSxJQUFJLHdFQUF5QixlQUFlLFVBQVU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkVBQTJFLHFEQUFVLHFEQUFxRCxxQkFBcUI7QUFDL0o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsK0RBQXdCO0FBQ3hDO0FBQ0Esc0JBQXNCLGVBQWU7QUFDckMsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRXlDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL2Jyb3dzZXIvcm91dGVyLmpzP2UzMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9nZ2VyLCBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuL3R5cGVzLmpzJztcblxuLyoqXG4gKiBEZWZhdWx0IGZ1bmN0aW9uIGltcGxlbWVudGluZyBwYWdlbG9hZCBhbmQgbmF2aWdhdGlvbiB0cmFuc2FjdGlvbnNcbiAqL1xuZnVuY3Rpb24gaW5zdHJ1bWVudFJvdXRpbmdXaXRoRGVmYXVsdHMoXG4gIGN1c3RvbVN0YXJ0VHJhbnNhY3Rpb24sXG4gIHN0YXJ0VHJhbnNhY3Rpb25PblBhZ2VMb2FkID0gdHJ1ZSxcbiAgc3RhcnRUcmFuc2FjdGlvbk9uTG9jYXRpb25DaGFuZ2UgPSB0cnVlLFxuKSB7XG4gIGlmICghV0lORE9XIHx8ICFXSU5ET1cubG9jYXRpb24pIHtcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci53YXJuKCdDb3VsZCBub3QgaW5pdGlhbGl6ZSByb3V0aW5nIGluc3RydW1lbnRhdGlvbiBkdWUgdG8gaW52YWxpZCBsb2NhdGlvbicpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCBzdGFydGluZ1VybCA9IFdJTkRPVy5sb2NhdGlvbi5ocmVmO1xuXG4gIGxldCBhY3RpdmVUcmFuc2FjdGlvbjtcbiAgaWYgKHN0YXJ0VHJhbnNhY3Rpb25PblBhZ2VMb2FkKSB7XG4gICAgYWN0aXZlVHJhbnNhY3Rpb24gPSBjdXN0b21TdGFydFRyYW5zYWN0aW9uKHtcbiAgICAgIG5hbWU6IFdJTkRPVy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIG9wOiAncGFnZWxvYWQnLFxuICAgICAgbWV0YWRhdGE6IHsgc291cmNlOiAndXJsJyB9LFxuICAgIH0pO1xuICB9XG5cbiAgaWYgKHN0YXJ0VHJhbnNhY3Rpb25PbkxvY2F0aW9uQ2hhbmdlKSB7XG4gICAgYWRkSW5zdHJ1bWVudGF0aW9uSGFuZGxlcignaGlzdG9yeScsICh7IHRvLCBmcm9tIH0pID0+IHtcbiAgICAgIC8qKlxuICAgICAgICogVGhpcyBlYXJseSByZXR1cm4gaXMgdGhlcmUgdG8gYWNjb3VudCBmb3Igc29tZSBjYXNlcyB3aGVyZSBhIG5hdmlnYXRpb24gdHJhbnNhY3Rpb24gc3RhcnRzIHJpZ2h0IGFmdGVyXG4gICAgICAgKiBsb25nLXJ1bm5pbmcgcGFnZWxvYWQuIFdlIG1ha2Ugc3VyZSB0aGF0IGlmIGBmcm9tYCBpcyB1bmRlZmluZWQgYW5kIGEgdmFsaWQgYHN0YXJ0aW5nVVJMYCBleGlzdHMsIHdlIGRvbid0XG4gICAgICAgKiBjcmVhdGUgYW4gdW5lY2Nlc3NhcnkgbmF2aWdhdGlvbiB0cmFuc2FjdGlvbi5cbiAgICAgICAqXG4gICAgICAgKiBUaGlzIHdhcyBoYXJkIHRvIGR1cGxpY2F0ZSwgYnV0IHRoaXMgYmVoYXZpb3Igc3RvcHBlZCBhcyBzb29uIGFzIHRoaXMgZml4IHdhcyBhcHBsaWVkLiBUaGlzIGlzc3VlIG1pZ2h0IGFsc29cbiAgICAgICAqIG9ubHkgYmUgY2F1c2VkIGluIGNlcnRhaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIHdoZXJlIHRoZSB1c2FnZSBvZiBhIGhvdCBtb2R1bGUgcmVsb2FkZXIgaXMgY2F1c2luZ1xuICAgICAgICogZXJyb3JzLlxuICAgICAgICovXG4gICAgICBpZiAoZnJvbSA9PT0gdW5kZWZpbmVkICYmIHN0YXJ0aW5nVXJsICYmIHN0YXJ0aW5nVXJsLmluZGV4T2YodG8pICE9PSAtMSkge1xuICAgICAgICBzdGFydGluZ1VybCA9IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoZnJvbSAhPT0gdG8pIHtcbiAgICAgICAgc3RhcnRpbmdVcmwgPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmIChhY3RpdmVUcmFuc2FjdGlvbikge1xuICAgICAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZyhgW1RyYWNpbmddIEZpbmlzaGluZyBjdXJyZW50IHRyYW5zYWN0aW9uIHdpdGggb3A6ICR7YWN0aXZlVHJhbnNhY3Rpb24ub3B9YCk7XG4gICAgICAgICAgLy8gSWYgdGhlcmUncyBhbiBvcGVuIHRyYW5zYWN0aW9uIG9uIHRoZSBzY29wZSwgd2UgbmVlZCB0byBmaW5pc2ggaXQgYmVmb3JlIGNyZWF0aW5nIGFuIG5ldyBvbmUuXG4gICAgICAgICAgYWN0aXZlVHJhbnNhY3Rpb24uZmluaXNoKCk7XG4gICAgICAgIH1cbiAgICAgICAgYWN0aXZlVHJhbnNhY3Rpb24gPSBjdXN0b21TdGFydFRyYW5zYWN0aW9uKHtcbiAgICAgICAgICBuYW1lOiBXSU5ET1cubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICAgICAgb3A6ICduYXZpZ2F0aW9uJyxcbiAgICAgICAgICBtZXRhZGF0YTogeyBzb3VyY2U6ICd1cmwnIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCB7IGluc3RydW1lbnRSb3V0aW5nV2l0aERlZmF1bHRzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/router.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/types.js":
/*!***********************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/types.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"WINDOW\": function() { return /* binding */ WINDOW; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\n\n//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3R5cGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDOztBQUUzQyxlQUFlLHFEQUFVOztBQUVQO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL2Jyb3dzZXIvdHlwZXMuanM/NDQ5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHTE9CQUxfT0JKIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbmNvbnN0IFdJTkRPVyA9IEdMT0JBTF9PQkogO1xuXG5leHBvcnQgeyBXSU5ET1cgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/types.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onCLS\": function() { return /* binding */ onCLS; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (onReport) => {\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__.initMetric)('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_1__.observe)('layout-shift', handleEntries);\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__.bindReporter)(onReport, metric);\n\n    const stopListening = () => {\n      handleEntries(po.takeRecords() );\n      report(true);\n    };\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__.onHidden)(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getCLS.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0Q0xTLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDTjtBQUNFOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsOERBQVU7QUFDM0I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxhQUFhLHdEQUFPO0FBQ3BCO0FBQ0EsYUFBYSxrRUFBWTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSwwREFBUTs7QUFFWjtBQUNBOztBQUVBO0FBQ0E7O0FBRWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9nZXRDTFMuanM/NDNmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiaW5kUmVwb3J0ZXIgfSBmcm9tICcuL2xpYi9iaW5kUmVwb3J0ZXIuanMnO1xuaW1wb3J0IHsgaW5pdE1ldHJpYyB9IGZyb20gJy4vbGliL2luaXRNZXRyaWMuanMnO1xuaW1wb3J0IHsgb2JzZXJ2ZSB9IGZyb20gJy4vbGliL29ic2VydmUuanMnO1xuaW1wb3J0IHsgb25IaWRkZW4gfSBmcm9tICcuL2xpYi9vbkhpZGRlbi5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIFtDTFNdKGh0dHBzOi8vd2ViLmRldi9jbHMvKSB2YWx1ZSBmb3IgdGhlIGN1cnJlbnQgcGFnZSBhbmRcbiAqIGNhbGxzIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG9uY2UgdGhlIHZhbHVlIGlzIHJlYWR5IHRvIGJlIHJlcG9ydGVkLCBhbG9uZ1xuICogd2l0aCBhbGwgYGxheW91dC1zaGlmdGAgcGVyZm9ybWFuY2UgZW50cmllcyB0aGF0IHdlcmUgdXNlZCBpbiB0aGUgbWV0cmljXG4gKiB2YWx1ZSBjYWxjdWxhdGlvbi4gVGhlIHJlcG9ydGVkIHZhbHVlIGlzIGEgYGRvdWJsZWAgKGNvcnJlc3BvbmRpbmcgdG8gYVxuICogW2xheW91dCBzaGlmdCBzY29yZV0oaHR0cHM6Ly93ZWIuZGV2L2Nscy8jbGF5b3V0LXNoaWZ0LXNjb3JlKSkuXG4gKlxuICogSWYgdGhlIGByZXBvcnRBbGxDaGFuZ2VzYCBjb25maWd1cmF0aW9uIG9wdGlvbiBpcyBzZXQgdG8gYHRydWVgLCB0aGVcbiAqIGBjYWxsYmFja2AgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYXMgc29vbiBhcyB0aGUgdmFsdWUgaXMgaW5pdGlhbGx5XG4gKiBkZXRlcm1pbmVkIGFzIHdlbGwgYXMgYW55IHRpbWUgdGhlIHZhbHVlIGNoYW5nZXMgdGhyb3VnaG91dCB0aGUgcGFnZVxuICogbGlmZXNwYW4uXG4gKlxuICogXyoqSW1wb3J0YW50OioqIENMUyBzaG91bGQgYmUgY29udGludWFsbHkgbW9uaXRvcmVkIGZvciBjaGFuZ2VzIHRocm91Z2hvdXRcbiAqIHRoZSBlbnRpcmUgbGlmZXNwYW4gb2YgYSBwYWdl4oCUaW5jbHVkaW5nIGlmIHRoZSB1c2VyIHJldHVybnMgdG8gdGhlIHBhZ2UgYWZ0ZXJcbiAqIGl0J3MgYmVlbiBoaWRkZW4vYmFja2dyb3VuZGVkLiBIb3dldmVyLCBzaW5jZSBicm93c2VycyBvZnRlbiBbd2lsbCBub3QgZmlyZVxuICogYWRkaXRpb25hbCBjYWxsYmFja3Mgb25jZSB0aGUgdXNlciBoYXMgYmFja2dyb3VuZGVkIGFcbiAqIHBhZ2VdKGh0dHBzOi8vZGV2ZWxvcGVyLmNocm9tZS5jb20vYmxvZy9wYWdlLWxpZmVjeWNsZS1hcGkvI2FkdmljZS1oaWRkZW4pLFxuICogYGNhbGxiYWNrYCBpcyBhbHdheXMgY2FsbGVkIHdoZW4gdGhlIHBhZ2UncyB2aXNpYmlsaXR5IHN0YXRlIGNoYW5nZXMgdG9cbiAqIGhpZGRlbi4gQXMgYSByZXN1bHQsIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG1pZ2h0IGJlIGNhbGxlZCBtdWx0aXBsZSB0aW1lc1xuICogZHVyaW5nIHRoZSBzYW1lIHBhZ2UgbG9hZC5fXG4gKi9cbmNvbnN0IG9uQ0xTID0gKG9uUmVwb3J0KSA9PiB7XG4gIGNvbnN0IG1ldHJpYyA9IGluaXRNZXRyaWMoJ0NMUycsIDApO1xuICBsZXQgcmVwb3J0O1xuXG4gIGxldCBzZXNzaW9uVmFsdWUgPSAwO1xuICBsZXQgc2Vzc2lvbkVudHJpZXMgPSBbXTtcblxuICAvLyBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXM6IE1ldHJpY1snZW50cmllcyddKSA9PiB7XG4gIGNvbnN0IGhhbmRsZUVudHJpZXMgPSAoZW50cmllcykgPT4ge1xuICAgIGVudHJpZXMuZm9yRWFjaChlbnRyeSA9PiB7XG4gICAgICAvLyBPbmx5IGNvdW50IGxheW91dCBzaGlmdHMgd2l0aG91dCByZWNlbnQgdXNlciBpbnB1dC5cbiAgICAgIGlmICghZW50cnkuaGFkUmVjZW50SW5wdXQpIHtcbiAgICAgICAgY29uc3QgZmlyc3RTZXNzaW9uRW50cnkgPSBzZXNzaW9uRW50cmllc1swXTtcbiAgICAgICAgY29uc3QgbGFzdFNlc3Npb25FbnRyeSA9IHNlc3Npb25FbnRyaWVzW3Nlc3Npb25FbnRyaWVzLmxlbmd0aCAtIDFdO1xuXG4gICAgICAgIC8vIElmIHRoZSBlbnRyeSBvY2N1cnJlZCBsZXNzIHRoYW4gMSBzZWNvbmQgYWZ0ZXIgdGhlIHByZXZpb3VzIGVudHJ5IGFuZFxuICAgICAgICAvLyBsZXNzIHRoYW4gNSBzZWNvbmRzIGFmdGVyIHRoZSBmaXJzdCBlbnRyeSBpbiB0aGUgc2Vzc2lvbiwgaW5jbHVkZSB0aGVcbiAgICAgICAgLy8gZW50cnkgaW4gdGhlIGN1cnJlbnQgc2Vzc2lvbi4gT3RoZXJ3aXNlLCBzdGFydCBhIG5ldyBzZXNzaW9uLlxuICAgICAgICBpZiAoXG4gICAgICAgICAgc2Vzc2lvblZhbHVlICYmXG4gICAgICAgICAgc2Vzc2lvbkVudHJpZXMubGVuZ3RoICE9PSAwICYmXG4gICAgICAgICAgZW50cnkuc3RhcnRUaW1lIC0gbGFzdFNlc3Npb25FbnRyeS5zdGFydFRpbWUgPCAxMDAwICYmXG4gICAgICAgICAgZW50cnkuc3RhcnRUaW1lIC0gZmlyc3RTZXNzaW9uRW50cnkuc3RhcnRUaW1lIDwgNTAwMFxuICAgICAgICApIHtcbiAgICAgICAgICBzZXNzaW9uVmFsdWUgKz0gZW50cnkudmFsdWU7XG4gICAgICAgICAgc2Vzc2lvbkVudHJpZXMucHVzaChlbnRyeSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2Vzc2lvblZhbHVlID0gZW50cnkudmFsdWU7XG4gICAgICAgICAgc2Vzc2lvbkVudHJpZXMgPSBbZW50cnldO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWYgdGhlIGN1cnJlbnQgc2Vzc2lvbiB2YWx1ZSBpcyBsYXJnZXIgdGhhbiB0aGUgY3VycmVudCBDTFMgdmFsdWUsXG4gICAgICAgIC8vIHVwZGF0ZSBDTFMgYW5kIHRoZSBlbnRyaWVzIGNvbnRyaWJ1dGluZyB0byBpdC5cbiAgICAgICAgaWYgKHNlc3Npb25WYWx1ZSA+IG1ldHJpYy52YWx1ZSkge1xuICAgICAgICAgIG1ldHJpYy52YWx1ZSA9IHNlc3Npb25WYWx1ZTtcbiAgICAgICAgICBtZXRyaWMuZW50cmllcyA9IHNlc3Npb25FbnRyaWVzO1xuICAgICAgICAgIGlmIChyZXBvcnQpIHtcbiAgICAgICAgICAgIHJlcG9ydCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHBvID0gb2JzZXJ2ZSgnbGF5b3V0LXNoaWZ0JywgaGFuZGxlRW50cmllcyk7XG4gIGlmIChwbykge1xuICAgIHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljKTtcblxuICAgIGNvbnN0IHN0b3BMaXN0ZW5pbmcgPSAoKSA9PiB7XG4gICAgICBoYW5kbGVFbnRyaWVzKHBvLnRha2VSZWNvcmRzKCkgKTtcbiAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICB9O1xuXG4gICAgb25IaWRkZW4oc3RvcExpc3RlbmluZyk7XG5cbiAgICByZXR1cm4gc3RvcExpc3RlbmluZztcbiAgfVxuXG4gIHJldHVybjtcbn07XG5cbmV4cG9ydCB7IG9uQ0xTIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDTFMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/getCLS.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onFID\": function() { return /* binding */ onFID; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('FID');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntry = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries) => {\n    (entries ).forEach(handleEntry);\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)('first-input', handleEntries);\n  report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__.bindReporter)(onReport, metric);\n\n  if (po) {\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__.onHidden)(() => {\n      handleEntries(po.takeRecords() );\n      po.disconnect();\n    }, true);\n  }\n};\n\n\n//# sourceMappingURL=getFID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0RklELmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRDtBQUNnQjtBQUNwQjtBQUNOO0FBQ0U7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrRkFBb0I7QUFDaEQsaUJBQWlCLDhEQUFVO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSx3REFBTztBQUNwQixXQUFXLGtFQUFZOztBQUV2QjtBQUNBLElBQUksMERBQVE7QUFDWjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9nZXRGSUQuanM/NWQzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiaW5kUmVwb3J0ZXIgfSBmcm9tICcuL2xpYi9iaW5kUmVwb3J0ZXIuanMnO1xuaW1wb3J0IHsgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgfSBmcm9tICcuL2xpYi9nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcyc7XG5pbXBvcnQgeyBpbml0TWV0cmljIH0gZnJvbSAnLi9saWIvaW5pdE1ldHJpYy5qcyc7XG5pbXBvcnQgeyBvYnNlcnZlIH0gZnJvbSAnLi9saWIvb2JzZXJ2ZS5qcyc7XG5pbXBvcnQgeyBvbkhpZGRlbiB9IGZyb20gJy4vbGliL29uSGlkZGVuLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgW0ZJRF0oaHR0cHM6Ly93ZWIuZGV2L2ZpZC8pIHZhbHVlIGZvciB0aGUgY3VycmVudCBwYWdlIGFuZFxuICogY2FsbHMgdGhlIGBjYWxsYmFja2AgZnVuY3Rpb24gb25jZSB0aGUgdmFsdWUgaXMgcmVhZHksIGFsb25nIHdpdGggdGhlXG4gKiByZWxldmFudCBgZmlyc3QtaW5wdXRgIHBlcmZvcm1hbmNlIGVudHJ5IHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSB2YWx1ZS4gVGhlXG4gKiByZXBvcnRlZCB2YWx1ZSBpcyBhIGBET01IaWdoUmVzVGltZVN0YW1wYC5cbiAqXG4gKiBfKipJbXBvcnRhbnQ6Kiogc2luY2UgRklEIGlzIG9ubHkgcmVwb3J0ZWQgYWZ0ZXIgdGhlIHVzZXIgaW50ZXJhY3RzIHdpdGggdGhlXG4gKiBwYWdlLCBpdCdzIHBvc3NpYmxlIHRoYXQgaXQgd2lsbCBub3QgYmUgcmVwb3J0ZWQgZm9yIHNvbWUgcGFnZSBsb2Fkcy5fXG4gKi9cbmNvbnN0IG9uRklEID0gKG9uUmVwb3J0KSA9PiB7XG4gIGNvbnN0IHZpc2liaWxpdHlXYXRjaGVyID0gZ2V0VmlzaWJpbGl0eVdhdGNoZXIoKTtcbiAgY29uc3QgbWV0cmljID0gaW5pdE1ldHJpYygnRklEJyk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItY29uc3RcbiAgbGV0IHJlcG9ydDtcblxuICBjb25zdCBoYW5kbGVFbnRyeSA9IChlbnRyeSkgPT4ge1xuICAgIC8vIE9ubHkgcmVwb3J0IGlmIHRoZSBwYWdlIHdhc24ndCBoaWRkZW4gcHJpb3IgdG8gdGhlIGZpcnN0IGlucHV0LlxuICAgIGlmIChlbnRyeS5zdGFydFRpbWUgPCB2aXNpYmlsaXR5V2F0Y2hlci5maXJzdEhpZGRlblRpbWUpIHtcbiAgICAgIG1ldHJpYy52YWx1ZSA9IGVudHJ5LnByb2Nlc3NpbmdTdGFydCAtIGVudHJ5LnN0YXJ0VGltZTtcbiAgICAgIG1ldHJpYy5lbnRyaWVzLnB1c2goZW50cnkpO1xuICAgICAgcmVwb3J0KHRydWUpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXMpID0+IHtcbiAgICAoZW50cmllcyApLmZvckVhY2goaGFuZGxlRW50cnkpO1xuICB9O1xuXG4gIGNvbnN0IHBvID0gb2JzZXJ2ZSgnZmlyc3QtaW5wdXQnLCBoYW5kbGVFbnRyaWVzKTtcbiAgcmVwb3J0ID0gYmluZFJlcG9ydGVyKG9uUmVwb3J0LCBtZXRyaWMpO1xuXG4gIGlmIChwbykge1xuICAgIG9uSGlkZGVuKCgpID0+IHtcbiAgICAgIGhhbmRsZUVudHJpZXMocG8udGFrZVJlY29yZHMoKSApO1xuICAgICAgcG8uZGlzY29ubmVjdCgpO1xuICAgIH0sIHRydWUpO1xuICB9XG59O1xuXG5leHBvcnQgeyBvbkZJRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RklELmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/getFID.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onLCP\": function() { return /* binding */ onLCP; }\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/getActivationStart.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/observe.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/onHidden.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nconst onLCP = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('LCP');\n  let report;\n\n  const handleEntries = (entries) => {\n    const lastEntry = entries[entries.length - 1] ;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__.bindReporter)(onReport, metric);\n\n    const stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      addEventListener(type, stopListening, { once: true, capture: true });\n    });\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_5__.onHidden)(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getLCP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0TENQLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBcUQ7QUFDWTtBQUNJO0FBQ3BCO0FBQ047QUFDRTs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGtGQUFvQjtBQUNoRCxpQkFBaUIsOERBQVU7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsOEVBQWtCOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsd0RBQU87O0FBRXBCO0FBQ0EsYUFBYSxrRUFBWTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QywyQkFBMkI7QUFDekUsS0FBSzs7QUFFTCxJQUFJLDBEQUFROztBQUVaO0FBQ0E7O0FBRUE7QUFDQTs7QUFFaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2dldExDUC5qcz81MzkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJpbmRSZXBvcnRlciB9IGZyb20gJy4vbGliL2JpbmRSZXBvcnRlci5qcyc7XG5pbXBvcnQgeyBnZXRBY3RpdmF0aW9uU3RhcnQgfSBmcm9tICcuL2xpYi9nZXRBY3RpdmF0aW9uU3RhcnQuanMnO1xuaW1wb3J0IHsgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgfSBmcm9tICcuL2xpYi9nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcyc7XG5pbXBvcnQgeyBpbml0TWV0cmljIH0gZnJvbSAnLi9saWIvaW5pdE1ldHJpYy5qcyc7XG5pbXBvcnQgeyBvYnNlcnZlIH0gZnJvbSAnLi9saWIvb2JzZXJ2ZS5qcyc7XG5pbXBvcnQgeyBvbkhpZGRlbiB9IGZyb20gJy4vbGliL29uSGlkZGVuLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmNvbnN0IHJlcG9ydGVkTWV0cmljSURzID0ge307XG5cbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgW0xDUF0oaHR0cHM6Ly93ZWIuZGV2L2xjcC8pIHZhbHVlIGZvciB0aGUgY3VycmVudCBwYWdlIGFuZFxuICogY2FsbHMgdGhlIGBjYWxsYmFja2AgZnVuY3Rpb24gb25jZSB0aGUgdmFsdWUgaXMgcmVhZHkgKGFsb25nIHdpdGggdGhlXG4gKiByZWxldmFudCBgbGFyZ2VzdC1jb250ZW50ZnVsLXBhaW50YCBwZXJmb3JtYW5jZSBlbnRyeSB1c2VkIHRvIGRldGVybWluZSB0aGVcbiAqIHZhbHVlKS4gVGhlIHJlcG9ydGVkIHZhbHVlIGlzIGEgYERPTUhpZ2hSZXNUaW1lU3RhbXBgLlxuICovXG5jb25zdCBvbkxDUCA9IChvblJlcG9ydCkgPT4ge1xuICBjb25zdCB2aXNpYmlsaXR5V2F0Y2hlciA9IGdldFZpc2liaWxpdHlXYXRjaGVyKCk7XG4gIGNvbnN0IG1ldHJpYyA9IGluaXRNZXRyaWMoJ0xDUCcpO1xuICBsZXQgcmVwb3J0O1xuXG4gIGNvbnN0IGhhbmRsZUVudHJpZXMgPSAoZW50cmllcykgPT4ge1xuICAgIGNvbnN0IGxhc3RFbnRyeSA9IGVudHJpZXNbZW50cmllcy5sZW5ndGggLSAxXSA7XG4gICAgaWYgKGxhc3RFbnRyeSkge1xuICAgICAgLy8gVGhlIHN0YXJ0VGltZSBhdHRyaWJ1dGUgcmV0dXJucyB0aGUgdmFsdWUgb2YgdGhlIHJlbmRlclRpbWUgaWYgaXQgaXNcbiAgICAgIC8vIG5vdCAwLCBhbmQgdGhlIHZhbHVlIG9mIHRoZSBsb2FkVGltZSBvdGhlcndpc2UuIFRoZSBhY3RpdmF0aW9uU3RhcnRcbiAgICAgIC8vIHJlZmVyZW5jZSBpcyB1c2VkIGJlY2F1c2UgTENQIHNob3VsZCBiZSByZWxhdGl2ZSB0byBwYWdlIGFjdGl2YXRpb25cbiAgICAgIC8vIHJhdGhlciB0aGFuIG5hdmlnYXRpb24gc3RhcnQgaWYgdGhlIHBhZ2Ugd2FzIHByZXJlbmRlcmVkLlxuICAgICAgY29uc3QgdmFsdWUgPSBNYXRoLm1heChsYXN0RW50cnkuc3RhcnRUaW1lIC0gZ2V0QWN0aXZhdGlvblN0YXJ0KCksIDApO1xuXG4gICAgICAvLyBPbmx5IHJlcG9ydCBpZiB0aGUgcGFnZSB3YXNuJ3QgaGlkZGVuIHByaW9yIHRvIExDUC5cbiAgICAgIGlmICh2YWx1ZSA8IHZpc2liaWxpdHlXYXRjaGVyLmZpcnN0SGlkZGVuVGltZSkge1xuICAgICAgICBtZXRyaWMudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgbWV0cmljLmVudHJpZXMgPSBbbGFzdEVudHJ5XTtcbiAgICAgICAgcmVwb3J0KCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHBvID0gb2JzZXJ2ZSgnbGFyZ2VzdC1jb250ZW50ZnVsLXBhaW50JywgaGFuZGxlRW50cmllcyk7XG5cbiAgaWYgKHBvKSB7XG4gICAgcmVwb3J0ID0gYmluZFJlcG9ydGVyKG9uUmVwb3J0LCBtZXRyaWMpO1xuXG4gICAgY29uc3Qgc3RvcExpc3RlbmluZyA9ICgpID0+IHtcbiAgICAgIGlmICghcmVwb3J0ZWRNZXRyaWNJRHNbbWV0cmljLmlkXSkge1xuICAgICAgICBoYW5kbGVFbnRyaWVzKHBvLnRha2VSZWNvcmRzKCkgKTtcbiAgICAgICAgcG8uZGlzY29ubmVjdCgpO1xuICAgICAgICByZXBvcnRlZE1ldHJpY0lEc1ttZXRyaWMuaWRdID0gdHJ1ZTtcbiAgICAgICAgcmVwb3J0KHRydWUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICAvLyBTdG9wIGxpc3RlbmluZyBhZnRlciBpbnB1dC4gTm90ZTogd2hpbGUgc2Nyb2xsaW5nIGlzIGFuIGlucHV0IHRoYXRcbiAgICAvLyBzdG9wIExDUCBvYnNlcnZhdGlvbiwgaXQncyB1bnJlbGlhYmxlIHNpbmNlIGl0IGNhbiBiZSBwcm9ncmFtbWF0aWNhbGx5XG4gICAgLy8gZ2VuZXJhdGVkLiBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvd2ViLXZpdGFscy9pc3N1ZXMvNzVcbiAgICBbJ2tleWRvd24nLCAnY2xpY2snXS5mb3JFYWNoKHR5cGUgPT4ge1xuICAgICAgYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBzdG9wTGlzdGVuaW5nLCB7IG9uY2U6IHRydWUsIGNhcHR1cmU6IHRydWUgfSk7XG4gICAgfSk7XG5cbiAgICBvbkhpZGRlbihzdG9wTGlzdGVuaW5nLCB0cnVlKTtcblxuICAgIHJldHVybiBzdG9wTGlzdGVuaW5nO1xuICB9XG5cbiAgcmV0dXJuO1xufTtcblxuZXhwb3J0IHsgb25MQ1AgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldExDUC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/getLCP.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"bindReporter\": function() { return /* binding */ bindReporter; }\n/* harmony export */ });\nconst bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\n\n//# sourceMappingURL=bindReporter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2JpbmRSZXBvcnRlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0I7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9iaW5kUmVwb3J0ZXIuanM/NzE5ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBiaW5kUmVwb3J0ZXIgPSAoXG4gIGNhbGxiYWNrLFxuICBtZXRyaWMsXG4gIHJlcG9ydEFsbENoYW5nZXMsXG4pID0+IHtcbiAgbGV0IHByZXZWYWx1ZTtcbiAgbGV0IGRlbHRhO1xuICByZXR1cm4gKGZvcmNlUmVwb3J0KSA9PiB7XG4gICAgaWYgKG1ldHJpYy52YWx1ZSA+PSAwKSB7XG4gICAgICBpZiAoZm9yY2VSZXBvcnQgfHwgcmVwb3J0QWxsQ2hhbmdlcykge1xuICAgICAgICBkZWx0YSA9IG1ldHJpYy52YWx1ZSAtIChwcmV2VmFsdWUgfHwgMCk7XG5cbiAgICAgICAgLy8gUmVwb3J0IHRoZSBtZXRyaWMgaWYgdGhlcmUncyBhIG5vbi16ZXJvIGRlbHRhIG9yIGlmIG5vIHByZXZpb3VzXG4gICAgICAgIC8vIHZhbHVlIGV4aXN0cyAod2hpY2ggY2FuIGhhcHBlbiBpbiB0aGUgY2FzZSBvZiB0aGUgZG9jdW1lbnQgYmVjb21pbmdcbiAgICAgICAgLy8gaGlkZGVuIHdoZW4gdGhlIG1ldHJpYyB2YWx1ZSBpcyAwKS5cbiAgICAgICAgLy8gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3dlYi12aXRhbHMvaXNzdWVzLzE0XG4gICAgICAgIGlmIChkZWx0YSB8fCBwcmV2VmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgIHByZXZWYWx1ZSA9IG1ldHJpYy52YWx1ZTtcbiAgICAgICAgICBtZXRyaWMuZGVsdGEgPSBkZWx0YTtcbiAgICAgICAgICBjYWxsYmFjayhtZXRyaWMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IHsgYmluZFJlcG9ydGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iaW5kUmVwb3J0ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/bindReporter.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js ***!
  \*************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateUniqueID\": function() { return /* binding */ generateUniqueID; }\n/* harmony export */ });\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\n\n//# sourceMappingURL=generateUniqueID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dlbmVyYXRlVW5pcXVlSUQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGVBQWUsV0FBVyxHQUFHLDhDQUE4QztBQUMzRTs7QUFFNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9nZW5lcmF0ZVVuaXF1ZUlELmpzPzY2NTIiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbi8qKlxuICogUGVyZm9ybWFudGx5IGdlbmVyYXRlIGEgdW5pcXVlLCAzMC1jaGFyIHN0cmluZyBieSBjb21iaW5pbmcgYSB2ZXJzaW9uXG4gKiBudW1iZXIsIHRoZSBjdXJyZW50IHRpbWVzdGFtcCB3aXRoIGEgMTMtZGlnaXQgbnVtYmVyIGludGVnZXIuXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmNvbnN0IGdlbmVyYXRlVW5pcXVlSUQgPSAoKSA9PiB7XG4gIHJldHVybiBgdjMtJHtEYXRlLm5vdygpfS0ke01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqICg5ZTEyIC0gMSkpICsgMWUxMn1gO1xufTtcblxuZXhwb3J0IHsgZ2VuZXJhdGVVbmlxdWVJRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2VuZXJhdGVVbmlxdWVJRC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getActivationStart.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getActivationStart.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getActivationStart\": function() { return /* binding */ getActivationStart; }\n/* harmony export */ });\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getActivationStart = () => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\n\n//# sourceMappingURL=getActivationStart.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldEFjdGl2YXRpb25TdGFydC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE2RDs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLDBFQUFrQjtBQUNyQztBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldEFjdGl2YXRpb25TdGFydC5qcz82OGNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE5hdmlnYXRpb25FbnRyeSB9IGZyb20gJy4vZ2V0TmF2aWdhdGlvbkVudHJ5LmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmNvbnN0IGdldEFjdGl2YXRpb25TdGFydCA9ICgpID0+IHtcbiAgY29uc3QgbmF2RW50cnkgPSBnZXROYXZpZ2F0aW9uRW50cnkoKTtcbiAgcmV0dXJuIChuYXZFbnRyeSAmJiBuYXZFbnRyeS5hY3RpdmF0aW9uU3RhcnQpIHx8IDA7XG59O1xuXG5leHBvcnQgeyBnZXRBY3RpdmF0aW9uU3RhcnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEFjdGl2YXRpb25TdGFydC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getActivationStart.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNavigationEntry\": function() { return /* binding */ getNavigationEntry; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.navigation.type;\n\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      navigationEntry[key] = Math.max((timing[key ] ) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry ;\n};\n\nconst getNavigationEntry = () => {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n\n\n//# sourceMappingURL=getNavigationEntry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3Qzs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxpQkFBaUIsZ0VBQXlCO0FBQzFDO0FBQ0EsZUFBZSx5RUFBa0M7O0FBRWpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxNQUFNLHFFQUE4QjtBQUNwQztBQUNBLE1BQU0seURBQWtCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixXQUFXLHlEQUFrQjtBQUM3QjtBQUNBOztBQUU4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcz9mMzFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmNvbnN0IGdldE5hdmlnYXRpb25FbnRyeUZyb21QZXJmb3JtYW5jZVRpbWluZyA9ICgpID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IHRpbWluZyA9IFdJTkRPVy5wZXJmb3JtYW5jZS50aW1pbmc7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBjb25zdCB0eXBlID0gV0lORE9XLnBlcmZvcm1hbmNlLm5hdmlnYXRpb24udHlwZTtcblxuICBjb25zdCBuYXZpZ2F0aW9uRW50cnkgPSB7XG4gICAgZW50cnlUeXBlOiAnbmF2aWdhdGlvbicsXG4gICAgc3RhcnRUaW1lOiAwLFxuICAgIHR5cGU6IHR5cGUgPT0gMiA/ICdiYWNrX2ZvcndhcmQnIDogdHlwZSA9PT0gMSA/ICdyZWxvYWQnIDogJ25hdmlnYXRlJyxcbiAgfTtcblxuICBmb3IgKGNvbnN0IGtleSBpbiB0aW1pbmcpIHtcbiAgICBpZiAoa2V5ICE9PSAnbmF2aWdhdGlvblN0YXJ0JyAmJiBrZXkgIT09ICd0b0pTT04nKSB7XG4gICAgICBuYXZpZ2F0aW9uRW50cnlba2V5XSA9IE1hdGgubWF4KCh0aW1pbmdba2V5IF0gKSAtIHRpbWluZy5uYXZpZ2F0aW9uU3RhcnQsIDApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmF2aWdhdGlvbkVudHJ5IDtcbn07XG5cbmNvbnN0IGdldE5hdmlnYXRpb25FbnRyeSA9ICgpID0+IHtcbiAgaWYgKFdJTkRPVy5fX1dFQl9WSVRBTFNfUE9MWUZJTExfXykge1xuICAgIHJldHVybiAoXG4gICAgICBXSU5ET1cucGVyZm9ybWFuY2UgJiZcbiAgICAgICgocGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSAmJiBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlKCduYXZpZ2F0aW9uJylbMF0pIHx8XG4gICAgICAgIGdldE5hdmlnYXRpb25FbnRyeUZyb21QZXJmb3JtYW5jZVRpbWluZygpKVxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFdJTkRPVy5wZXJmb3JtYW5jZSAmJiBwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlICYmIHBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUoJ25hdmlnYXRpb24nKVswXTtcbiAgfVxufTtcblxuZXhwb3J0IHsgZ2V0TmF2aWdhdGlvbkVudHJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXROYXZpZ2F0aW9uRW50cnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js ***!
  \*****************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getVisibilityWatcher\": function() { return /* binding */ getVisibilityWatcher; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n/* harmony import */ var _onHidden_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./onHidden.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden' && !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering ? 0 : Infinity;\n};\n\nconst trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  (0,_onHidden_js__WEBPACK_IMPORTED_MODULE_1__.onHidden)(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nconst getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    firstHiddenTime = initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\n\n//# sourceMappingURL=getVisibilityWatcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldFZpc2liaWxpdHlXYXRjaGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3QztBQUNDOztBQUV6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzRUFBK0Isa0JBQWtCLG1FQUE0QjtBQUN0Rjs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxzREFBUSxJQUFJLFdBQVc7QUFDekI7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRWdDO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9saWIvZ2V0VmlzaWJpbGl0eVdhdGNoZXIuanM/NjA2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi8uLi90eXBlcy5qcyc7XG5pbXBvcnQgeyBvbkhpZGRlbiB9IGZyb20gJy4vb25IaWRkZW4uanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxubGV0IGZpcnN0SGlkZGVuVGltZSA9IC0xO1xuXG5jb25zdCBpbml0SGlkZGVuVGltZSA9ICgpID0+IHtcbiAgLy8gSWYgdGhlIGRvY3VtZW50IGlzIGhpZGRlbiBhbmQgbm90IHByZXJlbmRlcmluZywgYXNzdW1lIGl0IHdhcyBhbHdheXNcbiAgLy8gaGlkZGVuIGFuZCB0aGUgcGFnZSB3YXMgbG9hZGVkIGluIHRoZSBiYWNrZ3JvdW5kLlxuICByZXR1cm4gV0lORE9XLmRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA9PT0gJ2hpZGRlbicgJiYgIVdJTkRPVy5kb2N1bWVudC5wcmVyZW5kZXJpbmcgPyAwIDogSW5maW5pdHk7XG59O1xuXG5jb25zdCB0cmFja0NoYW5nZXMgPSAoKSA9PiB7XG4gIC8vIFVwZGF0ZSB0aGUgdGltZSBpZi93aGVuIHRoZSBkb2N1bWVudCBiZWNvbWVzIGhpZGRlbi5cbiAgb25IaWRkZW4oKHsgdGltZVN0YW1wIH0pID0+IHtcbiAgICBmaXJzdEhpZGRlblRpbWUgPSB0aW1lU3RhbXA7XG4gIH0sIHRydWUpO1xufTtcblxuY29uc3QgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgPSAoXG5cbikgPT4ge1xuICBpZiAoZmlyc3RIaWRkZW5UaW1lIDwgMCkge1xuICAgIC8vIElmIHRoZSBkb2N1bWVudCBpcyBoaWRkZW4gd2hlbiB0aGlzIGNvZGUgcnVucywgYXNzdW1lIGl0IHdhcyBoaWRkZW5cbiAgICAvLyBzaW5jZSBuYXZpZ2F0aW9uIHN0YXJ0LiBUaGlzIGlzbid0IGEgcGVyZmVjdCBoZXVyaXN0aWMsIGJ1dCBpdCdzIHRoZVxuICAgIC8vIGJlc3Qgd2UgY2FuIGRvIHVudGlsIGFuIEFQSSBpcyBhdmFpbGFibGUgdG8gc3VwcG9ydCBxdWVyeWluZyBwYXN0XG4gICAgLy8gdmlzaWJpbGl0eVN0YXRlLlxuICAgIGZpcnN0SGlkZGVuVGltZSA9IGluaXRIaWRkZW5UaW1lKCk7XG4gICAgdHJhY2tDaGFuZ2VzKCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBnZXQgZmlyc3RIaWRkZW5UaW1lKCkge1xuICAgICAgcmV0dXJuIGZpcnN0SGlkZGVuVGltZTtcbiAgICB9LFxuICB9O1xufTtcblxuZXhwb3J0IHsgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFZpc2liaWxpdHlXYXRjaGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initMetric\": function() { return /* binding */ initMetric; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n/* harmony import */ var _generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generateUniqueID.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/generateUniqueID.js\");\n/* harmony import */ var _getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getActivationStart.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if (_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.prerendering || (0,_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: (0,_generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__.generateUniqueID)(),\n    navigationType,\n  };\n};\n\n\n//# sourceMappingURL=initMetric.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2luaXRNZXRyaWMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBd0M7QUFDaUI7QUFDSTtBQUNBOztBQUU3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxtQkFBbUIsMEVBQWtCO0FBQ3JDOztBQUVBO0FBQ0EsUUFBUSxtRUFBNEIsSUFBSSwwRUFBa0I7QUFDMUQ7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0VBQWdCO0FBQ3hCO0FBQ0E7QUFDQTs7QUFFc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9pbml0TWV0cmljLmpzPzVmZTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vLi4vdHlwZXMuanMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVVbmlxdWVJRCB9IGZyb20gJy4vZ2VuZXJhdGVVbmlxdWVJRC5qcyc7XG5pbXBvcnQgeyBnZXRBY3RpdmF0aW9uU3RhcnQgfSBmcm9tICcuL2dldEFjdGl2YXRpb25TdGFydC5qcyc7XG5pbXBvcnQgeyBnZXROYXZpZ2F0aW9uRW50cnkgfSBmcm9tICcuL2dldE5hdmlnYXRpb25FbnRyeS5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5jb25zdCBpbml0TWV0cmljID0gKG5hbWUsIHZhbHVlKSA9PiB7XG4gIGNvbnN0IG5hdkVudHJ5ID0gZ2V0TmF2aWdhdGlvbkVudHJ5KCk7XG4gIGxldCBuYXZpZ2F0aW9uVHlwZSA9ICduYXZpZ2F0ZSc7XG5cbiAgaWYgKG5hdkVudHJ5KSB7XG4gICAgaWYgKFdJTkRPVy5kb2N1bWVudC5wcmVyZW5kZXJpbmcgfHwgZ2V0QWN0aXZhdGlvblN0YXJ0KCkgPiAwKSB7XG4gICAgICBuYXZpZ2F0aW9uVHlwZSA9ICdwcmVyZW5kZXInO1xuICAgIH0gZWxzZSB7XG4gICAgICBuYXZpZ2F0aW9uVHlwZSA9IG5hdkVudHJ5LnR5cGUucmVwbGFjZSgvXy9nLCAnLScpIDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgdmFsdWU6IHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgPyAtMSA6IHZhbHVlLFxuICAgIHJhdGluZzogJ2dvb2QnLCAvLyBXaWxsIGJlIHVwZGF0ZWQgaWYgdGhlIHZhbHVlIGNoYW5nZXMuXG4gICAgZGVsdGE6IDAsXG4gICAgZW50cmllczogW10sXG4gICAgaWQ6IGdlbmVyYXRlVW5pcXVlSUQoKSxcbiAgICBuYXZpZ2F0aW9uVHlwZSxcbiAgfTtcbn07XG5cbmV4cG9ydCB7IGluaXRNZXRyaWMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXRNZXRyaWMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/initMetric.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"observe\": function() { return /* binding */ observe; }\n/* harmony export */ });\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() );\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\n\n//# sourceMappingURL=observe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL29ic2VydmUuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7O0FBRW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9saWIvb2JzZXJ2ZS5qcz85YzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGFrZXMgYSBwZXJmb3JtYW5jZSBlbnRyeSB0eXBlIGFuZCBhIGNhbGxiYWNrIGZ1bmN0aW9uLCBhbmQgY3JlYXRlcyBhXG4gKiBgUGVyZm9ybWFuY2VPYnNlcnZlcmAgaW5zdGFuY2UgdGhhdCB3aWxsIG9ic2VydmUgdGhlIHNwZWNpZmllZCBlbnRyeSB0eXBlXG4gKiB3aXRoIGJ1ZmZlcmluZyBlbmFibGVkIGFuZCBjYWxsIHRoZSBjYWxsYmFjayBfZm9yIGVhY2ggZW50cnlfLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gYWxzbyBmZWF0dXJlLWRldGVjdHMgZW50cnkgc3VwcG9ydCBhbmQgd3JhcHMgdGhlIGxvZ2ljIGluIGFcbiAqIHRyeS9jYXRjaCB0byBhdm9pZCBlcnJvcnMgaW4gdW5zdXBwb3J0aW5nIGJyb3dzZXJzLlxuICovXG5jb25zdCBvYnNlcnZlID0gKFxuICB0eXBlLFxuICBjYWxsYmFjayxcbiAgb3B0cyxcbikgPT4ge1xuICB0cnkge1xuICAgIGlmIChQZXJmb3JtYW5jZU9ic2VydmVyLnN1cHBvcnRlZEVudHJ5VHlwZXMuaW5jbHVkZXModHlwZSkpIHtcbiAgICAgIGNvbnN0IHBvID0gbmV3IFBlcmZvcm1hbmNlT2JzZXJ2ZXIobGlzdCA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGxpc3QuZ2V0RW50cmllcygpICk7XG4gICAgICB9KTtcbiAgICAgIHBvLm9ic2VydmUoXG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAge1xuICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIGJ1ZmZlcmVkOiB0cnVlLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgb3B0cyB8fCB7fSxcbiAgICAgICAgKSAsXG4gICAgICApO1xuICAgICAgcmV0dXJuIHBvO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIERvIG5vdGhpbmcuXG4gIH1cbiAgcmV0dXJuO1xufTtcblxuZXhwb3J0IHsgb2JzZXJ2ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JzZXJ2ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/observe.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js ***!
  \*****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"onHidden\": function() { return /* binding */ onHidden; }\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"./node_modules/@sentry/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst onHidden = (cb, once) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n  addEventListener('visibilitychange', onHiddenOrPageHide, true);\n  // Some browsers have buggy implementations of visibilitychange,\n  // so we use pagehide in addition, just to be safe.\n  addEventListener('pagehide', onHiddenOrPageHide, true);\n};\n\n\n//# sourceMappingURL=onHidden.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL29uSGlkZGVuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdDOztBQUV4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFDQUFxQyxzRUFBK0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL29uSGlkZGVuLmpzPzYxODkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi4vLi4vdHlwZXMuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuY29uc3Qgb25IaWRkZW4gPSAoY2IsIG9uY2UpID0+IHtcbiAgY29uc3Qgb25IaWRkZW5PclBhZ2VIaWRlID0gKGV2ZW50KSA9PiB7XG4gICAgaWYgKGV2ZW50LnR5cGUgPT09ICdwYWdlaGlkZScgfHwgV0lORE9XLmRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSA9PT0gJ2hpZGRlbicpIHtcbiAgICAgIGNiKGV2ZW50KTtcbiAgICAgIGlmIChvbmNlKSB7XG4gICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBvbkhpZGRlbk9yUGFnZUhpZGUsIHRydWUpO1xuICAgICAgICByZW1vdmVFdmVudExpc3RlbmVyKCdwYWdlaGlkZScsIG9uSGlkZGVuT3JQYWdlSGlkZSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuICBhZGRFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgb25IaWRkZW5PclBhZ2VIaWRlLCB0cnVlKTtcbiAgLy8gU29tZSBicm93c2VycyBoYXZlIGJ1Z2d5IGltcGxlbWVudGF0aW9ucyBvZiB2aXNpYmlsaXR5Y2hhbmdlLFxuICAvLyBzbyB3ZSB1c2UgcGFnZWhpZGUgaW4gYWRkaXRpb24sIGp1c3QgdG8gYmUgc2FmZS5cbiAgYWRkRXZlbnRMaXN0ZW5lcigncGFnZWhpZGUnLCBvbkhpZGRlbk9yUGFnZUhpZGUsIHRydWUpO1xufTtcblxuZXhwb3J0IHsgb25IaWRkZW4gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9uSGlkZGVuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/browser/web-vitals/lib/onHidden.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/errors.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/errors.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"registerErrorInstrumentation\": function() { return /* binding */ registerErrorInstrumentation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n\n\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('error', errorCallback);\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addInstrumentationHandler)('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  const activeTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveTransaction)();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n\n//# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9lcnJvcnMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW9EO0FBQ2M7O0FBRWxFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRSx3RUFBeUI7QUFDM0IsRUFBRSx3RUFBeUI7QUFDM0I7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0VBQW9CO0FBQ2hEO0FBQ0E7QUFDQSxxRUFBcUUscURBQVUsMkJBQTJCLFFBQVE7QUFDbEg7QUFDQTtBQUNBOztBQUV3QztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9lcnJvcnMuanM/ZDQ2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRBY3RpdmVUcmFuc2FjdGlvbiB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyLCBsb2dnZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcblxuLyoqXG4gKiBDb25maWd1cmVzIGdsb2JhbCBlcnJvciBsaXN0ZW5lcnNcbiAqL1xuZnVuY3Rpb24gcmVnaXN0ZXJFcnJvckluc3RydW1lbnRhdGlvbigpIHtcbiAgYWRkSW5zdHJ1bWVudGF0aW9uSGFuZGxlcignZXJyb3InLCBlcnJvckNhbGxiYWNrKTtcbiAgYWRkSW5zdHJ1bWVudGF0aW9uSGFuZGxlcigndW5oYW5kbGVkcmVqZWN0aW9uJywgZXJyb3JDYWxsYmFjayk7XG59XG5cbi8qKlxuICogSWYgYW4gZXJyb3Igb3IgdW5oYW5kbGVkIHByb21pc2Ugb2NjdXJzLCB3ZSBtYXJrIHRoZSBhY3RpdmUgdHJhbnNhY3Rpb24gYXMgZmFpbGVkXG4gKi9cbmZ1bmN0aW9uIGVycm9yQ2FsbGJhY2soKSB7XG4gIGNvbnN0IGFjdGl2ZVRyYW5zYWN0aW9uID0gZ2V0QWN0aXZlVHJhbnNhY3Rpb24oKTtcbiAgaWYgKGFjdGl2ZVRyYW5zYWN0aW9uKSB7XG4gICAgY29uc3Qgc3RhdHVzID0gJ2ludGVybmFsX2Vycm9yJztcbiAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coYFtUcmFjaW5nXSBUcmFuc2FjdGlvbjogJHtzdGF0dXN9IC0+IEdsb2JhbCBlcnJvciBvY2N1cmVkYCk7XG4gICAgYWN0aXZlVHJhbnNhY3Rpb24uc2V0U3RhdHVzKHN0YXR1cyk7XG4gIH1cbn1cblxuZXhwb3J0IHsgcmVnaXN0ZXJFcnJvckluc3RydW1lbnRhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXJyb3JzLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/errors.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/extensions.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/extensions.js ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addExtensionMethods\": function() { return /* binding */ addExtensionMethods; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors.js */ \"./node_modules/@sentry/tracing/esm/errors.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  const carrier = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.getMainCarrier)();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  const packageToIntegrationMapping = {\n    mongodb() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/mongo')\n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/mongo')\n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/mysql')\n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      const integration = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, './node/integrations/postgres')\n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  const mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.addTracingExtensions)();\n\n  // Detect and automatically load specified integrations.\n  if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isNodeEnv)()) {\n    _autoloadDatabaseIntegrations();\n  }\n\n  // If an error happens globally, we should make sure transaction status is set to error.\n  (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.registerErrorInstrumentation)();\n}\n\n\n//# sourceMappingURL=extensions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9leHRlbnNpb25zLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9FO0FBQ0U7QUFDWDs7QUFFM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNERBQWM7QUFDaEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwwQkFBMEIsNkRBQWM7O0FBRXhDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIsNkRBQWM7O0FBRXhDO0FBQ0EscUNBQXFDLGdCQUFnQjtBQUNyRCxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIsNkRBQWM7O0FBRXhDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSwwQkFBMEIsNkRBQWM7O0FBRXhDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQSw0QkFBNEIseURBQVU7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLGtFQUFvQjs7QUFFdEI7QUFDQSxNQUFNLHdEQUFTO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBLEVBQUUsd0VBQTRCO0FBQzlCOztBQUUrQjtBQUMvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9leHRlbnNpb25zLmpzPzgwODAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWRkVHJhY2luZ0V4dGVuc2lvbnMsIGdldE1haW5DYXJyaWVyIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGlzTm9kZUVudiwgbG9hZE1vZHVsZSwgZHluYW1pY1JlcXVpcmUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHJlZ2lzdGVyRXJyb3JJbnN0cnVtZW50YXRpb24gfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gX2F1dG9sb2FkRGF0YWJhc2VJbnRlZ3JhdGlvbnMoKSB7XG4gIGNvbnN0IGNhcnJpZXIgPSBnZXRNYWluQ2FycmllcigpO1xuICBpZiAoIWNhcnJpZXIuX19TRU5UUllfXykge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHBhY2thZ2VUb0ludGVncmF0aW9uTWFwcGluZyA9IHtcbiAgICBtb25nb2RiKCkge1xuICAgICAgY29uc3QgaW50ZWdyYXRpb24gPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsICcuL25vZGUvaW50ZWdyYXRpb25zL21vbmdvJylcblxuO1xuICAgICAgcmV0dXJuIG5ldyBpbnRlZ3JhdGlvbi5Nb25nbygpO1xuICAgIH0sXG4gICAgbW9uZ29vc2UoKSB7XG4gICAgICBjb25zdCBpbnRlZ3JhdGlvbiA9IGR5bmFtaWNSZXF1aXJlKG1vZHVsZSwgJy4vbm9kZS9pbnRlZ3JhdGlvbnMvbW9uZ28nKVxuXG47XG4gICAgICByZXR1cm4gbmV3IGludGVncmF0aW9uLk1vbmdvKHsgbW9uZ29vc2U6IHRydWUgfSk7XG4gICAgfSxcbiAgICBteXNxbCgpIHtcbiAgICAgIGNvbnN0IGludGVncmF0aW9uID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCAnLi9ub2RlL2ludGVncmF0aW9ucy9teXNxbCcpXG5cbjtcbiAgICAgIHJldHVybiBuZXcgaW50ZWdyYXRpb24uTXlzcWwoKTtcbiAgICB9LFxuICAgIHBnKCkge1xuICAgICAgY29uc3QgaW50ZWdyYXRpb24gPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsICcuL25vZGUvaW50ZWdyYXRpb25zL3Bvc3RncmVzJylcblxuO1xuICAgICAgcmV0dXJuIG5ldyBpbnRlZ3JhdGlvbi5Qb3N0Z3JlcygpO1xuICAgIH0sXG4gIH07XG5cbiAgY29uc3QgbWFwcGVkUGFja2FnZXMgPSBPYmplY3Qua2V5cyhwYWNrYWdlVG9JbnRlZ3JhdGlvbk1hcHBpbmcpXG4gICAgLmZpbHRlcihtb2R1bGVOYW1lID0+ICEhbG9hZE1vZHVsZShtb2R1bGVOYW1lKSlcbiAgICAubWFwKHBrZyA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gcGFja2FnZVRvSW50ZWdyYXRpb25NYXBwaW5nW3BrZ10oKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5maWx0ZXIocCA9PiBwKSA7XG5cbiAgaWYgKG1hcHBlZFBhY2thZ2VzLmxlbmd0aCA+IDApIHtcbiAgICBjYXJyaWVyLl9fU0VOVFJZX18uaW50ZWdyYXRpb25zID0gWy4uLihjYXJyaWVyLl9fU0VOVFJZX18uaW50ZWdyYXRpb25zIHx8IFtdKSwgLi4ubWFwcGVkUGFja2FnZXNdO1xuICB9XG59XG5cbi8qKlxuICogVGhpcyBwYXRjaGVzIHRoZSBnbG9iYWwgb2JqZWN0IGFuZCBpbmplY3RzIHRoZSBUcmFjaW5nIGV4dGVuc2lvbnMgbWV0aG9kc1xuICovXG5mdW5jdGlvbiBhZGRFeHRlbnNpb25NZXRob2RzKCkge1xuICBhZGRUcmFjaW5nRXh0ZW5zaW9ucygpO1xuXG4gIC8vIERldGVjdCBhbmQgYXV0b21hdGljYWxseSBsb2FkIHNwZWNpZmllZCBpbnRlZ3JhdGlvbnMuXG4gIGlmIChpc05vZGVFbnYoKSkge1xuICAgIF9hdXRvbG9hZERhdGFiYXNlSW50ZWdyYXRpb25zKCk7XG4gIH1cblxuICAvLyBJZiBhbiBlcnJvciBoYXBwZW5zIGdsb2JhbGx5LCB3ZSBzaG91bGQgbWFrZSBzdXJlIHRyYW5zYWN0aW9uIHN0YXR1cyBpcyBzZXQgdG8gZXJyb3IuXG4gIHJlZ2lzdGVyRXJyb3JJbnN0cnVtZW50YXRpb24oKTtcbn1cblxuZXhwb3J0IHsgYWRkRXh0ZW5zaW9uTWV0aG9kcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZXh0ZW5zaW9ucy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/extensions.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BROWSER_TRACING_INTEGRATION_ID\": function() { return /* reexport safe */ _browser_browsertracing_js__WEBPACK_IMPORTED_MODULE_3__.BROWSER_TRACING_INTEGRATION_ID; },\n/* harmony export */   \"BrowserTracing\": function() { return /* reexport safe */ _browser_browsertracing_js__WEBPACK_IMPORTED_MODULE_3__.BrowserTracing; },\n/* harmony export */   \"IdleTransaction\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.IdleTransaction; },\n/* harmony export */   \"Integrations\": function() { return /* reexport module object */ _node_integrations_index_js__WEBPACK_IMPORTED_MODULE_2__; },\n/* harmony export */   \"Span\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Span; },\n/* harmony export */   \"SpanStatus\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.SpanStatus; },\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.TRACEPARENT_REGEXP; },\n/* harmony export */   \"Transaction\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.Transaction; },\n/* harmony export */   \"addExtensionMethods\": function() { return /* reexport safe */ _extensions_js__WEBPACK_IMPORTED_MODULE_1__.addExtensionMethods; },\n/* harmony export */   \"defaultRequestInstrumentationOptions\": function() { return /* reexport safe */ _browser_request_js__WEBPACK_IMPORTED_MODULE_4__.defaultRequestInstrumentationOptions; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.extractTraceparentData; },\n/* harmony export */   \"getActiveTransaction\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.getActiveTransaction; },\n/* harmony export */   \"hasTracingEnabled\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled; },\n/* harmony export */   \"instrumentOutgoingRequests\": function() { return /* reexport safe */ _browser_request_js__WEBPACK_IMPORTED_MODULE_4__.instrumentOutgoingRequests; },\n/* harmony export */   \"spanStatusfromHttpCode\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.spanStatusfromHttpCode; },\n/* harmony export */   \"startIdleTransaction\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.startIdleTransaction; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* reexport safe */ _sentry_core__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment; }\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"./node_modules/@sentry/core/esm/index.js\");\n/* harmony import */ var _extensions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extensions.js */ \"./node_modules/@sentry/tracing/esm/extensions.js\");\n/* harmony import */ var _node_integrations_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node/integrations/index.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/index.js\");\n/* harmony import */ var _browser_browsertracing_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./browser/browsertracing.js */ \"./node_modules/@sentry/tracing/esm/browser/browsertracing.js\");\n/* harmony import */ var _browser_request_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./browser/request.js */ \"./node_modules/@sentry/tracing/esm/browser/request.js\");\n\n\n\n\n\n\n\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  (0,_extensions_js__WEBPACK_IMPORTED_MODULE_1__.addExtensionMethods)();\n}\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTJPO0FBQ3JMO0FBQ0E7QUFDQTtBQUNyQjtBQUM0RDtBQUNXOztBQUV4Rzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxFQUFFLG1FQUFtQjtBQUNyQjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL2luZGV4LmpzP2E3YjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgSWRsZVRyYW5zYWN0aW9uLCBTcGFuLCBTcGFuU3RhdHVzLCBUUkFDRVBBUkVOVF9SRUdFWFAsIFRyYW5zYWN0aW9uLCBleHRyYWN0VHJhY2VwYXJlbnREYXRhLCBnZXRBY3RpdmVUcmFuc2FjdGlvbiwgaGFzVHJhY2luZ0VuYWJsZWQsIHNwYW5TdGF0dXNmcm9tSHR0cENvZGUsIHN0YXJ0SWRsZVRyYW5zYWN0aW9uLCBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQgfSBmcm9tICdAc2VudHJ5L2NvcmUnO1xuaW1wb3J0IHsgYWRkRXh0ZW5zaW9uTWV0aG9kcyB9IGZyb20gJy4vZXh0ZW5zaW9ucy5qcyc7XG5leHBvcnQgeyBhZGRFeHRlbnNpb25NZXRob2RzIH0gZnJvbSAnLi9leHRlbnNpb25zLmpzJztcbmltcG9ydCAqIGFzIGluZGV4IGZyb20gJy4vbm9kZS9pbnRlZ3JhdGlvbnMvaW5kZXguanMnO1xuZXhwb3J0IHsgaW5kZXggYXMgSW50ZWdyYXRpb25zIH07XG5leHBvcnQgeyBCUk9XU0VSX1RSQUNJTkdfSU5URUdSQVRJT05fSUQsIEJyb3dzZXJUcmFjaW5nIH0gZnJvbSAnLi9icm93c2VyL2Jyb3dzZXJ0cmFjaW5nLmpzJztcbmV4cG9ydCB7IGRlZmF1bHRSZXF1ZXN0SW5zdHJ1bWVudGF0aW9uT3B0aW9ucywgaW5zdHJ1bWVudE91dGdvaW5nUmVxdWVzdHMgfSBmcm9tICcuL2Jyb3dzZXIvcmVxdWVzdC5qcyc7XG5cbi8vIFRyZWVzaGFrYWJsZSBndWFyZCB0byByZW1vdmUgYWxsIGNvZGUgcmVsYXRlZCB0byB0cmFjaW5nXG5cbi8vIEd1YXJkIGZvciB0cmVlXG5pZiAodHlwZW9mIF9fU0VOVFJZX1RSQUNJTkdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfVFJBQ0lOR19fKSB7XG4gIC8vIFdlIGFyZSBwYXRjaGluZyB0aGUgZ2xvYmFsIG9iamVjdCB3aXRoIG91ciBodWIgZXh0ZW5zaW9uIG1ldGhvZHNcbiAgYWRkRXh0ZW5zaW9uTWV0aG9kcygpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/apollo.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/apollo.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Apollo\": function() { return /* binding */ Apollo; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for Apollo */\nclass Apollo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Apollo';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Apollo.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n    options = {\n      useNestjs: false,\n    },\n  ) {Apollo.prototype.__init.call(this);\n    this._useNest = !!options.useNestjs;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('Apollo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    if (this._useNest) {\n      const pkg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)\n\n('@nestjs/graphql');\n\n      if (!pkg) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Apollo-NestJS Integration was unable to require @nestjs/graphql package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of NestJS ResolversExplorerService before schemas are constructed.\n       */\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(\n        pkg.GraphQLFactory.prototype,\n        'mergeWithSchema',\n        function (orig) {\n          return function (\n\n            ...args\n          ) {\n            (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(this.resolversExplorerService, 'explore', function (orig) {\n              return function () {\n                const resolvers = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.arrayify)(orig.call(this));\n\n                const instrumentedResolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n                return instrumentedResolvers;\n              };\n            });\n\n            return orig.call(this, ...args);\n          };\n        },\n      );\n    } else {\n      const pkg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)\n\n('apollo-server-core');\n\n      if (!pkg) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Apollo Integration was unable to require apollo-server-core package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of the ApolloServer instance before schemas are constructed.\n       */\n      (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(pkg.ApolloServerBase.prototype, 'constructSchema', function (orig) {\n        return function (\n\n) {\n          if (!this.config.resolvers) {\n            if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n              if (this.config.schema) {\n                _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `schema` property.' +\n                    'If you are using NestJS with Apollo, please use `Sentry.Integrations.Apollo({ useNestjs: true })` instead.',\n                );\n                _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn();\n              } else if (this.config.modules) {\n                _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `modules` property.',\n                );\n              }\n\n              _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Skipping tracing as no resolvers found on the `ApolloServer` instance.');\n            }\n\n            return orig.call(this);\n          }\n\n          const resolvers = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.arrayify)(this.config.resolvers);\n\n          this.config.resolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n          return orig.call(this);\n        };\n      });\n    }\n  }\n}Apollo.__initStatic();\n\nfunction instrumentResolvers(resolvers, getCurrentHub) {\n  return resolvers.map(model => {\n    Object.keys(model).forEach(resolverGroupName => {\n      Object.keys(model[resolverGroupName]).forEach(resolverName => {\n        if (typeof model[resolverGroupName][resolverName] !== 'function') {\n          return;\n        }\n\n        wrapResolver(model, resolverGroupName, resolverName, getCurrentHub);\n      });\n    });\n\n    return model;\n  });\n}\n\n/**\n * Wrap a single resolver which can be a parent of other resolvers and/or db operations.\n */\nfunction wrapResolver(\n  model,\n  resolverGroupName,\n  resolverName,\n  getCurrentHub,\n) {\n  (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(model[resolverGroupName], resolverName, function (orig) {\n    return function ( ...args) {\n      const scope = getCurrentHub().getScope();\n      const parentSpan = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n      const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n        description: `${resolverGroupName}.${resolverName}`,\n        op: 'graphql.resolve',\n      })]);\n\n      const rv = orig.call(this, ...args);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(rv)) {\n        return rv.then((res) => {\n          (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n          return res;\n        });\n      }\n\n      (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n\n      return rv;\n    };\n  });\n}\n\n\n//# sourceMappingURL=apollo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/apollo.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/express.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/express.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Express\": function() { return /* binding */ Express; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nclass Express  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Express';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Express.id;}\n\n  /**\n   * Express App instance\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Express.prototype.__init.call(this);\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!this._router) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Express Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    instrumentMiddlewares(this._router, this._methods);\n    instrumentRouter(this._router );\n  }\n}Express.__initStatic();\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n  const arity = fn.length;\n\n  switch (arity) {\n    case 2: {\n      return function ( req, res) {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          const span = transaction.startChild({\n            description: fn.name,\n            op: `middleware.express.${method}`,\n          });\n          res.once('finish', () => {\n            span.finish();\n          });\n        }\n        return fn.call(this, req, res);\n      };\n    }\n    case 3: {\n      return function (\n\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([transaction, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n        })]);\n        fn.call(this, req, res, function ( ...args) {\n          (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    case 4: {\n      return function (\n\n        err,\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([transaction, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n        })]);\n        fn.call(this, err, req, res, function ( ...args) {\n          (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n  return args.map((arg) => {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a) => {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n  const originalCallback = router[method];\n\n  router[method] = function (...args) {\n    return originalCallback.call(this, ...wrapMiddlewareArgs(args, method));\n  };\n\n  return router;\n}\n\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods = []) {\n  methods.forEach((method) => patchMiddleware(router, method));\n}\n\n/**\n * Patches the prototype of Express.Router to accumulate the resolved route\n * if a layer instance's `match` function was called and it returned a successful match.\n *\n * @see https://github.com/expressjs/express/blob/master/lib/router/index.js\n *\n * @param appOrRouter the router instance which can either be an app (i.e. top-level) or a (nested) router.\n */\nfunction instrumentRouter(appOrRouter) {\n  // This is how we can distinguish between app and routers\n  const isApp = 'settings' in appOrRouter;\n\n  // In case the app's top-level router hasn't been initialized yet, we have to do it now\n  if (isApp && appOrRouter._router === undefined && appOrRouter.lazyrouter) {\n    appOrRouter.lazyrouter();\n  }\n\n  const router = isApp ? appOrRouter._router : appOrRouter;\n\n  if (!router) {\n    /*\n    If we end up here, this means likely that this integration is used with Express 3 or Express 5.\n    For now, we don't support these versions (3 is very old and 5 is still in beta). To support Express 5,\n    we'd need to make more changes to the routing instrumentation because the router is no longer part of\n    the Express core package but maintained in its own package. The new router has different function\n    signatures and works slightly differently, demanding more changes than just taking the router from\n    `app.router` instead of `app._router`.\n    @see https://github.com/pillarjs/router\n\n    TODO: Proper Express 5 support\n    */\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.debug('Cannot instrument router for URL Parameterization (did not find a valid router).');\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.debug('Routing instrumentation is currently only supported in Express 4.');\n    return;\n  }\n\n  const routerProto = Object.getPrototypeOf(router) ;\n\n  const originalProcessParams = routerProto.process_params;\n  routerProto.process_params = function process_params(\n    layer,\n    called,\n    req,\n    res,\n    done,\n  ) {\n    // Base case: We're in the first part of the URL (thus we start with the root '/')\n    if (!req._reconstructedRoute) {\n      req._reconstructedRoute = '';\n    }\n\n    // If the layer's partial route has params, is a regex or an array, the route is stored in layer.route.\n    const { layerRoutePath, isRegex, isArray, numExtraSegments } = getLayerRoutePathInfo(layer);\n\n    if (layerRoutePath || isRegex || isArray) {\n      req._hasParameters = true;\n    }\n\n    // Otherwise, the hardcoded path (i.e. a partial route without params) is stored in layer.path\n    const partialRoute = layerRoutePath || layer.path || '';\n\n    // Normalize the partial route so that it doesn't contain leading or trailing slashes\n    // and exclude empty or '*' wildcard routes.\n    // The exclusion of '*' routes is our best effort to not \"pollute\" the transaction name\n    // with interim handlers (e.g. ones that check authentication or do other middleware stuff).\n    // We want to end up with the parameterized URL of the incoming request without any extraneous path segments.\n    const finalPartialRoute = partialRoute\n      .split('/')\n      .filter(segment => segment.length > 0 && (isRegex || isArray || !segment.includes('*')))\n      .join('/');\n\n    // If we found a valid partial URL, we append it to the reconstructed route\n    if (finalPartialRoute && finalPartialRoute.length > 0) {\n      // If the partial route is from a regex route, we append a '/' to close the regex\n      req._reconstructedRoute += `/${finalPartialRoute}${isRegex ? '/' : ''}`;\n    }\n\n    // Now we check if we are in the \"last\" part of the route. We determine this by comparing the\n    // number of URL segments from the original URL to that of our reconstructed parameterized URL.\n    // If we've reached our final destination, we update the transaction name.\n    const urlLength = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getNumberOfUrlSegments)(req.originalUrl || '') + numExtraSegments;\n    const routeLength = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getNumberOfUrlSegments)(req._reconstructedRoute);\n\n    if (urlLength === routeLength) {\n      if (!req._hasParameters) {\n        if (req._reconstructedRoute !== req.originalUrl) {\n          req._reconstructedRoute = req.originalUrl;\n        }\n      }\n\n      const transaction = res.__sentry_transaction;\n      if (transaction && transaction.metadata.source !== 'custom') {\n        // If the request URL is '/' or empty, the reconstructed route will be empty.\n        // Therefore, we fall back to setting the final route to '/' in this case.\n        const finalRoute = req._reconstructedRoute || '/';\n\n        transaction.setName(...(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.extractPathForTransaction)(req, { path: true, method: true, customRoute: finalRoute }));\n      }\n    }\n\n    return originalProcessParams.call(this, layer, called, req, res, done);\n  };\n}\n\n/**\n * Extracts and stringifies the layer's route which can either be a string with parameters (`users/:id`),\n * a RegEx (`/test/`) or an array of strings and regexes (`['/path1', /\\/path[2-5]/, /path/:id]`). Additionally\n * returns extra information about the route, such as if the route is defined as regex or as an array.\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns an object containing the stringified route, a flag determining if the route was a regex\n *          and the number of extra segments to the matched path that are additionally in the route,\n *          if the route was an array (defaults to 0).\n */\nfunction getLayerRoutePathInfo(layer) {\n  const lrp = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([layer, 'access', _10 => _10.route, 'optionalAccess', _11 => _11.path]);\n\n  const isRegex = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(lrp);\n  const isArray = Array.isArray(lrp);\n\n  if (!lrp) {\n    return { isRegex, isArray, numExtraSegments: 0 };\n  }\n\n  const numExtraSegments = isArray\n    ? Math.max(getNumberOfArrayUrlSegments(lrp ) - (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getNumberOfUrlSegments)(layer.path || ''), 0)\n    : 0;\n\n  const layerRoutePath = getLayerRoutePathString(isArray, lrp);\n\n  return { layerRoutePath, isRegex, isArray, numExtraSegments };\n}\n\n/**\n * Returns the number of URL segments in an array of routes\n *\n * Example: ['/api/test', /\\/api\\/post[0-9]/, '/users/:id/details`] -> 7\n */\nfunction getNumberOfArrayUrlSegments(routesArray) {\n  return routesArray.reduce((accNumSegments, currentRoute) => {\n    // array members can be a RegEx -> convert them toString\n    return accNumSegments + (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getNumberOfUrlSegments)(currentRoute.toString());\n  }, 0);\n}\n\n/**\n * Extracts and returns the stringified version of the layers route path\n * Handles route arrays (by joining the paths together) as well as RegExp and normal\n * string values (in the latter case the toString conversion is technically unnecessary but\n * it doesn't hurt us either).\n */\nfunction getLayerRoutePathString(isArray, lrp) {\n  if (isArray) {\n    return (lrp ).map(r => r.toString()).join(',');\n  }\n  return lrp && lrp.toString();\n}\n\n\n//# sourceMappingURL=express.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/express.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/graphql.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/graphql.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GraphQL\": function() { return /* binding */ GraphQL; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for graphql package */\nclass GraphQL  {constructor() { GraphQL.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GraphQL';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GraphQL.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)\n\n('graphql/execution/execute.js');\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(pkg, 'execute', function (orig) {\n      return function ( ...args) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n\n        const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: 'execute',\n          op: 'graphql.execute',\n        })]);\n\n        (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _6 => _6.setSpan, 'call', _7 => _7(span)]);\n\n        const rv = orig.call(this, ...args);\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(rv)) {\n          return rv.then((res) => {\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _10 => _10.setSpan, 'call', _11 => _11(parentSpan)]);\n\n            return res;\n          });\n        }\n\n        (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n        (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _14 => _14.setSpan, 'call', _15 => _15(parentSpan)]);\n        return rv;\n      };\n    });\n  }\n}GraphQL.__initStatic();\n\n\n//# sourceMappingURL=graphql.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy9ncmFwaHFsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0U7QUFDRztBQUNJOztBQUV6RTtBQUNBLGdCQUFnQixnQkFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBZ0M7QUFDeEMsdUVBQXVFLHFEQUFVO0FBQ2pGO0FBQ0E7O0FBRUEsZ0JBQWdCLHlEQUFVOztBQUUxQjs7QUFFQTtBQUNBLHVFQUF1RSx1REFBWTtBQUNuRjtBQUNBOztBQUVBLElBQUksbURBQUk7QUFDUjtBQUNBO0FBQ0EsMkJBQTJCLGdGQUFjOztBQUV6QyxxQkFBcUIsZ0ZBQWM7QUFDbkM7QUFDQTtBQUNBLFNBQVM7O0FBRVQsUUFBUSxnRkFBYzs7QUFFdEI7O0FBRUEsWUFBWSx5REFBVTtBQUN0QjtBQUNBLFlBQVksZ0ZBQWM7QUFDMUIsWUFBWSxnRkFBYzs7QUFFMUI7QUFDQSxXQUFXO0FBQ1g7O0FBRUEsUUFBUSxnRkFBYztBQUN0QixRQUFRLGdGQUFjO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVrQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy9ncmFwaHFsLmpzPzRkNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscyc7XG5pbXBvcnQgeyBsb2dnZXIsIGxvYWRNb2R1bGUsIGZpbGwsIGlzVGhlbmFibGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHNob3VsZERpc2FibGVBdXRvSW5zdHJ1bWVudGF0aW9uIH0gZnJvbSAnLi91dGlscy9ub2RlLXV0aWxzLmpzJztcblxuLyoqIFRyYWNpbmcgaW50ZWdyYXRpb24gZm9yIGdyYXBocWwgcGFja2FnZSAqL1xuY2xhc3MgR3JhcGhRTCAge2NvbnN0cnVjdG9yKCkgeyBHcmFwaFFMLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTsgfVxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzdGF0aWMgX19pbml0U3RhdGljKCkge3RoaXMuaWQgPSAnR3JhcGhRTCc7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIF9faW5pdCgpIHt0aGlzLm5hbWUgPSBHcmFwaFFMLmlkO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzZXR1cE9uY2UoXywgZ2V0Q3VycmVudEh1Yikge1xuICAgIGlmIChzaG91bGREaXNhYmxlQXV0b0luc3RydW1lbnRhdGlvbihnZXRDdXJyZW50SHViKSkge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIubG9nKCdHcmFwaFFMIEludGVncmF0aW9uIGlzIHNraXBwZWQgYmVjYXVzZSBvZiBpbnN0cnVtZW50ZXIgY29uZmlndXJhdGlvbi4nKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwa2cgPSBsb2FkTW9kdWxlXG5cbignZ3JhcGhxbC9leGVjdXRpb24vZXhlY3V0ZS5qcycpO1xuXG4gICAgaWYgKCFwa2cpIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmVycm9yKCdHcmFwaFFMIEludGVncmF0aW9uIHdhcyB1bmFibGUgdG8gcmVxdWlyZSBncmFwaHFsL2V4ZWN1dGlvbiBwYWNrYWdlLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZpbGwocGtnLCAnZXhlY3V0ZScsIGZ1bmN0aW9uIChvcmlnKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCAuLi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IHNjb3BlID0gZ2V0Q3VycmVudEh1YigpLmdldFNjb3BlKCk7XG4gICAgICAgIGNvbnN0IHBhcmVudFNwYW4gPSBfb3B0aW9uYWxDaGFpbihbc2NvcGUsICdvcHRpb25hbEFjY2VzcycsIF8yID0+IF8yLmdldFNwYW4sICdjYWxsJywgXzMgPT4gXzMoKV0pO1xuXG4gICAgICAgIGNvbnN0IHNwYW4gPSBfb3B0aW9uYWxDaGFpbihbcGFyZW50U3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXzQgPT4gXzQuc3RhcnRDaGlsZCwgJ2NhbGwnLCBfNSA9PiBfNSh7XG4gICAgICAgICAgZGVzY3JpcHRpb246ICdleGVjdXRlJyxcbiAgICAgICAgICBvcDogJ2dyYXBocWwuZXhlY3V0ZScsXG4gICAgICAgIH0pXSk7XG5cbiAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3Njb3BlLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNiA9PiBfNi5zZXRTcGFuLCAnY2FsbCcsIF83ID0+IF83KHNwYW4pXSk7XG5cbiAgICAgICAgY29uc3QgcnYgPSBvcmlnLmNhbGwodGhpcywgLi4uYXJncyk7XG5cbiAgICAgICAgaWYgKGlzVGhlbmFibGUocnYpKSB7XG4gICAgICAgICAgcmV0dXJuIHJ2LnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF84ID0+IF84LmZpbmlzaCwgJ2NhbGwnLCBfOSA9PiBfOSgpXSk7XG4gICAgICAgICAgICBfb3B0aW9uYWxDaGFpbihbc2NvcGUsICdvcHRpb25hbEFjY2VzcycsIF8xMCA9PiBfMTAuc2V0U3BhbiwgJ2NhbGwnLCBfMTEgPT4gXzExKHBhcmVudFNwYW4pXSk7XG5cbiAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICBfb3B0aW9uYWxDaGFpbihbc3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXzEyID0+IF8xMi5maW5pc2gsICdjYWxsJywgXzEzID0+IF8xMygpXSk7XG4gICAgICAgIF9vcHRpb25hbENoYWluKFtzY29wZSwgJ29wdGlvbmFsQWNjZXNzJywgXzE0ID0+IF8xNC5zZXRTcGFuLCAnY2FsbCcsIF8xNSA9PiBfMTUocGFyZW50U3BhbildKTtcbiAgICAgICAgcmV0dXJuIHJ2O1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxufUdyYXBoUUwuX19pbml0U3RhdGljKCk7XG5cbmV4cG9ydCB7IEdyYXBoUUwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdyYXBocWwuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/graphql.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/index.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Apollo\": function() { return /* reexport safe */ _apollo_js__WEBPACK_IMPORTED_MODULE_6__.Apollo; },\n/* harmony export */   \"BrowserTracing\": function() { return /* reexport safe */ _browser_browsertracing_js__WEBPACK_IMPORTED_MODULE_7__.BrowserTracing; },\n/* harmony export */   \"Express\": function() { return /* reexport safe */ _express_js__WEBPACK_IMPORTED_MODULE_0__.Express; },\n/* harmony export */   \"GraphQL\": function() { return /* reexport safe */ _graphql_js__WEBPACK_IMPORTED_MODULE_5__.GraphQL; },\n/* harmony export */   \"Mongo\": function() { return /* reexport safe */ _mongo_js__WEBPACK_IMPORTED_MODULE_3__.Mongo; },\n/* harmony export */   \"Mysql\": function() { return /* reexport safe */ _mysql_js__WEBPACK_IMPORTED_MODULE_2__.Mysql; },\n/* harmony export */   \"Postgres\": function() { return /* reexport safe */ _postgres_js__WEBPACK_IMPORTED_MODULE_1__.Postgres; },\n/* harmony export */   \"Prisma\": function() { return /* reexport safe */ _prisma_js__WEBPACK_IMPORTED_MODULE_4__.Prisma; }\n/* harmony export */ });\n/* harmony import */ var _express_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./express.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/express.js\");\n/* harmony import */ var _postgres_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./postgres.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/postgres.js\");\n/* harmony import */ var _mysql_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mysql.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/mysql.js\");\n/* harmony import */ var _mongo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mongo.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/mongo.js\");\n/* harmony import */ var _prisma_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prisma.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/prisma.js\");\n/* harmony import */ var _graphql_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./graphql.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/graphql.js\");\n/* harmony import */ var _apollo_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./apollo.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/apollo.js\");\n/* harmony import */ var _browser_browsertracing_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../browser/browsertracing.js */ \"./node_modules/@sentry/tracing/esm/browser/browsertracing.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ0U7QUFDTjtBQUNBO0FBQ0U7QUFDRTtBQUNGO0FBQ2Y7QUFDMkM7QUFDMUM7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdHJhY2luZy9lc20vbm9kZS9pbnRlZ3JhdGlvbnMvaW5kZXguanM/MzJmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBFeHByZXNzIH0gZnJvbSAnLi9leHByZXNzLmpzJztcbmV4cG9ydCB7IFBvc3RncmVzIH0gZnJvbSAnLi9wb3N0Z3Jlcy5qcyc7XG5leHBvcnQgeyBNeXNxbCB9IGZyb20gJy4vbXlzcWwuanMnO1xuZXhwb3J0IHsgTW9uZ28gfSBmcm9tICcuL21vbmdvLmpzJztcbmV4cG9ydCB7IFByaXNtYSB9IGZyb20gJy4vcHJpc21hLmpzJztcbmV4cG9ydCB7IEdyYXBoUUwgfSBmcm9tICcuL2dyYXBocWwuanMnO1xuZXhwb3J0IHsgQXBvbGxvIH0gZnJvbSAnLi9hcG9sbG8uanMnO1xuaW1wb3J0ICdAc2VudHJ5L2NvcmUnO1xuZXhwb3J0IHsgQnJvd3NlclRyYWNpbmcgfSBmcm9tICcuLi8uLi9icm93c2VyL2Jyb3dzZXJ0cmFjaW5nLmpzJztcbmltcG9ydCAnQHNlbnRyeS91dGlscyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/mongo.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/mongo.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mongo\": function() { return /* binding */ Mongo; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n// This allows us to use the same array for both defaults options and the type itself.\n// (note `as const` at the end to make it a union of string literal types (i.e. \"a\" | \"b\" | ... )\n// and not just a string[])\n\nconst OPERATIONS = [\n  'aggregate', // aggregate(pipeline, options, callback)\n  'bulkWrite', // bulkWrite(operations, options, callback)\n  'countDocuments', // countDocuments(query, options, callback)\n  'createIndex', // createIndex(fieldOrSpec, options, callback)\n  'createIndexes', // createIndexes(indexSpecs, options, callback)\n  'deleteMany', // deleteMany(filter, options, callback)\n  'deleteOne', // deleteOne(filter, options, callback)\n  'distinct', // distinct(key, query, options, callback)\n  'drop', // drop(options, callback)\n  'dropIndex', // dropIndex(indexName, options, callback)\n  'dropIndexes', // dropIndexes(options, callback)\n  'estimatedDocumentCount', // estimatedDocumentCount(options, callback)\n  'find', // find(query, options, callback)\n  'findOne', // findOne(query, options, callback)\n  'findOneAndDelete', // findOneAndDelete(filter, options, callback)\n  'findOneAndReplace', // findOneAndReplace(filter, replacement, options, callback)\n  'findOneAndUpdate', // findOneAndUpdate(filter, update, options, callback)\n  'indexes', // indexes(options, callback)\n  'indexExists', // indexExists(indexes, options, callback)\n  'indexInformation', // indexInformation(options, callback)\n  'initializeOrderedBulkOp', // initializeOrderedBulkOp(options, callback)\n  'insertMany', // insertMany(docs, options, callback)\n  'insertOne', // insertOne(doc, options, callback)\n  'isCapped', // isCapped(options, callback)\n  'mapReduce', // mapReduce(map, reduce, options, callback)\n  'options', // options(options, callback)\n  'parallelCollectionScan', // parallelCollectionScan(options, callback)\n  'rename', // rename(newName, options, callback)\n  'replaceOne', // replaceOne(filter, doc, options, callback)\n  'stats', // stats(options, callback)\n  'updateMany', // updateMany(filter, update, options, callback)\n  'updateOne', // updateOne(filter, update, options, callback)\n] ;\n\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nconst OPERATION_SIGNATURES\n\n = {\n  // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n  // see https://github.com/getsentry/sentry-javascript/pull/3102\n  bulkWrite: ['operations'],\n  countDocuments: ['query'],\n  createIndex: ['fieldOrSpec'],\n  createIndexes: ['indexSpecs'],\n  deleteMany: ['filter'],\n  deleteOne: ['filter'],\n  distinct: ['key', 'query'],\n  dropIndex: ['indexName'],\n  find: ['query'],\n  findOne: ['query'],\n  findOneAndDelete: ['filter'],\n  findOneAndReplace: ['filter', 'replacement'],\n  findOneAndUpdate: ['filter', 'update'],\n  indexExists: ['indexes'],\n  insertMany: ['docs'],\n  insertOne: ['doc'],\n  mapReduce: ['map', 'reduce'],\n  rename: ['newName'],\n  replaceOne: ['filter', 'doc'],\n  updateMany: ['filter', 'update'],\n  updateOne: ['filter', 'update'],\n};\n\nfunction isCursor(maybeCursor) {\n  return maybeCursor && typeof maybeCursor === 'object' && maybeCursor.once && typeof maybeCursor.once === 'function';\n}\n\n/** Tracing integration for mongo package */\nclass Mongo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mongo';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Mongo.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Mongo.prototype.__init.call(this);\n    this._operations = Array.isArray(options.operations) ? options.operations : (OPERATIONS );\n    this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n    this._useMongoose = !!options.useMongoose;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('Mongo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n    const pkg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)(moduleName);\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(`Mongo Integration was unable to require \\`${moduleName}\\` package.`);\n      return;\n    }\n\n    this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n  }\n\n  /**\n   * Patches original collection methods\n   */\n   _instrumentOperations(collection, operations, getCurrentHub) {\n    operations.forEach((operation) => this._patchOperation(collection, operation, getCurrentHub));\n  }\n\n  /**\n   * Patches original collection to utilize our tracing functionality\n   */\n   _patchOperation(collection, operation, getCurrentHub) {\n    if (!(operation in collection.prototype)) return;\n\n    const getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(collection.prototype, operation, function (orig) {\n      return function ( ...args) {\n        const lastArg = args[args.length - 1];\n        const scope = getCurrentHub().getScope();\n        const parentSpan = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n\n        // Check if the operation was passed a callback. (mapReduce requires a different check, as\n        // its (non-callback) arguments can also be functions.)\n        if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n          const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5(getSpanContext(this, operation, args))]);\n          const maybePromiseOrCursor = orig.call(this, ...args);\n\n          if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(maybePromiseOrCursor)) {\n            return maybePromiseOrCursor.then((res) => {\n              (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n              return res;\n            });\n          }\n          // If the operation returns a Cursor\n          // we need to attach a listener to it to finish the span when the cursor is closed.\n          else if (isCursor(maybePromiseOrCursor)) {\n            const cursor = maybePromiseOrCursor ;\n\n            try {\n              cursor.once('close', () => {\n                (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n              });\n            } catch (e) {\n              // If the cursor is already closed, `once` will throw an error. In that case, we can\n              // finish the span immediately.\n              (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            }\n\n            return cursor;\n          } else {\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n            return maybePromiseOrCursor;\n          }\n        }\n\n        const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _14 => _14.startChild, 'call', _15 => _15(getSpanContext(this, operation, args.slice(0, -1)))]);\n\n        return orig.call(this, ...args.slice(0, -1), function (err, result) {\n          (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _16 => _16.finish, 'call', _17 => _17()]);\n          lastArg(err, result);\n        });\n      };\n    });\n  }\n\n  /**\n   * Form a SpanContext based on the user input to a given operation.\n   */\n   _getSpanContextFromOperationArguments(\n    collection,\n    operation,\n    args,\n  ) {\n    const data = {\n      collectionName: collection.collectionName,\n      dbName: collection.dbName,\n      namespace: collection.namespace,\n    };\n    const spanContext = {\n      op: 'db',\n      description: operation,\n      data,\n    };\n\n    // If the operation takes no arguments besides `options` and `callback`, or if argument\n    // collection is disabled for this operation, just return early.\n    const signature = OPERATION_SIGNATURES[operation];\n    const shouldDescribe = Array.isArray(this._describeOperations)\n      ? this._describeOperations.includes(operation)\n      : this._describeOperations;\n\n    if (!signature || !shouldDescribe) {\n      return spanContext;\n    }\n\n    try {\n      // Special case for `mapReduce`, as the only one accepting functions as arguments.\n      if (operation === 'mapReduce') {\n        const [map, reduce] = args ;\n        data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n        data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n      } else {\n        for (let i = 0; i < signature.length; i++) {\n          data[signature[i]] = JSON.stringify(args[i]);\n        }\n      }\n    } catch (_oO) {\n      // no-empty\n    }\n\n    return spanContext;\n  }\n}Mongo.__initStatic();\n\n\n//# sourceMappingURL=mongo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/mongo.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/mysql.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/mysql.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Mysql\": function() { return /* binding */ Mysql; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for node-mysql package */\nclass Mysql  {constructor() { Mysql.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mysql';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Mysql.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)('mysql/lib/Connection.js');\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(pkg, 'createQuery', function (orig) {\n      return function ( options, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n        const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: typeof options === 'string' ? options : (options ).sql,\n          op: 'db',\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  }\n}Mysql.__initStatic();\n\n\n//# sourceMappingURL=mysql.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy9teXNxbC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtFO0FBQ1Q7QUFDZ0I7O0FBRXpFO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCOztBQUUxQjtBQUNBO0FBQ0E7QUFDQSxhQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBZ0M7QUFDeEMsdUVBQXVFLHFEQUFVO0FBQ2pGO0FBQ0E7O0FBRUEsZ0JBQWdCLHlEQUFVOztBQUUxQjtBQUNBLHVFQUF1RSx1REFBWTtBQUNuRjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxtREFBSTtBQUNSO0FBQ0E7QUFDQSwyQkFBMkIsZ0ZBQWM7QUFDekMscUJBQXFCLGdGQUFjO0FBQ25DO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxZQUFZLGdGQUFjO0FBQzFCO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQSxZQUFZLGdGQUFjO0FBQzFCO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxDQUFDOztBQUVnQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy9teXNxbC5qcz8xYjg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMnO1xuaW1wb3J0IHsgbG9nZ2VyLCBsb2FkTW9kdWxlLCBmaWxsIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBzaG91bGREaXNhYmxlQXV0b0luc3RydW1lbnRhdGlvbiB9IGZyb20gJy4vdXRpbHMvbm9kZS11dGlscy5qcyc7XG5cbi8qKiBUcmFjaW5nIGludGVncmF0aW9uIGZvciBub2RlLW15c3FsIHBhY2thZ2UgKi9cbmNsYXNzIE15c3FsICB7Y29uc3RydWN0b3IoKSB7IE15c3FsLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTsgfVxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzdGF0aWMgX19pbml0U3RhdGljKCkge3RoaXMuaWQgPSAnTXlzcWwnO31cblxuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBfX2luaXQoKSB7dGhpcy5uYW1lID0gTXlzcWwuaWQ7fVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldHVwT25jZShfLCBnZXRDdXJyZW50SHViKSB7XG4gICAgaWYgKHNob3VsZERpc2FibGVBdXRvSW5zdHJ1bWVudGF0aW9uKGdldEN1cnJlbnRIdWIpKSB7XG4gICAgICAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pICYmIGxvZ2dlci5sb2coJ015c3FsIEludGVncmF0aW9uIGlzIHNraXBwZWQgYmVjYXVzZSBvZiBpbnN0cnVtZW50ZXIgY29uZmlndXJhdGlvbi4nKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBwa2cgPSBsb2FkTW9kdWxlKCdteXNxbC9saWIvQ29ubmVjdGlvbi5qcycpO1xuXG4gICAgaWYgKCFwa2cpIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmVycm9yKCdNeXNxbCBJbnRlZ3JhdGlvbiB3YXMgdW5hYmxlIHRvIHJlcXVpcmUgYG15c3FsYCBwYWNrYWdlLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFRoZSBvcmlnaW5hbCBmdW5jdGlvbiB3aWxsIGhhdmUgb25lIG9mIHRoZXNlIHNpZ25hdHVyZXM6XG4gICAgLy8gICAgZnVuY3Rpb24gKGNhbGxiYWNrKSA9PiB2b2lkXG4gICAgLy8gICAgZnVuY3Rpb24gKG9wdGlvbnMsIGNhbGxiYWNrKSA9PiB2b2lkXG4gICAgLy8gICAgZnVuY3Rpb24gKG9wdGlvbnMsIHZhbHVlcywgY2FsbGJhY2spID0+IHZvaWRcbiAgICBmaWxsKHBrZywgJ2NyZWF0ZVF1ZXJ5JywgZnVuY3Rpb24gKG9yaWcpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoIG9wdGlvbnMsIHZhbHVlcywgY2FsbGJhY2spIHtcbiAgICAgICAgY29uc3Qgc2NvcGUgPSBnZXRDdXJyZW50SHViKCkuZ2V0U2NvcGUoKTtcbiAgICAgICAgY29uc3QgcGFyZW50U3BhbiA9IF9vcHRpb25hbENoYWluKFtzY29wZSwgJ29wdGlvbmFsQWNjZXNzJywgXzIgPT4gXzIuZ2V0U3BhbiwgJ2NhbGwnLCBfMyA9PiBfMygpXSk7XG4gICAgICAgIGNvbnN0IHNwYW4gPSBfb3B0aW9uYWxDaGFpbihbcGFyZW50U3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXzQgPT4gXzQuc3RhcnRDaGlsZCwgJ2NhbGwnLCBfNSA9PiBfNSh7XG4gICAgICAgICAgZGVzY3JpcHRpb246IHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJyA/IG9wdGlvbnMgOiAob3B0aW9ucyApLnNxbCxcbiAgICAgICAgICBvcDogJ2RiJyxcbiAgICAgICAgfSldKTtcblxuICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIG9yaWcuY2FsbCh0aGlzLCBvcHRpb25zLCB2YWx1ZXMsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCwgZmllbGRzKSB7XG4gICAgICAgICAgICBfb3B0aW9uYWxDaGFpbihbc3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXzYgPT4gXzYuZmluaXNoLCAnY2FsbCcsIF83ID0+IF83KCldKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGVyciwgcmVzdWx0LCBmaWVsZHMpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZXMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICByZXR1cm4gb3JpZy5jYWxsKHRoaXMsIG9wdGlvbnMsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCwgZmllbGRzKSB7XG4gICAgICAgICAgICBfb3B0aW9uYWxDaGFpbihbc3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXzggPT4gXzguZmluaXNoLCAnY2FsbCcsIF85ID0+IF85KCldKTtcbiAgICAgICAgICAgIHZhbHVlcyhlcnIsIHJlc3VsdCwgZmllbGRzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvcmlnLmNhbGwodGhpcywgb3B0aW9ucywgdmFsdWVzLCBjYWxsYmFjayk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9XG59TXlzcWwuX19pbml0U3RhdGljKCk7XG5cbmV4cG9ydCB7IE15c3FsIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1teXNxbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/mysql.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/postgres.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/postgres.js ***!
  \************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Postgres\": function() { return /* binding */ Postgres; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\n/** Tracing integration for node-postgres package */\nclass Postgres  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Postgres';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Postgres.id;}\n\n   constructor(options = {}) {Postgres.prototype.__init.call(this);\n    this._usePgNative = !!options.usePgNative;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_0__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.log('Postgres Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.loadModule)('pg');\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    if (this._usePgNative && !(0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([pkg, 'access', _2 => _2.native, 'optionalAccess', _3 => _3.Client])) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    const { Client } = this._usePgNative ? pkg.native : pkg;\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.fill)(Client.prototype, 'query', function (orig) {\n      return function ( config, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _4 => _4.getSpan, 'call', _5 => _5()]);\n        const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: typeof config === 'string' ? config : (config ).text,\n          op: 'db',\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(rv)) {\n          return rv.then((res) => {\n            (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n            return res;\n          });\n        }\n\n        (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _14 => _14.finish, 'call', _15 => _15()]);\n        return rv;\n      };\n    });\n  }\n}Postgres.__initStatic();\n\n\n//# sourceMappingURL=postgres.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy9wb3N0Z3Jlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtFO0FBQ0c7QUFDSTs7QUFFekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYiwyQkFBMkIsR0FBRztBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRkFBZ0M7QUFDeEMsdUVBQXVFLHFEQUFVO0FBQ2pGO0FBQ0E7O0FBRUEsZ0JBQWdCLHlEQUFVOztBQUUxQjtBQUNBLHVFQUF1RSx1REFBWTtBQUNuRjtBQUNBOztBQUVBLDhCQUE4QixnRkFBYztBQUM1Qyx1RUFBdUUsdURBQVk7QUFDbkY7QUFDQTs7QUFFQSxZQUFZLFNBQVM7O0FBRXJCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxtREFBSTtBQUNSO0FBQ0E7QUFDQSwyQkFBMkIsZ0ZBQWM7QUFDekMscUJBQXFCLGdGQUFjO0FBQ25DO0FBQ0E7QUFDQSxTQUFTOztBQUVUO0FBQ0E7QUFDQSxZQUFZLGdGQUFjO0FBQzFCO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQSxZQUFZLGdGQUFjO0FBQzFCO0FBQ0EsV0FBVztBQUNYOztBQUVBOztBQUVBLFlBQVkseURBQVU7QUFDdEI7QUFDQSxZQUFZLGdGQUFjO0FBQzFCO0FBQ0EsV0FBVztBQUNYOztBQUVBLFFBQVEsZ0ZBQWM7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRW1CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL25vZGUvaW50ZWdyYXRpb25zL3Bvc3RncmVzLmpzPzQyY2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX29wdGlvbmFsQ2hhaW4gfSBmcm9tICdAc2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscyc7XG5pbXBvcnQgeyBsb2dnZXIsIGxvYWRNb2R1bGUsIGZpbGwsIGlzVGhlbmFibGUgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IHNob3VsZERpc2FibGVBdXRvSW5zdHJ1bWVudGF0aW9uIH0gZnJvbSAnLi91dGlscy9ub2RlLXV0aWxzLmpzJztcblxuLyoqIFRyYWNpbmcgaW50ZWdyYXRpb24gZm9yIG5vZGUtcG9zdGdyZXMgcGFja2FnZSAqL1xuY2xhc3MgUG9zdGdyZXMgIHtcbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc3RhdGljIF9faW5pdFN0YXRpYygpIHt0aGlzLmlkID0gJ1Bvc3RncmVzJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX19pbml0KCkge3RoaXMubmFtZSA9IFBvc3RncmVzLmlkO31cblxuICAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7UG9zdGdyZXMucHJvdG90eXBlLl9faW5pdC5jYWxsKHRoaXMpO1xuICAgIHRoaXMuX3VzZVBnTmF0aXZlID0gISFvcHRpb25zLnVzZVBnTmF0aXZlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgc2V0dXBPbmNlKF8sIGdldEN1cnJlbnRIdWIpIHtcbiAgICBpZiAoc2hvdWxkRGlzYWJsZUF1dG9JbnN0cnVtZW50YXRpb24oZ2V0Q3VycmVudEh1YikpIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmxvZygnUG9zdGdyZXMgSW50ZWdyYXRpb24gaXMgc2tpcHBlZCBiZWNhdXNlIG9mIGluc3RydW1lbnRlciBjb25maWd1cmF0aW9uLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHBrZyA9IGxvYWRNb2R1bGUoJ3BnJyk7XG5cbiAgICBpZiAoIXBrZykge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIuZXJyb3IoJ1Bvc3RncmVzIEludGVncmF0aW9uIHdhcyB1bmFibGUgdG8gcmVxdWlyZSBgcGdgIHBhY2thZ2UuJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3VzZVBnTmF0aXZlICYmICFfb3B0aW9uYWxDaGFpbihbcGtnLCAnYWNjZXNzJywgXzIgPT4gXzIubmF0aXZlLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMyA9PiBfMy5DbGllbnRdKSkge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIuZXJyb3IoXCJQb3N0Z3JlcyBJbnRlZ3JhdGlvbiB3YXMgdW5hYmxlIHRvIGFjY2VzcyAncGctbmF0aXZlJyBiaW5kaW5ncy5cIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgeyBDbGllbnQgfSA9IHRoaXMuX3VzZVBnTmF0aXZlID8gcGtnLm5hdGl2ZSA6IHBrZztcblxuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIChxdWVyeSwgY2FsbGJhY2spID0+IHZvaWRcbiAgICAgKiBmdW5jdGlvbiAocXVlcnksIHBhcmFtcywgY2FsbGJhY2spID0+IHZvaWRcbiAgICAgKiBmdW5jdGlvbiAocXVlcnkpID0+IFByb21pc2VcbiAgICAgKiBmdW5jdGlvbiAocXVlcnksIHBhcmFtcykgPT4gUHJvbWlzZVxuICAgICAqIGZ1bmN0aW9uIChwZy5DdXJzb3IpID0+IHBnLkN1cnNvclxuICAgICAqL1xuICAgIGZpbGwoQ2xpZW50LnByb3RvdHlwZSwgJ3F1ZXJ5JywgZnVuY3Rpb24gKG9yaWcpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoIGNvbmZpZywgdmFsdWVzLCBjYWxsYmFjaykge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRIdWIoKS5nZXRTY29wZSgpO1xuICAgICAgICBjb25zdCBwYXJlbnRTcGFuID0gX29wdGlvbmFsQ2hhaW4oW3Njb3BlLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNCA9PiBfNC5nZXRTcGFuLCAnY2FsbCcsIF81ID0+IF81KCldKTtcbiAgICAgICAgY29uc3Qgc3BhbiA9IF9vcHRpb25hbENoYWluKFtwYXJlbnRTcGFuLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNiA9PiBfNi5zdGFydENoaWxkLCAnY2FsbCcsIF83ID0+IF83KHtcbiAgICAgICAgICBkZXNjcmlwdGlvbjogdHlwZW9mIGNvbmZpZyA9PT0gJ3N0cmluZycgPyBjb25maWcgOiAoY29uZmlnICkudGV4dCxcbiAgICAgICAgICBvcDogJ2RiJyxcbiAgICAgICAgfSldKTtcblxuICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIG9yaWcuY2FsbCh0aGlzLCBjb25maWcsIHZhbHVlcywgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgICAgICAgICBfb3B0aW9uYWxDaGFpbihbc3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXzggPT4gXzguZmluaXNoLCAnY2FsbCcsIF85ID0+IF85KCldKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKGVyciwgcmVzdWx0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgcmV0dXJuIG9yaWcuY2FsbCh0aGlzLCBjb25maWcsIGZ1bmN0aW9uIChlcnIsIHJlc3VsdCkge1xuICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF8xMCA9PiBfMTAuZmluaXNoLCAnY2FsbCcsIF8xMSA9PiBfMTEoKV0pO1xuICAgICAgICAgICAgdmFsdWVzKGVyciwgcmVzdWx0KTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHJ2ID0gdHlwZW9mIHZhbHVlcyAhPT0gJ3VuZGVmaW5lZCcgPyBvcmlnLmNhbGwodGhpcywgY29uZmlnLCB2YWx1ZXMpIDogb3JpZy5jYWxsKHRoaXMsIGNvbmZpZyk7XG5cbiAgICAgICAgaWYgKGlzVGhlbmFibGUocnYpKSB7XG4gICAgICAgICAgcmV0dXJuIHJ2LnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgICAgX29wdGlvbmFsQ2hhaW4oW3NwYW4sICdvcHRpb25hbEFjY2VzcycsIF8xMiA9PiBfMTIuZmluaXNoLCAnY2FsbCcsIF8xMyA9PiBfMTMoKV0pO1xuICAgICAgICAgICAgcmV0dXJuIHJlcztcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9vcHRpb25hbENoYWluKFtzcGFuLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMTQgPT4gXzE0LmZpbmlzaCwgJ2NhbGwnLCBfMTUgPT4gXzE1KCldKTtcbiAgICAgICAgcmV0dXJuIHJ2O1xuICAgICAgfTtcbiAgICB9KTtcbiAgfVxufVBvc3RncmVzLl9faW5pdFN0YXRpYygpO1xuXG5leHBvcnQgeyBQb3N0Z3JlcyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9zdGdyZXMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/postgres.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/prisma.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/prisma.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Prisma\": function() { return /* binding */ Prisma; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"./node_modules/@sentry/utils/esm/index.js\");\n/* harmony import */ var _utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/node-utils.js */ \"./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\");\n\n\n\n\nfunction isValidPrismaClient(possibleClient) {\n  return possibleClient && !!(possibleClient )['$use'];\n}\n\n/** Tracing integration for @prisma/client package */\nclass Prisma  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Prisma';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Prisma.id;}\n\n  /**\n   * Prisma ORM Client Instance\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Prisma.prototype.__init.call(this);\n    if (isValidPrismaClient(options.client)) {\n      this._client = options.client;\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.warn(\n          `Unsupported Prisma client provided to PrismaIntegration. Provided client: ${JSON.stringify(options.client)}`,\n        );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!this._client) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.error('PrismaIntegration is missing a Prisma Client Instance');\n      return;\n    }\n\n    if ((0,_utils_node_utils_js__WEBPACK_IMPORTED_MODULE_1__.shouldDisableAutoInstrumentation)(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.logger.log('Prisma Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    this._client.$use((params, next) => {\n      const scope = getCurrentHub().getScope();\n      const parentSpan = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n\n      const action = params.action;\n      const model = params.model;\n\n      const span = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n        description: model ? `${model} ${action}` : action,\n        op: 'db.sql.prisma',\n      })]);\n\n      const rv = next(params);\n\n      if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.isThenable)(rv)) {\n        return rv.then((res) => {\n          (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n          return res;\n        });\n      }\n\n      (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_2__._optionalChain)([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n      return rv;\n    });\n  }\n}Prisma.__initStatic();\n\n\n//# sourceMappingURL=prisma.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy9wcmlzbWEuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFrRTtBQUNmO0FBQ3NCOztBQUV6RTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjs7QUFFMUI7QUFDQTtBQUNBO0FBQ0EsYUFBYTs7QUFFYjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLEdBQUc7QUFDOUI7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBLFFBQVEsc0RBQVc7QUFDbkIsdUZBQXVGLCtCQUErQjtBQUN0SDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSx1REFBWTtBQUNuRjtBQUNBOztBQUVBLFFBQVEsc0ZBQWdDO0FBQ3hDLHVFQUF1RSxxREFBVTtBQUNqRjtBQUNBOztBQUVBO0FBQ0E7QUFDQSx5QkFBeUIsZ0ZBQWM7O0FBRXZDO0FBQ0E7O0FBRUEsbUJBQW1CLGdGQUFjO0FBQ2pDLGdDQUFnQyxPQUFPLEVBQUUsT0FBTztBQUNoRDtBQUNBLE9BQU87O0FBRVA7O0FBRUEsVUFBVSx5REFBVTtBQUNwQjtBQUNBLFVBQVUsZ0ZBQWM7QUFDeEI7QUFDQSxTQUFTO0FBQ1Q7O0FBRUEsTUFBTSxnRkFBYztBQUNwQjtBQUNBLEtBQUs7QUFDTDtBQUNBLENBQUM7O0FBRWlCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL25vZGUvaW50ZWdyYXRpb25zL3ByaXNtYS5qcz9lZDE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMnO1xuaW1wb3J0IHsgbG9nZ2VyLCBpc1RoZW5hYmxlIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5pbXBvcnQgeyBzaG91bGREaXNhYmxlQXV0b0luc3RydW1lbnRhdGlvbiB9IGZyb20gJy4vdXRpbHMvbm9kZS11dGlscy5qcyc7XG5cbmZ1bmN0aW9uIGlzVmFsaWRQcmlzbWFDbGllbnQocG9zc2libGVDbGllbnQpIHtcbiAgcmV0dXJuIHBvc3NpYmxlQ2xpZW50ICYmICEhKHBvc3NpYmxlQ2xpZW50IClbJyR1c2UnXTtcbn1cblxuLyoqIFRyYWNpbmcgaW50ZWdyYXRpb24gZm9yIEBwcmlzbWEvY2xpZW50IHBhY2thZ2UgKi9cbmNsYXNzIFByaXNtYSAge1xuICAvKipcbiAgICogQGluaGVyaXREb2NcbiAgICovXG4gICBzdGF0aWMgX19pbml0U3RhdGljKCkge3RoaXMuaWQgPSAnUHJpc21hJzt9XG5cbiAgLyoqXG4gICAqIEBpbmhlcml0RG9jXG4gICAqL1xuICAgX19pbml0KCkge3RoaXMubmFtZSA9IFByaXNtYS5pZDt9XG5cbiAgLyoqXG4gICAqIFByaXNtYSBPUk0gQ2xpZW50IEluc3RhbmNlXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge1ByaXNtYS5wcm90b3R5cGUuX19pbml0LmNhbGwodGhpcyk7XG4gICAgaWYgKGlzVmFsaWRQcmlzbWFDbGllbnQob3B0aW9ucy5jbGllbnQpKSB7XG4gICAgICB0aGlzLl9jbGllbnQgPSBvcHRpb25zLmNsaWVudDtcbiAgICB9IGVsc2Uge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJlxuICAgICAgICBsb2dnZXIud2FybihcbiAgICAgICAgICBgVW5zdXBwb3J0ZWQgUHJpc21hIGNsaWVudCBwcm92aWRlZCB0byBQcmlzbWFJbnRlZ3JhdGlvbi4gUHJvdmlkZWQgY2xpZW50OiAke0pTT04uc3RyaW5naWZ5KG9wdGlvbnMuY2xpZW50KX1gLFxuICAgICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAaW5oZXJpdERvY1xuICAgKi9cbiAgIHNldHVwT25jZShfLCBnZXRDdXJyZW50SHViKSB7XG4gICAgaWYgKCF0aGlzLl9jbGllbnQpIHtcbiAgICAgICh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykgJiYgbG9nZ2VyLmVycm9yKCdQcmlzbWFJbnRlZ3JhdGlvbiBpcyBtaXNzaW5nIGEgUHJpc21hIENsaWVudCBJbnN0YW5jZScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChzaG91bGREaXNhYmxlQXV0b0luc3RydW1lbnRhdGlvbihnZXRDdXJyZW50SHViKSkge1xuICAgICAgKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSAmJiBsb2dnZXIubG9nKCdQcmlzbWEgSW50ZWdyYXRpb24gaXMgc2tpcHBlZCBiZWNhdXNlIG9mIGluc3RydW1lbnRlciBjb25maWd1cmF0aW9uLicpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2NsaWVudC4kdXNlKChwYXJhbXMsIG5leHQpID0+IHtcbiAgICAgIGNvbnN0IHNjb3BlID0gZ2V0Q3VycmVudEh1YigpLmdldFNjb3BlKCk7XG4gICAgICBjb25zdCBwYXJlbnRTcGFuID0gX29wdGlvbmFsQ2hhaW4oW3Njb3BlLCAnb3B0aW9uYWxBY2Nlc3MnLCBfMiA9PiBfMi5nZXRTcGFuLCAnY2FsbCcsIF8zID0+IF8zKCldKTtcblxuICAgICAgY29uc3QgYWN0aW9uID0gcGFyYW1zLmFjdGlvbjtcbiAgICAgIGNvbnN0IG1vZGVsID0gcGFyYW1zLm1vZGVsO1xuXG4gICAgICBjb25zdCBzcGFuID0gX29wdGlvbmFsQ2hhaW4oW3BhcmVudFNwYW4sICdvcHRpb25hbEFjY2VzcycsIF80ID0+IF80LnN0YXJ0Q2hpbGQsICdjYWxsJywgXzUgPT4gXzUoe1xuICAgICAgICBkZXNjcmlwdGlvbjogbW9kZWwgPyBgJHttb2RlbH0gJHthY3Rpb259YCA6IGFjdGlvbixcbiAgICAgICAgb3A6ICdkYi5zcWwucHJpc21hJyxcbiAgICAgIH0pXSk7XG5cbiAgICAgIGNvbnN0IHJ2ID0gbmV4dChwYXJhbXMpO1xuXG4gICAgICBpZiAoaXNUaGVuYWJsZShydikpIHtcbiAgICAgICAgcmV0dXJuIHJ2LnRoZW4oKHJlcykgPT4ge1xuICAgICAgICAgIF9vcHRpb25hbENoYWluKFtzcGFuLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNiA9PiBfNi5maW5pc2gsICdjYWxsJywgXzcgPT4gXzcoKV0pO1xuICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICBfb3B0aW9uYWxDaGFpbihbc3BhbiwgJ29wdGlvbmFsQWNjZXNzJywgXzggPT4gXzguZmluaXNoLCAnY2FsbCcsIF85ID0+IF85KCldKTtcbiAgICAgIHJldHVybiBydjtcbiAgICB9KTtcbiAgfVxufVByaXNtYS5fX2luaXRTdGF0aWMoKTtcblxuZXhwb3J0IHsgUHJpc21hIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcmlzbWEuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/prisma.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"shouldDisableAutoInstrumentation\": function() { return /* binding */ shouldDisableAutoInstrumentation; }\n/* harmony export */ });\n/* harmony import */ var _sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils/esm/buildPolyfills */ \"./node_modules/@sentry/utils/esm/buildPolyfills/index.js\");\n\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nfunction shouldDisableAutoInstrumentation(getCurrentHub) {\n  const clientOptions = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([getCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n  const instrumenter = (0,_sentry_utils_esm_buildPolyfills__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([clientOptions, 'optionalAccess', _6 => _6.instrumenter]) || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n\n\n//# sourceMappingURL=node-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS90cmFjaW5nL2VzbS9ub2RlL2ludGVncmF0aW9ucy91dGlscy9ub2RlLXV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtFOztBQUVsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnRkFBYztBQUN0Qyx1QkFBdUIsZ0ZBQWM7O0FBRXJDO0FBQ0E7O0FBRTRDO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3RyYWNpbmcvZXNtL25vZGUvaW50ZWdyYXRpb25zL3V0aWxzL25vZGUtdXRpbHMuanM/YTNhYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9IGZyb20gJ0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzJztcblxuLyoqXG4gKiBDaGVjayBpZiBTZW50cnkgYXV0by1pbnN0cnVtZW50YXRpb24gc2hvdWxkIGJlIGRpc2FibGVkLlxuICpcbiAqIEBwYXJhbSBnZXRDdXJyZW50SHViIEEgbWV0aG9kIHRvIGZldGNoIHRoZSBjdXJyZW50IGh1YlxuICogQHJldHVybnMgYm9vbGVhblxuICovXG5mdW5jdGlvbiBzaG91bGREaXNhYmxlQXV0b0luc3RydW1lbnRhdGlvbihnZXRDdXJyZW50SHViKSB7XG4gIGNvbnN0IGNsaWVudE9wdGlvbnMgPSBfb3B0aW9uYWxDaGFpbihbZ2V0Q3VycmVudEh1YiwgJ2NhbGwnLCBfID0+IF8oKSwgJ2FjY2VzcycsIF8yID0+IF8yLmdldENsaWVudCwgJ2NhbGwnLCBfMyA9PiBfMygpLCAnb3B0aW9uYWxBY2Nlc3MnLCBfNCA9PiBfNC5nZXRPcHRpb25zLCAnY2FsbCcsIF81ID0+IF81KCldKTtcbiAgY29uc3QgaW5zdHJ1bWVudGVyID0gX29wdGlvbmFsQ2hhaW4oW2NsaWVudE9wdGlvbnMsICdvcHRpb25hbEFjY2VzcycsIF82ID0+IF82Lmluc3RydW1lbnRlcl0pIHx8ICdzZW50cnknO1xuXG4gIHJldHVybiBpbnN0cnVtZW50ZXIgIT09ICdzZW50cnknO1xufVxuXG5leHBvcnQgeyBzaG91bGREaXNhYmxlQXV0b0luc3RydW1lbnRhdGlvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS11dGlscy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/tracing/esm/node/integrations/utils/node-utils.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/baggage.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/baggage.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BAGGAGE_HEADER_NAME\": function() { return /* binding */ BAGGAGE_HEADER_NAME; },\n/* harmony export */   \"MAX_BAGGAGE_STRING_LENGTH\": function() { return /* binding */ MAX_BAGGAGE_STRING_LENGTH; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX\": function() { return /* binding */ SENTRY_BAGGAGE_KEY_PREFIX; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX_REGEX\": function() { return /* binding */ SENTRY_BAGGAGE_KEY_PREFIX_REGEX; },\n/* harmony export */   \"baggageHeaderToDynamicSamplingContext\": function() { return /* binding */ baggageHeaderToDynamicSamplingContext; },\n/* harmony export */   \"dynamicSamplingContextToSentryBaggageHeader\": function() { return /* binding */ dynamicSamplingContextToSentryBaggageHeader; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n\n\n\nconst BAGGAGE_HEADER_NAME = 'baggage';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX = 'sentry-';\n\nconst SENTRY_BAGGAGE_KEY_PREFIX_REGEX = /^sentry-/;\n\n/**\n * Max length of a serialized baggage string\n *\n * https://www.w3.org/TR/baggage/#limits\n */\nconst MAX_BAGGAGE_STRING_LENGTH = 8192;\n\n/**\n * Takes a baggage header and turns it into Dynamic Sampling Context, by extracting all the \"sentry-\" prefixed values\n * from it.\n *\n * @param baggageHeader A very bread definition of a baggage header as it might appear in various frameworks.\n * @returns The Dynamic Sampling Context that was found on `baggageHeader`, if there was any, `undefined` otherwise.\n */\nfunction baggageHeaderToDynamicSamplingContext(\n  // Very liberal definition of what any incoming header might look like\n  baggageHeader,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(baggageHeader) && !Array.isArray(baggageHeader)) {\n    return undefined;\n  }\n\n  // Intermediary object to store baggage key value pairs of incoming baggage headers on.\n  // It is later used to read Sentry-DSC-values from.\n  let baggageObject = {};\n\n  if (Array.isArray(baggageHeader)) {\n    // Combine all baggage headers into one object containing the baggage values so we can later read the Sentry-DSC-values from it\n    baggageObject = baggageHeader.reduce((acc, curr) => {\n      const currBaggageObject = baggageHeaderToObject(curr);\n      return {\n        ...acc,\n        ...currBaggageObject,\n      };\n    }, {});\n  } else {\n    // Return undefined if baggage header is an empty string (technically an empty baggage header is not spec conform but\n    // this is how we choose to handle it)\n    if (!baggageHeader) {\n      return undefined;\n    }\n\n    baggageObject = baggageHeaderToObject(baggageHeader);\n  }\n\n  // Read all \"sentry-\" prefixed values out of the baggage object and put it onto a dynamic sampling context object.\n  const dynamicSamplingContext = Object.entries(baggageObject).reduce((acc, [key, value]) => {\n    if (key.match(SENTRY_BAGGAGE_KEY_PREFIX_REGEX)) {\n      const nonPrefixedKey = key.slice(SENTRY_BAGGAGE_KEY_PREFIX.length);\n      acc[nonPrefixedKey] = value;\n    }\n    return acc;\n  }, {});\n\n  // Only return a dynamic sampling context object if there are keys in it.\n  // A keyless object means there were no sentry values on the header, which means that there is no DSC.\n  if (Object.keys(dynamicSamplingContext).length > 0) {\n    return dynamicSamplingContext ;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Turns a Dynamic Sampling Object into a baggage header by prefixing all the keys on the object with \"sentry-\".\n *\n * @param dynamicSamplingContext The Dynamic Sampling Context to turn into a header. For convenience and compatibility\n * with the `getDynamicSamplingContext` method on the Transaction class ,this argument can also be `undefined`. If it is\n * `undefined` the function will return `undefined`.\n * @returns a baggage header, created from `dynamicSamplingContext`, or `undefined` either if `dynamicSamplingContext`\n * was `undefined`, or if `dynamicSamplingContext` didn't contain any values.\n */\nfunction dynamicSamplingContextToSentryBaggageHeader(\n  // this also takes undefined for convenience and bundle size in other places\n  dynamicSamplingContext,\n) {\n  // Prefix all DSC keys with \"sentry-\" and put them into a new object\n  const sentryPrefixedDSC = Object.entries(dynamicSamplingContext).reduce(\n    (acc, [dscKey, dscValue]) => {\n      if (dscValue) {\n        acc[`${SENTRY_BAGGAGE_KEY_PREFIX}${dscKey}`] = dscValue;\n      }\n      return acc;\n    },\n    {},\n  );\n\n  return objectToBaggageHeader(sentryPrefixedDSC);\n}\n\n/**\n * Will parse a baggage header, which is a simple key-value map, into a flat object.\n *\n * @param baggageHeader The baggage header to parse.\n * @returns a flat object containing all the key-value pairs from `baggageHeader`.\n */\nfunction baggageHeaderToObject(baggageHeader) {\n  return baggageHeader\n    .split(',')\n    .map(baggageEntry => baggageEntry.split('=').map(keyOrValue => decodeURIComponent(keyOrValue.trim())))\n    .reduce((acc, [key, value]) => {\n      acc[key] = value;\n      return acc;\n    }, {});\n}\n\n/**\n * Turns a flat object (key-value pairs) into a baggage header, which is also just key-value pairs.\n *\n * @param object The object to turn into a baggage header.\n * @returns a baggage header string, or `undefined` if the object didn't have any values, since an empty baggage header\n * is not spec compliant.\n */\nfunction objectToBaggageHeader(object) {\n  if (Object.keys(object).length === 0) {\n    // An empty baggage header is not spec compliant: We return undefined.\n    return undefined;\n  }\n\n  return Object.entries(object).reduce((baggageHeader, [objectKey, objectValue], currentIndex) => {\n    const baggageEntry = `${encodeURIComponent(objectKey)}=${encodeURIComponent(objectValue)}`;\n    const newBaggageHeader = currentIndex === 0 ? baggageEntry : `${baggageHeader},${baggageEntry}`;\n    if (newBaggageHeader.length > MAX_BAGGAGE_STRING_LENGTH) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn(\n          `Not adding key: ${objectKey} with val: ${objectValue} to baggage header due to exceeding baggage size limits.`,\n        );\n      return baggageHeader;\n    } else {\n      return newBaggageHeader;\n    }\n  }, '');\n}\n\n\n//# sourceMappingURL=baggage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/baggage.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/browser.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getDomElement\": function() { return /* binding */ getDomElement; },\n/* harmony export */   \"getLocationHref\": function() { return /* binding */ getLocationHref; },\n/* harmony export */   \"htmlTreeAsString\": function() { return /* binding */ htmlTreeAsString; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\nconst DEFAULT_MAX_STRING_LENGTH = 80;\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction htmlTreeAsString(\n  elem,\n  options = {},\n) {\n\n  // try/catch both:\n  // - accessing event.target (see getsentry/raven-js#838, #768)\n  // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n  // - can throw an exception in some circumstances.\n  try {\n    let currentElem = elem ;\n    const MAX_TRAVERSE_HEIGHT = 5;\n    const out = [];\n    let height = 0;\n    let len = 0;\n    const separator = ' > ';\n    const sepLength = separator.length;\n    let nextStr;\n    const keyAttrs = Array.isArray(options) ? options : options.keyAttrs;\n    const maxStringLength = (!Array.isArray(options) && options.maxStringLength) || DEFAULT_MAX_STRING_LENGTH;\n\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n      nextStr = _htmlElementAsString(currentElem, keyAttrs);\n      // bail out if\n      // - nextStr is the 'html' element\n      // - the length of the string that would be created exceeds maxStringLength\n      //   (ignore this limit if we are on the first iteration)\n      if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= maxStringLength)) {\n        break;\n      }\n\n      out.push(nextStr);\n\n      len += nextStr.length;\n      currentElem = currentElem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(el, keyAttrs) {\n  const elem = el\n\n;\n\n  const out = [];\n  let className;\n  let classes;\n  let key;\n  let attr;\n  let i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  // Pairs of attribute keys defined in `serializeAttribute` and their values on element.\n  const keyAttrPairs =\n    keyAttrs && keyAttrs.length\n      ? keyAttrs.filter(keyAttr => elem.getAttribute(keyAttr)).map(keyAttr => [keyAttr, elem.getAttribute(keyAttr)])\n      : null;\n\n  if (keyAttrPairs && keyAttrPairs.length) {\n    keyAttrPairs.forEach(keyAttrPair => {\n      out.push(`[${keyAttrPair[0]}=\"${keyAttrPair[1]}\"]`);\n    });\n  } else {\n    if (elem.id) {\n      out.push(`#${elem.id}`);\n    }\n\n    // eslint-disable-next-line prefer-const\n    className = elem.className;\n    if (className && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(className)) {\n      classes = className.split(/\\s+/);\n      for (i = 0; i < classes.length; i++) {\n        out.push(`.${classes[i]}`);\n      }\n    }\n  }\n  const allowedAttrs = ['aria-label', 'type', 'name', 'title', 'alt'];\n  for (i = 0; i < allowedAttrs.length; i++) {\n    key = allowedAttrs[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.push(`[${key}=\"${attr}\"]`);\n    }\n  }\n  return out.join('');\n}\n\n/**\n * A safe form of location.href\n */\nfunction getLocationHref() {\n  try {\n    return WINDOW.document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n/**\n * Gets a DOM element by using document.querySelector.\n *\n * This wrapper will first check for the existance of the function before\n * actually calling it so that we don't have to take care of this check,\n * every time we want to access the DOM.\n *\n * Reason: DOM/querySelector is not available in all environments.\n *\n * We have to cast to any because utils can be consumed by a variety of environments,\n * and we don't want to break TS users. If you know what element will be selected by\n * `document.querySelector`, specify it as part of the generic call. For example,\n * `const element = getDomElement<Element>('selector');`\n *\n * @param selector the selector string passed on to document.querySelector\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getDomElement(selector) {\n  if (WINDOW.document && WINDOW.document.querySelector) {\n    return WINDOW.document.querySelector(selector) ;\n  }\n  return null;\n}\n\n\n//# sourceMappingURL=browser.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFtQztBQUNjOztBQUVqRDtBQUNBLGVBQWUsOERBQWU7O0FBRTlCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLGVBQWUsSUFBSSxlQUFlO0FBQ3JELEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQSxtQkFBbUIsUUFBUTtBQUMzQjs7QUFFQTtBQUNBO0FBQ0EscUJBQXFCLGdEQUFRO0FBQzdCO0FBQ0Esa0JBQWtCLG9CQUFvQjtBQUN0QyxxQkFBcUIsV0FBVztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUJBQXlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixJQUFJLElBQUksS0FBSztBQUNoQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFNEQ7QUFDNUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2Jyb3dzZXIuanM/NTA2MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gJy4vaXMuanMnO1xuaW1wb3J0IHsgZ2V0R2xvYmFsT2JqZWN0IH0gZnJvbSAnLi93b3JsZHdpZGUuanMnO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbmNvbnN0IFdJTkRPVyA9IGdldEdsb2JhbE9iamVjdCgpO1xuXG5jb25zdCBERUZBVUxUX01BWF9TVFJJTkdfTEVOR1RIID0gODA7XG5cbi8qKlxuICogR2l2ZW4gYSBjaGlsZCBET00gZWxlbWVudCwgcmV0dXJucyBhIHF1ZXJ5LXNlbGVjdG9yIHN0YXRlbWVudCBkZXNjcmliaW5nIHRoYXRcbiAqIGFuZCBpdHMgYW5jZXN0b3JzXG4gKiBlLmcuIFtIVE1MRWxlbWVudF0gPT4gYm9keSA+IGRpdiA+IGlucHV0I2Zvby5idG5bbmFtZT1iYXpdXG4gKiBAcmV0dXJucyBnZW5lcmF0ZWQgRE9NIHBhdGhcbiAqL1xuZnVuY3Rpb24gaHRtbFRyZWVBc1N0cmluZyhcbiAgZWxlbSxcbiAgb3B0aW9ucyA9IHt9LFxuKSB7XG5cbiAgLy8gdHJ5L2NhdGNoIGJvdGg6XG4gIC8vIC0gYWNjZXNzaW5nIGV2ZW50LnRhcmdldCAoc2VlIGdldHNlbnRyeS9yYXZlbi1qcyM4MzgsICM3NjgpXG4gIC8vIC0gYGh0bWxUcmVlQXNTdHJpbmdgIGJlY2F1c2UgaXQncyBjb21wbGV4LCBhbmQganVzdCBhY2Nlc3NpbmcgdGhlIERPTSBpbmNvcnJlY3RseVxuICAvLyAtIGNhbiB0aHJvdyBhbiBleGNlcHRpb24gaW4gc29tZSBjaXJjdW1zdGFuY2VzLlxuICB0cnkge1xuICAgIGxldCBjdXJyZW50RWxlbSA9IGVsZW0gO1xuICAgIGNvbnN0IE1BWF9UUkFWRVJTRV9IRUlHSFQgPSA1O1xuICAgIGNvbnN0IG91dCA9IFtdO1xuICAgIGxldCBoZWlnaHQgPSAwO1xuICAgIGxldCBsZW4gPSAwO1xuICAgIGNvbnN0IHNlcGFyYXRvciA9ICcgPiAnO1xuICAgIGNvbnN0IHNlcExlbmd0aCA9IHNlcGFyYXRvci5sZW5ndGg7XG4gICAgbGV0IG5leHRTdHI7XG4gICAgY29uc3Qga2V5QXR0cnMgPSBBcnJheS5pc0FycmF5KG9wdGlvbnMpID8gb3B0aW9ucyA6IG9wdGlvbnMua2V5QXR0cnM7XG4gICAgY29uc3QgbWF4U3RyaW5nTGVuZ3RoID0gKCFBcnJheS5pc0FycmF5KG9wdGlvbnMpICYmIG9wdGlvbnMubWF4U3RyaW5nTGVuZ3RoKSB8fCBERUZBVUxUX01BWF9TVFJJTkdfTEVOR1RIO1xuXG4gICAgd2hpbGUgKGN1cnJlbnRFbGVtICYmIGhlaWdodCsrIDwgTUFYX1RSQVZFUlNFX0hFSUdIVCkge1xuICAgICAgbmV4dFN0ciA9IF9odG1sRWxlbWVudEFzU3RyaW5nKGN1cnJlbnRFbGVtLCBrZXlBdHRycyk7XG4gICAgICAvLyBiYWlsIG91dCBpZlxuICAgICAgLy8gLSBuZXh0U3RyIGlzIHRoZSAnaHRtbCcgZWxlbWVudFxuICAgICAgLy8gLSB0aGUgbGVuZ3RoIG9mIHRoZSBzdHJpbmcgdGhhdCB3b3VsZCBiZSBjcmVhdGVkIGV4Y2VlZHMgbWF4U3RyaW5nTGVuZ3RoXG4gICAgICAvLyAgIChpZ25vcmUgdGhpcyBsaW1pdCBpZiB3ZSBhcmUgb24gdGhlIGZpcnN0IGl0ZXJhdGlvbilcbiAgICAgIGlmIChuZXh0U3RyID09PSAnaHRtbCcgfHwgKGhlaWdodCA+IDEgJiYgbGVuICsgb3V0Lmxlbmd0aCAqIHNlcExlbmd0aCArIG5leHRTdHIubGVuZ3RoID49IG1heFN0cmluZ0xlbmd0aCkpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIG91dC5wdXNoKG5leHRTdHIpO1xuXG4gICAgICBsZW4gKz0gbmV4dFN0ci5sZW5ndGg7XG4gICAgICBjdXJyZW50RWxlbSA9IGN1cnJlbnRFbGVtLnBhcmVudE5vZGU7XG4gICAgfVxuXG4gICAgcmV0dXJuIG91dC5yZXZlcnNlKCkuam9pbihzZXBhcmF0b3IpO1xuICB9IGNhdGNoIChfb08pIHtcbiAgICByZXR1cm4gJzx1bmtub3duPic7XG4gIH1cbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgc2ltcGxlLCBxdWVyeS1zZWxlY3RvciByZXByZXNlbnRhdGlvbiBvZiBhIERPTSBlbGVtZW50XG4gKiBlLmcuIFtIVE1MRWxlbWVudF0gPT4gaW5wdXQjZm9vLmJ0bltuYW1lPWJhel1cbiAqIEByZXR1cm5zIGdlbmVyYXRlZCBET00gcGF0aFxuICovXG5mdW5jdGlvbiBfaHRtbEVsZW1lbnRBc1N0cmluZyhlbCwga2V5QXR0cnMpIHtcbiAgY29uc3QgZWxlbSA9IGVsXG5cbjtcblxuICBjb25zdCBvdXQgPSBbXTtcbiAgbGV0IGNsYXNzTmFtZTtcbiAgbGV0IGNsYXNzZXM7XG4gIGxldCBrZXk7XG4gIGxldCBhdHRyO1xuICBsZXQgaTtcblxuICBpZiAoIWVsZW0gfHwgIWVsZW0udGFnTmFtZSkge1xuICAgIHJldHVybiAnJztcbiAgfVxuXG4gIG91dC5wdXNoKGVsZW0udGFnTmFtZS50b0xvd2VyQ2FzZSgpKTtcblxuICAvLyBQYWlycyBvZiBhdHRyaWJ1dGUga2V5cyBkZWZpbmVkIGluIGBzZXJpYWxpemVBdHRyaWJ1dGVgIGFuZCB0aGVpciB2YWx1ZXMgb24gZWxlbWVudC5cbiAgY29uc3Qga2V5QXR0clBhaXJzID1cbiAgICBrZXlBdHRycyAmJiBrZXlBdHRycy5sZW5ndGhcbiAgICAgID8ga2V5QXR0cnMuZmlsdGVyKGtleUF0dHIgPT4gZWxlbS5nZXRBdHRyaWJ1dGUoa2V5QXR0cikpLm1hcChrZXlBdHRyID0+IFtrZXlBdHRyLCBlbGVtLmdldEF0dHJpYnV0ZShrZXlBdHRyKV0pXG4gICAgICA6IG51bGw7XG5cbiAgaWYgKGtleUF0dHJQYWlycyAmJiBrZXlBdHRyUGFpcnMubGVuZ3RoKSB7XG4gICAga2V5QXR0clBhaXJzLmZvckVhY2goa2V5QXR0clBhaXIgPT4ge1xuICAgICAgb3V0LnB1c2goYFske2tleUF0dHJQYWlyWzBdfT1cIiR7a2V5QXR0clBhaXJbMV19XCJdYCk7XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKGVsZW0uaWQpIHtcbiAgICAgIG91dC5wdXNoKGAjJHtlbGVtLmlkfWApO1xuICAgIH1cblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItY29uc3RcbiAgICBjbGFzc05hbWUgPSBlbGVtLmNsYXNzTmFtZTtcbiAgICBpZiAoY2xhc3NOYW1lICYmIGlzU3RyaW5nKGNsYXNzTmFtZSkpIHtcbiAgICAgIGNsYXNzZXMgPSBjbGFzc05hbWUuc3BsaXQoL1xccysvKTtcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBjbGFzc2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIG91dC5wdXNoKGAuJHtjbGFzc2VzW2ldfWApO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBjb25zdCBhbGxvd2VkQXR0cnMgPSBbJ2FyaWEtbGFiZWwnLCAndHlwZScsICduYW1lJywgJ3RpdGxlJywgJ2FsdCddO1xuICBmb3IgKGkgPSAwOyBpIDwgYWxsb3dlZEF0dHJzLmxlbmd0aDsgaSsrKSB7XG4gICAga2V5ID0gYWxsb3dlZEF0dHJzW2ldO1xuICAgIGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZShrZXkpO1xuICAgIGlmIChhdHRyKSB7XG4gICAgICBvdXQucHVzaChgWyR7a2V5fT1cIiR7YXR0cn1cIl1gKTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIG91dC5qb2luKCcnKTtcbn1cblxuLyoqXG4gKiBBIHNhZmUgZm9ybSBvZiBsb2NhdGlvbi5ocmVmXG4gKi9cbmZ1bmN0aW9uIGdldExvY2F0aW9uSHJlZigpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gV0lORE9XLmRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG4gIH0gY2F0Y2ggKG9PKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG59XG5cbi8qKlxuICogR2V0cyBhIERPTSBlbGVtZW50IGJ5IHVzaW5nIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IuXG4gKlxuICogVGhpcyB3cmFwcGVyIHdpbGwgZmlyc3QgY2hlY2sgZm9yIHRoZSBleGlzdGFuY2Ugb2YgdGhlIGZ1bmN0aW9uIGJlZm9yZVxuICogYWN0dWFsbHkgY2FsbGluZyBpdCBzbyB0aGF0IHdlIGRvbid0IGhhdmUgdG8gdGFrZSBjYXJlIG9mIHRoaXMgY2hlY2ssXG4gKiBldmVyeSB0aW1lIHdlIHdhbnQgdG8gYWNjZXNzIHRoZSBET00uXG4gKlxuICogUmVhc29uOiBET00vcXVlcnlTZWxlY3RvciBpcyBub3QgYXZhaWxhYmxlIGluIGFsbCBlbnZpcm9ubWVudHMuXG4gKlxuICogV2UgaGF2ZSB0byBjYXN0IHRvIGFueSBiZWNhdXNlIHV0aWxzIGNhbiBiZSBjb25zdW1lZCBieSBhIHZhcmlldHkgb2YgZW52aXJvbm1lbnRzLFxuICogYW5kIHdlIGRvbid0IHdhbnQgdG8gYnJlYWsgVFMgdXNlcnMuIElmIHlvdSBrbm93IHdoYXQgZWxlbWVudCB3aWxsIGJlIHNlbGVjdGVkIGJ5XG4gKiBgZG9jdW1lbnQucXVlcnlTZWxlY3RvcmAsIHNwZWNpZnkgaXQgYXMgcGFydCBvZiB0aGUgZ2VuZXJpYyBjYWxsLiBGb3IgZXhhbXBsZSxcbiAqIGBjb25zdCBlbGVtZW50ID0gZ2V0RG9tRWxlbWVudDxFbGVtZW50Pignc2VsZWN0b3InKTtgXG4gKlxuICogQHBhcmFtIHNlbGVjdG9yIHRoZSBzZWxlY3RvciBzdHJpbmcgcGFzc2VkIG9uIHRvIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmZ1bmN0aW9uIGdldERvbUVsZW1lbnQoc2VsZWN0b3IpIHtcbiAgaWYgKFdJTkRPVy5kb2N1bWVudCAmJiBXSU5ET1cuZG9jdW1lbnQucXVlcnlTZWxlY3Rvcikge1xuICAgIHJldHVybiBXSU5ET1cuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikgO1xuICB9XG4gIHJldHVybiBudWxsO1xufVxuXG5leHBvcnQgeyBnZXREb21FbGVtZW50LCBnZXRMb2NhdGlvbkhyZWYsIGh0bWxUcmVlQXNTdHJpbmcgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJyb3dzZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/browser.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js ***!
  \********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_asyncNullishCoalesce\": function() { return /* binding */ _asyncNullishCoalesce; }\n/* harmony export */ });\n/* harmony import */ var _nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_nullishCoalesce.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n\n\n// adapted from Sucrase (https://github.com/alangpierce/sucrase)\n\n/**\n * Polyfill for the nullish coalescing operator (`??`), when used in situations where at least one of the values is the\n * result of an async operation.\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nasync function _asyncNullishCoalesce(lhs, rhsFn) {\n  return (0,_nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__._nullishCoalesce)(lhs, rhsFn);\n}\n\n// Sucrase version:\n// async function _asyncNullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return await rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_asyncNullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEOztBQUV6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxxRUFBZ0I7QUFDekI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUVpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzP2E4ZWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgX251bGxpc2hDb2FsZXNjZSB9IGZyb20gJy4vX251bGxpc2hDb2FsZXNjZS5qcyc7XG5cbi8vIGFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG51bGxpc2ggY29hbGVzY2luZyBvcGVyYXRvciAoYD8/YCksIHdoZW4gdXNlZCBpbiBzaXR1YXRpb25zIHdoZXJlIGF0IGxlYXN0IG9uZSBvZiB0aGUgdmFsdWVzIGlzIHRoZVxuICogcmVzdWx0IG9mIGFuIGFzeW5jIG9wZXJhdGlvbi5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIFJIUyBpcyB3cmFwcGVkIGluIGEgZnVuY3Rpb24gc28gdGhhdCBpZiBpdCdzIGEgY29tcHV0ZWQgdmFsdWUsIHRoYXQgZXZhbHVhdGlvbiB3b24ndCBoYXBwZW4gdW5sZXNzIHRoZVxuICogTEhTIGV2YWx1YXRlcyB0byBhIG51bGxpc2ggdmFsdWUsIHRvIG1pbWljIHRoZSBvcGVyYXRvcidzIHNob3J0LWNpcmN1aXRpbmcgYmVoYXZpb3IuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSBsaHMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSBsZWZ0IG9mIHRoZSBgPz9gXG4gKiBAcGFyYW0gcmhzRm4gQSBmdW5jdGlvbiByZXR1cm5pbmcgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIHRvIHRoZSByaWdodCBvZiB0aGUgYD8/YFxuICogQHJldHVybnMgVGhlIExIUyB2YWx1ZSwgdW5sZXNzIGl0J3MgYG51bGxgIG9yIGB1bmRlZmluZWRgLCBpbiB3aGljaCBjYXNlLCB0aGUgUkhTIHZhbHVlXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIF9hc3luY051bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4gIHJldHVybiBfbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBfYXN5bmNOdWxsaXNoQ29hbGVzY2UobGhzLCByaHNGbikge1xuLy8gICBpZiAobGhzICE9IG51bGwpIHtcbi8vICAgICByZXR1cm4gbGhzO1xuLy8gICB9IGVsc2Uge1xuLy8gICAgIHJldHVybiBhd2FpdCByaHNGbigpO1xuLy8gICB9XG4vLyB9XG5cbmV4cG9ydCB7IF9hc3luY051bGxpc2hDb2FsZXNjZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_asyncOptionalChain\": function() { return /* binding */ _asyncOptionalChain; }\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, for situations in which at least one part of the expression is async.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nasync function _asyncOptionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = await fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = await fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version:\n// async function _asyncOptionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = await fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = await fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_asyncOptionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jT3B0aW9uYWxDaGFpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFK0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW4uanM/MWI1OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucywgZm9yIHNpdHVhdGlvbnMgaW4gd2hpY2ggYXQgbGVhc3Qgb25lIHBhcnQgb2YgdGhlIGV4cHJlc3Npb24gaXMgYXN5bmMuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKSBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL2Jsb2IvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5Zi9zcmMvdHJhbnNmb3JtZXJzL09wdGlvbmFsQ2hhaW5pbmdOdWxsaXNoVHJhbnNmb3JtZXIudHMjTDE1XG4gKlxuICogQHBhcmFtIG9wcyBBcnJheSByZXN1bHQgb2YgZXhwcmVzc2lvbiBjb252ZXJzaW9uXG4gKiBAcmV0dXJucyBUaGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb25cbiAqL1xuYXN5bmMgZnVuY3Rpb24gX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpIHtcbiAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gIGxldCB2YWx1ZSA9IG9wc1swXTtcbiAgbGV0IGkgPSAxO1xuICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbiAgICBjb25zdCBvcCA9IG9wc1tpXSA7XG4gICAgY29uc3QgZm4gPSBvcHNbaSArIDFdIDtcbiAgICBpICs9IDI7XG4gICAgLy8gYnkgY2hlY2tpbmcgZm9yIGxvb3NlIGVxdWFsaXR5IHRvIGBudWxsYCwgd2UgY2F0Y2ggYm90aCBgbnVsbGAgYW5kIGB1bmRlZmluZWRgXG4gICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbiAgICAgIC8vIHJlYWxseSB3ZSdyZSBtZWFuaW5nIHRvIHJldHVybiBgdW5kZWZpbmVkYCBhcyBhbiBhY3R1YWwgdmFsdWUgaGVyZSwgYnV0IGl0IHNhdmVzIGJ5dGVzIG5vdCB0byB3cml0ZSBpdFxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4gICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4gICAgICB2YWx1ZSA9IGF3YWl0IGZuKHZhbHVlKTtcbiAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4gICAgICB2YWx1ZSA9IGF3YWl0IGZuKCguLi5hcmdzKSA9PiAodmFsdWUgKS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gYXN5bmMgZnVuY3Rpb24gX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpIHtcbi8vICAgbGV0IGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgIGxldCB2YWx1ZSA9IG9wc1swXTtcbi8vICAgbGV0IGkgPSAxO1xuLy8gICB3aGlsZSAoaSA8IG9wcy5sZW5ndGgpIHtcbi8vICAgICBjb25zdCBvcCA9IG9wc1tpXTtcbi8vICAgICBjb25zdCBmbiA9IG9wc1tpICsgMV07XG4vLyAgICAgaSArPSAyO1xuLy8gICAgIGlmICgob3AgPT09ICdvcHRpb25hbEFjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSAmJiB2YWx1ZSA9PSBudWxsKSB7XG4vLyAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuLy8gICAgIH1cbi8vICAgICBpZiAob3AgPT09ICdhY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnKSB7XG4vLyAgICAgICBsYXN0QWNjZXNzTEhTID0gdmFsdWU7XG4vLyAgICAgICB2YWx1ZSA9IGF3YWl0IGZuKHZhbHVlKTtcbi8vICAgICB9IGVsc2UgaWYgKG9wID09PSAnY2FsbCcgfHwgb3AgPT09ICdvcHRpb25hbENhbGwnKSB7XG4vLyAgICAgICB2YWx1ZSA9IGF3YWl0IGZuKCguLi5hcmdzKSA9PiB2YWx1ZS5jYWxsKGxhc3RBY2Nlc3NMSFMsIC4uLmFyZ3MpKTtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICB9XG4vLyAgIHJldHVybiB2YWx1ZTtcbi8vIH1cblxuZXhwb3J0IHsgX2FzeW5jT3B0aW9uYWxDaGFpbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jT3B0aW9uYWxDaGFpbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_asyncOptionalChainDelete\": function() { return /* binding */ _asyncOptionalChainDelete; }\n/* harmony export */ });\n/* harmony import */ var _asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_asyncOptionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js\");\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nasync function _asyncOptionalChainDelete(ops) {\n  const result = (await (0,_asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_0__._asyncOptionalChain)(ops)) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : (result );\n}\n\n// Sucrase version:\n// async function asyncOptionalChainDelete(ops) {\n//   const result = await ASYNC_OPTIONAL_CHAIN_NAME(ops);\n//   return result == null ? true : result;\n// }\n\n\n//# sourceMappingURL=_asyncOptionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErRDs7QUFFL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsMkVBQW1CO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzL19hc3luY09wdGlvbmFsQ2hhaW5EZWxldGUuanM/M2IzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfYXN5bmNPcHRpb25hbENoYWluIH0gZnJvbSAnLi9fYXN5bmNPcHRpb25hbENoYWluLmpzJztcblxuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgdGhlIG9wdGlvbmFsIGNoYWluIG9wZXJhdG9yLCBgPy5gLCBnaXZlbiBwcmV2aW91cyBjb252ZXJzaW9uIG9mIHRoZSBleHByZXNzaW9uIGludG8gYW4gYXJyYXkgb2YgdmFsdWVzLFxuICogZGVzY3JpcHRvcnMsIGFuZCBmdW5jdGlvbnMsIGluIGNhc2VzIHdoZXJlIHRoZSB2YWx1ZSBvZiB0aGUgZXhwcmVzc2lvbiBpcyB0byBiZSBkZWxldGVkLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSkgU2VlXG4gKiBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS9ibG9iLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWYvc3JjL3RyYW5zZm9ybWVycy9PcHRpb25hbENoYWluaW5nTnVsbGlzaFRyYW5zZm9ybWVyLnRzI0wxNVxuICpcbiAqIEBwYXJhbSBvcHMgQXJyYXkgcmVzdWx0IG9mIGV4cHJlc3Npb24gY29udmVyc2lvblxuICogQHJldHVybnMgVGhlIHJldHVybiB2YWx1ZSBvZiB0aGUgYGRlbGV0ZWAgb3BlcmF0b3I6IGB0cnVlYCwgdW5sZXNzIHRoZSBkZWxldGlvbiB0YXJnZXQgaXMgYW4gb3duLCBub24tY29uZmlndXJhYmxlXG4gKiBwcm9wZXJ0eSAob25lIHdoaWNoIGNhbid0IGJlIGRlbGV0ZWQgb3IgdHVybmVkIGludG8gYW4gYWNjZXNzb3IsIGFuZCB3aG9zZSBlbnVtZXJhYmlsaXR5IGNhbid0IGJlIGNoYW5nZWQpLCBpbiB3aGljaFxuICogY2FzZSBgZmFsc2VgLlxuICovXG5hc3luYyBmdW5jdGlvbiBfYXN5bmNPcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuICBjb25zdCByZXN1bHQgPSAoYXdhaXQgX2FzeW5jT3B0aW9uYWxDaGFpbihvcHMpKSA7XG4gIC8vIElmIGByZXN1bHRgIGlzIGBudWxsYCwgaXQgbWVhbnMgd2UgZGlkbid0IGdldCB0byB0aGUgZW5kIG9mIHRoZSBjaGFpbiBhbmQgc28gbm90aGluZyB3YXMgZGVsZXRlZCAoaW4gd2hpY2ggY2FzZSxcbiAgLy8gcmV0dXJuIGB0cnVlYCBzaW5jZSB0aGF0J3Mgd2hhdCBgZGVsZXRlYCBkb2VzIHdoZW4gaXQgbm8tb3BzKS4gSWYgaXQncyBub24tbnVsbCwgd2Uga25vdyB0aGUgZGVsZXRlIGhhcHBlbmVkLCBpblxuICAvLyB3aGljaCBjYXNlIHdlIHJldHVybiB3aGF0ZXZlciB0aGUgYGRlbGV0ZWAgcmV0dXJuZWQsIHdoaWNoIHdpbGwgYmUgYSBib29sZWFuLlxuICByZXR1cm4gcmVzdWx0ID09IG51bGwgPyB0cnVlIDogKHJlc3VsdCApO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBhc3luYyBmdW5jdGlvbiBhc3luY09wdGlvbmFsQ2hhaW5EZWxldGUob3BzKSB7XG4vLyAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IEFTWU5DX09QVElPTkFMX0NIQUlOX05BTUUob3BzKTtcbi8vICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbi8vIH1cblxuZXhwb3J0IHsgX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_createNamedExportFrom\": function() { return /* binding */ _createNamedExportFrom; }\n/* harmony export */ });\n/**\n * Copy a property from the given object into `exports`, under the given name.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the property to copy.\n * @param localName The name under which to export the property\n * @param importedName The name under which the property lives in `obj`\n */\nfunction _createNamedExportFrom(obj, localName, importedName) {\n  exports[localName] = obj[importedName];\n}\n\n// Sucrase version:\n// function _createNamedExportFrom(obj, localName, importedName) {\n//   Object.defineProperty(exports, localName, {enumerable: true, get: () => obj[importedName]});\n// }\n\n\n//# sourceMappingURL=_createNamedExportFrom.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2NyZWF0ZU5hbWVkRXhwb3J0RnJvbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnREFBZ0QsK0NBQStDO0FBQy9GOztBQUVrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2NyZWF0ZU5hbWVkRXhwb3J0RnJvbS5qcz8yYTI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weSBhIHByb3BlcnR5IGZyb20gdGhlIGdpdmVuIG9iamVjdCBpbnRvIGBleHBvcnRzYCwgdW5kZXIgdGhlIGdpdmVuIG5hbWUuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSBvYmogVGhlIG9iamVjdCBjb250YWluaW5nIHRoZSBwcm9wZXJ0eSB0byBjb3B5LlxuICogQHBhcmFtIGxvY2FsTmFtZSBUaGUgbmFtZSB1bmRlciB3aGljaCB0byBleHBvcnQgdGhlIHByb3BlcnR5XG4gKiBAcGFyYW0gaW1wb3J0ZWROYW1lIFRoZSBuYW1lIHVuZGVyIHdoaWNoIHRoZSBwcm9wZXJ0eSBsaXZlcyBpbiBgb2JqYFxuICovXG5mdW5jdGlvbiBfY3JlYXRlTmFtZWRFeHBvcnRGcm9tKG9iaiwgbG9jYWxOYW1lLCBpbXBvcnRlZE5hbWUpIHtcbiAgZXhwb3J0c1tsb2NhbE5hbWVdID0gb2JqW2ltcG9ydGVkTmFtZV07XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvbjpcbi8vIGZ1bmN0aW9uIF9jcmVhdGVOYW1lZEV4cG9ydEZyb20ob2JqLCBsb2NhbE5hbWUsIGltcG9ydGVkTmFtZSkge1xuLy8gICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbG9jYWxOYW1lLCB7ZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiAoKSA9PiBvYmpbaW1wb3J0ZWROYW1lXX0pO1xuLy8gfVxuXG5leHBvcnQgeyBfY3JlYXRlTmFtZWRFeHBvcnRGcm9tIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fY3JlYXRlTmFtZWRFeHBvcnRGcm9tLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_createStarExport\": function() { return /* binding */ _createStarExport; }\n/* harmony export */ });\n/**\n * Copy properties from an object into `exports`.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param obj The object containing the properties to copy.\n */\nfunction _createStarExport(obj) {\n  Object.keys(obj)\n    .filter(key => key !== 'default' && key !== '__esModule' && !(key in exports))\n    .forEach(key => (exports[key] = obj[key]));\n}\n\n// Sucrase version:\n// function _createStarExport(obj) {\n//   Object.keys(obj)\n//     .filter(key => key !== 'default' && key !== '__esModule')\n//     .forEach(key => {\n//       if (exports.hasOwnProperty(key)) {\n//         return;\n//       }\n//       Object.defineProperty(exports, key, { enumerable: true, get: () => obj[key] });\n//     });\n// }\n\n\n//# sourceMappingURL=_createStarExport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2NyZWF0ZVN0YXJFeHBvcnQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLHVDQUF1QztBQUN0RixRQUFRO0FBQ1I7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9fY3JlYXRlU3RhckV4cG9ydC5qcz9iNWQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weSBwcm9wZXJ0aWVzIGZyb20gYW4gb2JqZWN0IGludG8gYGV4cG9ydHNgLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqXG4gKiBAcGFyYW0gb2JqIFRoZSBvYmplY3QgY29udGFpbmluZyB0aGUgcHJvcGVydGllcyB0byBjb3B5LlxuICovXG5mdW5jdGlvbiBfY3JlYXRlU3RhckV4cG9ydChvYmopIHtcbiAgT2JqZWN0LmtleXMob2JqKVxuICAgIC5maWx0ZXIoa2V5ID0+IGtleSAhPT0gJ2RlZmF1bHQnICYmIGtleSAhPT0gJ19fZXNNb2R1bGUnICYmICEoa2V5IGluIGV4cG9ydHMpKVxuICAgIC5mb3JFYWNoKGtleSA9PiAoZXhwb3J0c1trZXldID0gb2JqW2tleV0pKTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX2NyZWF0ZVN0YXJFeHBvcnQob2JqKSB7XG4vLyAgIE9iamVjdC5rZXlzKG9iailcbi8vICAgICAuZmlsdGVyKGtleSA9PiBrZXkgIT09ICdkZWZhdWx0JyAmJiBrZXkgIT09ICdfX2VzTW9kdWxlJylcbi8vICAgICAuZm9yRWFjaChrZXkgPT4ge1xuLy8gICAgICAgaWYgKGV4cG9ydHMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuLy8gICAgICAgICByZXR1cm47XG4vLyAgICAgICB9XG4vLyAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogKCkgPT4gb2JqW2tleV0gfSk7XG4vLyAgICAgfSk7XG4vLyB9XG5cbmV4cG9ydCB7IF9jcmVhdGVTdGFyRXhwb3J0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fY3JlYXRlU3RhckV4cG9ydC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js ***!
  \**************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_interopDefault\": function() { return /* binding */ _interopDefault; }\n/* harmony export */ });\n/**\n * Unwraps a module if it has been wrapped in an object under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns The full module, unwrapped if necessary.\n */\nfunction _interopDefault(requireResult) {\n  return requireResult.__esModule ? (requireResult.default ) : requireResult;\n}\n\n// Rollup version:\n// function _interopDefault(e) {\n//   return e && e.__esModule ? e['default'] : e;\n// }\n\n\n//# sourceMappingURL=_interopDefault.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2ludGVyb3BEZWZhdWx0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUUyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2ludGVyb3BEZWZhdWx0LmpzPzFiMmMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVbndyYXBzIGEgbW9kdWxlIGlmIGl0IGhhcyBiZWVuIHdyYXBwZWQgaW4gYW4gb2JqZWN0IHVuZGVyIHRoZSBrZXkgYGRlZmF1bHRgLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBSb2xsdXAgKGh0dHBzOi8vZ2l0aHViLmNvbS9yb2xsdXAvcm9sbHVwKVxuICpcbiAqIEBwYXJhbSByZXF1aXJlUmVzdWx0IFRoZSByZXN1bHQgb2YgY2FsbGluZyBgcmVxdWlyZWAgb24gYSBtb2R1bGVcbiAqIEByZXR1cm5zIFRoZSBmdWxsIG1vZHVsZSwgdW53cmFwcGVkIGlmIG5lY2Vzc2FyeS5cbiAqL1xuZnVuY3Rpb24gX2ludGVyb3BEZWZhdWx0KHJlcXVpcmVSZXN1bHQpIHtcbiAgcmV0dXJuIHJlcXVpcmVSZXN1bHQuX19lc01vZHVsZSA/IChyZXF1aXJlUmVzdWx0LmRlZmF1bHQgKSA6IHJlcXVpcmVSZXN1bHQ7XG59XG5cbi8vIFJvbGx1cCB2ZXJzaW9uOlxuLy8gZnVuY3Rpb24gX2ludGVyb3BEZWZhdWx0KGUpIHtcbi8vICAgcmV0dXJuIGUgJiYgZS5fX2VzTW9kdWxlID8gZVsnZGVmYXVsdCddIDogZTtcbi8vIH1cblxuZXhwb3J0IHsgX2ludGVyb3BEZWZhdWx0IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1faW50ZXJvcERlZmF1bHQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_interopNamespace\": function() { return /* binding */ _interopNamespace; }\n/* harmony export */ });\n/**\n * Adds a self-referential `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nfunction _interopNamespace(requireResult) {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Rollup version (with `output.externalLiveBindings` and `output.freeze` both set to false)\n// function _interopNamespace(e) {\n//   if (e && e.__esModule) return e;\n//   var n = Object.create(null);\n//   if (e) {\n//     for (var k in e) {\n//       n[k] = e[k];\n//     }\n//   }\n//   n[\"default\"] = e;\n//   return n;\n// }\n\n\n//# sourceMappingURL=_interopNamespace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2ludGVyb3BOYW1lc3BhY2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9faW50ZXJvcE5hbWVzcGFjZS5qcz9hNzMxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWRkcyBhIHNlbGYtcmVmZXJlbnRpYWwgYGRlZmF1bHRgIHByb3BlcnR5IHRvIENKUyBtb2R1bGVzIHdoaWNoIGFyZW4ndCB0aGUgcmVzdWx0IG9mIHRyYW5zcGlsYXRpb24gZnJvbSBFU00gbW9kdWxlcy5cbiAqXG4gKiBBZGFwdGVkIGZyb20gUm9sbHVwIChodHRwczovL2dpdGh1Yi5jb20vcm9sbHVwL3JvbGx1cClcbiAqXG4gKiBAcGFyYW0gcmVxdWlyZVJlc3VsdCBUaGUgcmVzdWx0IG9mIGNhbGxpbmcgYHJlcXVpcmVgIG9uIGEgbW9kdWxlXG4gKiBAcmV0dXJucyBFaXRoZXIgYHJlcXVpcmVSZXN1bHRgIG9yIGEgY29weSBvZiBgcmVxdWlyZVJlc3VsdGAgd2l0aCBhbiBhZGRlZCBzZWxmLXJlZmVyZW50aWFsIGBkZWZhdWx0YCBwcm9wZXJ0eVxuICovXG5mdW5jdGlvbiBfaW50ZXJvcE5hbWVzcGFjZShyZXF1aXJlUmVzdWx0KSB7XG4gIHJldHVybiByZXF1aXJlUmVzdWx0Ll9fZXNNb2R1bGUgPyByZXF1aXJlUmVzdWx0IDogeyAuLi5yZXF1aXJlUmVzdWx0LCBkZWZhdWx0OiByZXF1aXJlUmVzdWx0IH07XG59XG5cbi8vIFJvbGx1cCB2ZXJzaW9uICh3aXRoIGBvdXRwdXQuZXh0ZXJuYWxMaXZlQmluZGluZ3NgIGFuZCBgb3V0cHV0LmZyZWV6ZWAgYm90aCBzZXQgdG8gZmFsc2UpXG4vLyBmdW5jdGlvbiBfaW50ZXJvcE5hbWVzcGFjZShlKSB7XG4vLyAgIGlmIChlICYmIGUuX19lc01vZHVsZSkgcmV0dXJuIGU7XG4vLyAgIHZhciBuID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbi8vICAgaWYgKGUpIHtcbi8vICAgICBmb3IgKHZhciBrIGluIGUpIHtcbi8vICAgICAgIG5ba10gPSBlW2tdO1xuLy8gICAgIH1cbi8vICAgfVxuLy8gICBuW1wiZGVmYXVsdFwiXSA9IGU7XG4vLyAgIHJldHVybiBuO1xuLy8gfVxuXG5leHBvcnQgeyBfaW50ZXJvcE5hbWVzcGFjZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2ludGVyb3BOYW1lc3BhY2UuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_interopNamespaceDefaultOnly\": function() { return /* binding */ _interopNamespaceDefaultOnly; }\n/* harmony export */ });\n/**\n * Wrap a module in an object, as the value under the key `default`.\n *\n * Adapted from Rollup (https://github.com/rollup/rollup)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns An object containing the key-value pair (`default`, `requireResult`)\n */\nfunction _interopNamespaceDefaultOnly(requireResult) {\n  return {\n    __proto__: null,\n    default: requireResult,\n  };\n}\n\n// Rollup version\n// function _interopNamespaceDefaultOnly(e) {\n//   return {\n//     __proto__: null,\n//     'default': e\n//   };\n// }\n\n\n//# sourceMappingURL=_interopNamespaceDefaultOnly.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2ludGVyb3BOYW1lc3BhY2VEZWZhdWx0T25seS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFd0M7QUFDeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2J1aWxkUG9seWZpbGxzL19pbnRlcm9wTmFtZXNwYWNlRGVmYXVsdE9ubHkuanM/MmI1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdyYXAgYSBtb2R1bGUgaW4gYW4gb2JqZWN0LCBhcyB0aGUgdmFsdWUgdW5kZXIgdGhlIGtleSBgZGVmYXVsdGAuXG4gKlxuICogQWRhcHRlZCBmcm9tIFJvbGx1cCAoaHR0cHM6Ly9naXRodWIuY29tL3JvbGx1cC9yb2xsdXApXG4gKlxuICogQHBhcmFtIHJlcXVpcmVSZXN1bHQgVGhlIHJlc3VsdCBvZiBjYWxsaW5nIGByZXF1aXJlYCBvbiBhIG1vZHVsZVxuICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGtleS12YWx1ZSBwYWlyIChgZGVmYXVsdGAsIGByZXF1aXJlUmVzdWx0YClcbiAqL1xuZnVuY3Rpb24gX2ludGVyb3BOYW1lc3BhY2VEZWZhdWx0T25seShyZXF1aXJlUmVzdWx0KSB7XG4gIHJldHVybiB7XG4gICAgX19wcm90b19fOiBudWxsLFxuICAgIGRlZmF1bHQ6IHJlcXVpcmVSZXN1bHQsXG4gIH07XG59XG5cbi8vIFJvbGx1cCB2ZXJzaW9uXG4vLyBmdW5jdGlvbiBfaW50ZXJvcE5hbWVzcGFjZURlZmF1bHRPbmx5KGUpIHtcbi8vICAgcmV0dXJuIHtcbi8vICAgICBfX3Byb3RvX186IG51bGwsXG4vLyAgICAgJ2RlZmF1bHQnOiBlXG4vLyAgIH07XG4vLyB9XG5cbmV4cG9ydCB7IF9pbnRlcm9wTmFtZXNwYWNlRGVmYXVsdE9ubHkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9pbnRlcm9wTmFtZXNwYWNlRGVmYXVsdE9ubHkuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_interopRequireDefault\": function() { return /* binding */ _interopRequireDefault; }\n/* harmony export */ });\n/**\n * Wraps modules which aren't the result of transpiling an ESM module in an object under the key `default`\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns `requireResult` or `requireResult` wrapped in an object, keyed as `default`\n */\nfunction _interopRequireDefault(requireResult) {\n  return requireResult.__esModule ? requireResult : { default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireDefault(obj) {\n//   return obj && obj.__esModule ? obj : { default: obj };\n// }\n\n\n//# sourceMappingURL=_interopRequireDefault.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNEO0FBQ3REOztBQUVBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7O0FBRWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9faW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzP2Q2ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBXcmFwcyBtb2R1bGVzIHdoaWNoIGFyZW4ndCB0aGUgcmVzdWx0IG9mIHRyYW5zcGlsaW5nIGFuIEVTTSBtb2R1bGUgaW4gYW4gb2JqZWN0IHVuZGVyIHRoZSBrZXkgYGRlZmF1bHRgXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSByZXF1aXJlUmVzdWx0IFRoZSByZXN1bHQgb2YgY2FsbGluZyBgcmVxdWlyZWAgb24gYSBtb2R1bGVcbiAqIEByZXR1cm5zIGByZXF1aXJlUmVzdWx0YCBvciBgcmVxdWlyZVJlc3VsdGAgd3JhcHBlZCBpbiBhbiBvYmplY3QsIGtleWVkIGFzIGBkZWZhdWx0YFxuICovXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmVSZXN1bHQpIHtcbiAgcmV0dXJuIHJlcXVpcmVSZXN1bHQuX19lc01vZHVsZSA/IHJlcXVpcmVSZXN1bHQgOiB7IGRlZmF1bHQ6IHJlcXVpcmVSZXN1bHQgfTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uXG4vLyBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuLy8gICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTtcbi8vIH1cblxuZXhwb3J0IHsgX2ludGVyb3BSZXF1aXJlRGVmYXVsdCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2ludGVyb3BSZXF1aXJlRGVmYXVsdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js ***!
  \**********************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_interopRequireWildcard\": function() { return /* binding */ _interopRequireWildcard; }\n/* harmony export */ });\n/**\n * Adds a `default` property to CJS modules which aren't the result of transpilation from ESM modules.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param requireResult The result of calling `require` on a module\n * @returns Either `requireResult` or a copy of `requireResult` with an added self-referential `default` property\n */\nfunction _interopRequireWildcard(requireResult) {\n  return requireResult.__esModule ? requireResult : { ...requireResult, default: requireResult };\n}\n\n// Sucrase version\n// function _interopRequireWildcard(obj) {\n//   if (obj && obj.__esModule) {\n//     return obj;\n//   } else {\n//     var newObj = {};\n//     if (obj != null) {\n//       for (var key in obj) {\n//         if (Object.prototype.hasOwnProperty.call(obj, key)) {\n//           newObj[key] = obj[key];\n//         }\n//       }\n//     }\n//     newObj.default = obj;\n//     return newObj;\n//   }\n// }\n\n\n//# sourceMappingURL=_interopRequireWildcard.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRDtBQUN0RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRW1DO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9faW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcz85YjFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWRkcyBhIGBkZWZhdWx0YCBwcm9wZXJ0eSB0byBDSlMgbW9kdWxlcyB3aGljaCBhcmVuJ3QgdGhlIHJlc3VsdCBvZiB0cmFuc3BpbGF0aW9uIGZyb20gRVNNIG1vZHVsZXMuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKVxuICpcbiAqIEBwYXJhbSByZXF1aXJlUmVzdWx0IFRoZSByZXN1bHQgb2YgY2FsbGluZyBgcmVxdWlyZWAgb24gYSBtb2R1bGVcbiAqIEByZXR1cm5zIEVpdGhlciBgcmVxdWlyZVJlc3VsdGAgb3IgYSBjb3B5IG9mIGByZXF1aXJlUmVzdWx0YCB3aXRoIGFuIGFkZGVkIHNlbGYtcmVmZXJlbnRpYWwgYGRlZmF1bHRgIHByb3BlcnR5XG4gKi9cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmVSZXN1bHQpIHtcbiAgcmV0dXJuIHJlcXVpcmVSZXN1bHQuX19lc01vZHVsZSA/IHJlcXVpcmVSZXN1bHQgOiB7IC4uLnJlcXVpcmVSZXN1bHQsIGRlZmF1bHQ6IHJlcXVpcmVSZXN1bHQgfTtcbn1cblxuLy8gU3VjcmFzZSB2ZXJzaW9uXG4vLyBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmopIHtcbi8vICAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkge1xuLy8gICAgIHJldHVybiBvYmo7XG4vLyAgIH0gZWxzZSB7XG4vLyAgICAgdmFyIG5ld09iaiA9IHt9O1xuLy8gICAgIGlmIChvYmogIT0gbnVsbCkge1xuLy8gICAgICAgZm9yICh2YXIga2V5IGluIG9iaikge1xuLy8gICAgICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkge1xuLy8gICAgICAgICAgIG5ld09ialtrZXldID0gb2JqW2tleV07XG4vLyAgICAgICAgIH1cbi8vICAgICAgIH1cbi8vICAgICB9XG4vLyAgICAgbmV3T2JqLmRlZmF1bHQgPSBvYmo7XG4vLyAgICAgcmV0dXJuIG5ld09iajtcbi8vICAgfVxuLy8gfVxuXG5leHBvcnQgeyBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_nullishCoalesce\": function() { return /* binding */ _nullishCoalesce; }\n/* harmony export */ });\n/**\n * Polyfill for the nullish coalescing operator (`??`).\n *\n * Note that the RHS is wrapped in a function so that if it's a computed value, that evaluation won't happen unless the\n * LHS evaluates to a nullish value, to mimic the operator's short-circuiting behavior.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n *\n * @param lhs The value of the expression to the left of the `??`\n * @param rhsFn A function returning the value of the expression to the right of the `??`\n * @returns The LHS value, unless it's `null` or `undefined`, in which case, the RHS value\n */\nfunction _nullishCoalesce(lhs, rhsFn) {\n  // by checking for loose equality to `null`, we catch both `null` and `undefined`\n  return lhs != null ? lhs : rhsFn();\n}\n\n// Sucrase version:\n// function _nullishCoalesce(lhs, rhsFn) {\n//   if (lhs != null) {\n//     return lhs;\n//   } else {\n//     return rhsFn();\n//   }\n// }\n\n\n//# sourceMappingURL=_nullishCoalesce.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBOztBQUU0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX251bGxpc2hDb2FsZXNjZS5qcz84MDVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBudWxsaXNoIGNvYWxlc2Npbmcgb3BlcmF0b3IgKGA/P2ApLlxuICpcbiAqIE5vdGUgdGhhdCB0aGUgUkhTIGlzIHdyYXBwZWQgaW4gYSBmdW5jdGlvbiBzbyB0aGF0IGlmIGl0J3MgYSBjb21wdXRlZCB2YWx1ZSwgdGhhdCBldmFsdWF0aW9uIHdvbid0IGhhcHBlbiB1bmxlc3MgdGhlXG4gKiBMSFMgZXZhbHVhdGVzIHRvIGEgbnVsbGlzaCB2YWx1ZSwgdG8gbWltaWMgdGhlIG9wZXJhdG9yJ3Mgc2hvcnQtY2lyY3VpdGluZyBiZWhhdmlvci5cbiAqXG4gKiBBZGFwdGVkIGZyb20gU3VjcmFzZSAoaHR0cHM6Ly9naXRodWIuY29tL2FsYW5ncGllcmNlL3N1Y3Jhc2UpXG4gKlxuICogQHBhcmFtIGxocyBUaGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIGxlZnQgb2YgdGhlIGA/P2BcbiAqIEBwYXJhbSByaHNGbiBBIGZ1bmN0aW9uIHJldHVybmluZyB0aGUgdmFsdWUgb2YgdGhlIGV4cHJlc3Npb24gdG8gdGhlIHJpZ2h0IG9mIHRoZSBgPz9gXG4gKiBAcmV0dXJucyBUaGUgTEhTIHZhbHVlLCB1bmxlc3MgaXQncyBgbnVsbGAgb3IgYHVuZGVmaW5lZGAsIGluIHdoaWNoIGNhc2UsIHRoZSBSSFMgdmFsdWVcbiAqL1xuZnVuY3Rpb24gX251bGxpc2hDb2FsZXNjZShsaHMsIHJoc0ZuKSB7XG4gIC8vIGJ5IGNoZWNraW5nIGZvciBsb29zZSBlcXVhbGl0eSB0byBgbnVsbGAsIHdlIGNhdGNoIGJvdGggYG51bGxgIGFuZCBgdW5kZWZpbmVkYFxuICByZXR1cm4gbGhzICE9IG51bGwgPyBsaHMgOiByaHNGbigpO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb246XG4vLyBmdW5jdGlvbiBfbnVsbGlzaENvYWxlc2NlKGxocywgcmhzRm4pIHtcbi8vICAgaWYgKGxocyAhPSBudWxsKSB7XG4vLyAgICAgcmV0dXJuIGxocztcbi8vICAgfSBlbHNlIHtcbi8vICAgICByZXR1cm4gcmhzRm4oKTtcbi8vICAgfVxuLy8gfVxuXG5leHBvcnQgeyBfbnVsbGlzaENvYWxlc2NlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1fbnVsbGlzaENvYWxlc2NlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_optionalChain\": function() { return /* binding */ _optionalChain; }\n/* harmony export */ });\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\n\n//# sourceMappingURL=_optionalChain.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9fb3B0aW9uYWxDaGFpbi5qcz81ZGE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUG9seWZpbGwgZm9yIHRoZSBvcHRpb25hbCBjaGFpbiBvcGVyYXRvciwgYD8uYCwgZ2l2ZW4gcHJldmlvdXMgY29udmVyc2lvbiBvZiB0aGUgZXhwcmVzc2lvbiBpbnRvIGFuIGFycmF5IG9mIHZhbHVlcyxcbiAqIGRlc2NyaXB0b3JzLCBhbmQgZnVuY3Rpb25zLlxuICpcbiAqIEFkYXB0ZWQgZnJvbSBTdWNyYXNlIChodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZSlcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vYWxhbmdwaWVyY2Uvc3VjcmFzZS9ibG9iLzI2NTg4Nzg2ODk2NjkxN2YzYjkyNGNlMzhkZmFkMDFmYmFiMTMyOWYvc3JjL3RyYW5zZm9ybWVycy9PcHRpb25hbENoYWluaW5nTnVsbGlzaFRyYW5zZm9ybWVyLnRzI0wxNVxuICpcbiAqIEBwYXJhbSBvcHMgQXJyYXkgcmVzdWx0IG9mIGV4cHJlc3Npb24gY29udmVyc2lvblxuICogQHJldHVybnMgVGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uXG4gKi9cbmZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykge1xuICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgbGV0IHZhbHVlID0gb3BzWzBdO1xuICBsZXQgaSA9IDE7XG4gIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuICAgIGNvbnN0IG9wID0gb3BzW2ldIDtcbiAgICBjb25zdCBmbiA9IG9wc1tpICsgMV0gO1xuICAgIGkgKz0gMjtcbiAgICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbiAgICBpZiAoKG9wID09PSAnb3B0aW9uYWxBY2Nlc3MnIHx8IG9wID09PSAnb3B0aW9uYWxDYWxsJykgJiYgdmFsdWUgPT0gbnVsbCkge1xuICAgICAgLy8gcmVhbGx5IHdlJ3JlIG1lYW5pbmcgdG8gcmV0dXJuIGB1bmRlZmluZWRgIGFzIGFuIGFjdHVhbCB2YWx1ZSBoZXJlLCBidXQgaXQgc2F2ZXMgYnl0ZXMgbm90IHRvIHdyaXRlIGl0XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbiAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbiAgICAgIHZhbHVlID0gZm4odmFsdWUpO1xuICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbiAgICAgIHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+ICh2YWx1ZSApLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHZhbHVlO1xufVxuXG4vLyBTdWNyYXNlIHZlcnNpb25cbi8vIGZ1bmN0aW9uIF9vcHRpb25hbENoYWluKG9wcykge1xuLy8gICBsZXQgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgbGV0IHZhbHVlID0gb3BzWzBdO1xuLy8gICBsZXQgaSA9IDE7XG4vLyAgIHdoaWxlIChpIDwgb3BzLmxlbmd0aCkge1xuLy8gICAgIGNvbnN0IG9wID0gb3BzW2ldO1xuLy8gICAgIGNvbnN0IGZuID0gb3BzW2kgKyAxXTtcbi8vICAgICBpICs9IDI7XG4vLyAgICAgaWYgKChvcCA9PT0gJ29wdGlvbmFsQWNjZXNzJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpICYmIHZhbHVlID09IG51bGwpIHtcbi8vICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4vLyAgICAgfVxuLy8gICAgIGlmIChvcCA9PT0gJ2FjY2VzcycgfHwgb3AgPT09ICdvcHRpb25hbEFjY2VzcycpIHtcbi8vICAgICAgIGxhc3RBY2Nlc3NMSFMgPSB2YWx1ZTtcbi8vICAgICAgIHZhbHVlID0gZm4odmFsdWUpO1xuLy8gICAgIH0gZWxzZSBpZiAob3AgPT09ICdjYWxsJyB8fCBvcCA9PT0gJ29wdGlvbmFsQ2FsbCcpIHtcbi8vICAgICAgIHZhbHVlID0gZm4oKC4uLmFyZ3MpID0+IHZhbHVlLmNhbGwobGFzdEFjY2Vzc0xIUywgLi4uYXJncykpO1xuLy8gICAgICAgbGFzdEFjY2Vzc0xIUyA9IHVuZGVmaW5lZDtcbi8vICAgICB9XG4vLyAgIH1cbi8vICAgcmV0dXJuIHZhbHVlO1xuLy8gfVxuXG5leHBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X29wdGlvbmFsQ2hhaW4uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_optionalChainDelete\": function() { return /* binding */ _optionalChainDelete; }\n/* harmony export */ });\n/* harmony import */ var _optionalChain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_optionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n\n\n/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions, in cases where the value of the expression is to be deleted.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase) See\n * https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The return value of the `delete` operator: `true`, unless the deletion target is an own, non-configurable\n * property (one which can't be deleted or turned into an accessor, and whose enumerability can't be changed), in which\n * case `false`.\n */\nfunction _optionalChainDelete(ops) {\n  const result = (0,_optionalChain_js__WEBPACK_IMPORTED_MODULE_0__._optionalChain)(ops) ;\n  // If `result` is `null`, it means we didn't get to the end of the chain and so nothing was deleted (in which case,\n  // return `true` since that's what `delete` does when it no-ops). If it's non-null, we know the delete happened, in\n  // which case we return whatever the `delete` returned, which will be a boolean.\n  return result == null ? true : result;\n}\n\n// Sucrase version:\n// function _optionalChainDelete(ops) {\n//   const result = _optionalChain(ops);\n//   // by checking for loose equality to `null`, we catch both `null` and `undefined`\n//   return result == null ? true : result;\n// }\n\n\n//# sourceMappingURL=_optionalChainDelete.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW5EZWxldGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7O0FBRXJEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlFQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvX29wdGlvbmFsQ2hhaW5EZWxldGUuanM/MWY2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBfb3B0aW9uYWxDaGFpbiB9IGZyb20gJy4vX29wdGlvbmFsQ2hhaW4uanMnO1xuXG4vKipcbiAqIFBvbHlmaWxsIGZvciB0aGUgb3B0aW9uYWwgY2hhaW4gb3BlcmF0b3IsIGA/LmAsIGdpdmVuIHByZXZpb3VzIGNvbnZlcnNpb24gb2YgdGhlIGV4cHJlc3Npb24gaW50byBhbiBhcnJheSBvZiB2YWx1ZXMsXG4gKiBkZXNjcmlwdG9ycywgYW5kIGZ1bmN0aW9ucywgaW4gY2FzZXMgd2hlcmUgdGhlIHZhbHVlIG9mIHRoZSBleHByZXNzaW9uIGlzIHRvIGJlIGRlbGV0ZWQuXG4gKlxuICogQWRhcHRlZCBmcm9tIFN1Y3Jhc2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlKSBTZWVcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9hbGFuZ3BpZXJjZS9zdWNyYXNlL2Jsb2IvMjY1ODg3ODY4OTY2OTE3ZjNiOTI0Y2UzOGRmYWQwMWZiYWIxMzI5Zi9zcmMvdHJhbnNmb3JtZXJzL09wdGlvbmFsQ2hhaW5pbmdOdWxsaXNoVHJhbnNmb3JtZXIudHMjTDE1XG4gKlxuICogQHBhcmFtIG9wcyBBcnJheSByZXN1bHQgb2YgZXhwcmVzc2lvbiBjb252ZXJzaW9uXG4gKiBAcmV0dXJucyBUaGUgcmV0dXJuIHZhbHVlIG9mIHRoZSBgZGVsZXRlYCBvcGVyYXRvcjogYHRydWVgLCB1bmxlc3MgdGhlIGRlbGV0aW9uIHRhcmdldCBpcyBhbiBvd24sIG5vbi1jb25maWd1cmFibGVcbiAqIHByb3BlcnR5IChvbmUgd2hpY2ggY2FuJ3QgYmUgZGVsZXRlZCBvciB0dXJuZWQgaW50byBhbiBhY2Nlc3NvciwgYW5kIHdob3NlIGVudW1lcmFiaWxpdHkgY2FuJ3QgYmUgY2hhbmdlZCksIGluIHdoaWNoXG4gKiBjYXNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIF9vcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuICBjb25zdCByZXN1bHQgPSBfb3B0aW9uYWxDaGFpbihvcHMpIDtcbiAgLy8gSWYgYHJlc3VsdGAgaXMgYG51bGxgLCBpdCBtZWFucyB3ZSBkaWRuJ3QgZ2V0IHRvIHRoZSBlbmQgb2YgdGhlIGNoYWluIGFuZCBzbyBub3RoaW5nIHdhcyBkZWxldGVkIChpbiB3aGljaCBjYXNlLFxuICAvLyByZXR1cm4gYHRydWVgIHNpbmNlIHRoYXQncyB3aGF0IGBkZWxldGVgIGRvZXMgd2hlbiBpdCBuby1vcHMpLiBJZiBpdCdzIG5vbi1udWxsLCB3ZSBrbm93IHRoZSBkZWxldGUgaGFwcGVuZWQsIGluXG4gIC8vIHdoaWNoIGNhc2Ugd2UgcmV0dXJuIHdoYXRldmVyIHRoZSBgZGVsZXRlYCByZXR1cm5lZCwgd2hpY2ggd2lsbCBiZSBhIGJvb2xlYW4uXG4gIHJldHVybiByZXN1bHQgPT0gbnVsbCA/IHRydWUgOiByZXN1bHQ7XG59XG5cbi8vIFN1Y3Jhc2UgdmVyc2lvbjpcbi8vIGZ1bmN0aW9uIF9vcHRpb25hbENoYWluRGVsZXRlKG9wcykge1xuLy8gICBjb25zdCByZXN1bHQgPSBfb3B0aW9uYWxDaGFpbihvcHMpO1xuLy8gICAvLyBieSBjaGVja2luZyBmb3IgbG9vc2UgZXF1YWxpdHkgdG8gYG51bGxgLCB3ZSBjYXRjaCBib3RoIGBudWxsYCBhbmQgYHVuZGVmaW5lZGBcbi8vICAgcmV0dXJuIHJlc3VsdCA9PSBudWxsID8gdHJ1ZSA6IHJlc3VsdDtcbi8vIH1cblxuZXhwb3J0IHsgX29wdGlvbmFsQ2hhaW5EZWxldGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV9vcHRpb25hbENoYWluRGVsZXRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/buildPolyfills/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/buildPolyfills/index.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_asyncNullishCoalesce\": function() { return /* reexport safe */ _asyncNullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__._asyncNullishCoalesce; },\n/* harmony export */   \"_asyncOptionalChain\": function() { return /* reexport safe */ _asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_1__._asyncOptionalChain; },\n/* harmony export */   \"_asyncOptionalChainDelete\": function() { return /* reexport safe */ _asyncOptionalChainDelete_js__WEBPACK_IMPORTED_MODULE_2__._asyncOptionalChainDelete; },\n/* harmony export */   \"_createNamedExportFrom\": function() { return /* reexport safe */ _createNamedExportFrom_js__WEBPACK_IMPORTED_MODULE_3__._createNamedExportFrom; },\n/* harmony export */   \"_createStarExport\": function() { return /* reexport safe */ _createStarExport_js__WEBPACK_IMPORTED_MODULE_4__._createStarExport; },\n/* harmony export */   \"_interopDefault\": function() { return /* reexport safe */ _interopDefault_js__WEBPACK_IMPORTED_MODULE_5__._interopDefault; },\n/* harmony export */   \"_interopNamespace\": function() { return /* reexport safe */ _interopNamespace_js__WEBPACK_IMPORTED_MODULE_6__._interopNamespace; },\n/* harmony export */   \"_interopNamespaceDefaultOnly\": function() { return /* reexport safe */ _interopNamespaceDefaultOnly_js__WEBPACK_IMPORTED_MODULE_7__._interopNamespaceDefaultOnly; },\n/* harmony export */   \"_interopRequireDefault\": function() { return /* reexport safe */ _interopRequireDefault_js__WEBPACK_IMPORTED_MODULE_8__._interopRequireDefault; },\n/* harmony export */   \"_interopRequireWildcard\": function() { return /* reexport safe */ _interopRequireWildcard_js__WEBPACK_IMPORTED_MODULE_9__._interopRequireWildcard; },\n/* harmony export */   \"_nullishCoalesce\": function() { return /* reexport safe */ _nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_10__._nullishCoalesce; },\n/* harmony export */   \"_optionalChain\": function() { return /* reexport safe */ _optionalChain_js__WEBPACK_IMPORTED_MODULE_11__._optionalChain; },\n/* harmony export */   \"_optionalChainDelete\": function() { return /* reexport safe */ _optionalChainDelete_js__WEBPACK_IMPORTED_MODULE_12__._optionalChainDelete; }\n/* harmony export */ });\n/* harmony import */ var _asyncNullishCoalesce_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_asyncNullishCoalesce.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncNullishCoalesce.js\");\n/* harmony import */ var _asyncOptionalChain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_asyncOptionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChain.js\");\n/* harmony import */ var _asyncOptionalChainDelete_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_asyncOptionalChainDelete.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_asyncOptionalChainDelete.js\");\n/* harmony import */ var _createNamedExportFrom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_createNamedExportFrom.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_createNamedExportFrom.js\");\n/* harmony import */ var _createStarExport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_createStarExport.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_createStarExport.js\");\n/* harmony import */ var _interopDefault_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_interopDefault.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_interopDefault.js\");\n/* harmony import */ var _interopNamespace_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./_interopNamespace.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespace.js\");\n/* harmony import */ var _interopNamespaceDefaultOnly_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_interopNamespaceDefaultOnly.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_interopNamespaceDefaultOnly.js\");\n/* harmony import */ var _interopRequireDefault_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./_interopRequireDefault.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireDefault.js\");\n/* harmony import */ var _interopRequireWildcard_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./_interopRequireWildcard.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_interopRequireWildcard.js\");\n/* harmony import */ var _nullishCoalesce_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./_nullishCoalesce.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_nullishCoalesce.js\");\n/* harmony import */ var _optionalChain_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./_optionalChain.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _optionalChainDelete_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_optionalChainDelete.js */ \"./node_modules/@sentry/utils/esm/buildPolyfills/_optionalChainDelete.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vYnVpbGRQb2x5ZmlsbHMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUU7QUFDSjtBQUNZO0FBQ047QUFDVjtBQUNKO0FBQ0k7QUFDc0I7QUFDWjtBQUNFO0FBQ2Q7QUFDSjtBQUNZO0FBQ2pFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9idWlsZFBvbHlmaWxscy9pbmRleC5qcz9jMTIxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IF9hc3luY051bGxpc2hDb2FsZXNjZSB9IGZyb20gJy4vX2FzeW5jTnVsbGlzaENvYWxlc2NlLmpzJztcbmV4cG9ydCB7IF9hc3luY09wdGlvbmFsQ2hhaW4gfSBmcm9tICcuL19hc3luY09wdGlvbmFsQ2hhaW4uanMnO1xuZXhwb3J0IHsgX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZSB9IGZyb20gJy4vX2FzeW5jT3B0aW9uYWxDaGFpbkRlbGV0ZS5qcyc7XG5leHBvcnQgeyBfY3JlYXRlTmFtZWRFeHBvcnRGcm9tIH0gZnJvbSAnLi9fY3JlYXRlTmFtZWRFeHBvcnRGcm9tLmpzJztcbmV4cG9ydCB7IF9jcmVhdGVTdGFyRXhwb3J0IH0gZnJvbSAnLi9fY3JlYXRlU3RhckV4cG9ydC5qcyc7XG5leHBvcnQgeyBfaW50ZXJvcERlZmF1bHQgfSBmcm9tICcuL19pbnRlcm9wRGVmYXVsdC5qcyc7XG5leHBvcnQgeyBfaW50ZXJvcE5hbWVzcGFjZSB9IGZyb20gJy4vX2ludGVyb3BOYW1lc3BhY2UuanMnO1xuZXhwb3J0IHsgX2ludGVyb3BOYW1lc3BhY2VEZWZhdWx0T25seSB9IGZyb20gJy4vX2ludGVyb3BOYW1lc3BhY2VEZWZhdWx0T25seS5qcyc7XG5leHBvcnQgeyBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IH0gZnJvbSAnLi9faW50ZXJvcFJlcXVpcmVEZWZhdWx0LmpzJztcbmV4cG9ydCB7IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIH0gZnJvbSAnLi9faW50ZXJvcFJlcXVpcmVXaWxkY2FyZC5qcyc7XG5leHBvcnQgeyBfbnVsbGlzaENvYWxlc2NlIH0gZnJvbSAnLi9fbnVsbGlzaENvYWxlc2NlLmpzJztcbmV4cG9ydCB7IF9vcHRpb25hbENoYWluIH0gZnJvbSAnLi9fb3B0aW9uYWxDaGFpbi5qcyc7XG5leHBvcnQgeyBfb3B0aW9uYWxDaGFpbkRlbGV0ZSB9IGZyb20gJy4vX29wdGlvbmFsQ2hhaW5EZWxldGUuanMnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/buildPolyfills/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/clientreport.js":
/*!********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/clientreport.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createClientReportEnvelope\": function() { return /* binding */ createClientReportEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./time.js */ \"./node_modules/@sentry/utils/esm/time.js\");\n\n\n\n/**\n * Creates client report envelope\n * @param discarded_events An array of discard events\n * @param dsn A DSN that can be set on the header. Optional.\n */\nfunction createClientReportEnvelope(\n  discarded_events,\n  dsn,\n  timestamp,\n) {\n  const clientReportItem = [\n    { type: 'client_report' },\n    {\n      timestamp: timestamp || (0,_time_js__WEBPACK_IMPORTED_MODULE_0__.dateTimestampInSeconds)(),\n      discarded_events,\n    },\n  ];\n  return (0,_envelope_js__WEBPACK_IMPORTED_MODULE_1__.createEnvelope)(dsn ? { dsn } : {}, [clientReportItem]);\n}\n\n\n//# sourceMappingURL=clientreport.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vY2xpZW50cmVwb3J0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNJOztBQUVuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSx1QkFBdUI7QUFDN0I7QUFDQSw4QkFBOEIsZ0VBQXNCO0FBQ3BEO0FBQ0EsS0FBSztBQUNMO0FBQ0EsU0FBUyw0REFBYyxTQUFTLE1BQU0sSUFBSTtBQUMxQzs7QUFFc0M7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2NsaWVudHJlcG9ydC5qcz9iM2EzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVudmVsb3BlIH0gZnJvbSAnLi9lbnZlbG9wZS5qcyc7XG5pbXBvcnQgeyBkYXRlVGltZXN0YW1wSW5TZWNvbmRzIH0gZnJvbSAnLi90aW1lLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGNsaWVudCByZXBvcnQgZW52ZWxvcGVcbiAqIEBwYXJhbSBkaXNjYXJkZWRfZXZlbnRzIEFuIGFycmF5IG9mIGRpc2NhcmQgZXZlbnRzXG4gKiBAcGFyYW0gZHNuIEEgRFNOIHRoYXQgY2FuIGJlIHNldCBvbiB0aGUgaGVhZGVyLiBPcHRpb25hbC5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGUoXG4gIGRpc2NhcmRlZF9ldmVudHMsXG4gIGRzbixcbiAgdGltZXN0YW1wLFxuKSB7XG4gIGNvbnN0IGNsaWVudFJlcG9ydEl0ZW0gPSBbXG4gICAgeyB0eXBlOiAnY2xpZW50X3JlcG9ydCcgfSxcbiAgICB7XG4gICAgICB0aW1lc3RhbXA6IHRpbWVzdGFtcCB8fCBkYXRlVGltZXN0YW1wSW5TZWNvbmRzKCksXG4gICAgICBkaXNjYXJkZWRfZXZlbnRzLFxuICAgIH0sXG4gIF07XG4gIHJldHVybiBjcmVhdGVFbnZlbG9wZShkc24gPyB7IGRzbiB9IDoge30sIFtjbGllbnRSZXBvcnRJdGVtXSk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUNsaWVudFJlcG9ydEVudmVsb3BlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jbGllbnRyZXBvcnQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/clientreport.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/dsn.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/dsn.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dsnFromString\": function() { return /* binding */ dsnFromString; },\n/* harmony export */   \"dsnToString\": function() { return /* binding */ dsnToString; },\n/* harmony export */   \"makeDsn\": function() { return /* binding */ makeDsn; }\n/* harmony export */ });\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/utils/esm/error.js\");\n\n\n/** Regular expression used to parse a Dsn. */\nconst DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+)?)?@)([\\w.-]+)(?::(\\d+))?\\/(.+)/;\n\nfunction isValidProtocol(protocol) {\n  return protocol === 'http' || protocol === 'https';\n}\n\n/**\n * Renders the string representation of this Dsn.\n *\n * By default, this will render the public representation without the password\n * component. To get the deprecated private representation, set `withPassword`\n * to true.\n *\n * @param withPassword When set to true, the password will be included.\n */\nfunction dsnToString(dsn, withPassword = false) {\n  const { host, path, pass, port, projectId, protocol, publicKey } = dsn;\n  return (\n    `${protocol}://${publicKey}${withPassword && pass ? `:${pass}` : ''}` +\n    `@${host}${port ? `:${port}` : ''}/${path ? `${path}/` : path}${projectId}`\n  );\n}\n\n/**\n * Parses a Dsn from a given string.\n *\n * @param str A Dsn as string\n * @returns Dsn as DsnComponents\n */\nfunction dsnFromString(str) {\n  const match = DSN_REGEX.exec(str);\n\n  if (!match) {\n    throw new _error_js__WEBPACK_IMPORTED_MODULE_0__.SentryError(`Invalid Sentry Dsn: ${str}`);\n  }\n\n  const [protocol, publicKey, pass = '', host, port = '', lastPath] = match.slice(1);\n  let path = '';\n  let projectId = lastPath;\n\n  const split = projectId.split('/');\n  if (split.length > 1) {\n    path = split.slice(0, -1).join('/');\n    projectId = split.pop() ;\n  }\n\n  if (projectId) {\n    const projectMatch = projectId.match(/^\\d+/);\n    if (projectMatch) {\n      projectId = projectMatch[0];\n    }\n  }\n\n  return dsnFromComponents({ host, pass, path, projectId, port, protocol: protocol , publicKey });\n}\n\nfunction dsnFromComponents(components) {\n  return {\n    protocol: components.protocol,\n    publicKey: components.publicKey || '',\n    pass: components.pass || '',\n    host: components.host,\n    port: components.port || '',\n    path: components.path || '',\n    projectId: components.projectId,\n  };\n}\n\nfunction validateDsn(dsn) {\n  if (!(typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    return;\n  }\n\n  const { port, projectId, protocol } = dsn;\n\n  const requiredComponents = ['protocol', 'publicKey', 'host', 'projectId'];\n  requiredComponents.forEach(component => {\n    if (!dsn[component]) {\n      throw new _error_js__WEBPACK_IMPORTED_MODULE_0__.SentryError(`Invalid Sentry Dsn: ${component} missing`);\n    }\n  });\n\n  if (!projectId.match(/^\\d+$/)) {\n    throw new _error_js__WEBPACK_IMPORTED_MODULE_0__.SentryError(`Invalid Sentry Dsn: Invalid projectId ${projectId}`);\n  }\n\n  if (!isValidProtocol(protocol)) {\n    throw new _error_js__WEBPACK_IMPORTED_MODULE_0__.SentryError(`Invalid Sentry Dsn: Invalid protocol ${protocol}`);\n  }\n\n  if (port && isNaN(parseInt(port, 10))) {\n    throw new _error_js__WEBPACK_IMPORTED_MODULE_0__.SentryError(`Invalid Sentry Dsn: Invalid port ${port}`);\n  }\n\n  return true;\n}\n\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nfunction makeDsn(from) {\n  const components = typeof from === 'string' ? dsnFromString(from) : dsnFromComponents(from);\n  validateDsn(components);\n  return components;\n}\n\n\n//# sourceMappingURL=dsn.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZHNuLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUM7O0FBRXpDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5REFBeUQ7QUFDbkU7QUFDQSxPQUFPLFNBQVMsS0FBSyxVQUFVLEVBQUUsMkJBQTJCLEtBQUssT0FBTztBQUN4RSxRQUFRLEtBQUssRUFBRSxXQUFXLEtBQUssT0FBTyxHQUFHLFVBQVUsS0FBSyxVQUFVLEVBQUUsVUFBVTtBQUM5RTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxjQUFjLGtEQUFXLHdCQUF3QixJQUFJO0FBQ3JEOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkIsbUVBQW1FO0FBQ2hHOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsVUFBVSw0QkFBNEI7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrREFBVyx3QkFBd0IsV0FBVztBQUM5RDtBQUNBLEdBQUc7O0FBRUg7QUFDQSxjQUFjLGtEQUFXLDBDQUEwQyxVQUFVO0FBQzdFOztBQUVBO0FBQ0EsY0FBYyxrREFBVyx5Q0FBeUMsU0FBUztBQUMzRTs7QUFFQTtBQUNBLGNBQWMsa0RBQVcscUNBQXFDLEtBQUs7QUFDbkU7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRStDO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9kc24uanM/NGQ2NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTZW50cnlFcnJvciB9IGZyb20gJy4vZXJyb3IuanMnO1xuXG4vKiogUmVndWxhciBleHByZXNzaW9uIHVzZWQgdG8gcGFyc2UgYSBEc24uICovXG5jb25zdCBEU05fUkVHRVggPSAvXig/OihcXHcrKTopXFwvXFwvKD86KFxcdyspKD86OihcXHcrKT8pP0ApKFtcXHcuLV0rKSg/OjooXFxkKykpP1xcLyguKykvO1xuXG5mdW5jdGlvbiBpc1ZhbGlkUHJvdG9jb2wocHJvdG9jb2wpIHtcbiAgcmV0dXJuIHByb3RvY29sID09PSAnaHR0cCcgfHwgcHJvdG9jb2wgPT09ICdodHRwcyc7XG59XG5cbi8qKlxuICogUmVuZGVycyB0aGUgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIHRoaXMgRHNuLlxuICpcbiAqIEJ5IGRlZmF1bHQsIHRoaXMgd2lsbCByZW5kZXIgdGhlIHB1YmxpYyByZXByZXNlbnRhdGlvbiB3aXRob3V0IHRoZSBwYXNzd29yZFxuICogY29tcG9uZW50LiBUbyBnZXQgdGhlIGRlcHJlY2F0ZWQgcHJpdmF0ZSByZXByZXNlbnRhdGlvbiwgc2V0IGB3aXRoUGFzc3dvcmRgXG4gKiB0byB0cnVlLlxuICpcbiAqIEBwYXJhbSB3aXRoUGFzc3dvcmQgV2hlbiBzZXQgdG8gdHJ1ZSwgdGhlIHBhc3N3b3JkIHdpbGwgYmUgaW5jbHVkZWQuXG4gKi9cbmZ1bmN0aW9uIGRzblRvU3RyaW5nKGRzbiwgd2l0aFBhc3N3b3JkID0gZmFsc2UpIHtcbiAgY29uc3QgeyBob3N0LCBwYXRoLCBwYXNzLCBwb3J0LCBwcm9qZWN0SWQsIHByb3RvY29sLCBwdWJsaWNLZXkgfSA9IGRzbjtcbiAgcmV0dXJuIChcbiAgICBgJHtwcm90b2NvbH06Ly8ke3B1YmxpY0tleX0ke3dpdGhQYXNzd29yZCAmJiBwYXNzID8gYDoke3Bhc3N9YCA6ICcnfWAgK1xuICAgIGBAJHtob3N0fSR7cG9ydCA/IGA6JHtwb3J0fWAgOiAnJ30vJHtwYXRoID8gYCR7cGF0aH0vYCA6IHBhdGh9JHtwcm9qZWN0SWR9YFxuICApO1xufVxuXG4vKipcbiAqIFBhcnNlcyBhIERzbiBmcm9tIGEgZ2l2ZW4gc3RyaW5nLlxuICpcbiAqIEBwYXJhbSBzdHIgQSBEc24gYXMgc3RyaW5nXG4gKiBAcmV0dXJucyBEc24gYXMgRHNuQ29tcG9uZW50c1xuICovXG5mdW5jdGlvbiBkc25Gcm9tU3RyaW5nKHN0cikge1xuICBjb25zdCBtYXRjaCA9IERTTl9SRUdFWC5leGVjKHN0cik7XG5cbiAgaWYgKCFtYXRjaCkge1xuICAgIHRocm93IG5ldyBTZW50cnlFcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiAke3N0cn1gKTtcbiAgfVxuXG4gIGNvbnN0IFtwcm90b2NvbCwgcHVibGljS2V5LCBwYXNzID0gJycsIGhvc3QsIHBvcnQgPSAnJywgbGFzdFBhdGhdID0gbWF0Y2guc2xpY2UoMSk7XG4gIGxldCBwYXRoID0gJyc7XG4gIGxldCBwcm9qZWN0SWQgPSBsYXN0UGF0aDtcblxuICBjb25zdCBzcGxpdCA9IHByb2plY3RJZC5zcGxpdCgnLycpO1xuICBpZiAoc3BsaXQubGVuZ3RoID4gMSkge1xuICAgIHBhdGggPSBzcGxpdC5zbGljZSgwLCAtMSkuam9pbignLycpO1xuICAgIHByb2plY3RJZCA9IHNwbGl0LnBvcCgpIDtcbiAgfVxuXG4gIGlmIChwcm9qZWN0SWQpIHtcbiAgICBjb25zdCBwcm9qZWN0TWF0Y2ggPSBwcm9qZWN0SWQubWF0Y2goL15cXGQrLyk7XG4gICAgaWYgKHByb2plY3RNYXRjaCkge1xuICAgICAgcHJvamVjdElkID0gcHJvamVjdE1hdGNoWzBdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkc25Gcm9tQ29tcG9uZW50cyh7IGhvc3QsIHBhc3MsIHBhdGgsIHByb2plY3RJZCwgcG9ydCwgcHJvdG9jb2w6IHByb3RvY29sICwgcHVibGljS2V5IH0pO1xufVxuXG5mdW5jdGlvbiBkc25Gcm9tQ29tcG9uZW50cyhjb21wb25lbnRzKSB7XG4gIHJldHVybiB7XG4gICAgcHJvdG9jb2w6IGNvbXBvbmVudHMucHJvdG9jb2wsXG4gICAgcHVibGljS2V5OiBjb21wb25lbnRzLnB1YmxpY0tleSB8fCAnJyxcbiAgICBwYXNzOiBjb21wb25lbnRzLnBhc3MgfHwgJycsXG4gICAgaG9zdDogY29tcG9uZW50cy5ob3N0LFxuICAgIHBvcnQ6IGNvbXBvbmVudHMucG9ydCB8fCAnJyxcbiAgICBwYXRoOiBjb21wb25lbnRzLnBhdGggfHwgJycsXG4gICAgcHJvamVjdElkOiBjb21wb25lbnRzLnByb2plY3RJZCxcbiAgfTtcbn1cblxuZnVuY3Rpb24gdmFsaWRhdGVEc24oZHNuKSB7XG4gIGlmICghKHR5cGVvZiBfX1NFTlRSWV9ERUJVR19fID09PSAndW5kZWZpbmVkJyB8fCBfX1NFTlRSWV9ERUJVR19fKSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IHsgcG9ydCwgcHJvamVjdElkLCBwcm90b2NvbCB9ID0gZHNuO1xuXG4gIGNvbnN0IHJlcXVpcmVkQ29tcG9uZW50cyA9IFsncHJvdG9jb2wnLCAncHVibGljS2V5JywgJ2hvc3QnLCAncHJvamVjdElkJ107XG4gIHJlcXVpcmVkQ29tcG9uZW50cy5mb3JFYWNoKGNvbXBvbmVudCA9PiB7XG4gICAgaWYgKCFkc25bY29tcG9uZW50XSkge1xuICAgICAgdGhyb3cgbmV3IFNlbnRyeUVycm9yKGBJbnZhbGlkIFNlbnRyeSBEc246ICR7Y29tcG9uZW50fSBtaXNzaW5nYCk7XG4gICAgfVxuICB9KTtcblxuICBpZiAoIXByb2plY3RJZC5tYXRjaCgvXlxcZCskLykpIHtcbiAgICB0aHJvdyBuZXcgU2VudHJ5RXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwcm9qZWN0SWQgJHtwcm9qZWN0SWR9YCk7XG4gIH1cblxuICBpZiAoIWlzVmFsaWRQcm90b2NvbChwcm90b2NvbCkpIHtcbiAgICB0aHJvdyBuZXcgU2VudHJ5RXJyb3IoYEludmFsaWQgU2VudHJ5IERzbjogSW52YWxpZCBwcm90b2NvbCAke3Byb3RvY29sfWApO1xuICB9XG5cbiAgaWYgKHBvcnQgJiYgaXNOYU4ocGFyc2VJbnQocG9ydCwgMTApKSkge1xuICAgIHRocm93IG5ldyBTZW50cnlFcnJvcihgSW52YWxpZCBTZW50cnkgRHNuOiBJbnZhbGlkIHBvcnQgJHtwb3J0fWApO1xuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbi8qKiBUaGUgU2VudHJ5IERzbiwgaWRlbnRpZnlpbmcgYSBTZW50cnkgaW5zdGFuY2UgYW5kIHByb2plY3QuICovXG5mdW5jdGlvbiBtYWtlRHNuKGZyb20pIHtcbiAgY29uc3QgY29tcG9uZW50cyA9IHR5cGVvZiBmcm9tID09PSAnc3RyaW5nJyA/IGRzbkZyb21TdHJpbmcoZnJvbSkgOiBkc25Gcm9tQ29tcG9uZW50cyhmcm9tKTtcbiAgdmFsaWRhdGVEc24oY29tcG9uZW50cyk7XG4gIHJldHVybiBjb21wb25lbnRzO1xufVxuXG5leHBvcnQgeyBkc25Gcm9tU3RyaW5nLCBkc25Ub1N0cmluZywgbWFrZURzbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZHNuLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/dsn.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/env.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/env.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getSDKSource\": function() { return /* binding */ getSDKSource; },\n/* harmony export */   \"isBrowserBundle\": function() { return /* binding */ isBrowserBundle; }\n/* harmony export */ });\n/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\n\n//# sourceMappingURL=env.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZW52LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV5QztBQUN6QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZW52LmpzP2I5MjUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIFRoaXMgbW9kdWxlIGV4aXN0cyBmb3Igb3B0aW1pemF0aW9ucyBpbiB0aGUgYnVpbGQgcHJvY2VzcyB0aHJvdWdoIHJvbGx1cCBhbmQgdGVyc2VyLiAgV2UgZGVmaW5lIHNvbWUgZ2xvYmFsXG4gKiBjb25zdGFudHMsIHdoaWNoIGNhbiBiZSBvdmVycmlkZGVuIGR1cmluZyBidWlsZC4gQnkgZ3VhcmRpbmcgY2VydGFpbiBwaWVjZXMgb2YgY29kZSB3aXRoIGZ1bmN0aW9ucyB0aGF0IHJldHVybiB0aGVzZVxuICogY29uc3RhbnRzLCB3ZSBjYW4gY29udHJvbCB3aGV0aGVyIG9yIG5vdCB0aGV5IGFwcGVhciBpbiB0aGUgZmluYWwgYnVuZGxlLiAoQW55IGNvZGUgZ3VhcmRlZCBieSBhIGZhbHNlIGNvbmRpdGlvbiB3aWxsXG4gKiBuZXZlciBydW4sIGFuZCB3aWxsIGhlbmNlIGJlIGRyb3BwZWQgZHVyaW5nIHRyZWVzaGFraW5nLikgVGhlIHR3byBwcmltYXJ5IHVzZXMgZm9yIHRoaXMgYXJlIHN0cmlwcGluZyBvdXQgY2FsbHMgdG9cbiAqIGBsb2dnZXJgIGFuZCBwcmV2ZW50aW5nIG5vZGUtcmVsYXRlZCBjb2RlIGZyb20gYXBwZWFyaW5nIGluIGJyb3dzZXIgYnVuZGxlcy5cbiAqXG4gKiBBdHRlbnRpb246XG4gKiBUaGlzIGZpbGUgc2hvdWxkIG5vdCBiZSB1c2VkIHRvIGRlZmluZSBjb25zdGFudHMvZmxhZ3MgdGhhdCBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCBmb3IgdHJlZS1zaGFraW5nIGNvbmR1Y3RlZCBieVxuICogdXNlcnMuIFRoZXNlIGZsYWdzIHNob3VsZCBsaXZlIGluIHRoZWlyIHJlc3BlY3RpdmUgcGFja2FnZXMsIGFzIHdlIGlkZW50aWZpZWQgdXNlciB0b29saW5nIChzcGVjaWZpY2FsbHkgd2VicGFjaylcbiAqIGhhdmluZyBpc3N1ZXMgdHJlZS1zaGFraW5nIHRoZXNlIGNvbnN0YW50cyBhY3Jvc3MgcGFja2FnZSBib3VuZGFyaWVzLlxuICogQW4gZXhhbXBsZSBmb3IgdGhpcyBpcyB0aGUgX19TRU5UUllfREVCVUdfXyBjb25zdGFudC4gSXQgaXMgZGVjbGFyZWQgaW4gZWFjaCBwYWNrYWdlIGluZGl2aWR1YWxseSBiZWNhdXNlIHdlIHdhbnRcbiAqIHVzZXJzIHRvIGJlIGFibGUgdG8gc2hha2UgYXdheSBleHByZXNzaW9ucyB0aGF0IGl0IGd1YXJkcy5cbiAqL1xuXG4vKipcbiAqIEZpZ3VyZXMgb3V0IGlmIHdlJ3JlIGJ1aWxkaW5nIGEgYnJvd3NlciBidW5kbGUuXG4gKlxuICogQHJldHVybnMgdHJ1ZSBpZiB0aGlzIGlzIGEgYnJvd3NlciBidW5kbGUgYnVpbGQuXG4gKi9cbmZ1bmN0aW9uIGlzQnJvd3NlckJ1bmRsZSgpIHtcbiAgcmV0dXJuIHR5cGVvZiBfX1NFTlRSWV9CUk9XU0VSX0JVTkRMRV9fICE9PSAndW5kZWZpbmVkJyAmJiAhIV9fU0VOVFJZX0JST1dTRVJfQlVORExFX187XG59XG5cbi8qKlxuICogR2V0IHNvdXJjZSBvZiBTREsuXG4gKi9cbmZ1bmN0aW9uIGdldFNES1NvdXJjZSgpIHtcbiAgLy8gQHRzLWlnbm9yZSBcIm5wbVwiIGlzIGluamVjdGVkIGJ5IHJvbGx1cCBkdXJpbmcgYnVpbGQgcHJvY2Vzc1xuICByZXR1cm4gXCJucG1cIjtcbn1cblxuZXhwb3J0IHsgZ2V0U0RLU291cmNlLCBpc0Jyb3dzZXJCdW5kbGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVudi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/env.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/envelope.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/envelope.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addItemToEnvelope\": function() { return /* binding */ addItemToEnvelope; },\n/* harmony export */   \"createAttachmentEnvelopeItem\": function() { return /* binding */ createAttachmentEnvelopeItem; },\n/* harmony export */   \"createEnvelope\": function() { return /* binding */ createEnvelope; },\n/* harmony export */   \"createEventEnvelopeHeaders\": function() { return /* binding */ createEventEnvelopeHeaders; },\n/* harmony export */   \"envelopeContainsItemType\": function() { return /* binding */ envelopeContainsItemType; },\n/* harmony export */   \"envelopeItemTypeToDataCategory\": function() { return /* binding */ envelopeItemTypeToDataCategory; },\n/* harmony export */   \"forEachEnvelopeItem\": function() { return /* binding */ forEachEnvelopeItem; },\n/* harmony export */   \"getSdkMetadataForEnvelopeHeader\": function() { return /* binding */ getSdkMetadataForEnvelopeHeader; },\n/* harmony export */   \"parseEnvelope\": function() { return /* binding */ parseEnvelope; },\n/* harmony export */   \"serializeEnvelope\": function() { return /* binding */ serializeEnvelope; }\n/* harmony export */ });\n/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dsn.js */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n\n\n\n\n/**\n * Creates an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction createEnvelope(headers, items = []) {\n  return [headers, items] ;\n}\n\n/**\n * Add an item to an envelope.\n * Make sure to always explicitly provide the generic to this function\n * so that the envelope types resolve correctly.\n */\nfunction addItemToEnvelope(envelope, newItem) {\n  const [headers, items] = envelope;\n  return [headers, [...items, newItem]] ;\n}\n\n/**\n * Convenience function to loop through the items and item types of an envelope.\n * (This function was mostly created because working with envelope types is painful at the moment)\n *\n * If the callback returns true, the rest of the items will be skipped.\n */\nfunction forEachEnvelopeItem(\n  envelope,\n  callback,\n) {\n  const envelopeItems = envelope[1];\n\n  for (const envelopeItem of envelopeItems) {\n    const envelopeItemType = envelopeItem[0].type;\n    const result = callback(envelopeItem, envelopeItemType);\n\n    if (result) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the envelope contains any of the given envelope item types\n */\nfunction envelopeContainsItemType(envelope, types) {\n  return forEachEnvelopeItem(envelope, (_, type) => types.includes(type));\n}\n\n/**\n * Encode a string to UTF8.\n */\nfunction encodeUTF8(input, textEncoder) {\n  const utf8 = textEncoder || new TextEncoder();\n  return utf8.encode(input);\n}\n\n/**\n * Serializes an envelope.\n */\nfunction serializeEnvelope(envelope, textEncoder) {\n  const [envHeaders, items] = envelope;\n\n  // Initially we construct our envelope as a string and only convert to binary chunks if we encounter binary data\n  let parts = JSON.stringify(envHeaders);\n\n  function append(next) {\n    if (typeof parts === 'string') {\n      parts = typeof next === 'string' ? parts + next : [encodeUTF8(parts, textEncoder), next];\n    } else {\n      parts.push(typeof next === 'string' ? encodeUTF8(next, textEncoder) : next);\n    }\n  }\n\n  for (const item of items) {\n    const [itemHeaders, payload] = item;\n\n    append(`\\n${JSON.stringify(itemHeaders)}\\n`);\n\n    if (typeof payload === 'string' || payload instanceof Uint8Array) {\n      append(payload);\n    } else {\n      let stringifiedPayload;\n      try {\n        stringifiedPayload = JSON.stringify(payload);\n      } catch (e) {\n        // In case, despite all our efforts to keep `payload` circular-dependency-free, `JSON.strinify()` still\n        // fails, we try again after normalizing it again with infinite normalization depth. This of course has a\n        // performance impact but in this case a performance hit is better than throwing.\n        stringifiedPayload = JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_0__.normalize)(payload));\n      }\n      append(stringifiedPayload);\n    }\n  }\n\n  return typeof parts === 'string' ? parts : concatBuffers(parts);\n}\n\nfunction concatBuffers(buffers) {\n  const totalLength = buffers.reduce((acc, buf) => acc + buf.length, 0);\n\n  const merged = new Uint8Array(totalLength);\n  let offset = 0;\n  for (const buffer of buffers) {\n    merged.set(buffer, offset);\n    offset += buffer.length;\n  }\n\n  return merged;\n}\n\n/**\n * Parses an envelope\n */\nfunction parseEnvelope(\n  env,\n  textEncoder,\n  textDecoder,\n) {\n  let buffer = typeof env === 'string' ? textEncoder.encode(env) : env;\n\n  function readBinary(length) {\n    const bin = buffer.subarray(0, length);\n    // Replace the buffer with the remaining data excluding trailing newline\n    buffer = buffer.subarray(length + 1);\n    return bin;\n  }\n\n  function readJson() {\n    let i = buffer.indexOf(0xa);\n    // If we couldn't find a newline, we must have found the end of the buffer\n    if (i < 0) {\n      i = buffer.length;\n    }\n\n    return JSON.parse(textDecoder.decode(readBinary(i))) ;\n  }\n\n  const envelopeHeader = readJson();\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const items = [];\n\n  while (buffer.length) {\n    const itemHeader = readJson();\n    const binaryLength = typeof itemHeader.length === 'number' ? itemHeader.length : undefined;\n\n    items.push([itemHeader, binaryLength ? readBinary(binaryLength) : readJson()]);\n  }\n\n  return [envelopeHeader, items];\n}\n\n/**\n * Creates attachment envelope items\n */\nfunction createAttachmentEnvelopeItem(\n  attachment,\n  textEncoder,\n) {\n  const buffer = typeof attachment.data === 'string' ? encodeUTF8(attachment.data, textEncoder) : attachment.data;\n\n  return [\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({\n      type: 'attachment',\n      length: buffer.length,\n      filename: attachment.filename,\n      content_type: attachment.contentType,\n      attachment_type: attachment.attachmentType,\n    }),\n    buffer,\n  ];\n}\n\nconst ITEM_TYPE_TO_DATA_CATEGORY_MAP = {\n  session: 'session',\n  sessions: 'session',\n  attachment: 'attachment',\n  transaction: 'transaction',\n  event: 'error',\n  client_report: 'internal',\n  user_report: 'default',\n  profile: 'profile',\n  replay_event: 'replay',\n  replay_recording: 'replay',\n};\n\n/**\n * Maps the type of an envelope item to a data category.\n */\nfunction envelopeItemTypeToDataCategory(type) {\n  return ITEM_TYPE_TO_DATA_CATEGORY_MAP[type];\n}\n\n/** Extracts the minimal SDK info from from the metadata or an events */\nfunction getSdkMetadataForEnvelopeHeader(metadataOrEvent) {\n  if (!metadataOrEvent || !metadataOrEvent.sdk) {\n    return;\n  }\n  const { name, version } = metadataOrEvent.sdk;\n  return { name, version };\n}\n\n/**\n * Creates event envelope headers, based on event, sdk info and tunnel\n * Note: This function was extracted from the core package to make it available in Replay\n */\nfunction createEventEnvelopeHeaders(\n  event,\n  sdkInfo,\n  tunnel,\n  dsn,\n) {\n  const dynamicSamplingContext = event.sdkProcessingMetadata && event.sdkProcessingMetadata.dynamicSamplingContext;\n\n  return {\n    event_id: event.event_id ,\n    sent_at: new Date().toISOString(),\n    ...(sdkInfo && { sdk: sdkInfo }),\n    ...(!!tunnel && { dsn: (0,_dsn_js__WEBPACK_IMPORTED_MODULE_2__.dsnToString)(dsn) }),\n    ...(event.type === 'transaction' &&\n      dynamicSamplingContext && {\n        trace: (0,_object_js__WEBPACK_IMPORTED_MODULE_1__.dropUndefinedKeys)({ ...dynamicSamplingContext }),\n      }),\n  };\n}\n\n\n//# sourceMappingURL=envelope.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/envelope.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/error.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/error.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SentryError\": function() { return /* binding */ SentryError; }\n/* harmony export */ });\n/** An error emitted by Sentry SDKs and related utilities. */\nclass SentryError extends Error {\n  /** Display name of this error instance. */\n\n   constructor( message, logLevel = 'warn') {\n    super(message);this.message = message;\n    this.name = new.target.prototype.constructor.name;\n    // This sets the prototype to be `Error`, not `SentryError`. It's unclear why we do this, but commenting this line\n    // out causes various (seemingly totally unrelated) playwright tests consistently time out. FYI, this makes\n    // instances of `SentryError` fail `obj instanceof SentryError` checks.\n    Object.setPrototypeOf(this, new.target.prototype);\n    this.logLevel = logLevel;\n  }\n}\n\n\n//# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZXJyb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vZXJyb3IuanM/Y2IxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQW4gZXJyb3IgZW1pdHRlZCBieSBTZW50cnkgU0RLcyBhbmQgcmVsYXRlZCB1dGlsaXRpZXMuICovXG5jbGFzcyBTZW50cnlFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgLyoqIERpc3BsYXkgbmFtZSBvZiB0aGlzIGVycm9yIGluc3RhbmNlLiAqL1xuXG4gICBjb25zdHJ1Y3RvciggbWVzc2FnZSwgbG9nTGV2ZWwgPSAnd2FybicpIHtcbiAgICBzdXBlcihtZXNzYWdlKTt0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgIHRoaXMubmFtZSA9IG5ldy50YXJnZXQucHJvdG90eXBlLmNvbnN0cnVjdG9yLm5hbWU7XG4gICAgLy8gVGhpcyBzZXRzIHRoZSBwcm90b3R5cGUgdG8gYmUgYEVycm9yYCwgbm90IGBTZW50cnlFcnJvcmAuIEl0J3MgdW5jbGVhciB3aHkgd2UgZG8gdGhpcywgYnV0IGNvbW1lbnRpbmcgdGhpcyBsaW5lXG4gICAgLy8gb3V0IGNhdXNlcyB2YXJpb3VzIChzZWVtaW5nbHkgdG90YWxseSB1bnJlbGF0ZWQpIHBsYXl3cmlnaHQgdGVzdHMgY29uc2lzdGVudGx5IHRpbWUgb3V0LiBGWUksIHRoaXMgbWFrZXNcbiAgICAvLyBpbnN0YW5jZXMgb2YgYFNlbnRyeUVycm9yYCBmYWlsIGBvYmogaW5zdGFuY2VvZiBTZW50cnlFcnJvcmAgY2hlY2tzLlxuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBuZXcudGFyZ2V0LnByb3RvdHlwZSk7XG4gICAgdGhpcy5sb2dMZXZlbCA9IGxvZ0xldmVsO1xuICB9XG59XG5cbmV4cG9ydCB7IFNlbnRyeUVycm9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/error.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/index.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BAGGAGE_HEADER_NAME\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_26__.BAGGAGE_HEADER_NAME; },\n/* harmony export */   \"CONSOLE_LEVELS\": function() { return /* reexport safe */ _logger_js__WEBPACK_IMPORTED_MODULE_6__.CONSOLE_LEVELS; },\n/* harmony export */   \"DEFAULT_RETRY_AFTER\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_25__.DEFAULT_RETRY_AFTER; },\n/* harmony export */   \"GLOBAL_OBJ\": function() { return /* reexport safe */ _worldwide_js__WEBPACK_IMPORTED_MODULE_3__.GLOBAL_OBJ; },\n/* harmony export */   \"MAX_BAGGAGE_STRING_LENGTH\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_26__.MAX_BAGGAGE_STRING_LENGTH; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_26__.SENTRY_BAGGAGE_KEY_PREFIX; },\n/* harmony export */   \"SENTRY_BAGGAGE_KEY_PREFIX_REGEX\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_26__.SENTRY_BAGGAGE_KEY_PREFIX_REGEX; },\n/* harmony export */   \"SentryError\": function() { return /* reexport safe */ _error_js__WEBPACK_IMPORTED_MODULE_2__.SentryError; },\n/* harmony export */   \"SyncPromise\": function() { return /* reexport safe */ _syncpromise_js__WEBPACK_IMPORTED_MODULE_19__.SyncPromise; },\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* reexport safe */ _tracing_js__WEBPACK_IMPORTED_MODULE_21__.TRACEPARENT_REGEXP; },\n/* harmony export */   \"_browserPerformanceTimeOriginMode\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_20__._browserPerformanceTimeOriginMode; },\n/* harmony export */   \"addContextToFrame\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.addContextToFrame; },\n/* harmony export */   \"addExceptionMechanism\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.addExceptionMechanism; },\n/* harmony export */   \"addExceptionTypeValue\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.addExceptionTypeValue; },\n/* harmony export */   \"addInstrumentationHandler\": function() { return /* reexport safe */ _instrument_js__WEBPACK_IMPORTED_MODULE_4__.addInstrumentationHandler; },\n/* harmony export */   \"addItemToEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.addItemToEnvelope; },\n/* harmony export */   \"addNonEnumerableProperty\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.addNonEnumerableProperty; },\n/* harmony export */   \"addRequestDataToEvent\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_14__.addRequestDataToEvent; },\n/* harmony export */   \"addRequestDataToTransaction\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_14__.addRequestDataToTransaction; },\n/* harmony export */   \"arrayify\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.arrayify; },\n/* harmony export */   \"baggageHeaderToDynamicSamplingContext\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_26__.baggageHeaderToDynamicSamplingContext; },\n/* harmony export */   \"basename\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_12__.basename; },\n/* harmony export */   \"browserPerformanceTimeOrigin\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_20__.browserPerformanceTimeOrigin; },\n/* harmony export */   \"checkOrSetAlreadyCaught\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.checkOrSetAlreadyCaught; },\n/* harmony export */   \"consoleSandbox\": function() { return /* reexport safe */ _logger_js__WEBPACK_IMPORTED_MODULE_6__.consoleSandbox; },\n/* harmony export */   \"convertToPlainObject\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.convertToPlainObject; },\n/* harmony export */   \"createAttachmentEnvelopeItem\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.createAttachmentEnvelopeItem; },\n/* harmony export */   \"createClientReportEnvelope\": function() { return /* reexport safe */ _clientreport_js__WEBPACK_IMPORTED_MODULE_24__.createClientReportEnvelope; },\n/* harmony export */   \"createEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.createEnvelope; },\n/* harmony export */   \"createEventEnvelopeHeaders\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.createEventEnvelopeHeaders; },\n/* harmony export */   \"createStackParser\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_16__.createStackParser; },\n/* harmony export */   \"dateTimestampInSeconds\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_20__.dateTimestampInSeconds; },\n/* harmony export */   \"dirname\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_12__.dirname; },\n/* harmony export */   \"disabledUntil\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_25__.disabledUntil; },\n/* harmony export */   \"dropUndefinedKeys\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.dropUndefinedKeys; },\n/* harmony export */   \"dsnFromString\": function() { return /* reexport safe */ _dsn_js__WEBPACK_IMPORTED_MODULE_1__.dsnFromString; },\n/* harmony export */   \"dsnToString\": function() { return /* reexport safe */ _dsn_js__WEBPACK_IMPORTED_MODULE_1__.dsnToString; },\n/* harmony export */   \"dynamicRequire\": function() { return /* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_9__.dynamicRequire; },\n/* harmony export */   \"dynamicSamplingContextToSentryBaggageHeader\": function() { return /* reexport safe */ _baggage_js__WEBPACK_IMPORTED_MODULE_26__.dynamicSamplingContextToSentryBaggageHeader; },\n/* harmony export */   \"envelopeContainsItemType\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.envelopeContainsItemType; },\n/* harmony export */   \"envelopeItemTypeToDataCategory\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.envelopeItemTypeToDataCategory; },\n/* harmony export */   \"escapeStringForRegex\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_17__.escapeStringForRegex; },\n/* harmony export */   \"extractExceptionKeysForMessage\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.extractExceptionKeysForMessage; },\n/* harmony export */   \"extractPathForTransaction\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_14__.extractPathForTransaction; },\n/* harmony export */   \"extractRequestData\": function() { return /* reexport safe */ _requestdata_js__WEBPACK_IMPORTED_MODULE_14__.extractRequestData; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* reexport safe */ _tracing_js__WEBPACK_IMPORTED_MODULE_21__.extractTraceparentData; },\n/* harmony export */   \"fill\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.fill; },\n/* harmony export */   \"forEachEnvelopeItem\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.forEachEnvelopeItem; },\n/* harmony export */   \"getDomElement\": function() { return /* reexport safe */ _browser_js__WEBPACK_IMPORTED_MODULE_0__.getDomElement; },\n/* harmony export */   \"getEventDescription\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.getEventDescription; },\n/* harmony export */   \"getFunctionName\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_16__.getFunctionName; },\n/* harmony export */   \"getGlobalObject\": function() { return /* reexport safe */ _worldwide_js__WEBPACK_IMPORTED_MODULE_3__.getGlobalObject; },\n/* harmony export */   \"getGlobalSingleton\": function() { return /* reexport safe */ _worldwide_js__WEBPACK_IMPORTED_MODULE_3__.getGlobalSingleton; },\n/* harmony export */   \"getLocationHref\": function() { return /* reexport safe */ _browser_js__WEBPACK_IMPORTED_MODULE_0__.getLocationHref; },\n/* harmony export */   \"getNumberOfUrlSegments\": function() { return /* reexport safe */ _url_js__WEBPACK_IMPORTED_MODULE_27__.getNumberOfUrlSegments; },\n/* harmony export */   \"getOriginalFunction\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.getOriginalFunction; },\n/* harmony export */   \"getSDKSource\": function() { return /* reexport safe */ _env_js__WEBPACK_IMPORTED_MODULE_22__.getSDKSource; },\n/* harmony export */   \"getSdkMetadataForEnvelopeHeader\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.getSdkMetadataForEnvelopeHeader; },\n/* harmony export */   \"htmlTreeAsString\": function() { return /* reexport safe */ _browser_js__WEBPACK_IMPORTED_MODULE_0__.htmlTreeAsString; },\n/* harmony export */   \"isAbsolute\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_12__.isAbsolute; },\n/* harmony export */   \"isBrowserBundle\": function() { return /* reexport safe */ _env_js__WEBPACK_IMPORTED_MODULE_22__.isBrowserBundle; },\n/* harmony export */   \"isDOMError\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isDOMError; },\n/* harmony export */   \"isDOMException\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isDOMException; },\n/* harmony export */   \"isElement\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isElement; },\n/* harmony export */   \"isError\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isError; },\n/* harmony export */   \"isErrorEvent\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isErrorEvent; },\n/* harmony export */   \"isEvent\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isEvent; },\n/* harmony export */   \"isInstanceOf\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isInstanceOf; },\n/* harmony export */   \"isMatchingPattern\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_17__.isMatchingPattern; },\n/* harmony export */   \"isNaN\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isNaN; },\n/* harmony export */   \"isNativeFetch\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.isNativeFetch; },\n/* harmony export */   \"isNodeEnv\": function() { return /* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_9__.isNodeEnv; },\n/* harmony export */   \"isPlainObject\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isPlainObject; },\n/* harmony export */   \"isPrimitive\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isPrimitive; },\n/* harmony export */   \"isRateLimited\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_25__.isRateLimited; },\n/* harmony export */   \"isRegExp\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isRegExp; },\n/* harmony export */   \"isString\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isString; },\n/* harmony export */   \"isSyntheticEvent\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isSyntheticEvent; },\n/* harmony export */   \"isThenable\": function() { return /* reexport safe */ _is_js__WEBPACK_IMPORTED_MODULE_5__.isThenable; },\n/* harmony export */   \"join\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_12__.join; },\n/* harmony export */   \"loadModule\": function() { return /* reexport safe */ _node_js__WEBPACK_IMPORTED_MODULE_9__.loadModule; },\n/* harmony export */   \"logger\": function() { return /* reexport safe */ _logger_js__WEBPACK_IMPORTED_MODULE_6__.logger; },\n/* harmony export */   \"makeDsn\": function() { return /* reexport safe */ _dsn_js__WEBPACK_IMPORTED_MODULE_1__.makeDsn; },\n/* harmony export */   \"makePromiseBuffer\": function() { return /* reexport safe */ _promisebuffer_js__WEBPACK_IMPORTED_MODULE_13__.makePromiseBuffer; },\n/* harmony export */   \"markFunctionWrapped\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.markFunctionWrapped; },\n/* harmony export */   \"memoBuilder\": function() { return /* reexport safe */ _memo_js__WEBPACK_IMPORTED_MODULE_7__.memoBuilder; },\n/* harmony export */   \"nodeStackLineParser\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_16__.nodeStackLineParser; },\n/* harmony export */   \"normalize\": function() { return /* reexport safe */ _normalize_js__WEBPACK_IMPORTED_MODULE_10__.normalize; },\n/* harmony export */   \"normalizePath\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_12__.normalizePath; },\n/* harmony export */   \"normalizeToSize\": function() { return /* reexport safe */ _normalize_js__WEBPACK_IMPORTED_MODULE_10__.normalizeToSize; },\n/* harmony export */   \"objectify\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.objectify; },\n/* harmony export */   \"parseEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.parseEnvelope; },\n/* harmony export */   \"parseRetryAfterHeader\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_25__.parseRetryAfterHeader; },\n/* harmony export */   \"parseSemver\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.parseSemver; },\n/* harmony export */   \"parseUrl\": function() { return /* reexport safe */ _url_js__WEBPACK_IMPORTED_MODULE_27__.parseUrl; },\n/* harmony export */   \"rejectedSyncPromise\": function() { return /* reexport safe */ _syncpromise_js__WEBPACK_IMPORTED_MODULE_19__.rejectedSyncPromise; },\n/* harmony export */   \"relative\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_12__.relative; },\n/* harmony export */   \"resolve\": function() { return /* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_12__.resolve; },\n/* harmony export */   \"resolvedSyncPromise\": function() { return /* reexport safe */ _syncpromise_js__WEBPACK_IMPORTED_MODULE_19__.resolvedSyncPromise; },\n/* harmony export */   \"safeJoin\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_17__.safeJoin; },\n/* harmony export */   \"serializeEnvelope\": function() { return /* reexport safe */ _envelope_js__WEBPACK_IMPORTED_MODULE_23__.serializeEnvelope; },\n/* harmony export */   \"severityFromString\": function() { return /* reexport safe */ _severity_js__WEBPACK_IMPORTED_MODULE_15__.severityFromString; },\n/* harmony export */   \"severityLevelFromString\": function() { return /* reexport safe */ _severity_js__WEBPACK_IMPORTED_MODULE_15__.severityLevelFromString; },\n/* harmony export */   \"snipLine\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_17__.snipLine; },\n/* harmony export */   \"stackParserFromStackParserOptions\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_16__.stackParserFromStackParserOptions; },\n/* harmony export */   \"stringMatchesSomePattern\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_17__.stringMatchesSomePattern; },\n/* harmony export */   \"stripSentryFramesAndReverse\": function() { return /* reexport safe */ _stacktrace_js__WEBPACK_IMPORTED_MODULE_16__.stripSentryFramesAndReverse; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* reexport safe */ _url_js__WEBPACK_IMPORTED_MODULE_27__.stripUrlQueryAndFragment; },\n/* harmony export */   \"supportsDOMError\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsDOMError; },\n/* harmony export */   \"supportsDOMException\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsDOMException; },\n/* harmony export */   \"supportsErrorEvent\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsErrorEvent; },\n/* harmony export */   \"supportsFetch\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsFetch; },\n/* harmony export */   \"supportsHistory\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsHistory; },\n/* harmony export */   \"supportsNativeFetch\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsNativeFetch; },\n/* harmony export */   \"supportsReferrerPolicy\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsReferrerPolicy; },\n/* harmony export */   \"supportsReportingObserver\": function() { return /* reexport safe */ _supports_js__WEBPACK_IMPORTED_MODULE_18__.supportsReportingObserver; },\n/* harmony export */   \"timestampInSeconds\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_20__.timestampInSeconds; },\n/* harmony export */   \"timestampWithMs\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_20__.timestampWithMs; },\n/* harmony export */   \"truncate\": function() { return /* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_17__.truncate; },\n/* harmony export */   \"updateRateLimits\": function() { return /* reexport safe */ _ratelimit_js__WEBPACK_IMPORTED_MODULE_25__.updateRateLimits; },\n/* harmony export */   \"urlEncode\": function() { return /* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_11__.urlEncode; },\n/* harmony export */   \"usingPerformanceAPI\": function() { return /* reexport safe */ _time_js__WEBPACK_IMPORTED_MODULE_20__.usingPerformanceAPI; },\n/* harmony export */   \"uuid4\": function() { return /* reexport safe */ _misc_js__WEBPACK_IMPORTED_MODULE_8__.uuid4; },\n/* harmony export */   \"validSeverityLevels\": function() { return /* reexport safe */ _severity_js__WEBPACK_IMPORTED_MODULE_15__.validSeverityLevels; },\n/* harmony export */   \"walk\": function() { return /* reexport safe */ _normalize_js__WEBPACK_IMPORTED_MODULE_10__.walk; }\n/* harmony export */ });\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./browser.js */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _dsn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dsn.js */ \"./node_modules/@sentry/utils/esm/dsn.js\");\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./instrument.js */ \"./node_modules/@sentry/utils/esm/instrument.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./memo.js */ \"./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _misc_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./misc.js */ \"./node_modules/@sentry/utils/esm/misc.js\");\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./node.js */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./path.js */ \"./node_modules/@sentry/utils/esm/path.js\");\n/* harmony import */ var _promisebuffer_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./promisebuffer.js */ \"./node_modules/@sentry/utils/esm/promisebuffer.js\");\n/* harmony import */ var _requestdata_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./requestdata.js */ \"./node_modules/@sentry/utils/esm/requestdata.js\");\n/* harmony import */ var _severity_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./severity.js */ \"./node_modules/@sentry/utils/esm/severity.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./supports.js */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./syncpromise.js */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n/* harmony import */ var _time_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./time.js */ \"./node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _tracing_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./tracing.js */ \"./node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./env.js */ \"./node_modules/@sentry/utils/esm/env.js\");\n/* harmony import */ var _envelope_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./envelope.js */ \"./node_modules/@sentry/utils/esm/envelope.js\");\n/* harmony import */ var _clientreport_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./clientreport.js */ \"./node_modules/@sentry/utils/esm/clientreport.js\");\n/* harmony import */ var _ratelimit_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./ratelimit.js */ \"./node_modules/@sentry/utils/esm/ratelimit.js\");\n/* harmony import */ var _baggage_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./baggage.js */ \"./node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./url.js */ \"./node_modules/@sentry/utils/esm/url.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQWdGO0FBQ2pCO0FBQ3RCO0FBQ3dDO0FBQ3JCO0FBQ3VJO0FBQzlIO0FBQzdCO0FBQ2dJO0FBQ3RHO0FBQ0E7QUFDb0k7QUFDcEc7QUFDM0M7QUFDOEU7QUFDcEM7QUFDeUQ7QUFDNUI7QUFDb0Y7QUFDekg7QUFDcUY7QUFDcEc7QUFDakI7QUFDcU47QUFDL007QUFDNkQ7QUFDa0c7QUFDeEk7QUFDdEYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2luZGV4LmpzP2FhMmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZ2V0RG9tRWxlbWVudCwgZ2V0TG9jYXRpb25IcmVmLCBodG1sVHJlZUFzU3RyaW5nIH0gZnJvbSAnLi9icm93c2VyLmpzJztcbmV4cG9ydCB7IGRzbkZyb21TdHJpbmcsIGRzblRvU3RyaW5nLCBtYWtlRHNuIH0gZnJvbSAnLi9kc24uanMnO1xuZXhwb3J0IHsgU2VudHJ5RXJyb3IgfSBmcm9tICcuL2Vycm9yLmpzJztcbmV4cG9ydCB7IEdMT0JBTF9PQkosIGdldEdsb2JhbE9iamVjdCwgZ2V0R2xvYmFsU2luZ2xldG9uIH0gZnJvbSAnLi93b3JsZHdpZGUuanMnO1xuZXhwb3J0IHsgYWRkSW5zdHJ1bWVudGF0aW9uSGFuZGxlciB9IGZyb20gJy4vaW5zdHJ1bWVudC5qcyc7XG5leHBvcnQgeyBpc0RPTUVycm9yLCBpc0RPTUV4Y2VwdGlvbiwgaXNFbGVtZW50LCBpc0Vycm9yLCBpc0Vycm9yRXZlbnQsIGlzRXZlbnQsIGlzSW5zdGFuY2VPZiwgaXNOYU4sIGlzUGxhaW5PYmplY3QsIGlzUHJpbWl0aXZlLCBpc1JlZ0V4cCwgaXNTdHJpbmcsIGlzU3ludGhldGljRXZlbnQsIGlzVGhlbmFibGUgfSBmcm9tICcuL2lzLmpzJztcbmV4cG9ydCB7IENPTlNPTEVfTEVWRUxTLCBjb25zb2xlU2FuZGJveCwgbG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXIuanMnO1xuZXhwb3J0IHsgbWVtb0J1aWxkZXIgfSBmcm9tICcuL21lbW8uanMnO1xuZXhwb3J0IHsgYWRkQ29udGV4dFRvRnJhbWUsIGFkZEV4Y2VwdGlvbk1lY2hhbmlzbSwgYWRkRXhjZXB0aW9uVHlwZVZhbHVlLCBhcnJheWlmeSwgY2hlY2tPclNldEFscmVhZHlDYXVnaHQsIGdldEV2ZW50RGVzY3JpcHRpb24sIHBhcnNlU2VtdmVyLCB1dWlkNCB9IGZyb20gJy4vbWlzYy5qcyc7XG5leHBvcnQgeyBkeW5hbWljUmVxdWlyZSwgaXNOb2RlRW52LCBsb2FkTW9kdWxlIH0gZnJvbSAnLi9ub2RlLmpzJztcbmV4cG9ydCB7IG5vcm1hbGl6ZSwgbm9ybWFsaXplVG9TaXplLCB3YWxrIH0gZnJvbSAnLi9ub3JtYWxpemUuanMnO1xuZXhwb3J0IHsgYWRkTm9uRW51bWVyYWJsZVByb3BlcnR5LCBjb252ZXJ0VG9QbGFpbk9iamVjdCwgZHJvcFVuZGVmaW5lZEtleXMsIGV4dHJhY3RFeGNlcHRpb25LZXlzRm9yTWVzc2FnZSwgZmlsbCwgZ2V0T3JpZ2luYWxGdW5jdGlvbiwgbWFya0Z1bmN0aW9uV3JhcHBlZCwgb2JqZWN0aWZ5LCB1cmxFbmNvZGUgfSBmcm9tICcuL29iamVjdC5qcyc7XG5leHBvcnQgeyBiYXNlbmFtZSwgZGlybmFtZSwgaXNBYnNvbHV0ZSwgam9pbiwgbm9ybWFsaXplUGF0aCwgcmVsYXRpdmUsIHJlc29sdmUgfSBmcm9tICcuL3BhdGguanMnO1xuZXhwb3J0IHsgbWFrZVByb21pc2VCdWZmZXIgfSBmcm9tICcuL3Byb21pc2VidWZmZXIuanMnO1xuZXhwb3J0IHsgYWRkUmVxdWVzdERhdGFUb0V2ZW50LCBhZGRSZXF1ZXN0RGF0YVRvVHJhbnNhY3Rpb24sIGV4dHJhY3RQYXRoRm9yVHJhbnNhY3Rpb24sIGV4dHJhY3RSZXF1ZXN0RGF0YSB9IGZyb20gJy4vcmVxdWVzdGRhdGEuanMnO1xuZXhwb3J0IHsgc2V2ZXJpdHlGcm9tU3RyaW5nLCBzZXZlcml0eUxldmVsRnJvbVN0cmluZywgdmFsaWRTZXZlcml0eUxldmVscyB9IGZyb20gJy4vc2V2ZXJpdHkuanMnO1xuZXhwb3J0IHsgY3JlYXRlU3RhY2tQYXJzZXIsIGdldEZ1bmN0aW9uTmFtZSwgbm9kZVN0YWNrTGluZVBhcnNlciwgc3RhY2tQYXJzZXJGcm9tU3RhY2tQYXJzZXJPcHRpb25zLCBzdHJpcFNlbnRyeUZyYW1lc0FuZFJldmVyc2UgfSBmcm9tICcuL3N0YWNrdHJhY2UuanMnO1xuZXhwb3J0IHsgZXNjYXBlU3RyaW5nRm9yUmVnZXgsIGlzTWF0Y2hpbmdQYXR0ZXJuLCBzYWZlSm9pbiwgc25pcExpbmUsIHN0cmluZ01hdGNoZXNTb21lUGF0dGVybiwgdHJ1bmNhdGUgfSBmcm9tICcuL3N0cmluZy5qcyc7XG5leHBvcnQgeyBpc05hdGl2ZUZldGNoLCBzdXBwb3J0c0RPTUVycm9yLCBzdXBwb3J0c0RPTUV4Y2VwdGlvbiwgc3VwcG9ydHNFcnJvckV2ZW50LCBzdXBwb3J0c0ZldGNoLCBzdXBwb3J0c0hpc3RvcnksIHN1cHBvcnRzTmF0aXZlRmV0Y2gsIHN1cHBvcnRzUmVmZXJyZXJQb2xpY3ksIHN1cHBvcnRzUmVwb3J0aW5nT2JzZXJ2ZXIgfSBmcm9tICcuL3N1cHBvcnRzLmpzJztcbmV4cG9ydCB7IFN5bmNQcm9taXNlLCByZWplY3RlZFN5bmNQcm9taXNlLCByZXNvbHZlZFN5bmNQcm9taXNlIH0gZnJvbSAnLi9zeW5jcHJvbWlzZS5qcyc7XG5leHBvcnQgeyBfYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbk1vZGUsIGJyb3dzZXJQZXJmb3JtYW5jZVRpbWVPcmlnaW4sIGRhdGVUaW1lc3RhbXBJblNlY29uZHMsIHRpbWVzdGFtcEluU2Vjb25kcywgdGltZXN0YW1wV2l0aE1zLCB1c2luZ1BlcmZvcm1hbmNlQVBJIH0gZnJvbSAnLi90aW1lLmpzJztcbmV4cG9ydCB7IFRSQUNFUEFSRU5UX1JFR0VYUCwgZXh0cmFjdFRyYWNlcGFyZW50RGF0YSB9IGZyb20gJy4vdHJhY2luZy5qcyc7XG5leHBvcnQgeyBnZXRTREtTb3VyY2UsIGlzQnJvd3NlckJ1bmRsZSB9IGZyb20gJy4vZW52LmpzJztcbmV4cG9ydCB7IGFkZEl0ZW1Ub0VudmVsb3BlLCBjcmVhdGVBdHRhY2htZW50RW52ZWxvcGVJdGVtLCBjcmVhdGVFbnZlbG9wZSwgY3JlYXRlRXZlbnRFbnZlbG9wZUhlYWRlcnMsIGVudmVsb3BlQ29udGFpbnNJdGVtVHlwZSwgZW52ZWxvcGVJdGVtVHlwZVRvRGF0YUNhdGVnb3J5LCBmb3JFYWNoRW52ZWxvcGVJdGVtLCBnZXRTZGtNZXRhZGF0YUZvckVudmVsb3BlSGVhZGVyLCBwYXJzZUVudmVsb3BlLCBzZXJpYWxpemVFbnZlbG9wZSB9IGZyb20gJy4vZW52ZWxvcGUuanMnO1xuZXhwb3J0IHsgY3JlYXRlQ2xpZW50UmVwb3J0RW52ZWxvcGUgfSBmcm9tICcuL2NsaWVudHJlcG9ydC5qcyc7XG5leHBvcnQgeyBERUZBVUxUX1JFVFJZX0FGVEVSLCBkaXNhYmxlZFVudGlsLCBpc1JhdGVMaW1pdGVkLCBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIsIHVwZGF0ZVJhdGVMaW1pdHMgfSBmcm9tICcuL3JhdGVsaW1pdC5qcyc7XG5leHBvcnQgeyBCQUdHQUdFX0hFQURFUl9OQU1FLCBNQVhfQkFHR0FHRV9TVFJJTkdfTEVOR1RILCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYLCBTRU5UUllfQkFHR0FHRV9LRVlfUFJFRklYX1JFR0VYLCBiYWdnYWdlSGVhZGVyVG9EeW5hbWljU2FtcGxpbmdDb250ZXh0LCBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyIH0gZnJvbSAnLi9iYWdnYWdlLmpzJztcbmV4cG9ydCB7IGdldE51bWJlck9mVXJsU2VnbWVudHMsIHBhcnNlVXJsLCBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQgfSBmcm9tICcuL3VybC5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/index.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/instrument.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/instrument.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addInstrumentationHandler\": function() { return /* binding */ addInstrumentationHandler; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _supports_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./supports.js */ \"./node_modules/@sentry/utils/esm/supports.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  _logger_js__WEBPACK_IMPORTED_MODULE_1__.CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_4__.supportsNativeFetch)()) {\n    return;\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in WINDOW && (0,_is_js__WEBPACK_IMPORTED_MODULE_5__.isInstanceOf)(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in WINDOW && (0,_is_js__WEBPACK_IMPORTED_MODULE_5__.isInstanceOf)(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const xhr = this;\n      const url = args[1];\n      const xhrInfo = (xhr.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: (0,_is_js__WEBPACK_IMPORTED_MODULE_5__.isString)(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if ((0,_is_js__WEBPACK_IMPORTED_MODULE_5__.isString)(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        xhr.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = function () {\n        if (xhr.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = xhr.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr,\n          });\n        }\n      };\n\n      if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n        (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(xhr, 'onreadystatechange', function (original) {\n          return function (...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(xhr, readyStateArgs);\n          };\n        });\n      } else {\n        xhr.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(xhr, args);\n    };\n  });\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!(0,_supports_js__WEBPACK_IMPORTED_MODULE_4__.supportsHistory)()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'pushState', historyReplacementFunction);\n  (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_3__.fill)(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\n\n//# sourceMappingURL=instrument.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/instrument.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/is.js":
/*!**********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/is.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isDOMError\": function() { return /* binding */ isDOMError; },\n/* harmony export */   \"isDOMException\": function() { return /* binding */ isDOMException; },\n/* harmony export */   \"isElement\": function() { return /* binding */ isElement; },\n/* harmony export */   \"isError\": function() { return /* binding */ isError; },\n/* harmony export */   \"isErrorEvent\": function() { return /* binding */ isErrorEvent; },\n/* harmony export */   \"isEvent\": function() { return /* binding */ isEvent; },\n/* harmony export */   \"isInstanceOf\": function() { return /* binding */ isInstanceOf; },\n/* harmony export */   \"isNaN\": function() { return /* binding */ isNaN; },\n/* harmony export */   \"isPlainObject\": function() { return /* binding */ isPlainObject; },\n/* harmony export */   \"isPrimitive\": function() { return /* binding */ isPrimitive; },\n/* harmony export */   \"isRegExp\": function() { return /* binding */ isRegExp; },\n/* harmony export */   \"isString\": function() { return /* binding */ isString; },\n/* harmony export */   \"isSyntheticEvent\": function() { return /* binding */ isSyntheticEvent; },\n/* harmony export */   \"isThenable\": function() { return /* binding */ isThenable; }\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\n\n//# sourceMappingURL=is.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vaXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGNBQWM7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsVUFBVTtBQUMzRDs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxtQkFBbUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksaUJBQWlCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHFCQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxlQUFlO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLGtCQUFrQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxvQkFBb0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksY0FBYztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxnQkFBZ0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksZUFBZTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLHVCQUF1QjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsSUFBSSxZQUFZO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJLG1CQUFtQjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFb0w7QUFDcEwiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL2lzLmpzP2U1NGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC91bmJvdW5kLW1ldGhvZFxuY29uc3Qgb2JqZWN0VG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBvbmUgb2YgYSBmZXcgRXJyb3Igb3IgRXJyb3ItbGlrZVxuICoge0BsaW5rIGlzRXJyb3J9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc0Vycm9yKHdhdCkge1xuICBzd2l0Y2ggKG9iamVjdFRvU3RyaW5nLmNhbGwod2F0KSkge1xuICAgIGNhc2UgJ1tvYmplY3QgRXJyb3JdJzpcbiAgICBjYXNlICdbb2JqZWN0IEV4Y2VwdGlvbl0nOlxuICAgIGNhc2UgJ1tvYmplY3QgRE9NRXhjZXB0aW9uXSc6XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIGlzSW5zdGFuY2VPZih3YXQsIEVycm9yKTtcbiAgfVxufVxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSBpcyBhbiBpbnN0YW5jZSBvZiB0aGUgZ2l2ZW4gYnVpbHQtaW4gY2xhc3MuXG4gKlxuICogQHBhcmFtIHdhdCBUaGUgdmFsdWUgdG8gYmUgY2hlY2tlZFxuICogQHBhcmFtIGNsYXNzTmFtZVxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc0J1aWx0aW4od2F0LCBjbGFzc05hbWUpIHtcbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nLmNhbGwod2F0KSA9PT0gYFtvYmplY3QgJHtjbGFzc05hbWV9XWA7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIEVycm9yRXZlbnRcbiAqIHtAbGluayBpc0Vycm9yRXZlbnR9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc0Vycm9yRXZlbnQod2F0KSB7XG4gIHJldHVybiBpc0J1aWx0aW4od2F0LCAnRXJyb3JFdmVudCcpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBET01FcnJvclxuICoge0BsaW5rIGlzRE9NRXJyb3J9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc0RPTUVycm9yKHdhdCkge1xuICByZXR1cm4gaXNCdWlsdGluKHdhdCwgJ0RPTUVycm9yJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIERPTUV4Y2VwdGlvblxuICoge0BsaW5rIGlzRE9NRXhjZXB0aW9ufS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNET01FeGNlcHRpb24od2F0KSB7XG4gIHJldHVybiBpc0J1aWx0aW4od2F0LCAnRE9NRXhjZXB0aW9uJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIGEgc3RyaW5nXG4gKiB7QGxpbmsgaXNTdHJpbmd9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh3YXQpIHtcbiAgcmV0dXJuIGlzQnVpbHRpbih3YXQsICdTdHJpbmcnKTtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSBpcyBhIHByaW1pdGl2ZSAodW5kZWZpbmVkLCBudWxsLCBudW1iZXIsIGJvb2xlYW4sIHN0cmluZywgYmlnaW50LCBzeW1ib2wpXG4gKiB7QGxpbmsgaXNQcmltaXRpdmV9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc1ByaW1pdGl2ZSh3YXQpIHtcbiAgcmV0dXJuIHdhdCA9PT0gbnVsbCB8fCAodHlwZW9mIHdhdCAhPT0gJ29iamVjdCcgJiYgdHlwZW9mIHdhdCAhPT0gJ2Z1bmN0aW9uJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIGFuIG9iamVjdCBsaXRlcmFsXG4gKiB7QGxpbmsgaXNQbGFpbk9iamVjdH0uXG4gKlxuICogQHBhcmFtIHdhdCBBIHZhbHVlIHRvIGJlIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gcmVwcmVzZW50aW5nIHRoZSByZXN1bHQuXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qod2F0KSB7XG4gIHJldHVybiBpc0J1aWx0aW4od2F0LCAnT2JqZWN0Jyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIGFuIEV2ZW50IGluc3RhbmNlXG4gKiB7QGxpbmsgaXNFdmVudH0uXG4gKlxuICogQHBhcmFtIHdhdCBBIHZhbHVlIHRvIGJlIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gcmVwcmVzZW50aW5nIHRoZSByZXN1bHQuXG4gKi9cbmZ1bmN0aW9uIGlzRXZlbnQod2F0KSB7XG4gIHJldHVybiB0eXBlb2YgRXZlbnQgIT09ICd1bmRlZmluZWQnICYmIGlzSW5zdGFuY2VPZih3YXQsIEV2ZW50KTtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSdzIHR5cGUgaXMgYW4gRWxlbWVudCBpbnN0YW5jZVxuICoge0BsaW5rIGlzRWxlbWVudH0uXG4gKlxuICogQHBhcmFtIHdhdCBBIHZhbHVlIHRvIGJlIGNoZWNrZWQuXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gcmVwcmVzZW50aW5nIHRoZSByZXN1bHQuXG4gKi9cbmZ1bmN0aW9uIGlzRWxlbWVudCh3YXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBFbGVtZW50ICE9PSAndW5kZWZpbmVkJyAmJiBpc0luc3RhbmNlT2Yod2F0LCBFbGVtZW50KTtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSdzIHR5cGUgaXMgYW4gcmVnZXhwXG4gKiB7QGxpbmsgaXNSZWdFeHB9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc1JlZ0V4cCh3YXQpIHtcbiAgcmV0dXJuIGlzQnVpbHRpbih3YXQsICdSZWdFeHAnKTtcbn1cblxuLyoqXG4gKiBDaGVja3Mgd2hldGhlciBnaXZlbiB2YWx1ZSBoYXMgYSB0aGVuIGZ1bmN0aW9uLlxuICogQHBhcmFtIHdhdCBBIHZhbHVlIHRvIGJlIGNoZWNrZWQuXG4gKi9cbmZ1bmN0aW9uIGlzVGhlbmFibGUod2F0KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgcmV0dXJuIEJvb2xlYW4od2F0ICYmIHdhdC50aGVuICYmIHR5cGVvZiB3YXQudGhlbiA9PT0gJ2Z1bmN0aW9uJyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUncyB0eXBlIGlzIGEgU3ludGhldGljRXZlbnRcbiAqIHtAbGluayBpc1N5bnRoZXRpY0V2ZW50fS5cbiAqXG4gKiBAcGFyYW0gd2F0IEEgdmFsdWUgdG8gYmUgY2hlY2tlZC5cbiAqIEByZXR1cm5zIEEgYm9vbGVhbiByZXByZXNlbnRpbmcgdGhlIHJlc3VsdC5cbiAqL1xuZnVuY3Rpb24gaXNTeW50aGV0aWNFdmVudCh3YXQpIHtcbiAgcmV0dXJuIGlzUGxhaW5PYmplY3Qod2F0KSAmJiAnbmF0aXZlRXZlbnQnIGluIHdhdCAmJiAncHJldmVudERlZmF1bHQnIGluIHdhdCAmJiAnc3RvcFByb3BhZ2F0aW9uJyBpbiB3YXQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgZ2l2ZW4gdmFsdWUgaXMgTmFOXG4gKiB7QGxpbmsgaXNOYU59LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHJldHVybnMgQSBib29sZWFuIHJlcHJlc2VudGluZyB0aGUgcmVzdWx0LlxuICovXG5mdW5jdGlvbiBpc05hTih3YXQpIHtcbiAgcmV0dXJuIHR5cGVvZiB3YXQgPT09ICdudW1iZXInICYmIHdhdCAhPT0gd2F0O1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGdpdmVuIHZhbHVlJ3MgdHlwZSBpcyBhbiBpbnN0YW5jZSBvZiBwcm92aWRlZCBjb25zdHJ1Y3Rvci5cbiAqIHtAbGluayBpc0luc3RhbmNlT2Z9LlxuICpcbiAqIEBwYXJhbSB3YXQgQSB2YWx1ZSB0byBiZSBjaGVja2VkLlxuICogQHBhcmFtIGJhc2UgQSBjb25zdHJ1Y3RvciB0byBiZSB1c2VkIGluIGEgY2hlY2suXG4gKiBAcmV0dXJucyBBIGJvb2xlYW4gcmVwcmVzZW50aW5nIHRoZSByZXN1bHQuXG4gKi9cbmZ1bmN0aW9uIGlzSW5zdGFuY2VPZih3YXQsIGJhc2UpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gd2F0IGluc3RhbmNlb2YgYmFzZTtcbiAgfSBjYXRjaCAoX2UpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxuZXhwb3J0IHsgaXNET01FcnJvciwgaXNET01FeGNlcHRpb24sIGlzRWxlbWVudCwgaXNFcnJvciwgaXNFcnJvckV2ZW50LCBpc0V2ZW50LCBpc0luc3RhbmNlT2YsIGlzTmFOLCBpc1BsYWluT2JqZWN0LCBpc1ByaW1pdGl2ZSwgaXNSZWdFeHAsIGlzU3RyaW5nLCBpc1N5bnRoZXRpY0V2ZW50LCBpc1RoZW5hYmxlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/is.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/logger.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/logger.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONSOLE_LEVELS\": function() { return /* binding */ CONSOLE_LEVELS; },\n/* harmony export */   \"consoleSandbox\": function() { return /* binding */ consoleSandbox; },\n/* harmony export */   \"logger\": function() { return /* binding */ logger; }\n/* harmony export */ });\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!(\"console\" in _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\n\n//# sourceMappingURL=logger.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbG9nZ2VyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0U7O0FBRWhFO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGtFQUF1QjtBQUMvQjtBQUNBOztBQUVBLDBCQUEwQiw2REFBa0I7QUFDNUM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZEQUFrQixVQUFVLE9BQU8sR0FBRyxLQUFLO0FBQ3ZELFdBQVc7QUFDWDtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpRUFBa0I7QUFDN0IsRUFBRTtBQUNGO0FBQ0E7O0FBRWtEO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9sb2dnZXIuanM/OGNjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRHbG9iYWxTaW5nbGV0b24sIEdMT0JBTF9PQkogfSBmcm9tICcuL3dvcmxkd2lkZS5qcyc7XG5cbi8qKiBQcmVmaXggZm9yIGxvZ2dpbmcgc3RyaW5ncyAqL1xuY29uc3QgUFJFRklYID0gJ1NlbnRyeSBMb2dnZXIgJztcblxuY29uc3QgQ09OU09MRV9MRVZFTFMgPSBbJ2RlYnVnJywgJ2luZm8nLCAnd2FybicsICdlcnJvcicsICdsb2cnLCAnYXNzZXJ0JywgJ3RyYWNlJ10gO1xuXG4vKipcbiAqIFRlbXBvcmFyaWx5IGRpc2FibGUgc2VudHJ5IGNvbnNvbGUgaW5zdHJ1bWVudGF0aW9ucy5cbiAqXG4gKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biBhZ2FpbnN0IHRoZSBvcmlnaW5hbCBgY29uc29sZWAgbWVzc2FnZXNcbiAqIEByZXR1cm5zIFRoZSByZXN1bHRzIG9mIHRoZSBjYWxsYmFja1xuICovXG5mdW5jdGlvbiBjb25zb2xlU2FuZGJveChjYWxsYmFjaykge1xuICBpZiAoISgnY29uc29sZScgaW4gR0xPQkFMX09CSikpIHtcbiAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgfVxuXG4gIGNvbnN0IG9yaWdpbmFsQ29uc29sZSA9IEdMT0JBTF9PQkouY29uc29sZSA7XG4gIGNvbnN0IHdyYXBwZWRMZXZlbHMgPSB7fTtcblxuICAvLyBSZXN0b3JlIGFsbCB3cmFwcGVkIGNvbnNvbGUgbWV0aG9kc1xuICBDT05TT0xFX0xFVkVMUy5mb3JFYWNoKGxldmVsID0+IHtcbiAgICAvLyBUT0RPKHY3KTogUmVtb3ZlIHRoaXMgY2hlY2sgYXMgaXQncyBvbmx5IG5lZWRlZCBmb3IgTm9kZSA2XG4gICAgY29uc3Qgb3JpZ2luYWxXcmFwcGVkRnVuYyA9XG4gICAgICBvcmlnaW5hbENvbnNvbGVbbGV2ZWxdICYmIChvcmlnaW5hbENvbnNvbGVbbGV2ZWxdICkuX19zZW50cnlfb3JpZ2luYWxfXztcbiAgICBpZiAobGV2ZWwgaW4gb3JpZ2luYWxDb25zb2xlICYmIG9yaWdpbmFsV3JhcHBlZEZ1bmMpIHtcbiAgICAgIHdyYXBwZWRMZXZlbHNbbGV2ZWxdID0gb3JpZ2luYWxDb25zb2xlW2xldmVsXSA7XG4gICAgICBvcmlnaW5hbENvbnNvbGVbbGV2ZWxdID0gb3JpZ2luYWxXcmFwcGVkRnVuYyA7XG4gICAgfVxuICB9KTtcblxuICB0cnkge1xuICAgIHJldHVybiBjYWxsYmFjaygpO1xuICB9IGZpbmFsbHkge1xuICAgIC8vIFJldmVydCByZXN0b3JhdGlvbiB0byB3cmFwcGVkIHN0YXRlXG4gICAgT2JqZWN0LmtleXMod3JhcHBlZExldmVscykuZm9yRWFjaChsZXZlbCA9PiB7XG4gICAgICBvcmlnaW5hbENvbnNvbGVbbGV2ZWxdID0gd3JhcHBlZExldmVsc1tsZXZlbCBdO1xuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1ha2VMb2dnZXIoKSB7XG4gIGxldCBlbmFibGVkID0gZmFsc2U7XG4gIGNvbnN0IGxvZ2dlciA9IHtcbiAgICBlbmFibGU6ICgpID0+IHtcbiAgICAgIGVuYWJsZWQgPSB0cnVlO1xuICAgIH0sXG4gICAgZGlzYWJsZTogKCkgPT4ge1xuICAgICAgZW5hYmxlZCA9IGZhbHNlO1xuICAgIH0sXG4gIH07XG5cbiAgaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgICBDT05TT0xFX0xFVkVMUy5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICguLi5hcmdzKSA9PiB7XG4gICAgICAgIGlmIChlbmFibGVkKSB7XG4gICAgICAgICAgY29uc29sZVNhbmRib3goKCkgPT4ge1xuICAgICAgICAgICAgR0xPQkFMX09CSi5jb25zb2xlW25hbWVdKGAke1BSRUZJWH1bJHtuYW1lfV06YCwgLi4uYXJncyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgQ09OU09MRV9MRVZFTFMuZm9yRWFjaChuYW1lID0+IHtcbiAgICAgIGxvZ2dlcltuYW1lXSA9ICgpID0+IHVuZGVmaW5lZDtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBsb2dnZXIgO1xufVxuXG4vLyBFbnN1cmUgd2Ugb25seSBoYXZlIGEgc2luZ2xlIGxvZ2dlciBpbnN0YW5jZSwgZXZlbiBpZiBtdWx0aXBsZSB2ZXJzaW9ucyBvZiBAc2VudHJ5L3V0aWxzIGFyZSBiZWluZyB1c2VkXG5sZXQgbG9nZ2VyO1xuaWYgKCh0eXBlb2YgX19TRU5UUllfREVCVUdfXyA9PT0gJ3VuZGVmaW5lZCcgfHwgX19TRU5UUllfREVCVUdfXykpIHtcbiAgbG9nZ2VyID0gZ2V0R2xvYmFsU2luZ2xldG9uKCdsb2dnZXInLCBtYWtlTG9nZ2VyKTtcbn0gZWxzZSB7XG4gIGxvZ2dlciA9IG1ha2VMb2dnZXIoKTtcbn1cblxuZXhwb3J0IHsgQ09OU09MRV9MRVZFTFMsIGNvbnNvbGVTYW5kYm94LCBsb2dnZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/logger.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/memo.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/memo.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"memoBuilder\": function() { return /* binding */ memoBuilder; }\n/* harmony export */ });\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Helper to decycle json objects\n */\nfunction memoBuilder() {\n  const hasWeakSet = typeof WeakSet === 'function';\n  const inner = hasWeakSet ? new WeakSet() : [];\n  function memoize(obj) {\n    if (hasWeakSet) {\n      if (inner.has(obj)) {\n        return true;\n      }\n      inner.add(obj);\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < inner.length; i++) {\n      const value = inner[i];\n      if (value === obj) {\n        return true;\n      }\n    }\n    inner.push(obj);\n    return false;\n  }\n\n  function unmemoize(obj) {\n    if (hasWeakSet) {\n      inner.delete(obj);\n    } else {\n      for (let i = 0; i < inner.length; i++) {\n        if (inner[i] === obj) {\n          inner.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  return [memoize, unmemoize];\n}\n\n\n//# sourceMappingURL=memo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWVtby5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isa0JBQWtCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWVtby5qcz9jZGQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2VzcyAqL1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuXG4vKipcbiAqIEhlbHBlciB0byBkZWN5Y2xlIGpzb24gb2JqZWN0c1xuICovXG5mdW5jdGlvbiBtZW1vQnVpbGRlcigpIHtcbiAgY29uc3QgaGFzV2Vha1NldCA9IHR5cGVvZiBXZWFrU2V0ID09PSAnZnVuY3Rpb24nO1xuICBjb25zdCBpbm5lciA9IGhhc1dlYWtTZXQgPyBuZXcgV2Vha1NldCgpIDogW107XG4gIGZ1bmN0aW9uIG1lbW9pemUob2JqKSB7XG4gICAgaWYgKGhhc1dlYWtTZXQpIHtcbiAgICAgIGlmIChpbm5lci5oYXMob2JqKSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIGlubmVyLmFkZChvYmopO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L3ByZWZlci1mb3Itb2ZcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlubmVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IGlubmVyW2ldO1xuICAgICAgaWYgKHZhbHVlID09PSBvYmopIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gICAgfVxuICAgIGlubmVyLnB1c2gob2JqKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmdW5jdGlvbiB1bm1lbW9pemUob2JqKSB7XG4gICAgaWYgKGhhc1dlYWtTZXQpIHtcbiAgICAgIGlubmVyLmRlbGV0ZShvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlubmVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChpbm5lcltpXSA9PT0gb2JqKSB7XG4gICAgICAgICAgaW5uZXIuc3BsaWNlKGksIDEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHJldHVybiBbbWVtb2l6ZSwgdW5tZW1vaXplXTtcbn1cblxuZXhwb3J0IHsgbWVtb0J1aWxkZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lbW8uanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/memo.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/misc.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/misc.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addContextToFrame\": function() { return /* binding */ addContextToFrame; },\n/* harmony export */   \"addExceptionMechanism\": function() { return /* binding */ addExceptionMechanism; },\n/* harmony export */   \"addExceptionTypeValue\": function() { return /* binding */ addExceptionTypeValue; },\n/* harmony export */   \"arrayify\": function() { return /* binding */ arrayify; },\n/* harmony export */   \"checkOrSetAlreadyCaught\": function() { return /* binding */ checkOrSetAlreadyCaught; },\n/* harmony export */   \"getEventDescription\": function() { return /* binding */ getEventDescription; },\n/* harmony export */   \"parseSemver\": function() { return /* binding */ parseSemver; },\n/* harmony export */   \"uuid4\": function() { return /* binding */ uuid4; }\n/* harmony export */ });\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = _worldwide_js__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n\n  frame.context_line = (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => (0,_string_js__WEBPACK_IMPORTED_MODULE_1__.snipLine)(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\n\n//# sourceMappingURL=misc.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWlzYy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUF1RDtBQUNoQjtBQUNLOztBQUU1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHFEQUFVO0FBQ3hCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw2QkFBNkI7QUFDdkM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixvQkFBb0IsSUFBSSxxQkFBcUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSw2QkFBNkI7QUFDN0I7QUFDQSwrQkFBK0I7O0FBRS9CO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1CQUFtQixvREFBUTs7QUFFM0IsdUJBQXVCLG9EQUFROztBQUUvQjtBQUNBO0FBQ0EsbUJBQW1CLG9EQUFRO0FBQzNCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx5QkFBeUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUksb0VBQXdCO0FBQzVCLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUV1SjtBQUN2SiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbWlzYy5qcz85ODA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZE5vbkVudW1lcmFibGVQcm9wZXJ0eSB9IGZyb20gJy4vb2JqZWN0LmpzJztcbmltcG9ydCB7IHNuaXBMaW5lIH0gZnJvbSAnLi9zdHJpbmcuanMnO1xuaW1wb3J0IHsgR0xPQkFMX09CSiB9IGZyb20gJy4vd29ybGR3aWRlLmpzJztcblxuLyoqXG4gKiBVVUlENCBnZW5lcmF0b3JcbiAqXG4gKiBAcmV0dXJucyBzdHJpbmcgR2VuZXJhdGVkIFVVSUQ0LlxuICovXG5mdW5jdGlvbiB1dWlkNCgpIHtcbiAgY29uc3QgZ2JsID0gR0xPQkFMX09CSiA7XG4gIGNvbnN0IGNyeXB0byA9IGdibC5jcnlwdG8gfHwgZ2JsLm1zQ3J5cHRvO1xuXG4gIGlmIChjcnlwdG8gJiYgY3J5cHRvLnJhbmRvbVVVSUQpIHtcbiAgICByZXR1cm4gY3J5cHRvLnJhbmRvbVVVSUQoKS5yZXBsYWNlKC8tL2csICcnKTtcbiAgfVxuXG4gIGNvbnN0IGdldFJhbmRvbUJ5dGUgPVxuICAgIGNyeXB0byAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzID8gKCkgPT4gY3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDhBcnJheSgxKSlbMF0gOiAoKSA9PiBNYXRoLnJhbmRvbSgpICogMTY7XG5cbiAgLy8gaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8xMDUwMzQvaG93LXRvLWNyZWF0ZS1hLWd1aWQtdXVpZC1pbi1qYXZhc2NyaXB0LzIxMTc1MjMjMjExNzUyM1xuICAvLyBDb25jYXRlbmF0aW5nIHRoZSBmb2xsb3dpbmcgbnVtYmVycyBhcyBzdHJpbmdzIHJlc3VsdHMgaW4gJzEwMDAwMDAwMTAwMDQwMDA4MDAwMTAwMDAwMDAwMDAwJ1xuICByZXR1cm4gKChbMWU3XSApICsgMWUzICsgNGUzICsgOGUzICsgMWUxMSkucmVwbGFjZSgvWzAxOF0vZywgYyA9PlxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1iaXR3aXNlXG4gICAgKChjICkgXiAoKGdldFJhbmRvbUJ5dGUoKSAmIDE1KSA+PiAoKGMgKSAvIDQpKSkudG9TdHJpbmcoMTYpLFxuICApO1xufVxuXG5mdW5jdGlvbiBnZXRGaXJzdEV4Y2VwdGlvbihldmVudCkge1xuICByZXR1cm4gZXZlbnQuZXhjZXB0aW9uICYmIGV2ZW50LmV4Y2VwdGlvbi52YWx1ZXMgPyBldmVudC5leGNlcHRpb24udmFsdWVzWzBdIDogdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIEV4dHJhY3RzIGVpdGhlciBtZXNzYWdlIG9yIHR5cGUrdmFsdWUgZnJvbSBhbiBldmVudCB0aGF0IGNhbiBiZSB1c2VkIGZvciB1c2VyLWZhY2luZyBsb2dzXG4gKiBAcmV0dXJucyBldmVudCdzIGRlc2NyaXB0aW9uXG4gKi9cbmZ1bmN0aW9uIGdldEV2ZW50RGVzY3JpcHRpb24oZXZlbnQpIHtcbiAgY29uc3QgeyBtZXNzYWdlLCBldmVudF9pZDogZXZlbnRJZCB9ID0gZXZlbnQ7XG4gIGlmIChtZXNzYWdlKSB7XG4gICAgcmV0dXJuIG1lc3NhZ2U7XG4gIH1cblxuICBjb25zdCBmaXJzdEV4Y2VwdGlvbiA9IGdldEZpcnN0RXhjZXB0aW9uKGV2ZW50KTtcbiAgaWYgKGZpcnN0RXhjZXB0aW9uKSB7XG4gICAgaWYgKGZpcnN0RXhjZXB0aW9uLnR5cGUgJiYgZmlyc3RFeGNlcHRpb24udmFsdWUpIHtcbiAgICAgIHJldHVybiBgJHtmaXJzdEV4Y2VwdGlvbi50eXBlfTogJHtmaXJzdEV4Y2VwdGlvbi52YWx1ZX1gO1xuICAgIH1cbiAgICByZXR1cm4gZmlyc3RFeGNlcHRpb24udHlwZSB8fCBmaXJzdEV4Y2VwdGlvbi52YWx1ZSB8fCBldmVudElkIHx8ICc8dW5rbm93bj4nO1xuICB9XG4gIHJldHVybiBldmVudElkIHx8ICc8dW5rbm93bj4nO1xufVxuXG4vKipcbiAqIEFkZHMgZXhjZXB0aW9uIHZhbHVlcywgdHlwZSBhbmQgdmFsdWUgdG8gYW4gc3ludGhldGljIEV4Y2VwdGlvbi5cbiAqIEBwYXJhbSBldmVudCBUaGUgZXZlbnQgdG8gbW9kaWZ5LlxuICogQHBhcmFtIHZhbHVlIFZhbHVlIG9mIHRoZSBleGNlcHRpb24uXG4gKiBAcGFyYW0gdHlwZSBUeXBlIG9mIHRoZSBleGNlcHRpb24uXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZEV4Y2VwdGlvblR5cGVWYWx1ZShldmVudCwgdmFsdWUsIHR5cGUpIHtcbiAgY29uc3QgZXhjZXB0aW9uID0gKGV2ZW50LmV4Y2VwdGlvbiA9IGV2ZW50LmV4Y2VwdGlvbiB8fCB7fSk7XG4gIGNvbnN0IHZhbHVlcyA9IChleGNlcHRpb24udmFsdWVzID0gZXhjZXB0aW9uLnZhbHVlcyB8fCBbXSk7XG4gIGNvbnN0IGZpcnN0RXhjZXB0aW9uID0gKHZhbHVlc1swXSA9IHZhbHVlc1swXSB8fCB7fSk7XG4gIGlmICghZmlyc3RFeGNlcHRpb24udmFsdWUpIHtcbiAgICBmaXJzdEV4Y2VwdGlvbi52YWx1ZSA9IHZhbHVlIHx8ICcnO1xuICB9XG4gIGlmICghZmlyc3RFeGNlcHRpb24udHlwZSkge1xuICAgIGZpcnN0RXhjZXB0aW9uLnR5cGUgPSB0eXBlIHx8ICdFcnJvcic7XG4gIH1cbn1cblxuLyoqXG4gKiBBZGRzIGV4Y2VwdGlvbiBtZWNoYW5pc20gZGF0YSB0byBhIGdpdmVuIGV2ZW50LiBVc2VzIGRlZmF1bHRzIGlmIHRoZSBzZWNvbmQgcGFyYW1ldGVyIGlzIG5vdCBwYXNzZWQuXG4gKlxuICogQHBhcmFtIGV2ZW50IFRoZSBldmVudCB0byBtb2RpZnkuXG4gKiBAcGFyYW0gbmV3TWVjaGFuaXNtIE1lY2hhbmlzbSBkYXRhIHRvIGFkZCB0byB0aGUgZXZlbnQuXG4gKiBAaGlkZGVuXG4gKi9cbmZ1bmN0aW9uIGFkZEV4Y2VwdGlvbk1lY2hhbmlzbShldmVudCwgbmV3TWVjaGFuaXNtKSB7XG4gIGNvbnN0IGZpcnN0RXhjZXB0aW9uID0gZ2V0Rmlyc3RFeGNlcHRpb24oZXZlbnQpO1xuICBpZiAoIWZpcnN0RXhjZXB0aW9uKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgZGVmYXVsdE1lY2hhbmlzbSA9IHsgdHlwZTogJ2dlbmVyaWMnLCBoYW5kbGVkOiB0cnVlIH07XG4gIGNvbnN0IGN1cnJlbnRNZWNoYW5pc20gPSBmaXJzdEV4Y2VwdGlvbi5tZWNoYW5pc207XG4gIGZpcnN0RXhjZXB0aW9uLm1lY2hhbmlzbSA9IHsgLi4uZGVmYXVsdE1lY2hhbmlzbSwgLi4uY3VycmVudE1lY2hhbmlzbSwgLi4ubmV3TWVjaGFuaXNtIH07XG5cbiAgaWYgKG5ld01lY2hhbmlzbSAmJiAnZGF0YScgaW4gbmV3TWVjaGFuaXNtKSB7XG4gICAgY29uc3QgbWVyZ2VkRGF0YSA9IHsgLi4uKGN1cnJlbnRNZWNoYW5pc20gJiYgY3VycmVudE1lY2hhbmlzbS5kYXRhKSwgLi4ubmV3TWVjaGFuaXNtLmRhdGEgfTtcbiAgICBmaXJzdEV4Y2VwdGlvbi5tZWNoYW5pc20uZGF0YSA9IG1lcmdlZERhdGE7XG4gIH1cbn1cblxuLy8gaHR0cHM6Ly9zZW12ZXIub3JnLyNpcy10aGVyZS1hLXN1Z2dlc3RlZC1yZWd1bGFyLWV4cHJlc3Npb24tcmVnZXgtdG8tY2hlY2stYS1zZW12ZXItc3RyaW5nXG5jb25zdCBTRU1WRVJfUkVHRVhQID1cbiAgL14oMHxbMS05XVxcZCopXFwuKDB8WzEtOV1cXGQqKVxcLigwfFsxLTldXFxkKikoPzotKCg/OjB8WzEtOV1cXGQqfFxcZCpbYS16QS1aLV1bMC05YS16QS1aLV0qKSg/OlxcLig/OjB8WzEtOV1cXGQqfFxcZCpbYS16QS1aLV1bMC05YS16QS1aLV0qKSkqKSk/KD86XFwrKFswLTlhLXpBLVotXSsoPzpcXC5bMC05YS16QS1aLV0rKSopKT8kLztcblxuLyoqXG4gKiBSZXByZXNlbnRzIFNlbWFudGljIFZlcnNpb25pbmcgb2JqZWN0XG4gKi9cblxuLyoqXG4gKiBQYXJzZXMgaW5wdXQgaW50byBhIFNlbVZlciBpbnRlcmZhY2VcbiAqIEBwYXJhbSBpbnB1dCBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgYSBzZW12ZXIgdmVyc2lvblxuICovXG5mdW5jdGlvbiBwYXJzZVNlbXZlcihpbnB1dCkge1xuICBjb25zdCBtYXRjaCA9IGlucHV0Lm1hdGNoKFNFTVZFUl9SRUdFWFApIHx8IFtdO1xuICBjb25zdCBtYWpvciA9IHBhcnNlSW50KG1hdGNoWzFdLCAxMCk7XG4gIGNvbnN0IG1pbm9yID0gcGFyc2VJbnQobWF0Y2hbMl0sIDEwKTtcbiAgY29uc3QgcGF0Y2ggPSBwYXJzZUludChtYXRjaFszXSwgMTApO1xuICByZXR1cm4ge1xuICAgIGJ1aWxkbWV0YWRhdGE6IG1hdGNoWzVdLFxuICAgIG1ham9yOiBpc05hTihtYWpvcikgPyB1bmRlZmluZWQgOiBtYWpvcixcbiAgICBtaW5vcjogaXNOYU4obWlub3IpID8gdW5kZWZpbmVkIDogbWlub3IsXG4gICAgcGF0Y2g6IGlzTmFOKHBhdGNoKSA/IHVuZGVmaW5lZCA6IHBhdGNoLFxuICAgIHByZXJlbGVhc2U6IG1hdGNoWzRdLFxuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWRkcyBjb250ZXh0IChwcmUvcG9zdC9saW5lKSBsaW5lcyB0byB0aGUgcHJvdmlkZWQgZnJhbWVcbiAqXG4gKiBAcGFyYW0gbGluZXMgc3RyaW5nW10gY29udGFpbmluZyBhbGwgbGluZXNcbiAqIEBwYXJhbSBmcmFtZSBTdGFja0ZyYW1lIHRoYXQgd2lsbCBiZSBtdXRhdGVkXG4gKiBAcGFyYW0gbGluZXNPZkNvbnRleHQgbnVtYmVyIG9mIGNvbnRleHQgbGluZXMgd2Ugd2FudCB0byBhZGQgcHJlL3Bvc3RcbiAqL1xuZnVuY3Rpb24gYWRkQ29udGV4dFRvRnJhbWUobGluZXMsIGZyYW1lLCBsaW5lc09mQ29udGV4dCA9IDUpIHtcbiAgLy8gV2hlbiB0aGVyZSBpcyBubyBsaW5lIG51bWJlciBpbiB0aGUgZnJhbWUsIGF0dGFjaGluZyBjb250ZXh0IGlzIG5vbnNlbnNpY2FsIGFuZCB3aWxsIGV2ZW4gYnJlYWsgZ3JvdXBpbmdcbiAgaWYgKGZyYW1lLmxpbmVubyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgbWF4TGluZXMgPSBsaW5lcy5sZW5ndGg7XG4gIGNvbnN0IHNvdXJjZUxpbmUgPSBNYXRoLm1heChNYXRoLm1pbihtYXhMaW5lcywgZnJhbWUubGluZW5vIC0gMSksIDApO1xuXG4gIGZyYW1lLnByZV9jb250ZXh0ID0gbGluZXNcbiAgICAuc2xpY2UoTWF0aC5tYXgoMCwgc291cmNlTGluZSAtIGxpbmVzT2ZDb250ZXh0KSwgc291cmNlTGluZSlcbiAgICAubWFwKChsaW5lKSA9PiBzbmlwTGluZShsaW5lLCAwKSk7XG5cbiAgZnJhbWUuY29udGV4dF9saW5lID0gc25pcExpbmUobGluZXNbTWF0aC5taW4obWF4TGluZXMgLSAxLCBzb3VyY2VMaW5lKV0sIGZyYW1lLmNvbG5vIHx8IDApO1xuXG4gIGZyYW1lLnBvc3RfY29udGV4dCA9IGxpbmVzXG4gICAgLnNsaWNlKE1hdGgubWluKHNvdXJjZUxpbmUgKyAxLCBtYXhMaW5lcyksIHNvdXJjZUxpbmUgKyAxICsgbGluZXNPZkNvbnRleHQpXG4gICAgLm1hcCgobGluZSkgPT4gc25pcExpbmUobGluZSwgMCkpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIG9yIG5vdCB3ZSd2ZSBhbHJlYWR5IGNhcHR1cmVkIHRoZSBnaXZlbiBleGNlcHRpb24gKG5vdGU6IG5vdCBhbiBpZGVudGljYWwgZXhjZXB0aW9uIC0gdGhlIHZlcnkgb2JqZWN0XG4gKiBpbiBxdWVzdGlvbiksIGFuZCBtYXJrcyBpdCBjYXB0dXJlZCBpZiBub3QuXG4gKlxuICogVGhpcyBpcyB1c2VmdWwgYmVjYXVzZSBpdCdzIHBvc3NpYmxlIGZvciBhbiBlcnJvciB0byBnZXQgY2FwdHVyZWQgYnkgbW9yZSB0aGFuIG9uZSBtZWNoYW5pc20uIEFmdGVyIHdlIGludGVyY2VwdCBhbmRcbiAqIHJlY29yZCBhbiBlcnJvciwgd2UgcmV0aHJvdyBpdCAoYXNzdW1pbmcgd2UndmUgaW50ZXJjZXB0ZWQgaXQgYmVmb3JlIGl0J3MgcmVhY2hlZCB0aGUgdG9wLWxldmVsIGdsb2JhbCBoYW5kbGVycyksIHNvXG4gKiB0aGF0IHdlIGRvbid0IGludGVyZmVyZSB3aXRoIHdoYXRldmVyIGVmZmVjdHMgdGhlIGVycm9yIG1pZ2h0IGhhdmUgaGFkIHdlcmUgdGhlIFNESyBub3QgdGhlcmUuIEF0IHRoYXQgcG9pbnQsIGJlY2F1c2VcbiAqIHRoZSBlcnJvciBoYXMgYmVlbiByZXRocm93biwgaXQncyBwb3NzaWJsZSBmb3IgaXQgdG8gYnViYmxlIHVwIHRvIHNvbWUgb3RoZXIgY29kZSB3ZSd2ZSBpbnN0cnVtZW50ZWQuIElmIGl0J3Mgbm90XG4gKiBjYXVnaHQgYWZ0ZXIgdGhhdCwgaXQgd2lsbCBidWJibGUgYWxsIHRoZSB3YXkgdXAgdG8gdGhlIGdsb2JhbCBoYW5kbGVycyAod2hpY2ggb2YgY291cnNlIHdlIGFsc28gaW5zdHJ1bWVudCkuIFRoaXNcbiAqIGZ1bmN0aW9uIGhlbHBzIHVzIGVuc3VyZSB0aGF0IGV2ZW4gaWYgd2UgZW5jb3VudGVyIHRoZSBzYW1lIGVycm9yIG1vcmUgdGhhbiBvbmNlLCB3ZSBvbmx5IHJlY29yZCBpdCB0aGUgZmlyc3QgdGltZSB3ZVxuICogc2VlIGl0LlxuICpcbiAqIE5vdGU6IEl0IHdpbGwgaWdub3JlIHByaW1pdGl2ZXMgKGFsd2F5cyByZXR1cm4gYGZhbHNlYCBhbmQgbm90IG1hcmsgdGhlbSBhcyBzZWVuKSwgYXMgcHJvcGVydGllcyBjYW4ndCBiZSBzZXQgb25cbiAqIHRoZW0uIHtAbGluazogT2JqZWN0Lm9iamVjdGlmeX0gY2FuIGJlIHVzZWQgb24gZXhjZXB0aW9ucyB0byBjb252ZXJ0IGFueSB0aGF0IGFyZSBwcmltaXRpdmVzIGludG8gdGhlaXIgZXF1aXZhbGVudFxuICogb2JqZWN0IHdyYXBwZXIgZm9ybXMgc28gdGhhdCB0aGlzIGNoZWNrIHdpbGwgYWx3YXlzIHdvcmsuIEhvd2V2ZXIsIGJlY2F1c2Ugd2UgbmVlZCB0byBmbGFnIHRoZSBleGFjdCBvYmplY3Qgd2hpY2hcbiAqIHdpbGwgZ2V0IHJldGhyb3duLCBhbmQgYmVjYXVzZSB0aGF0IHJldGhyb3dpbmcgaGFwcGVucyBvdXRzaWRlIG9mIHRoZSBldmVudCBwcm9jZXNzaW5nIHBpcGVsaW5lLCB0aGUgb2JqZWN0aWZpY2F0aW9uXG4gKiBtdXN0IGJlIGRvbmUgYmVmb3JlIHRoZSBleGNlcHRpb24gY2FwdHVyZWQuXG4gKlxuICogQHBhcmFtIEEgdGhyb3duIGV4Y2VwdGlvbiB0byBjaGVjayBvciBmbGFnIGFzIGhhdmluZyBiZWVuIHNlZW5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgZXhjZXB0aW9uIGhhcyBhbHJlYWR5IGJlZW4gY2FwdHVyZWQsIGBmYWxzZWAgaWYgbm90ICh3aXRoIHRoZSBzaWRlIGVmZmVjdCBvZiBtYXJraW5nIGl0IHNlZW4pXG4gKi9cbmZ1bmN0aW9uIGNoZWNrT3JTZXRBbHJlYWR5Q2F1Z2h0KGV4Y2VwdGlvbikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1tZW1iZXItYWNjZXNzXG4gIGlmIChleGNlcHRpb24gJiYgKGV4Y2VwdGlvbiApLl9fc2VudHJ5X2NhcHR1cmVkX18pIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgLy8gc2V0IGl0IHRoaXMgd2F5IHJhdGhlciB0aGFuIGJ5IGFzc2lnbm1lbnQgc28gdGhhdCBpdCdzIG5vdCBlbm51bWVyYWJsZSBhbmQgdGhlcmVmb3JlIGlzbid0IHJlY29yZGVkIGJ5IHRoZVxuICAgIC8vIGBFeHRyYUVycm9yRGF0YWAgaW50ZWdyYXRpb25cbiAgICBhZGROb25FbnVtZXJhYmxlUHJvcGVydHkoZXhjZXB0aW9uICwgJ19fc2VudHJ5X2NhcHR1cmVkX18nLCB0cnVlKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgLy8gYGV4Y2VwdGlvbmAgaXMgYSBwcmltaXRpdmUsIHNvIHdlIGNhbid0IG1hcmsgaXQgc2VlblxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIHRoZSBnaXZlbiBpbnB1dCBpcyBhbHJlYWR5IGFuIGFycmF5LCBhbmQgaWYgaXQgaXNuJ3QsIHdyYXBzIGl0IGluIG9uZS5cbiAqXG4gKiBAcGFyYW0gbWF5YmVBcnJheSBJbnB1dCB0byB0dXJuIGludG8gYW4gYXJyYXksIGlmIG5lY2Vzc2FyeVxuICogQHJldHVybnMgVGhlIGlucHV0LCBpZiBhbHJlYWR5IGFuIGFycmF5LCBvciBhbiBhcnJheSB3aXRoIHRoZSBpbnB1dCBhcyB0aGUgb25seSBlbGVtZW50LCBpZiBub3RcbiAqL1xuZnVuY3Rpb24gYXJyYXlpZnkobWF5YmVBcnJheSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShtYXliZUFycmF5KSA/IG1heWJlQXJyYXkgOiBbbWF5YmVBcnJheV07XG59XG5cbmV4cG9ydCB7IGFkZENvbnRleHRUb0ZyYW1lLCBhZGRFeGNlcHRpb25NZWNoYW5pc20sIGFkZEV4Y2VwdGlvblR5cGVWYWx1ZSwgYXJyYXlpZnksIGNoZWNrT3JTZXRBbHJlYWR5Q2F1Z2h0LCBnZXRFdmVudERlc2NyaXB0aW9uLCBwYXJzZVNlbXZlciwgdXVpZDQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1pc2MuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/misc.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/node.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/node.js ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dynamicRequire\": function() { return /* binding */ dynamicRequire; },\n/* harmony export */   \"isNodeEnv\": function() { return /* binding */ isNodeEnv; },\n/* harmony export */   \"loadModule\": function() { return /* binding */ loadModule; }\n/* harmony export */ });\n/* harmony import */ var _env_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./env.js */ \"./node_modules/@sentry/utils/esm/env.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !(0,_env_js__WEBPACK_IMPORTED_MODULE_0__.isBrowserBundle)() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\n\n//# sourceMappingURL=node.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vbm9kZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMkM7O0FBRTNDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssd0RBQWU7QUFDcEIsMENBQTBDLE9BQU8sbUJBQW1CLE9BQU87QUFDM0U7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUZBQW1GLGdCQUFnQjtBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0EsWUFBWSxNQUFNO0FBQ2xCLG9DQUFvQyxNQUFNLGdCQUFnQixXQUFXO0FBQ3JFLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRWlEO0FBQ2pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9ub2RlLmpzP2RlYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNCcm93c2VyQnVuZGxlIH0gZnJvbSAnLi9lbnYuanMnO1xuXG4vKipcbiAqIE5PVEU6IEluIG9yZGVyIHRvIGF2b2lkIGNpcmN1bGFyIGRlcGVuZGVuY2llcywgaWYgeW91IGFkZCBhIGZ1bmN0aW9uIHRvIHRoaXMgbW9kdWxlIGFuZCBpdCBuZWVkcyB0byBwcmludCBzb21ldGhpbmcsXG4gKiB5b3UgbXVzdCBlaXRoZXIgYSkgdXNlIGBjb25zb2xlLmxvZ2AgcmF0aGVyIHRoYW4gdGhlIGxvZ2dlciwgb3IgYikgcHV0IHlvdXIgZnVuY3Rpb24gZWxzZXdoZXJlLlxuICovXG5cbi8qKlxuICogQ2hlY2tzIHdoZXRoZXIgd2UncmUgaW4gdGhlIE5vZGUuanMgb3IgQnJvd3NlciBlbnZpcm9ubWVudFxuICpcbiAqIEByZXR1cm5zIEFuc3dlciB0byBnaXZlbiBxdWVzdGlvblxuICovXG5mdW5jdGlvbiBpc05vZGVFbnYoKSB7XG4gIC8vIGV4cGxpY2l0bHkgY2hlY2sgZm9yIGJyb3dzZXIgYnVuZGxlcyBhcyB0aG9zZSBjYW4gYmUgb3B0aW1pemVkIHN0YXRpY2FsbHlcbiAgLy8gYnkgdGVyc2VyL3JvbGx1cC5cbiAgcmV0dXJuIChcbiAgICAhaXNCcm93c2VyQnVuZGxlKCkgJiZcbiAgICBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnID8gcHJvY2VzcyA6IDApID09PSAnW29iamVjdCBwcm9jZXNzXSdcbiAgKTtcbn1cblxuLyoqXG4gKiBSZXF1aXJlcyBhIG1vZHVsZSB3aGljaCBpcyBwcm90ZWN0ZWQgYWdhaW5zdCBidW5kbGVyIG1pbmlmaWNhdGlvbi5cbiAqXG4gKiBAcGFyYW0gcmVxdWVzdCBUaGUgbW9kdWxlIHBhdGggdG8gcmVzb2x2ZVxuICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlcywgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gZHluYW1pY1JlcXVpcmUobW9kLCByZXF1ZXN0KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLW1lbWJlci1hY2Nlc3NcbiAgcmV0dXJuIG1vZC5yZXF1aXJlKHJlcXVlc3QpO1xufVxuXG4vKipcbiAqIEhlbHBlciBmb3IgZHluYW1pY2FsbHkgbG9hZGluZyBtb2R1bGUgdGhhdCBzaG91bGQgd29yayB3aXRoIGxpbmtlZCBkZXBlbmRlbmNpZXMuXG4gKiBUaGUgcHJvYmxlbSBpcyB0aGF0IHdlIF9zaG91bGRfIGJlIHVzaW5nIGByZXF1aXJlKHJlcXVpcmUucmVzb2x2ZShtb2R1bGVOYW1lLCB7IHBhdGhzOiBbY3dkKCldIH0pKWBcbiAqIEhvd2V2ZXIgaXQncyBfbm90IHBvc3NpYmxlXyB0byBkbyB0aGF0IHdpdGggV2VicGFjaywgYXMgaXQgaGFzIHRvIGtub3cgYWxsIHRoZSBkZXBlbmRlbmNpZXMgZHVyaW5nXG4gKiBidWlsZCB0aW1lLiBgcmVxdWlyZS5yZXNvbHZlYCBpcyBhbHNvIG5vdCBhdmFpbGFibGUgaW4gYW55IG90aGVyIHdheSwgc28gd2UgY2Fubm90IGNyZWF0ZSxcbiAqIGEgZmFrZSBoZWxwZXIgbGlrZSB3ZSBkbyB3aXRoIGBkeW5hbWljUmVxdWlyZWAuXG4gKlxuICogV2UgYWx3YXlzIHByZWZlciB0byB1c2UgbG9jYWwgcGFja2FnZSwgdGh1cyB0aGUgdmFsdWUgaXMgbm90IHJldHVybmVkIGVhcmx5IGZyb20gZWFjaCBgdHJ5L2NhdGNoYCBibG9jay5cbiAqIFRoYXQgaXMgdG8gbWltaWMgdGhlIGJlaGF2aW9yIG9mIGByZXF1aXJlLnJlc29sdmVgIGV4YWN0bHkuXG4gKlxuICogQHBhcmFtIG1vZHVsZU5hbWUgbW9kdWxlIG5hbWUgdG8gcmVxdWlyZVxuICogQHJldHVybnMgcG9zc2libHkgcmVxdWlyZWQgbW9kdWxlXG4gKi9cbmZ1bmN0aW9uIGxvYWRNb2R1bGUobW9kdWxlTmFtZSkge1xuICBsZXQgbW9kO1xuXG4gIHRyeSB7XG4gICAgbW9kID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCBtb2R1bGVOYW1lKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIG5vLWVtcHR5XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHsgY3dkIH0gPSBkeW5hbWljUmVxdWlyZShtb2R1bGUsICdwcm9jZXNzJyk7XG4gICAgbW9kID0gZHluYW1pY1JlcXVpcmUobW9kdWxlLCBgJHtjd2QoKX0vbm9kZV9tb2R1bGVzLyR7bW9kdWxlTmFtZX1gKSA7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICAvLyBuby1lbXB0eVxuICB9XG5cbiAgcmV0dXJuIG1vZDtcbn1cblxuZXhwb3J0IHsgZHluYW1pY1JlcXVpcmUsIGlzTm9kZUVudiwgbG9hZE1vZHVsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/node.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/normalize.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/normalize.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"normalize\": function() { return /* binding */ normalize; },\n/* harmony export */   \"normalizeToSize\": function() { return /* binding */ normalizeToSize; },\n/* harmony export */   \"walk\": function() { return /* binding */ visit; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _memo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memo.js */ \"./node_modules/@sentry/utils/esm/memo.js\");\n/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./object.js */ \"./node_modules/@sentry/utils/esm/object.js\");\n/* harmony import */ var _stacktrace_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stacktrace.js */ \"./node_modules/@sentry/utils/esm/stacktrace.js\");\n\n\n\n\n\n/**\n * Recursively normalizes the given object.\n *\n * - Creates a copy to prevent original input mutation\n * - Skips non-enumerable properties\n * - When stringifying, calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializable values (`undefined`/`NaN`/functions) to serializable format\n * - Translates known global objects/classes to a string representations\n * - Takes care of `Error` object serialization\n * - Optionally limits depth of final output\n * - Optionally limits number of properties/elements included in any single object/array\n *\n * @param input The object to be normalized.\n * @param depth The max depth to which to normalize the object. (Anything deeper stringified whole.)\n * @param maxProperties The max number of elements or properties to be included in any single array or\n * object in the normallized output.\n * @returns A normalized version of the object, or `\"**non-serializable**\"` if any errors are thrown during normalization.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction normalize(input, depth = +Infinity, maxProperties = +Infinity) {\n  try {\n    // since we're at the outermost level, we don't provide a key\n    return visit('', input, depth, maxProperties);\n  } catch (err) {\n    return { ERROR: `**non-serializable** (${err})` };\n  }\n}\n\n/** JSDoc */\nfunction normalizeToSize(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  object,\n  // Default Node.js REPL depth\n  depth = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize = 100 * 1024,\n) {\n  const normalized = normalize(object, depth);\n\n  if (jsonSize(normalized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return normalized ;\n}\n\n/**\n * Visits a node to perform normalization on it\n *\n * @param key The key corresponding to the given node\n * @param value The node to be visited\n * @param depth Optional number indicating the maximum recursion depth\n * @param maxProperties Optional maximum number of properties/elements included in any single object/array\n * @param memo Optional Memo class handling decycling\n */\nfunction visit(\n  key,\n  value,\n  depth = +Infinity,\n  maxProperties = +Infinity,\n  memo = (0,_memo_js__WEBPACK_IMPORTED_MODULE_0__.memoBuilder)(),\n) {\n  const [memoize, unmemoize] = memo;\n\n  // Get the simple cases out of the way first\n  if (value === null || (['number', 'boolean', 'string'].includes(typeof value) && !(0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isNaN)(value))) {\n    return value ;\n  }\n\n  const stringified = stringifyValue(key, value);\n\n  // Anything we could potentially dig into more (objects or arrays) will have come back as `\"[object XXXX]\"`.\n  // Everything else will have already been serialized, so if we don't see that pattern, we're done.\n  if (!stringified.startsWith('[object ')) {\n    return stringified;\n  }\n\n  // From here on, we can assert that `value` is either an object or an array.\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  if ((value )['__sentry_skip_normalization__']) {\n    return value ;\n  }\n\n  // Do not normalize objects that we know have already been normalized. As a general rule, the\n  // \"__sentry_skip_normalization__\" property should only be used sparingly and only should only be set on objects that\n  // have already been normalized.\n  let overriddenDepth = depth;\n\n  if (typeof (value )['__sentry_override_normalization_depth__'] === 'number') {\n    overriddenDepth = (value )['__sentry_override_normalization_depth__'] ;\n  }\n\n  // We're also done if we've reached the max depth\n  if (overriddenDepth === 0) {\n    // At this point we know `serialized` is a string of the form `\"[object XXXX]\"`. Clean it up so it's just `\"[XXXX]\"`.\n    return stringified.replace('object ', '');\n  }\n\n  // If we've already visited this branch, bail out, as it's circular reference. If not, note that we're seeing it now.\n  if (memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // If the value has a `toJSON` method, we call it to extract more information\n  const valueWithToJSON = value ;\n  if (valueWithToJSON && typeof valueWithToJSON.toJSON === 'function') {\n    try {\n      const jsonValue = valueWithToJSON.toJSON();\n      // We need to normalize the return value of `.toJSON()` in case it has circular references\n      return visit('', jsonValue, overriddenDepth - 1, maxProperties, memo);\n    } catch (err) {\n      // pass (The built-in `toJSON` failed, but we can still try to do it ourselves)\n    }\n  }\n\n  // At this point we know we either have an object or an array, we haven't seen it before, and we're going to recurse\n  // because we haven't yet reached the max depth. Create an accumulator to hold the results of visiting each\n  // property/entry, and keep track of the number of items we add to it.\n  const normalized = (Array.isArray(value) ? [] : {}) ;\n  let numAdded = 0;\n\n  // Before we begin, convert`Error` and`Event` instances into plain objects, since some of each of their relevant\n  // properties are non-enumerable and otherwise would get missed.\n  const visitable = (0,_object_js__WEBPACK_IMPORTED_MODULE_2__.convertToPlainObject)(value );\n\n  for (const visitKey in visitable) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) {\n      continue;\n    }\n\n    if (numAdded >= maxProperties) {\n      normalized[visitKey] = '[MaxProperties ~]';\n      break;\n    }\n\n    // Recursively visit all the child nodes\n    const visitValue = visitable[visitKey];\n    normalized[visitKey] = visit(visitKey, visitValue, overriddenDepth - 1, maxProperties, memo);\n\n    numAdded++;\n  }\n\n  // Once we've visited all the branches, remove the parent from memo storage\n  unmemoize(value);\n\n  // Return accumulated values\n  return normalized;\n}\n\n/**\n * Stringify the given value. Handles various known special values and types.\n *\n * Not meant to be used on simple primitives which already have a string representation, as it will, for example, turn\n * the number 1231 into \"[Object Number]\", nor on `null`, as it will throw.\n *\n * @param value The value to stringify\n * @returns A stringified representation of the given value\n */\nfunction stringifyValue(\n  key,\n  // this type is a tiny bit of a cheat, since this function does handle NaN (which is technically a number), but for\n  // our internal use, it'll do\n  value,\n) {\n  try {\n    if (key === 'domain' && value && typeof value === 'object' && (value )._events) {\n      return '[Domain]';\n    }\n\n    if (key === 'domainEmitter') {\n      return '[DomainEmitter]';\n    }\n\n    // It's safe to use `global`, `window`, and `document` here in this manner, as we are asserting using `typeof` first\n    // which won't throw if they are not present.\n\n    if (typeof __webpack_require__.g !== 'undefined' && value === __webpack_require__.g) {\n      return '[Global]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof window !== 'undefined' && value === window) {\n      return '[Window]';\n    }\n\n    // eslint-disable-next-line no-restricted-globals\n    if (typeof document !== 'undefined' && value === document) {\n      return '[Document]';\n    }\n\n    // React's SyntheticEvent thingy\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isSyntheticEvent)(value)) {\n      return '[SyntheticEvent]';\n    }\n\n    if (typeof value === 'number' && value !== value) {\n      return '[NaN]';\n    }\n\n    // this catches `undefined` (but not `null`, which is a primitive and can be serialized on its own)\n    if (value === void 0) {\n      return '[undefined]';\n    }\n\n    if (typeof value === 'function') {\n      return `[Function: ${(0,_stacktrace_js__WEBPACK_IMPORTED_MODULE_3__.getFunctionName)(value)}]`;\n    }\n\n    if (typeof value === 'symbol') {\n      return `[${String(value)}]`;\n    }\n\n    // stringified BigInts are indistinguishable from regular numbers, so we need to label them to avoid confusion\n    if (typeof value === 'bigint') {\n      return `[BigInt: ${String(value)}]`;\n    }\n\n    // Now that we've knocked out all the special cases and the primitives, all we have left are objects. Simply casting\n    // them to strings means that instances of classes which haven't defined their `toStringTag` will just come out as\n    // `\"[object Object]\"`. If we instead look at the constructor's name (which is the same as the name of the class),\n    // we can make sure that only plain objects come out that way.\n    return `[object ${getConstructorName(value)}]`;\n  } catch (err) {\n    return `**non-serializable** (${err})`;\n  }\n}\n\nfunction getConstructorName(value) {\n  const prototype = Object.getPrototypeOf(value);\n\n  return prototype ? prototype.constructor.name : 'null prototype';\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n\n\n//# sourceMappingURL=normalize.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/normalize.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/object.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/object.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addNonEnumerableProperty\": function() { return /* binding */ addNonEnumerableProperty; },\n/* harmony export */   \"convertToPlainObject\": function() { return /* binding */ convertToPlainObject; },\n/* harmony export */   \"dropUndefinedKeys\": function() { return /* binding */ dropUndefinedKeys; },\n/* harmony export */   \"extractExceptionKeysForMessage\": function() { return /* binding */ extractExceptionKeysForMessage; },\n/* harmony export */   \"fill\": function() { return /* binding */ fill; },\n/* harmony export */   \"getOriginalFunction\": function() { return /* binding */ getOriginalFunction; },\n/* harmony export */   \"markFunctionWrapped\": function() { return /* binding */ markFunctionWrapped; },\n/* harmony export */   \"objectify\": function() { return /* binding */ objectify; },\n/* harmony export */   \"urlEncode\": function() { return /* binding */ urlEncode; }\n/* harmony export */ });\n/* harmony import */ var _browser_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser.js */ \"./node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./string.js */ \"./node_modules/@sentry/utils/esm/string.js\");\n\n\n\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isError)(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isEvent)(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isElement)(target) ? (0,_browser_js__WEBPACK_IMPORTED_MODULE_1__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_2__.truncate)(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return (0,_string_js__WEBPACK_IMPORTED_MODULE_2__.truncate)(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case (0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isPrimitive)(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\n\n//# sourceMappingURL=object.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/object.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/path.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/path.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"basename\": function() { return /* binding */ basename; },\n/* harmony export */   \"dirname\": function() { return /* binding */ dirname; },\n/* harmony export */   \"isAbsolute\": function() { return /* binding */ isAbsolute; },\n/* harmony export */   \"join\": function() { return /* binding */ join; },\n/* harmony export */   \"normalizePath\": function() { return /* binding */ normalizePath; },\n/* harmony export */   \"relative\": function() { return /* binding */ relative; },\n/* harmony export */   \"resolve\": function() { return /* binding */ resolve; }\n/* harmony export */ });\n// Slightly modified (no IE8 support, ES6) and transcribed to TypeScript\n// https://raw.githubusercontent.com/calvinmetcalf/rollup-plugin-node-builtins/master/src/es6/path.js\n\n/** JSDoc */\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  let up = 0;\n  for (let i = parts.length - 1; i >= 0; i--) {\n    const last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nconst splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^/]+?|)(\\.[^./]*|))(?:[/]*)$/;\n/** JSDoc */\nfunction splitPath(filename) {\n  const parts = splitPathRe.exec(filename);\n  return parts ? parts.slice(1) : [];\n}\n\n// path.resolve([from ...], to)\n// posix version\n/** JSDoc */\nfunction resolve(...args) {\n  let resolvedPath = '';\n  let resolvedAbsolute = false;\n\n  for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    const path = i >= 0 ? args[i] : '/';\n\n    // Skip empty entries\n    if (!path) {\n      continue;\n    }\n\n    resolvedPath = `${path}/${resolvedPath}`;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(\n    resolvedPath.split('/').filter(p => !!p),\n    !resolvedAbsolute,\n  ).join('/');\n\n  return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n}\n\n/** JSDoc */\nfunction trim(arr) {\n  let start = 0;\n  for (; start < arr.length; start++) {\n    if (arr[start] !== '') {\n      break;\n    }\n  }\n\n  let end = arr.length - 1;\n  for (; end >= 0; end--) {\n    if (arr[end] !== '') {\n      break;\n    }\n  }\n\n  if (start > end) {\n    return [];\n  }\n  return arr.slice(start, end - start + 1);\n}\n\n// path.relative(from, to)\n// posix version\n/** JSDoc */\nfunction relative(from, to) {\n  /* eslint-disable no-param-reassign */\n  from = resolve(from).slice(1);\n  to = resolve(to).slice(1);\n  /* eslint-enable no-param-reassign */\n\n  const fromParts = trim(from.split('/'));\n  const toParts = trim(to.split('/'));\n\n  const length = Math.min(fromParts.length, toParts.length);\n  let samePartsLength = length;\n  for (let i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  let outputParts = [];\n  for (let i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\n// path.normalize(path)\n// posix version\n/** JSDoc */\nfunction normalizePath(path) {\n  const isPathAbsolute = isAbsolute(path);\n  const trailingSlash = path.slice(-1) === '/';\n\n  // Normalize the path\n  let normalizedPath = normalizeArray(\n    path.split('/').filter(p => !!p),\n    !isPathAbsolute,\n  ).join('/');\n\n  if (!normalizedPath && !isPathAbsolute) {\n    normalizedPath = '.';\n  }\n  if (normalizedPath && trailingSlash) {\n    normalizedPath += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + normalizedPath;\n}\n\n// posix version\n/** JSDoc */\nfunction isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\n/** JSDoc */\nfunction join(...args) {\n  return normalizePath(args.join('/'));\n}\n\n/** JSDoc */\nfunction dirname(path) {\n  const result = splitPath(path);\n  const root = result[0];\n  let dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.slice(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\n/** JSDoc */\nfunction basename(path, ext) {\n  let f = splitPath(path)[2];\n  if (ext && f.slice(ext.length * -1) === ext) {\n    f = f.slice(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\n//# sourceMappingURL=path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcGF0aC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxRQUFRO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZDQUE2QyxJQUFJO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdDQUFnQyw4QkFBOEI7QUFDOUQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsc0JBQXNCLEtBQUssR0FBRyxhQUFhO0FBQzNDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUyxvQkFBb0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxTQUFTLFVBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixZQUFZO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQ0FBZ0Msc0JBQXNCO0FBQ3REO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlGO0FBQ2pGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9wYXRoLmpzPzVjN2QiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU2xpZ2h0bHkgbW9kaWZpZWQgKG5vIElFOCBzdXBwb3J0LCBFUzYpIGFuZCB0cmFuc2NyaWJlZCB0byBUeXBlU2NyaXB0XG4vLyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vY2FsdmlubWV0Y2FsZi9yb2xsdXAtcGx1Z2luLW5vZGUtYnVpbHRpbnMvbWFzdGVyL3NyYy9lczYvcGF0aC5qc1xuXG4vKiogSlNEb2MgKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZUFycmF5KHBhcnRzLCBhbGxvd0Fib3ZlUm9vdCkge1xuICAvLyBpZiB0aGUgcGF0aCB0cmllcyB0byBnbyBhYm92ZSB0aGUgcm9vdCwgYHVwYCBlbmRzIHVwID4gMFxuICBsZXQgdXAgPSAwO1xuICBmb3IgKGxldCBpID0gcGFydHMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBjb25zdCBsYXN0ID0gcGFydHNbaV07XG4gICAgaWYgKGxhc3QgPT09ICcuJykge1xuICAgICAgcGFydHMuc3BsaWNlKGksIDEpO1xuICAgIH0gZWxzZSBpZiAobGFzdCA9PT0gJy4uJykge1xuICAgICAgcGFydHMuc3BsaWNlKGksIDEpO1xuICAgICAgdXArKztcbiAgICB9IGVsc2UgaWYgKHVwKSB7XG4gICAgICBwYXJ0cy5zcGxpY2UoaSwgMSk7XG4gICAgICB1cC0tO1xuICAgIH1cbiAgfVxuXG4gIC8vIGlmIHRoZSBwYXRoIGlzIGFsbG93ZWQgdG8gZ28gYWJvdmUgdGhlIHJvb3QsIHJlc3RvcmUgbGVhZGluZyAuLnNcbiAgaWYgKGFsbG93QWJvdmVSb290KSB7XG4gICAgZm9yICg7IHVwLS07IHVwKSB7XG4gICAgICBwYXJ0cy51bnNoaWZ0KCcuLicpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJ0cztcbn1cblxuLy8gU3BsaXQgYSBmaWxlbmFtZSBpbnRvIFtyb290LCBkaXIsIGJhc2VuYW1lLCBleHRdLCB1bml4IHZlcnNpb25cbi8vICdyb290JyBpcyBqdXN0IGEgc2xhc2gsIG9yIG5vdGhpbmcuXG5jb25zdCBzcGxpdFBhdGhSZSA9IC9eKFxcLz98KShbXFxzXFxTXSo/KSgoPzpcXC57MSwyfXxbXi9dKz98KShcXC5bXi4vXSp8KSkoPzpbL10qKSQvO1xuLyoqIEpTRG9jICovXG5mdW5jdGlvbiBzcGxpdFBhdGgoZmlsZW5hbWUpIHtcbiAgY29uc3QgcGFydHMgPSBzcGxpdFBhdGhSZS5leGVjKGZpbGVuYW1lKTtcbiAgcmV0dXJuIHBhcnRzID8gcGFydHMuc2xpY2UoMSkgOiBbXTtcbn1cblxuLy8gcGF0aC5yZXNvbHZlKFtmcm9tIC4uLl0sIHRvKVxuLy8gcG9zaXggdmVyc2lvblxuLyoqIEpTRG9jICovXG5mdW5jdGlvbiByZXNvbHZlKC4uLmFyZ3MpIHtcbiAgbGV0IHJlc29sdmVkUGF0aCA9ICcnO1xuICBsZXQgcmVzb2x2ZWRBYnNvbHV0ZSA9IGZhbHNlO1xuXG4gIGZvciAobGV0IGkgPSBhcmdzLmxlbmd0aCAtIDE7IGkgPj0gLTEgJiYgIXJlc29sdmVkQWJzb2x1dGU7IGktLSkge1xuICAgIGNvbnN0IHBhdGggPSBpID49IDAgPyBhcmdzW2ldIDogJy8nO1xuXG4gICAgLy8gU2tpcCBlbXB0eSBlbnRyaWVzXG4gICAgaWYgKCFwYXRoKSB7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG5cbiAgICByZXNvbHZlZFBhdGggPSBgJHtwYXRofS8ke3Jlc29sdmVkUGF0aH1gO1xuICAgIHJlc29sdmVkQWJzb2x1dGUgPSBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nO1xuICB9XG5cbiAgLy8gQXQgdGhpcyBwb2ludCB0aGUgcGF0aCBzaG91bGQgYmUgcmVzb2x2ZWQgdG8gYSBmdWxsIGFic29sdXRlIHBhdGgsIGJ1dFxuICAvLyBoYW5kbGUgcmVsYXRpdmUgcGF0aHMgdG8gYmUgc2FmZSAobWlnaHQgaGFwcGVuIHdoZW4gcHJvY2Vzcy5jd2QoKSBmYWlscylcblxuICAvLyBOb3JtYWxpemUgdGhlIHBhdGhcbiAgcmVzb2x2ZWRQYXRoID0gbm9ybWFsaXplQXJyYXkoXG4gICAgcmVzb2x2ZWRQYXRoLnNwbGl0KCcvJykuZmlsdGVyKHAgPT4gISFwKSxcbiAgICAhcmVzb2x2ZWRBYnNvbHV0ZSxcbiAgKS5qb2luKCcvJyk7XG5cbiAgcmV0dXJuIChyZXNvbHZlZEFic29sdXRlID8gJy8nIDogJycpICsgcmVzb2x2ZWRQYXRoIHx8ICcuJztcbn1cblxuLyoqIEpTRG9jICovXG5mdW5jdGlvbiB0cmltKGFycikge1xuICBsZXQgc3RhcnQgPSAwO1xuICBmb3IgKDsgc3RhcnQgPCBhcnIubGVuZ3RoOyBzdGFydCsrKSB7XG4gICAgaWYgKGFycltzdGFydF0gIT09ICcnKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBsZXQgZW5kID0gYXJyLmxlbmd0aCAtIDE7XG4gIGZvciAoOyBlbmQgPj0gMDsgZW5kLS0pIHtcbiAgICBpZiAoYXJyW2VuZF0gIT09ICcnKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBpZiAoc3RhcnQgPiBlbmQpIHtcbiAgICByZXR1cm4gW107XG4gIH1cbiAgcmV0dXJuIGFyci5zbGljZShzdGFydCwgZW5kIC0gc3RhcnQgKyAxKTtcbn1cblxuLy8gcGF0aC5yZWxhdGl2ZShmcm9tLCB0bylcbi8vIHBvc2l4IHZlcnNpb25cbi8qKiBKU0RvYyAqL1xuZnVuY3Rpb24gcmVsYXRpdmUoZnJvbSwgdG8pIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbiAgZnJvbSA9IHJlc29sdmUoZnJvbSkuc2xpY2UoMSk7XG4gIHRvID0gcmVzb2x2ZSh0bykuc2xpY2UoMSk7XG4gIC8qIGVzbGludC1lbmFibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cblxuICBjb25zdCBmcm9tUGFydHMgPSB0cmltKGZyb20uc3BsaXQoJy8nKSk7XG4gIGNvbnN0IHRvUGFydHMgPSB0cmltKHRvLnNwbGl0KCcvJykpO1xuXG4gIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZyb21QYXJ0cy5sZW5ndGgsIHRvUGFydHMubGVuZ3RoKTtcbiAgbGV0IHNhbWVQYXJ0c0xlbmd0aCA9IGxlbmd0aDtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgIGlmIChmcm9tUGFydHNbaV0gIT09IHRvUGFydHNbaV0pIHtcbiAgICAgIHNhbWVQYXJ0c0xlbmd0aCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBsZXQgb3V0cHV0UGFydHMgPSBbXTtcbiAgZm9yIChsZXQgaSA9IHNhbWVQYXJ0c0xlbmd0aDsgaSA8IGZyb21QYXJ0cy5sZW5ndGg7IGkrKykge1xuICAgIG91dHB1dFBhcnRzLnB1c2goJy4uJyk7XG4gIH1cblxuICBvdXRwdXRQYXJ0cyA9IG91dHB1dFBhcnRzLmNvbmNhdCh0b1BhcnRzLnNsaWNlKHNhbWVQYXJ0c0xlbmd0aCkpO1xuXG4gIHJldHVybiBvdXRwdXRQYXJ0cy5qb2luKCcvJyk7XG59XG5cbi8vIHBhdGgubm9ybWFsaXplKHBhdGgpXG4vLyBwb3NpeCB2ZXJzaW9uXG4vKiogSlNEb2MgKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZVBhdGgocGF0aCkge1xuICBjb25zdCBpc1BhdGhBYnNvbHV0ZSA9IGlzQWJzb2x1dGUocGF0aCk7XG4gIGNvbnN0IHRyYWlsaW5nU2xhc2ggPSBwYXRoLnNsaWNlKC0xKSA9PT0gJy8nO1xuXG4gIC8vIE5vcm1hbGl6ZSB0aGUgcGF0aFxuICBsZXQgbm9ybWFsaXplZFBhdGggPSBub3JtYWxpemVBcnJheShcbiAgICBwYXRoLnNwbGl0KCcvJykuZmlsdGVyKHAgPT4gISFwKSxcbiAgICAhaXNQYXRoQWJzb2x1dGUsXG4gICkuam9pbignLycpO1xuXG4gIGlmICghbm9ybWFsaXplZFBhdGggJiYgIWlzUGF0aEFic29sdXRlKSB7XG4gICAgbm9ybWFsaXplZFBhdGggPSAnLic7XG4gIH1cbiAgaWYgKG5vcm1hbGl6ZWRQYXRoICYmIHRyYWlsaW5nU2xhc2gpIHtcbiAgICBub3JtYWxpemVkUGF0aCArPSAnLyc7XG4gIH1cblxuICByZXR1cm4gKGlzUGF0aEFic29sdXRlID8gJy8nIDogJycpICsgbm9ybWFsaXplZFBhdGg7XG59XG5cbi8vIHBvc2l4IHZlcnNpb25cbi8qKiBKU0RvYyAqL1xuZnVuY3Rpb24gaXNBYnNvbHV0ZShwYXRoKSB7XG4gIHJldHVybiBwYXRoLmNoYXJBdCgwKSA9PT0gJy8nO1xufVxuXG4vLyBwb3NpeCB2ZXJzaW9uXG4vKiogSlNEb2MgKi9cbmZ1bmN0aW9uIGpvaW4oLi4uYXJncykge1xuICByZXR1cm4gbm9ybWFsaXplUGF0aChhcmdzLmpvaW4oJy8nKSk7XG59XG5cbi8qKiBKU0RvYyAqL1xuZnVuY3Rpb24gZGlybmFtZShwYXRoKSB7XG4gIGNvbnN0IHJlc3VsdCA9IHNwbGl0UGF0aChwYXRoKTtcbiAgY29uc3Qgcm9vdCA9IHJlc3VsdFswXTtcbiAgbGV0IGRpciA9IHJlc3VsdFsxXTtcblxuICBpZiAoIXJvb3QgJiYgIWRpcikge1xuICAgIC8vIE5vIGRpcm5hbWUgd2hhdHNvZXZlclxuICAgIHJldHVybiAnLic7XG4gIH1cblxuICBpZiAoZGlyKSB7XG4gICAgLy8gSXQgaGFzIGEgZGlybmFtZSwgc3RyaXAgdHJhaWxpbmcgc2xhc2hcbiAgICBkaXIgPSBkaXIuc2xpY2UoMCwgZGlyLmxlbmd0aCAtIDEpO1xuICB9XG5cbiAgcmV0dXJuIHJvb3QgKyBkaXI7XG59XG5cbi8qKiBKU0RvYyAqL1xuZnVuY3Rpb24gYmFzZW5hbWUocGF0aCwgZXh0KSB7XG4gIGxldCBmID0gc3BsaXRQYXRoKHBhdGgpWzJdO1xuICBpZiAoZXh0ICYmIGYuc2xpY2UoZXh0Lmxlbmd0aCAqIC0xKSA9PT0gZXh0KSB7XG4gICAgZiA9IGYuc2xpY2UoMCwgZi5sZW5ndGggLSBleHQubGVuZ3RoKTtcbiAgfVxuICByZXR1cm4gZjtcbn1cblxuZXhwb3J0IHsgYmFzZW5hbWUsIGRpcm5hbWUsIGlzQWJzb2x1dGUsIGpvaW4sIG5vcm1hbGl6ZVBhdGgsIHJlbGF0aXZlLCByZXNvbHZlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXRoLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/path.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/promisebuffer.js":
/*!*********************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/promisebuffer.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"makePromiseBuffer\": function() { return /* binding */ makePromiseBuffer; }\n/* harmony export */ });\n/* harmony import */ var _error_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./error.js */ \"./node_modules/@sentry/utils/esm/error.js\");\n/* harmony import */ var _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./syncpromise.js */ \"./node_modules/@sentry/utils/esm/syncpromise.js\");\n\n\n\n/**\n * Creates an new PromiseBuffer object with the specified limit\n * @param limit max number of promises that can be stored in the buffer\n */\nfunction makePromiseBuffer(limit) {\n  const buffer = [];\n\n  function isReady() {\n    return limit === undefined || buffer.length < limit;\n  }\n\n  /**\n   * Remove a promise from the queue.\n   *\n   * @param task Can be any PromiseLike<T>\n   * @returns Removed promise.\n   */\n  function remove(task) {\n    return buffer.splice(buffer.indexOf(task), 1)[0];\n  }\n\n  /**\n   * Add a promise (representing an in-flight action) to the queue, and set it to remove itself on fulfillment.\n   *\n   * @param taskProducer A function producing any PromiseLike<T>; In previous versions this used to be `task:\n   *        PromiseLike<T>`, but under that model, Promises were instantly created on the call-site and their executor\n   *        functions therefore ran immediately. Thus, even if the buffer was full, the action still happened. By\n   *        requiring the promise to be wrapped in a function, we can defer promise creation until after the buffer\n   *        limit check.\n   * @returns The original promise.\n   */\n  function add(taskProducer) {\n    if (!isReady()) {\n      return (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _error_js__WEBPACK_IMPORTED_MODULE_1__.SentryError('Not adding Promise because buffer limit was reached.'));\n    }\n\n    // start the task and add its promise to the queue\n    const task = taskProducer();\n    if (buffer.indexOf(task) === -1) {\n      buffer.push(task);\n    }\n    void task\n      .then(() => remove(task))\n      // Use `then(null, rejectionHandler)` rather than `catch(rejectionHandler)` so that we can use `PromiseLike`\n      // rather than `Promise`. `PromiseLike` doesn't have a `.catch` method, making its polyfill smaller. (ES5 didn't\n      // have promises, so TS has to polyfill when down-compiling.)\n      .then(null, () =>\n        remove(task).then(null, () => {\n          // We have to add another catch here because `remove()` starts a new promise chain.\n        }),\n      );\n    return task;\n  }\n\n  /**\n   * Wait for all promises in the queue to resolve or for timeout to expire, whichever comes first.\n   *\n   * @param timeout The time, in ms, after which to resolve to `false` if the queue is still non-empty. Passing `0` (or\n   * not passing anything) will make the promise wait as long as it takes for the queue to drain before resolving to\n   * `true`.\n   * @returns A promise which will resolve to `true` if the queue is already empty or drains before the timeout, and\n   * `false` otherwise\n   */\n  function drain(timeout) {\n    return new _syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((resolve, reject) => {\n      let counter = buffer.length;\n\n      if (!counter) {\n        return resolve(true);\n      }\n\n      // wait for `timeout` ms and then resolve to `false` (if not cancelled first)\n      const capturedSetTimeout = setTimeout(() => {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n\n      // if all promises resolve in time, cancel the timer and resolve to `true`\n      buffer.forEach(item => {\n        void (0,_syncpromise_js__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(item).then(() => {\n          if (!--counter) {\n            clearTimeout(capturedSetTimeout);\n            resolve(true);\n          }\n        }, reject);\n      });\n    });\n  }\n\n  return {\n    $: buffer,\n    add,\n    drain,\n  };\n}\n\n\n//# sourceMappingURL=promisebuffer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcHJvbWlzZWJ1ZmZlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDZ0Q7O0FBRXpGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxvRUFBbUIsS0FBSyxrREFBVztBQUNoRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHdEQUFXO0FBQzFCOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0EsYUFBYSxvRUFBbUI7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9wcm9taXNlYnVmZmVyLmpzPzQwYTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VudHJ5RXJyb3IgfSBmcm9tICcuL2Vycm9yLmpzJztcbmltcG9ydCB7IHJlamVjdGVkU3luY1Byb21pc2UsIFN5bmNQcm9taXNlLCByZXNvbHZlZFN5bmNQcm9taXNlIH0gZnJvbSAnLi9zeW5jcHJvbWlzZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBuZXcgUHJvbWlzZUJ1ZmZlciBvYmplY3Qgd2l0aCB0aGUgc3BlY2lmaWVkIGxpbWl0XG4gKiBAcGFyYW0gbGltaXQgbWF4IG51bWJlciBvZiBwcm9taXNlcyB0aGF0IGNhbiBiZSBzdG9yZWQgaW4gdGhlIGJ1ZmZlclxuICovXG5mdW5jdGlvbiBtYWtlUHJvbWlzZUJ1ZmZlcihsaW1pdCkge1xuICBjb25zdCBidWZmZXIgPSBbXTtcblxuICBmdW5jdGlvbiBpc1JlYWR5KCkge1xuICAgIHJldHVybiBsaW1pdCA9PT0gdW5kZWZpbmVkIHx8IGJ1ZmZlci5sZW5ndGggPCBsaW1pdDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgYSBwcm9taXNlIGZyb20gdGhlIHF1ZXVlLlxuICAgKlxuICAgKiBAcGFyYW0gdGFzayBDYW4gYmUgYW55IFByb21pc2VMaWtlPFQ+XG4gICAqIEByZXR1cm5zIFJlbW92ZWQgcHJvbWlzZS5cbiAgICovXG4gIGZ1bmN0aW9uIHJlbW92ZSh0YXNrKSB7XG4gICAgcmV0dXJuIGJ1ZmZlci5zcGxpY2UoYnVmZmVyLmluZGV4T2YodGFzayksIDEpWzBdO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBhIHByb21pc2UgKHJlcHJlc2VudGluZyBhbiBpbi1mbGlnaHQgYWN0aW9uKSB0byB0aGUgcXVldWUsIGFuZCBzZXQgaXQgdG8gcmVtb3ZlIGl0c2VsZiBvbiBmdWxmaWxsbWVudC5cbiAgICpcbiAgICogQHBhcmFtIHRhc2tQcm9kdWNlciBBIGZ1bmN0aW9uIHByb2R1Y2luZyBhbnkgUHJvbWlzZUxpa2U8VD47IEluIHByZXZpb3VzIHZlcnNpb25zIHRoaXMgdXNlZCB0byBiZSBgdGFzazpcbiAgICogICAgICAgIFByb21pc2VMaWtlPFQ+YCwgYnV0IHVuZGVyIHRoYXQgbW9kZWwsIFByb21pc2VzIHdlcmUgaW5zdGFudGx5IGNyZWF0ZWQgb24gdGhlIGNhbGwtc2l0ZSBhbmQgdGhlaXIgZXhlY3V0b3JcbiAgICogICAgICAgIGZ1bmN0aW9ucyB0aGVyZWZvcmUgcmFuIGltbWVkaWF0ZWx5LiBUaHVzLCBldmVuIGlmIHRoZSBidWZmZXIgd2FzIGZ1bGwsIHRoZSBhY3Rpb24gc3RpbGwgaGFwcGVuZWQuIEJ5XG4gICAqICAgICAgICByZXF1aXJpbmcgdGhlIHByb21pc2UgdG8gYmUgd3JhcHBlZCBpbiBhIGZ1bmN0aW9uLCB3ZSBjYW4gZGVmZXIgcHJvbWlzZSBjcmVhdGlvbiB1bnRpbCBhZnRlciB0aGUgYnVmZmVyXG4gICAqICAgICAgICBsaW1pdCBjaGVjay5cbiAgICogQHJldHVybnMgVGhlIG9yaWdpbmFsIHByb21pc2UuXG4gICAqL1xuICBmdW5jdGlvbiBhZGQodGFza1Byb2R1Y2VyKSB7XG4gICAgaWYgKCFpc1JlYWR5KCkpIHtcbiAgICAgIHJldHVybiByZWplY3RlZFN5bmNQcm9taXNlKG5ldyBTZW50cnlFcnJvcignTm90IGFkZGluZyBQcm9taXNlIGJlY2F1c2UgYnVmZmVyIGxpbWl0IHdhcyByZWFjaGVkLicpKTtcbiAgICB9XG5cbiAgICAvLyBzdGFydCB0aGUgdGFzayBhbmQgYWRkIGl0cyBwcm9taXNlIHRvIHRoZSBxdWV1ZVxuICAgIGNvbnN0IHRhc2sgPSB0YXNrUHJvZHVjZXIoKTtcbiAgICBpZiAoYnVmZmVyLmluZGV4T2YodGFzaykgPT09IC0xKSB7XG4gICAgICBidWZmZXIucHVzaCh0YXNrKTtcbiAgICB9XG4gICAgdm9pZCB0YXNrXG4gICAgICAudGhlbigoKSA9PiByZW1vdmUodGFzaykpXG4gICAgICAvLyBVc2UgYHRoZW4obnVsbCwgcmVqZWN0aW9uSGFuZGxlcilgIHJhdGhlciB0aGFuIGBjYXRjaChyZWplY3Rpb25IYW5kbGVyKWAgc28gdGhhdCB3ZSBjYW4gdXNlIGBQcm9taXNlTGlrZWBcbiAgICAgIC8vIHJhdGhlciB0aGFuIGBQcm9taXNlYC4gYFByb21pc2VMaWtlYCBkb2Vzbid0IGhhdmUgYSBgLmNhdGNoYCBtZXRob2QsIG1ha2luZyBpdHMgcG9seWZpbGwgc21hbGxlci4gKEVTNSBkaWRuJ3RcbiAgICAgIC8vIGhhdmUgcHJvbWlzZXMsIHNvIFRTIGhhcyB0byBwb2x5ZmlsbCB3aGVuIGRvd24tY29tcGlsaW5nLilcbiAgICAgIC50aGVuKG51bGwsICgpID0+XG4gICAgICAgIHJlbW92ZSh0YXNrKS50aGVuKG51bGwsICgpID0+IHtcbiAgICAgICAgICAvLyBXZSBoYXZlIHRvIGFkZCBhbm90aGVyIGNhdGNoIGhlcmUgYmVjYXVzZSBgcmVtb3ZlKClgIHN0YXJ0cyBhIG5ldyBwcm9taXNlIGNoYWluLlxuICAgICAgICB9KSxcbiAgICAgICk7XG4gICAgcmV0dXJuIHRhc2s7XG4gIH1cblxuICAvKipcbiAgICogV2FpdCBmb3IgYWxsIHByb21pc2VzIGluIHRoZSBxdWV1ZSB0byByZXNvbHZlIG9yIGZvciB0aW1lb3V0IHRvIGV4cGlyZSwgd2hpY2hldmVyIGNvbWVzIGZpcnN0LlxuICAgKlxuICAgKiBAcGFyYW0gdGltZW91dCBUaGUgdGltZSwgaW4gbXMsIGFmdGVyIHdoaWNoIHRvIHJlc29sdmUgdG8gYGZhbHNlYCBpZiB0aGUgcXVldWUgaXMgc3RpbGwgbm9uLWVtcHR5LiBQYXNzaW5nIGAwYCAob3JcbiAgICogbm90IHBhc3NpbmcgYW55dGhpbmcpIHdpbGwgbWFrZSB0aGUgcHJvbWlzZSB3YWl0IGFzIGxvbmcgYXMgaXQgdGFrZXMgZm9yIHRoZSBxdWV1ZSB0byBkcmFpbiBiZWZvcmUgcmVzb2x2aW5nIHRvXG4gICAqIGB0cnVlYC5cbiAgICogQHJldHVybnMgQSBwcm9taXNlIHdoaWNoIHdpbGwgcmVzb2x2ZSB0byBgdHJ1ZWAgaWYgdGhlIHF1ZXVlIGlzIGFscmVhZHkgZW1wdHkgb3IgZHJhaW5zIGJlZm9yZSB0aGUgdGltZW91dCwgYW5kXG4gICAqIGBmYWxzZWAgb3RoZXJ3aXNlXG4gICAqL1xuICBmdW5jdGlvbiBkcmFpbih0aW1lb3V0KSB7XG4gICAgcmV0dXJuIG5ldyBTeW5jUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgY291bnRlciA9IGJ1ZmZlci5sZW5ndGg7XG5cbiAgICAgIGlmICghY291bnRlcikge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZSh0cnVlKTtcbiAgICAgIH1cblxuICAgICAgLy8gd2FpdCBmb3IgYHRpbWVvdXRgIG1zIGFuZCB0aGVuIHJlc29sdmUgdG8gYGZhbHNlYCAoaWYgbm90IGNhbmNlbGxlZCBmaXJzdClcbiAgICAgIGNvbnN0IGNhcHR1cmVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBpZiAodGltZW91dCAmJiB0aW1lb3V0ID4gMCkge1xuICAgICAgICAgIHJlc29sdmUoZmFsc2UpO1xuICAgICAgICB9XG4gICAgICB9LCB0aW1lb3V0KTtcblxuICAgICAgLy8gaWYgYWxsIHByb21pc2VzIHJlc29sdmUgaW4gdGltZSwgY2FuY2VsIHRoZSB0aW1lciBhbmQgcmVzb2x2ZSB0byBgdHJ1ZWBcbiAgICAgIGJ1ZmZlci5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICB2b2lkIHJlc29sdmVkU3luY1Byb21pc2UoaXRlbSkudGhlbigoKSA9PiB7XG4gICAgICAgICAgaWYgKCEtLWNvdW50ZXIpIHtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dChjYXB0dXJlZFNldFRpbWVvdXQpO1xuICAgICAgICAgICAgcmVzb2x2ZSh0cnVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgJDogYnVmZmVyLFxuICAgIGFkZCxcbiAgICBkcmFpbixcbiAgfTtcbn1cblxuZXhwb3J0IHsgbWFrZVByb21pc2VCdWZmZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByb21pc2VidWZmZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/promisebuffer.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/ratelimit.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/ratelimit.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DEFAULT_RETRY_AFTER\": function() { return /* binding */ DEFAULT_RETRY_AFTER; },\n/* harmony export */   \"disabledUntil\": function() { return /* binding */ disabledUntil; },\n/* harmony export */   \"isRateLimited\": function() { return /* binding */ isRateLimited; },\n/* harmony export */   \"parseRetryAfterHeader\": function() { return /* binding */ parseRetryAfterHeader; },\n/* harmony export */   \"updateRateLimits\": function() { return /* binding */ updateRateLimits; }\n/* harmony export */ });\n// Intentionally keeping the key broad, as we don't know for sure what rate limit headers get returned from backend\n\nconst DEFAULT_RETRY_AFTER = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param header string representation of 'Retry-After' header\n * @param now current unix timestamp\n *\n */\nfunction parseRetryAfterHeader(header, now = Date.now()) {\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return DEFAULT_RETRY_AFTER;\n}\n\n/**\n * Gets the time that the given category is disabled until for rate limiting.\n * In case no category-specific limit is set but a general rate limit across all categories is active,\n * that time is returned.\n *\n * @return the time in ms that the category is disabled until or 0 if there's no active rate limit.\n */\nfunction disabledUntil(limits, category) {\n  return limits[category] || limits.all || 0;\n}\n\n/**\n * Checks if a category is rate limited\n */\nfunction isRateLimited(limits, category, now = Date.now()) {\n  return disabledUntil(limits, category) > now;\n}\n\n/**\n * Update ratelimits from incoming headers.\n *\n * @return the updated RateLimits object.\n */\nfunction updateRateLimits(\n  limits,\n  { statusCode, headers },\n  now = Date.now(),\n) {\n  const updatedRateLimits = {\n    ...limits,\n  };\n\n  // \"The name is case-insensitive.\"\n  // https://developer.mozilla.org/en-US/docs/Web/API/Headers/get\n  const rateLimitHeader = headers && headers['x-sentry-rate-limits'];\n  const retryAfterHeader = headers && headers['retry-after'];\n\n  if (rateLimitHeader) {\n    /**\n     * rate limit headers are of the form\n     *     <header>,<header>,..\n     * where each <header> is of the form\n     *     <retry_after>: <categories>: <scope>: <reason_code>\n     * where\n     *     <retry_after> is a delay in seconds\n     *     <categories> is the event type(s) (error, transaction, etc) being rate limited and is of the form\n     *         <category>;<category>;...\n     *     <scope> is what's being limited (org, project, or key) - ignored by SDK\n     *     <reason_code> is an arbitrary string like \"org_quota\" - ignored by SDK\n     */\n    for (const limit of rateLimitHeader.trim().split(',')) {\n      const [retryAfter, categories] = limit.split(':', 2);\n      const headerDelay = parseInt(retryAfter, 10);\n      const delay = (!isNaN(headerDelay) ? headerDelay : 60) * 1000; // 60sec default\n      if (!categories) {\n        updatedRateLimits.all = now + delay;\n      } else {\n        for (const category of categories.split(';')) {\n          updatedRateLimits[category] = now + delay;\n        }\n      }\n    }\n  } else if (retryAfterHeader) {\n    updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);\n  } else if (statusCode === 429) {\n    updatedRateLimits.all = now + 60 * 1000;\n  }\n\n  return updatedRateLimits;\n}\n\n\n//# sourceMappingURL=ratelimit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vcmF0ZWxpbWl0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBRUEsdUNBQXVDOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxPQUFPO0FBQ3pDO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsT0FBTztBQUMxQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHFCQUFxQjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixXQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRTtBQUNyRTtBQUNBO0FBQ0EsUUFBUTtBQUNSLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLElBQUk7QUFDSjtBQUNBOztBQUVBO0FBQ0E7O0FBRXNHO0FBQ3RHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS9yYXRlbGltaXQuanM/YWQzZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbnRlbnRpb25hbGx5IGtlZXBpbmcgdGhlIGtleSBicm9hZCwgYXMgd2UgZG9uJ3Qga25vdyBmb3Igc3VyZSB3aGF0IHJhdGUgbGltaXQgaGVhZGVycyBnZXQgcmV0dXJuZWQgZnJvbSBiYWNrZW5kXG5cbmNvbnN0IERFRkFVTFRfUkVUUllfQUZURVIgPSA2MCAqIDEwMDA7IC8vIDYwIHNlY29uZHNcblxuLyoqXG4gKiBFeHRyYWN0cyBSZXRyeS1BZnRlciB2YWx1ZSBmcm9tIHRoZSByZXF1ZXN0IGhlYWRlciBvciByZXR1cm5zIGRlZmF1bHQgdmFsdWVcbiAqIEBwYXJhbSBoZWFkZXIgc3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mICdSZXRyeS1BZnRlcicgaGVhZGVyXG4gKiBAcGFyYW0gbm93IGN1cnJlbnQgdW5peCB0aW1lc3RhbXBcbiAqXG4gKi9cbmZ1bmN0aW9uIHBhcnNlUmV0cnlBZnRlckhlYWRlcihoZWFkZXIsIG5vdyA9IERhdGUubm93KCkpIHtcbiAgY29uc3QgaGVhZGVyRGVsYXkgPSBwYXJzZUludChgJHtoZWFkZXJ9YCwgMTApO1xuICBpZiAoIWlzTmFOKGhlYWRlckRlbGF5KSkge1xuICAgIHJldHVybiBoZWFkZXJEZWxheSAqIDEwMDA7XG4gIH1cblxuICBjb25zdCBoZWFkZXJEYXRlID0gRGF0ZS5wYXJzZShgJHtoZWFkZXJ9YCk7XG4gIGlmICghaXNOYU4oaGVhZGVyRGF0ZSkpIHtcbiAgICByZXR1cm4gaGVhZGVyRGF0ZSAtIG5vdztcbiAgfVxuXG4gIHJldHVybiBERUZBVUxUX1JFVFJZX0FGVEVSO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIHRpbWUgdGhhdCB0aGUgZ2l2ZW4gY2F0ZWdvcnkgaXMgZGlzYWJsZWQgdW50aWwgZm9yIHJhdGUgbGltaXRpbmcuXG4gKiBJbiBjYXNlIG5vIGNhdGVnb3J5LXNwZWNpZmljIGxpbWl0IGlzIHNldCBidXQgYSBnZW5lcmFsIHJhdGUgbGltaXQgYWNyb3NzIGFsbCBjYXRlZ29yaWVzIGlzIGFjdGl2ZSxcbiAqIHRoYXQgdGltZSBpcyByZXR1cm5lZC5cbiAqXG4gKiBAcmV0dXJuIHRoZSB0aW1lIGluIG1zIHRoYXQgdGhlIGNhdGVnb3J5IGlzIGRpc2FibGVkIHVudGlsIG9yIDAgaWYgdGhlcmUncyBubyBhY3RpdmUgcmF0ZSBsaW1pdC5cbiAqL1xuZnVuY3Rpb24gZGlzYWJsZWRVbnRpbChsaW1pdHMsIGNhdGVnb3J5KSB7XG4gIHJldHVybiBsaW1pdHNbY2F0ZWdvcnldIHx8IGxpbWl0cy5hbGwgfHwgMDtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBjYXRlZ29yeSBpcyByYXRlIGxpbWl0ZWRcbiAqL1xuZnVuY3Rpb24gaXNSYXRlTGltaXRlZChsaW1pdHMsIGNhdGVnb3J5LCBub3cgPSBEYXRlLm5vdygpKSB7XG4gIHJldHVybiBkaXNhYmxlZFVudGlsKGxpbWl0cywgY2F0ZWdvcnkpID4gbm93O1xufVxuXG4vKipcbiAqIFVwZGF0ZSByYXRlbGltaXRzIGZyb20gaW5jb21pbmcgaGVhZGVycy5cbiAqXG4gKiBAcmV0dXJuIHRoZSB1cGRhdGVkIFJhdGVMaW1pdHMgb2JqZWN0LlxuICovXG5mdW5jdGlvbiB1cGRhdGVSYXRlTGltaXRzKFxuICBsaW1pdHMsXG4gIHsgc3RhdHVzQ29kZSwgaGVhZGVycyB9LFxuICBub3cgPSBEYXRlLm5vdygpLFxuKSB7XG4gIGNvbnN0IHVwZGF0ZWRSYXRlTGltaXRzID0ge1xuICAgIC4uLmxpbWl0cyxcbiAgfTtcblxuICAvLyBcIlRoZSBuYW1lIGlzIGNhc2UtaW5zZW5zaXRpdmUuXCJcbiAgLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0hlYWRlcnMvZ2V0XG4gIGNvbnN0IHJhdGVMaW1pdEhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sneC1zZW50cnktcmF0ZS1saW1pdHMnXTtcbiAgY29uc3QgcmV0cnlBZnRlckhlYWRlciA9IGhlYWRlcnMgJiYgaGVhZGVyc1sncmV0cnktYWZ0ZXInXTtcblxuICBpZiAocmF0ZUxpbWl0SGVhZGVyKSB7XG4gICAgLyoqXG4gICAgICogcmF0ZSBsaW1pdCBoZWFkZXJzIGFyZSBvZiB0aGUgZm9ybVxuICAgICAqICAgICA8aGVhZGVyPiw8aGVhZGVyPiwuLlxuICAgICAqIHdoZXJlIGVhY2ggPGhlYWRlcj4gaXMgb2YgdGhlIGZvcm1cbiAgICAgKiAgICAgPHJldHJ5X2FmdGVyPjogPGNhdGVnb3JpZXM+OiA8c2NvcGU+OiA8cmVhc29uX2NvZGU+XG4gICAgICogd2hlcmVcbiAgICAgKiAgICAgPHJldHJ5X2FmdGVyPiBpcyBhIGRlbGF5IGluIHNlY29uZHNcbiAgICAgKiAgICAgPGNhdGVnb3JpZXM+IGlzIHRoZSBldmVudCB0eXBlKHMpIChlcnJvciwgdHJhbnNhY3Rpb24sIGV0YykgYmVpbmcgcmF0ZSBsaW1pdGVkIGFuZCBpcyBvZiB0aGUgZm9ybVxuICAgICAqICAgICAgICAgPGNhdGVnb3J5Pjs8Y2F0ZWdvcnk+Oy4uLlxuICAgICAqICAgICA8c2NvcGU+IGlzIHdoYXQncyBiZWluZyBsaW1pdGVkIChvcmcsIHByb2plY3QsIG9yIGtleSkgLSBpZ25vcmVkIGJ5IFNES1xuICAgICAqICAgICA8cmVhc29uX2NvZGU+IGlzIGFuIGFyYml0cmFyeSBzdHJpbmcgbGlrZSBcIm9yZ19xdW90YVwiIC0gaWdub3JlZCBieSBTREtcbiAgICAgKi9cbiAgICBmb3IgKGNvbnN0IGxpbWl0IG9mIHJhdGVMaW1pdEhlYWRlci50cmltKCkuc3BsaXQoJywnKSkge1xuICAgICAgY29uc3QgW3JldHJ5QWZ0ZXIsIGNhdGVnb3JpZXNdID0gbGltaXQuc3BsaXQoJzonLCAyKTtcbiAgICAgIGNvbnN0IGhlYWRlckRlbGF5ID0gcGFyc2VJbnQocmV0cnlBZnRlciwgMTApO1xuICAgICAgY29uc3QgZGVsYXkgPSAoIWlzTmFOKGhlYWRlckRlbGF5KSA/IGhlYWRlckRlbGF5IDogNjApICogMTAwMDsgLy8gNjBzZWMgZGVmYXVsdFxuICAgICAgaWYgKCFjYXRlZ29yaWVzKSB7XG4gICAgICAgIHVwZGF0ZWRSYXRlTGltaXRzLmFsbCA9IG5vdyArIGRlbGF5O1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChjb25zdCBjYXRlZ29yeSBvZiBjYXRlZ29yaWVzLnNwbGl0KCc7JykpIHtcbiAgICAgICAgICB1cGRhdGVkUmF0ZUxpbWl0c1tjYXRlZ29yeV0gPSBub3cgKyBkZWxheTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmIChyZXRyeUFmdGVySGVhZGVyKSB7XG4gICAgdXBkYXRlZFJhdGVMaW1pdHMuYWxsID0gbm93ICsgcGFyc2VSZXRyeUFmdGVySGVhZGVyKHJldHJ5QWZ0ZXJIZWFkZXIsIG5vdyk7XG4gIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PT0gNDI5KSB7XG4gICAgdXBkYXRlZFJhdGVMaW1pdHMuYWxsID0gbm93ICsgNjAgKiAxMDAwO1xuICB9XG5cbiAgcmV0dXJuIHVwZGF0ZWRSYXRlTGltaXRzO1xufVxuXG5leHBvcnQgeyBERUZBVUxUX1JFVFJZX0FGVEVSLCBkaXNhYmxlZFVudGlsLCBpc1JhdGVMaW1pdGVkLCBwYXJzZVJldHJ5QWZ0ZXJIZWFkZXIsIHVwZGF0ZVJhdGVMaW1pdHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhdGVsaW1pdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/ratelimit.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/requestdata.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/requestdata.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addRequestDataToEvent\": function() { return /* binding */ addRequestDataToEvent; },\n/* harmony export */   \"addRequestDataToTransaction\": function() { return /* binding */ addRequestDataToTransaction; },\n/* harmony export */   \"extractPathForTransaction\": function() { return /* binding */ extractPathForTransaction; },\n/* harmony export */   \"extractRequestData\": function() { return /* binding */ extractRequestData; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n/* harmony import */ var _normalize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./normalize.js */ \"./node_modules/@sentry/utils/esm/normalize.js\");\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url.js */ \"./node_modules/@sentry/utils/esm/url.js\");\n\n\n\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = (0,_url_js__WEBPACK_IMPORTED_MODULE_0__.stripUrlQueryAndFragment)(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      return extractPathForTransaction(req, { path: true, method: true })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && deps && deps.cookie && deps.cookie.parse(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isString)(req.body) ? req.body : JSON.stringify((0,_normalize_js__WEBPACK_IMPORTED_MODULE_2__.normalize)(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @hidden\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && (0,_is_js__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    (deps && deps.url && deps.url.parse(originalUrl).query) ||\n    undefined\n  );\n}\n\n\n//# sourceMappingURL=requestdata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/requestdata.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/severity.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/severity.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"severityFromString\": function() { return /* binding */ severityFromString; },\n/* harmony export */   \"severityLevelFromString\": function() { return /* binding */ severityLevelFromString; },\n/* harmony export */   \"validSeverityLevels\": function() { return /* binding */ validSeverityLevels; }\n/* harmony export */ });\n// Note: Ideally the `SeverityLevel` type would be derived from `validSeverityLevels`, but that would mean either\n//\n// a) moving `validSeverityLevels` to `@sentry/types`,\n// b) moving the`SeverityLevel` type here, or\n// c) importing `validSeverityLevels` from here into `@sentry/types`.\n//\n// Option A would make `@sentry/types` a runtime dependency of `@sentry/utils` (not good), and options B and C would\n// create a circular dependency between `@sentry/types` and `@sentry/utils` (also not good). So a TODO accompanying the\n// type, reminding anyone who changes it to change this list also, will have to do.\n\nconst validSeverityLevels = ['fatal', 'error', 'warning', 'log', 'info', 'debug'];\n\n/**\n * Converts a string-based level into a member of the deprecated {@link Severity} enum.\n *\n * @deprecated `severityFromString` is deprecated. Please use `severityLevelFromString` instead.\n *\n * @param level String representation of Severity\n * @returns Severity\n */\nfunction severityFromString(level) {\n  return severityLevelFromString(level) ;\n}\n\n/**\n * Converts a string-based level into a `SeverityLevel`, normalizing it along the way.\n *\n * @param level String representation of desired `SeverityLevel`.\n * @returns The `SeverityLevel` corresponding to the given string, or 'log' if the string isn't a valid level.\n */\nfunction severityLevelFromString(level) {\n  return (level === 'warn' ? 'warning' : validSeverityLevels.includes(level) ? level : 'log') ;\n}\n\n\n//# sourceMappingURL=severity.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc2V2ZXJpdHkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0Esa0VBQWtFLGdCQUFnQjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUU0RTtBQUM1RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc2V2ZXJpdHkuanM/OTE3OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBOb3RlOiBJZGVhbGx5IHRoZSBgU2V2ZXJpdHlMZXZlbGAgdHlwZSB3b3VsZCBiZSBkZXJpdmVkIGZyb20gYHZhbGlkU2V2ZXJpdHlMZXZlbHNgLCBidXQgdGhhdCB3b3VsZCBtZWFuIGVpdGhlclxuLy9cbi8vIGEpIG1vdmluZyBgdmFsaWRTZXZlcml0eUxldmVsc2AgdG8gYEBzZW50cnkvdHlwZXNgLFxuLy8gYikgbW92aW5nIHRoZWBTZXZlcml0eUxldmVsYCB0eXBlIGhlcmUsIG9yXG4vLyBjKSBpbXBvcnRpbmcgYHZhbGlkU2V2ZXJpdHlMZXZlbHNgIGZyb20gaGVyZSBpbnRvIGBAc2VudHJ5L3R5cGVzYC5cbi8vXG4vLyBPcHRpb24gQSB3b3VsZCBtYWtlIGBAc2VudHJ5L3R5cGVzYCBhIHJ1bnRpbWUgZGVwZW5kZW5jeSBvZiBgQHNlbnRyeS91dGlsc2AgKG5vdCBnb29kKSwgYW5kIG9wdGlvbnMgQiBhbmQgQyB3b3VsZFxuLy8gY3JlYXRlIGEgY2lyY3VsYXIgZGVwZW5kZW5jeSBiZXR3ZWVuIGBAc2VudHJ5L3R5cGVzYCBhbmQgYEBzZW50cnkvdXRpbHNgIChhbHNvIG5vdCBnb29kKS4gU28gYSBUT0RPIGFjY29tcGFueWluZyB0aGVcbi8vIHR5cGUsIHJlbWluZGluZyBhbnlvbmUgd2hvIGNoYW5nZXMgaXQgdG8gY2hhbmdlIHRoaXMgbGlzdCBhbHNvLCB3aWxsIGhhdmUgdG8gZG8uXG5cbmNvbnN0IHZhbGlkU2V2ZXJpdHlMZXZlbHMgPSBbJ2ZhdGFsJywgJ2Vycm9yJywgJ3dhcm5pbmcnLCAnbG9nJywgJ2luZm8nLCAnZGVidWcnXTtcblxuLyoqXG4gKiBDb252ZXJ0cyBhIHN0cmluZy1iYXNlZCBsZXZlbCBpbnRvIGEgbWVtYmVyIG9mIHRoZSBkZXByZWNhdGVkIHtAbGluayBTZXZlcml0eX0gZW51bS5cbiAqXG4gKiBAZGVwcmVjYXRlZCBgc2V2ZXJpdHlGcm9tU3RyaW5nYCBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIGBzZXZlcml0eUxldmVsRnJvbVN0cmluZ2AgaW5zdGVhZC5cbiAqXG4gKiBAcGFyYW0gbGV2ZWwgU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIFNldmVyaXR5XG4gKiBAcmV0dXJucyBTZXZlcml0eVxuICovXG5mdW5jdGlvbiBzZXZlcml0eUZyb21TdHJpbmcobGV2ZWwpIHtcbiAgcmV0dXJuIHNldmVyaXR5TGV2ZWxGcm9tU3RyaW5nKGxldmVsKSA7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBzdHJpbmctYmFzZWQgbGV2ZWwgaW50byBhIGBTZXZlcml0eUxldmVsYCwgbm9ybWFsaXppbmcgaXQgYWxvbmcgdGhlIHdheS5cbiAqXG4gKiBAcGFyYW0gbGV2ZWwgU3RyaW5nIHJlcHJlc2VudGF0aW9uIG9mIGRlc2lyZWQgYFNldmVyaXR5TGV2ZWxgLlxuICogQHJldHVybnMgVGhlIGBTZXZlcml0eUxldmVsYCBjb3JyZXNwb25kaW5nIHRvIHRoZSBnaXZlbiBzdHJpbmcsIG9yICdsb2cnIGlmIHRoZSBzdHJpbmcgaXNuJ3QgYSB2YWxpZCBsZXZlbC5cbiAqL1xuZnVuY3Rpb24gc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcobGV2ZWwpIHtcbiAgcmV0dXJuIChsZXZlbCA9PT0gJ3dhcm4nID8gJ3dhcm5pbmcnIDogdmFsaWRTZXZlcml0eUxldmVscy5pbmNsdWRlcyhsZXZlbCkgPyBsZXZlbCA6ICdsb2cnKSA7XG59XG5cbmV4cG9ydCB7IHNldmVyaXR5RnJvbVN0cmluZywgc2V2ZXJpdHlMZXZlbEZyb21TdHJpbmcsIHZhbGlkU2V2ZXJpdHlMZXZlbHMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNldmVyaXR5LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/severity.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/stacktrace.js":
/*!******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/stacktrace.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createStackParser\": function() { return /* binding */ createStackParser; },\n/* harmony export */   \"getFunctionName\": function() { return /* binding */ getFunctionName; },\n/* harmony export */   \"nodeStackLineParser\": function() { return /* binding */ nodeStackLineParser; },\n/* harmony export */   \"stackParserFromStackParserOptions\": function() { return /* binding */ stackParserFromStackParserOptions; },\n/* harmony export */   \"stripSentryFramesAndReverse\": function() { return /* binding */ stripSentryFramesAndReverse; }\n/* harmony export */ });\nconst STACKTRACE_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    for (const line of stack.split('\\n').slice(skipFirst)) {\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  let localStack = stack;\n\n  const firstFrameFunction = localStack[0].function || '';\n  const lastFrameFunction = localStack[localStack.length - 1].function || '';\n\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (firstFrameFunction.indexOf('captureMessage') !== -1 || firstFrameFunction.indexOf('captureException') !== -1) {\n    localStack = localStack.slice(1);\n  }\n\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (lastFrameFunction.indexOf('sentryWrapped') !== -1) {\n    localStack = localStack.slice(0, -1);\n  }\n\n  // The frame where the crash happened, should be the last entry in the array\n  return localStack\n    .slice(0, STACKTRACE_LIMIT)\n    .map(frame => ({\n      ...frame,\n      filename: frame.filename || localStack[0].filename,\n      function: frame.function || '?',\n    }))\n    .reverse();\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    const lineMatch = line.match(FULL_MATCH);\n    if (!lineMatch) {\n      return undefined;\n    }\n\n    let object;\n    let method;\n    let functionName;\n    let typeName;\n    let methodName;\n\n    if (lineMatch[1]) {\n      functionName = lineMatch[1];\n\n      let methodStart = functionName.lastIndexOf('.');\n      if (functionName[methodStart - 1] === '.') {\n        methodStart--;\n      }\n\n      if (methodStart > 0) {\n        object = functionName.slice(0, methodStart);\n        method = functionName.slice(methodStart + 1);\n        const objectEnd = object.indexOf('.Module');\n        if (objectEnd > 0) {\n          functionName = functionName.slice(objectEnd + 1);\n          object = object.slice(0, objectEnd);\n        }\n      }\n      typeName = undefined;\n    }\n\n    if (method) {\n      typeName = object;\n      methodName = method;\n    }\n\n    if (method === '<anonymous>') {\n      methodName = undefined;\n      functionName = undefined;\n    }\n\n    if (functionName === undefined) {\n      methodName = methodName || '<anonymous>';\n      functionName = typeName ? `${typeName}.${methodName}` : methodName;\n    }\n\n    const filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n    const isNative = lineMatch[5] === 'native';\n    const isInternal =\n      isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && filename.indexOf(':\\\\') !== 1);\n\n    // in_app is all that's not an internal Node function or a module within node_modules\n    // note that isNative appears to return true even for node core libraries\n    // see https://github.com/getsentry/raven-node/issues/176\n    const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n    return {\n      filename,\n      module: getModule ? getModule(filename) : undefined,\n      function: functionName,\n      lineno: parseInt(lineMatch[3], 10) || undefined,\n      colno: parseInt(lineMatch[4], 10) || undefined,\n      in_app,\n    };\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\n\n//# sourceMappingURL=stacktrace.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/stacktrace.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/string.js":
/*!**************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/string.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"escapeStringForRegex\": function() { return /* binding */ escapeStringForRegex; },\n/* harmony export */   \"isMatchingPattern\": function() { return /* binding */ isMatchingPattern; },\n/* harmony export */   \"safeJoin\": function() { return /* binding */ safeJoin; },\n/* harmony export */   \"snipLine\": function() { return /* binding */ snipLine; },\n/* harmony export */   \"stringMatchesSomePattern\": function() { return /* binding */ stringMatchesSomePattern; },\n/* harmony export */   \"truncate\": function() { return /* binding */ truncate; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string (0 = unlimited)\n * @returns string Encoded\n */\nfunction truncate(str, max = 0) {\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`;\n}\n\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nfunction snipLine(line, colno) {\n  let newLine = line;\n  const lineLength = newLine.length;\n  if (lineLength <= 150) {\n    return newLine;\n  }\n  if (colno > lineLength) {\n    // eslint-disable-next-line no-param-reassign\n    colno = lineLength;\n  }\n\n  let start = Math.max(colno - 60, 0);\n  if (start < 5) {\n    start = 0;\n  }\n\n  let end = Math.min(start + 140, lineLength);\n  if (end > lineLength - 5) {\n    end = lineLength;\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n  if (start > 0) {\n    newLine = `'{snip} ${newLine}`;\n  }\n  if (end < lineLength) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  const output = [];\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n\n/**\n * Checks if the given value matches a regex or string\n *\n * @param value The string to test\n * @param pattern Either a regex or a string against which `value` will be matched\n * @param requireExactStringMatch If true, `value` must match `pattern` exactly. If false, `value` will match\n * `pattern` if it contains `pattern`. Only applies to string-type patterns.\n */\nfunction isMatchingPattern(\n  value,\n  pattern,\n  requireExactStringMatch = false,\n) {\n  if (!(0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) {\n    return false;\n  }\n\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) {\n    return pattern.test(value);\n  }\n  if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isString)(pattern)) {\n    return requireExactStringMatch ? value === pattern : value.includes(pattern);\n  }\n\n  return false;\n}\n\n/**\n * Test the given string against an array of strings and regexes. By default, string matching is done on a\n * substring-inclusion basis rather than a strict equality basis\n *\n * @param testString The string to test\n * @param patterns The patterns against which to test the string\n * @param requireExactStringMatch If true, `testString` must match one of the given string patterns exactly in order to\n * count. If false, `testString` will match a string pattern if it contains that pattern.\n * @returns\n */\nfunction stringMatchesSomePattern(\n  testString,\n  patterns = [],\n  requireExactStringMatch = false,\n) {\n  return patterns.some(pattern => isMatchingPattern(testString, pattern, requireExactStringMatch));\n}\n\n/**\n * Given a string, escape characters which have meaning in the regex grammar, such that the result is safe to feed to\n * `new RegExp()`.\n *\n * Based on https://github.com/sindresorhus/escape-string-regexp. Vendored to a) reduce the size by skipping the runtime\n * type-checking, and b) ensure it gets down-compiled for old versions of Node (the published package only supports Node\n * 12+).\n *\n * @param regexString The string to escape\n * @returns An version of the string with all special regex characters escaped\n */\nfunction escapeStringForRegex(regexString) {\n  // escape the hyphen separately so we can also replace it with a unicode literal hyphen, to avoid the problems\n  // discussed in https://github.com/sindresorhus/escape-string-regexp/issues/20.\n  return regexString.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n}\n\n\n//# sourceMappingURL=string.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3RyaW5nLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNkM7O0FBRTdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msa0JBQWtCO0FBQ3hEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0sRUFBRSxRQUFRO0FBQ2pDO0FBQ0E7QUFDQSxrQkFBa0IsS0FBSztBQUN2Qjs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxnREFBUTtBQUNmO0FBQ0E7O0FBRUEsTUFBTSxnREFBUTtBQUNkO0FBQ0E7QUFDQSxNQUFNLGdEQUFRO0FBQ2Q7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQzs7QUFFMkc7QUFDM0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzZW50cnkvdXRpbHMvZXNtL3N0cmluZy5qcz9jODkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzU3RyaW5nLCBpc1JlZ0V4cCB9IGZyb20gJy4vaXMuanMnO1xuXG4vKipcbiAqIFRydW5jYXRlcyBnaXZlbiBzdHJpbmcgdG8gdGhlIG1heGltdW0gY2hhcmFjdGVycyBjb3VudFxuICpcbiAqIEBwYXJhbSBzdHIgQW4gb2JqZWN0IHRoYXQgY29udGFpbnMgc2VyaWFsaXphYmxlIHZhbHVlc1xuICogQHBhcmFtIG1heCBNYXhpbXVtIG51bWJlciBvZiBjaGFyYWN0ZXJzIGluIHRydW5jYXRlZCBzdHJpbmcgKDAgPSB1bmxpbWl0ZWQpXG4gKiBAcmV0dXJucyBzdHJpbmcgRW5jb2RlZFxuICovXG5mdW5jdGlvbiB0cnVuY2F0ZShzdHIsIG1heCA9IDApIHtcbiAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnIHx8IG1heCA9PT0gMCkge1xuICAgIHJldHVybiBzdHI7XG4gIH1cbiAgcmV0dXJuIHN0ci5sZW5ndGggPD0gbWF4ID8gc3RyIDogYCR7c3RyLnNsaWNlKDAsIG1heCl9Li4uYDtcbn1cblxuLyoqXG4gKiBUaGlzIGlzIGJhc2ljYWxseSBqdXN0IGB0cmltX2xpbmVgIGZyb21cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9nZXRzZW50cnkvc2VudHJ5L2Jsb2IvbWFzdGVyL3NyYy9zZW50cnkvbGFuZy9qYXZhc2NyaXB0L3Byb2Nlc3Nvci5weSNMNjdcbiAqXG4gKiBAcGFyYW0gc3RyIEFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIHNlcmlhbGl6YWJsZSB2YWx1ZXNcbiAqIEBwYXJhbSBtYXggTWF4aW11bSBudW1iZXIgb2YgY2hhcmFjdGVycyBpbiB0cnVuY2F0ZWQgc3RyaW5nXG4gKiBAcmV0dXJucyBzdHJpbmcgRW5jb2RlZFxuICovXG5mdW5jdGlvbiBzbmlwTGluZShsaW5lLCBjb2xubykge1xuICBsZXQgbmV3TGluZSA9IGxpbmU7XG4gIGNvbnN0IGxpbmVMZW5ndGggPSBuZXdMaW5lLmxlbmd0aDtcbiAgaWYgKGxpbmVMZW5ndGggPD0gMTUwKSB7XG4gICAgcmV0dXJuIG5ld0xpbmU7XG4gIH1cbiAgaWYgKGNvbG5vID4gbGluZUxlbmd0aCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIGNvbG5vID0gbGluZUxlbmd0aDtcbiAgfVxuXG4gIGxldCBzdGFydCA9IE1hdGgubWF4KGNvbG5vIC0gNjAsIDApO1xuICBpZiAoc3RhcnQgPCA1KSB7XG4gICAgc3RhcnQgPSAwO1xuICB9XG5cbiAgbGV0IGVuZCA9IE1hdGgubWluKHN0YXJ0ICsgMTQwLCBsaW5lTGVuZ3RoKTtcbiAgaWYgKGVuZCA+IGxpbmVMZW5ndGggLSA1KSB7XG4gICAgZW5kID0gbGluZUxlbmd0aDtcbiAgfVxuICBpZiAoZW5kID09PSBsaW5lTGVuZ3RoKSB7XG4gICAgc3RhcnQgPSBNYXRoLm1heChlbmQgLSAxNDAsIDApO1xuICB9XG5cbiAgbmV3TGluZSA9IG5ld0xpbmUuc2xpY2Uoc3RhcnQsIGVuZCk7XG4gIGlmIChzdGFydCA+IDApIHtcbiAgICBuZXdMaW5lID0gYCd7c25pcH0gJHtuZXdMaW5lfWA7XG4gIH1cbiAgaWYgKGVuZCA8IGxpbmVMZW5ndGgpIHtcbiAgICBuZXdMaW5lICs9ICcge3NuaXB9JztcbiAgfVxuXG4gIHJldHVybiBuZXdMaW5lO1xufVxuXG4vKipcbiAqIEpvaW4gdmFsdWVzIGluIGFycmF5XG4gKiBAcGFyYW0gaW5wdXQgYXJyYXkgb2YgdmFsdWVzIHRvIGJlIGpvaW5lZCB0b2dldGhlclxuICogQHBhcmFtIGRlbGltaXRlciBzdHJpbmcgdG8gYmUgcGxhY2VkIGluLWJldHdlZW4gdmFsdWVzXG4gKiBAcmV0dXJucyBKb2luZWQgdmFsdWVzXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5mdW5jdGlvbiBzYWZlSm9pbihpbnB1dCwgZGVsaW1pdGVyKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBjb25zdCBvdXRwdXQgPSBbXTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9wcmVmZXItZm9yLW9mXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCB2YWx1ZSA9IGlucHV0W2ldO1xuICAgIHRyeSB7XG4gICAgICBvdXRwdXQucHVzaChTdHJpbmcodmFsdWUpKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBvdXRwdXQucHVzaCgnW3ZhbHVlIGNhbm5vdCBiZSBzZXJpYWxpemVkXScpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBvdXRwdXQuam9pbihkZWxpbWl0ZXIpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgZ2l2ZW4gdmFsdWUgbWF0Y2hlcyBhIHJlZ2V4IG9yIHN0cmluZ1xuICpcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgc3RyaW5nIHRvIHRlc3RcbiAqIEBwYXJhbSBwYXR0ZXJuIEVpdGhlciBhIHJlZ2V4IG9yIGEgc3RyaW5nIGFnYWluc3Qgd2hpY2ggYHZhbHVlYCB3aWxsIGJlIG1hdGNoZWRcbiAqIEBwYXJhbSByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCBJZiB0cnVlLCBgdmFsdWVgIG11c3QgbWF0Y2ggYHBhdHRlcm5gIGV4YWN0bHkuIElmIGZhbHNlLCBgdmFsdWVgIHdpbGwgbWF0Y2hcbiAqIGBwYXR0ZXJuYCBpZiBpdCBjb250YWlucyBgcGF0dGVybmAuIE9ubHkgYXBwbGllcyB0byBzdHJpbmctdHlwZSBwYXR0ZXJucy5cbiAqL1xuZnVuY3Rpb24gaXNNYXRjaGluZ1BhdHRlcm4oXG4gIHZhbHVlLFxuICBwYXR0ZXJuLFxuICByZXF1aXJlRXhhY3RTdHJpbmdNYXRjaCA9IGZhbHNlLFxuKSB7XG4gIGlmICghaXNTdHJpbmcodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKGlzUmVnRXhwKHBhdHRlcm4pKSB7XG4gICAgcmV0dXJuIHBhdHRlcm4udGVzdCh2YWx1ZSk7XG4gIH1cbiAgaWYgKGlzU3RyaW5nKHBhdHRlcm4pKSB7XG4gICAgcmV0dXJuIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoID8gdmFsdWUgPT09IHBhdHRlcm4gOiB2YWx1ZS5pbmNsdWRlcyhwYXR0ZXJuKTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqXG4gKiBUZXN0IHRoZSBnaXZlbiBzdHJpbmcgYWdhaW5zdCBhbiBhcnJheSBvZiBzdHJpbmdzIGFuZCByZWdleGVzLiBCeSBkZWZhdWx0LCBzdHJpbmcgbWF0Y2hpbmcgaXMgZG9uZSBvbiBhXG4gKiBzdWJzdHJpbmctaW5jbHVzaW9uIGJhc2lzIHJhdGhlciB0aGFuIGEgc3RyaWN0IGVxdWFsaXR5IGJhc2lzXG4gKlxuICogQHBhcmFtIHRlc3RTdHJpbmcgVGhlIHN0cmluZyB0byB0ZXN0XG4gKiBAcGFyYW0gcGF0dGVybnMgVGhlIHBhdHRlcm5zIGFnYWluc3Qgd2hpY2ggdG8gdGVzdCB0aGUgc3RyaW5nXG4gKiBAcGFyYW0gcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggSWYgdHJ1ZSwgYHRlc3RTdHJpbmdgIG11c3QgbWF0Y2ggb25lIG9mIHRoZSBnaXZlbiBzdHJpbmcgcGF0dGVybnMgZXhhY3RseSBpbiBvcmRlciB0b1xuICogY291bnQuIElmIGZhbHNlLCBgdGVzdFN0cmluZ2Agd2lsbCBtYXRjaCBhIHN0cmluZyBwYXR0ZXJuIGlmIGl0IGNvbnRhaW5zIHRoYXQgcGF0dGVybi5cbiAqIEByZXR1cm5zXG4gKi9cbmZ1bmN0aW9uIHN0cmluZ01hdGNoZXNTb21lUGF0dGVybihcbiAgdGVzdFN0cmluZyxcbiAgcGF0dGVybnMgPSBbXSxcbiAgcmVxdWlyZUV4YWN0U3RyaW5nTWF0Y2ggPSBmYWxzZSxcbikge1xuICByZXR1cm4gcGF0dGVybnMuc29tZShwYXR0ZXJuID0+IGlzTWF0Y2hpbmdQYXR0ZXJuKHRlc3RTdHJpbmcsIHBhdHRlcm4sIHJlcXVpcmVFeGFjdFN0cmluZ01hdGNoKSk7XG59XG5cbi8qKlxuICogR2l2ZW4gYSBzdHJpbmcsIGVzY2FwZSBjaGFyYWN0ZXJzIHdoaWNoIGhhdmUgbWVhbmluZyBpbiB0aGUgcmVnZXggZ3JhbW1hciwgc3VjaCB0aGF0IHRoZSByZXN1bHQgaXMgc2FmZSB0byBmZWVkIHRvXG4gKiBgbmV3IFJlZ0V4cCgpYC5cbiAqXG4gKiBCYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2VzY2FwZS1zdHJpbmctcmVnZXhwLiBWZW5kb3JlZCB0byBhKSByZWR1Y2UgdGhlIHNpemUgYnkgc2tpcHBpbmcgdGhlIHJ1bnRpbWVcbiAqIHR5cGUtY2hlY2tpbmcsIGFuZCBiKSBlbnN1cmUgaXQgZ2V0cyBkb3duLWNvbXBpbGVkIGZvciBvbGQgdmVyc2lvbnMgb2YgTm9kZSAodGhlIHB1Ymxpc2hlZCBwYWNrYWdlIG9ubHkgc3VwcG9ydHMgTm9kZVxuICogMTIrKS5cbiAqXG4gKiBAcGFyYW0gcmVnZXhTdHJpbmcgVGhlIHN0cmluZyB0byBlc2NhcGVcbiAqIEByZXR1cm5zIEFuIHZlcnNpb24gb2YgdGhlIHN0cmluZyB3aXRoIGFsbCBzcGVjaWFsIHJlZ2V4IGNoYXJhY3RlcnMgZXNjYXBlZFxuICovXG5mdW5jdGlvbiBlc2NhcGVTdHJpbmdGb3JSZWdleChyZWdleFN0cmluZykge1xuICAvLyBlc2NhcGUgdGhlIGh5cGhlbiBzZXBhcmF0ZWx5IHNvIHdlIGNhbiBhbHNvIHJlcGxhY2UgaXQgd2l0aCBhIHVuaWNvZGUgbGl0ZXJhbCBoeXBoZW4sIHRvIGF2b2lkIHRoZSBwcm9ibGVtc1xuICAvLyBkaXNjdXNzZWQgaW4gaHR0cHM6Ly9naXRodWIuY29tL3NpbmRyZXNvcmh1cy9lc2NhcGUtc3RyaW5nLXJlZ2V4cC9pc3N1ZXMvMjAuXG4gIHJldHVybiByZWdleFN0cmluZy5yZXBsYWNlKC9bfFxcXFx7fSgpW1xcXV4kKyo/Ll0vZywgJ1xcXFwkJicpLnJlcGxhY2UoLy0vZywgJ1xcXFx4MmQnKTtcbn1cblxuZXhwb3J0IHsgZXNjYXBlU3RyaW5nRm9yUmVnZXgsIGlzTWF0Y2hpbmdQYXR0ZXJuLCBzYWZlSm9pbiwgc25pcExpbmUsIHN0cmluZ01hdGNoZXNTb21lUGF0dGVybiwgdHJ1bmNhdGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0cmluZy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/string.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/supports.js":
/*!****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/supports.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isNativeFetch\": function() { return /* binding */ isNativeFetch; },\n/* harmony export */   \"supportsDOMError\": function() { return /* binding */ supportsDOMError; },\n/* harmony export */   \"supportsDOMException\": function() { return /* binding */ supportsDOMException; },\n/* harmony export */   \"supportsErrorEvent\": function() { return /* binding */ supportsErrorEvent; },\n/* harmony export */   \"supportsFetch\": function() { return /* binding */ supportsFetch; },\n/* harmony export */   \"supportsHistory\": function() { return /* binding */ supportsHistory; },\n/* harmony export */   \"supportsNativeFetch\": function() { return /* binding */ supportsNativeFetch; },\n/* harmony export */   \"supportsReferrerPolicy\": function() { return /* binding */ supportsReferrerPolicy; },\n/* harmony export */   \"supportsReportingObserver\": function() { return /* binding */ supportsReportingObserver; }\n/* harmony export */ });\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger.js */ \"./node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        _logger_js__WEBPACK_IMPORTED_MODULE_1__.logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\n\n//# sourceMappingURL=supports.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/supports.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/syncpromise.js":
/*!*******************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/syncpromise.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SyncPromise\": function() { return /* binding */ SyncPromise; },\n/* harmony export */   \"rejectedSyncPromise\": function() { return /* binding */ rejectedSyncPromise; },\n/* harmony export */   \"resolvedSyncPromise\": function() { return /* binding */ resolvedSyncPromise; }\n/* harmony export */ });\n/* harmony import */ var _is_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./is.js */ \"./node_modules/@sentry/utils/esm/is.js\");\n\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if ((0,_is_js__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\n\n//# sourceMappingURL=syncpromise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3luY3Byb21pc2UuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQzs7QUFFckM7O0FBRUE7QUFDQSxZQUFZO0FBQ1o7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQSxzQkFBc0I7QUFDdEIsQ0FBQyx3QkFBd0I7O0FBRXpCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixjQUFjOztBQUVkO0FBQ0E7QUFDQSxLQUFLLHdDQUF3Qyx5Q0FBeUMseUNBQXlDLHlDQUF5Qyx5Q0FBeUM7QUFDak47QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7O0FBRUE7QUFDQSxlQUFlO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUEsUUFBUSxrREFBVTtBQUNsQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVpRTtBQUNqRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vc3luY3Byb21pc2UuanM/ZTgwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1RoZW5hYmxlIH0gZnJvbSAnLi9pcy5qcyc7XG5cbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1mdW5jdGlvbi1yZXR1cm4tdHlwZSAqL1xuXG4vKiogU3luY1Byb21pc2UgaW50ZXJuYWwgc3RhdGVzICovXG52YXIgU3RhdGVzOyAoZnVuY3Rpb24gKFN0YXRlcykge1xuICAvKiogUGVuZGluZyAqL1xuICBjb25zdCBQRU5ESU5HID0gMDsgU3RhdGVzW1N0YXRlc1tcIlBFTkRJTkdcIl0gPSBQRU5ESU5HXSA9IFwiUEVORElOR1wiO1xuICAvKiogUmVzb2x2ZWQgLyBPSyAqL1xuICBjb25zdCBSRVNPTFZFRCA9IDE7IFN0YXRlc1tTdGF0ZXNbXCJSRVNPTFZFRFwiXSA9IFJFU09MVkVEXSA9IFwiUkVTT0xWRURcIjtcbiAgLyoqIFJlamVjdGVkIC8gRXJyb3IgKi9cbiAgY29uc3QgUkVKRUNURUQgPSAyOyBTdGF0ZXNbU3RhdGVzW1wiUkVKRUNURURcIl0gPSBSRUpFQ1RFRF0gPSBcIlJFSkVDVEVEXCI7XG59KShTdGF0ZXMgfHwgKFN0YXRlcyA9IHt9KSk7XG5cbi8vIE92ZXJsb2FkcyBzbyB3ZSBjYW4gY2FsbCByZXNvbHZlZFN5bmNQcm9taXNlIHdpdGhvdXQgYXJndW1lbnRzIGFuZCBnZW5lcmljIGFyZ3VtZW50XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJlc29sdmVkIHN5bmMgcHJvbWlzZS5cbiAqXG4gKiBAcGFyYW0gdmFsdWUgdGhlIHZhbHVlIHRvIHJlc29sdmUgdGhlIHByb21pc2Ugd2l0aFxuICogQHJldHVybnMgdGhlIHJlc29sdmVkIHN5bmMgcHJvbWlzZVxuICovXG5mdW5jdGlvbiByZXNvbHZlZFN5bmNQcm9taXNlKHZhbHVlKSB7XG4gIHJldHVybiBuZXcgU3luY1Byb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgcmVzb2x2ZSh2YWx1ZSk7XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSByZWplY3RlZCBzeW5jIHByb21pc2UuXG4gKlxuICogQHBhcmFtIHZhbHVlIHRoZSB2YWx1ZSB0byByZWplY3QgdGhlIHByb21pc2Ugd2l0aFxuICogQHJldHVybnMgdGhlIHJlamVjdGVkIHN5bmMgcHJvbWlzZVxuICovXG5mdW5jdGlvbiByZWplY3RlZFN5bmNQcm9taXNlKHJlYXNvbikge1xuICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChfLCByZWplY3QpID0+IHtcbiAgICByZWplY3QocmVhc29uKTtcbiAgfSk7XG59XG5cbi8qKlxuICogVGhlbmFibGUgY2xhc3MgdGhhdCBiZWhhdmVzIGxpa2UgYSBQcm9taXNlIGFuZCBmb2xsb3dzIGl0J3MgaW50ZXJmYWNlXG4gKiBidXQgaXMgbm90IGFzeW5jIGludGVybmFsbHlcbiAqL1xuY2xhc3MgU3luY1Byb21pc2Uge1xuICAgX19pbml0KCkge3RoaXMuX3N0YXRlID0gU3RhdGVzLlBFTkRJTkc7fVxuICAgX19pbml0MigpIHt0aGlzLl9oYW5kbGVycyA9IFtdO31cblxuICAgY29uc3RydWN0b3IoXG4gICAgZXhlY3V0b3IsXG4gICkge1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQuY2FsbCh0aGlzKTtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0Mi5jYWxsKHRoaXMpO1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQzLmNhbGwodGhpcyk7U3luY1Byb21pc2UucHJvdG90eXBlLl9faW5pdDQuY2FsbCh0aGlzKTtTeW5jUHJvbWlzZS5wcm90b3R5cGUuX19pbml0NS5jYWxsKHRoaXMpO1N5bmNQcm9taXNlLnByb3RvdHlwZS5fX2luaXQ2LmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKHRoaXMuX3Jlc29sdmUsIHRoaXMuX3JlamVjdCk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgdGhpcy5fcmVqZWN0KGUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgdGhlbihcbiAgICBvbmZ1bGZpbGxlZCxcbiAgICBvbnJlamVjdGVkLFxuICApIHtcbiAgICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZXJzLnB1c2goW1xuICAgICAgICBmYWxzZSxcbiAgICAgICAgcmVzdWx0ID0+IHtcbiAgICAgICAgICBpZiAoIW9uZnVsZmlsbGVkKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiDCr1xcXyjjg4QpXy/Cr1xuICAgICAgICAgICAgLy8gVE9ETzogRklYTUVcbiAgICAgICAgICAgIHJlc29sdmUocmVzdWx0ICk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIHJlc29sdmUob25mdWxmaWxsZWQocmVzdWx0KSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgIHJlamVjdChlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlYXNvbiA9PiB7XG4gICAgICAgICAgaWYgKCFvbnJlamVjdGVkKSB7XG4gICAgICAgICAgICByZWplY3QocmVhc29uKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmVzb2x2ZShvbnJlamVjdGVkKHJlYXNvbikpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgXSk7XG4gICAgICB0aGlzLl9leGVjdXRlSGFuZGxlcnMoKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgY2F0Y2goXG4gICAgb25yZWplY3RlZCxcbiAgKSB7XG4gICAgcmV0dXJuIHRoaXMudGhlbih2YWwgPT4gdmFsLCBvbnJlamVjdGVkKTtcbiAgfVxuXG4gIC8qKiBKU0RvYyAqL1xuICAgZmluYWxseShvbmZpbmFsbHkpIHtcbiAgICByZXR1cm4gbmV3IFN5bmNQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGxldCB2YWw7XG4gICAgICBsZXQgaXNSZWplY3RlZDtcblxuICAgICAgcmV0dXJuIHRoaXMudGhlbihcbiAgICAgICAgdmFsdWUgPT4ge1xuICAgICAgICAgIGlzUmVqZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgICB2YWwgPSB2YWx1ZTtcbiAgICAgICAgICBpZiAob25maW5hbGx5KSB7XG4gICAgICAgICAgICBvbmZpbmFsbHkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlYXNvbiA9PiB7XG4gICAgICAgICAgaXNSZWplY3RlZCA9IHRydWU7XG4gICAgICAgICAgdmFsID0gcmVhc29uO1xuICAgICAgICAgIGlmIChvbmZpbmFsbHkpIHtcbiAgICAgICAgICAgIG9uZmluYWxseSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICkudGhlbigoKSA9PiB7XG4gICAgICAgIGlmIChpc1JlamVjdGVkKSB7XG4gICAgICAgICAgcmVqZWN0KHZhbCk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzb2x2ZSh2YWwgKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0MygpIHt0aGlzLl9yZXNvbHZlID0gKHZhbHVlKSA9PiB7XG4gICAgdGhpcy5fc2V0UmVzdWx0KFN0YXRlcy5SRVNPTFZFRCwgdmFsdWUpO1xuICB9O31cblxuICAvKiogSlNEb2MgKi9cbiAgICBfX2luaXQ0KCkge3RoaXMuX3JlamVjdCA9IChyZWFzb24pID0+IHtcbiAgICB0aGlzLl9zZXRSZXN1bHQoU3RhdGVzLlJFSkVDVEVELCByZWFzb24pO1xuICB9O31cblxuICAvKiogSlNEb2MgKi9cbiAgICBfX2luaXQ1KCkge3RoaXMuX3NldFJlc3VsdCA9IChzdGF0ZSwgdmFsdWUpID0+IHtcbiAgICBpZiAodGhpcy5fc3RhdGUgIT09IFN0YXRlcy5QRU5ESU5HKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgICB2b2lkICh2YWx1ZSApLnRoZW4odGhpcy5fcmVzb2x2ZSwgdGhpcy5fcmVqZWN0KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9zdGF0ZSA9IHN0YXRlO1xuICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG5cbiAgICB0aGlzLl9leGVjdXRlSGFuZGxlcnMoKTtcbiAgfTt9XG5cbiAgLyoqIEpTRG9jICovXG4gICAgX19pbml0NigpIHt0aGlzLl9leGVjdXRlSGFuZGxlcnMgPSAoKSA9PiB7XG4gICAgaWYgKHRoaXMuX3N0YXRlID09PSBTdGF0ZXMuUEVORElORykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGNhY2hlZEhhbmRsZXJzID0gdGhpcy5faGFuZGxlcnMuc2xpY2UoKTtcbiAgICB0aGlzLl9oYW5kbGVycyA9IFtdO1xuXG4gICAgY2FjaGVkSGFuZGxlcnMuZm9yRWFjaChoYW5kbGVyID0+IHtcbiAgICAgIGlmIChoYW5kbGVyWzBdKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKHRoaXMuX3N0YXRlID09PSBTdGF0ZXMuUkVTT0xWRUQpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1mbG9hdGluZy1wcm9taXNlc1xuICAgICAgICBoYW5kbGVyWzFdKHRoaXMuX3ZhbHVlICk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLl9zdGF0ZSA9PT0gU3RhdGVzLlJFSkVDVEVEKSB7XG4gICAgICAgIGhhbmRsZXJbMl0odGhpcy5fdmFsdWUpO1xuICAgICAgfVxuXG4gICAgICBoYW5kbGVyWzBdID0gdHJ1ZTtcbiAgICB9KTtcbiAgfTt9XG59XG5cbmV4cG9ydCB7IFN5bmNQcm9taXNlLCByZWplY3RlZFN5bmNQcm9taXNlLCByZXNvbHZlZFN5bmNQcm9taXNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zeW5jcHJvbWlzZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/syncpromise.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/time.js":
/*!************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/time.js ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"_browserPerformanceTimeOriginMode\": function() { return /* binding */ _browserPerformanceTimeOriginMode; },\n/* harmony export */   \"browserPerformanceTimeOrigin\": function() { return /* binding */ browserPerformanceTimeOrigin; },\n/* harmony export */   \"dateTimestampInSeconds\": function() { return /* binding */ dateTimestampInSeconds; },\n/* harmony export */   \"timestampInSeconds\": function() { return /* binding */ timestampInSeconds; },\n/* harmony export */   \"timestampWithMs\": function() { return /* binding */ timestampWithMs; },\n/* harmony export */   \"usingPerformanceAPI\": function() { return /* binding */ usingPerformanceAPI; }\n/* harmony export */ });\n/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node.js */ \"./node_modules/@sentry/utils/esm/node.js\");\n/* harmony import */ var _worldwide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./worldwide.js */ \"./node_modules/@sentry/utils/esm/worldwide.js\");\n/* module decorator */ module = __webpack_require__.hmd(module);\n\n\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = (0,_worldwide_js__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = (0,_node_js__WEBPACK_IMPORTED_MODULE_1__.isNodeEnv)() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\n\n//# sourceMappingURL=time.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/time.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/tracing.js":
/*!***************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/tracing.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TRACEPARENT_REGEXP\": function() { return /* binding */ TRACEPARENT_REGEXP; },\n/* harmony export */   \"extractTraceparentData\": function() { return /* binding */ extractTraceparentData; }\n/* harmony export */ });\nconst TRACEPARENT_REGEXP = new RegExp(\n  '^[ \\\\t]*' + // whitespace\n    '([0-9a-f]{32})?' + // trace_id\n    '-?([0-9a-f]{16})?' + // span_id\n    '-?([01])?' + // sampled\n    '[ \\\\t]*$', // whitespace\n);\n\n/**\n * Extract transaction context data from a `sentry-trace` header.\n *\n * @param traceparent Traceparent string\n *\n * @returns Object containing data from the header, or undefined if traceparent string is malformed\n */\nfunction extractTraceparentData(traceparent) {\n  const matches = traceparent.match(TRACEPARENT_REGEXP);\n\n  if (!traceparent || !matches) {\n    // empty string or no matches is invalid traceparent data\n    return undefined;\n  }\n\n  let parentSampled;\n  if (matches[3] === '1') {\n    parentSampled = true;\n  } else if (matches[3] === '0') {\n    parentSampled = false;\n  }\n\n  return {\n    traceId: matches[1],\n    parentSampled,\n    parentSpanId: matches[2],\n  };\n}\n\n\n//# sourceMappingURL=tracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdHJhY2luZy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQSxlQUFlLEdBQUc7QUFDbEIsaUJBQWlCLEdBQUc7QUFDcEI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXNEO0FBQ3REIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac2VudHJ5L3V0aWxzL2VzbS90cmFjaW5nLmpzPzJiYmUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVFJBQ0VQQVJFTlRfUkVHRVhQID0gbmV3IFJlZ0V4cChcbiAgJ15bIFxcXFx0XSonICsgLy8gd2hpdGVzcGFjZVxuICAgICcoWzAtOWEtZl17MzJ9KT8nICsgLy8gdHJhY2VfaWRcbiAgICAnLT8oWzAtOWEtZl17MTZ9KT8nICsgLy8gc3Bhbl9pZFxuICAgICctPyhbMDFdKT8nICsgLy8gc2FtcGxlZFxuICAgICdbIFxcXFx0XSokJywgLy8gd2hpdGVzcGFjZVxuKTtcblxuLyoqXG4gKiBFeHRyYWN0IHRyYW5zYWN0aW9uIGNvbnRleHQgZGF0YSBmcm9tIGEgYHNlbnRyeS10cmFjZWAgaGVhZGVyLlxuICpcbiAqIEBwYXJhbSB0cmFjZXBhcmVudCBUcmFjZXBhcmVudCBzdHJpbmdcbiAqXG4gKiBAcmV0dXJucyBPYmplY3QgY29udGFpbmluZyBkYXRhIGZyb20gdGhlIGhlYWRlciwgb3IgdW5kZWZpbmVkIGlmIHRyYWNlcGFyZW50IHN0cmluZyBpcyBtYWxmb3JtZWRcbiAqL1xuZnVuY3Rpb24gZXh0cmFjdFRyYWNlcGFyZW50RGF0YSh0cmFjZXBhcmVudCkge1xuICBjb25zdCBtYXRjaGVzID0gdHJhY2VwYXJlbnQubWF0Y2goVFJBQ0VQQVJFTlRfUkVHRVhQKTtcblxuICBpZiAoIXRyYWNlcGFyZW50IHx8ICFtYXRjaGVzKSB7XG4gICAgLy8gZW1wdHkgc3RyaW5nIG9yIG5vIG1hdGNoZXMgaXMgaW52YWxpZCB0cmFjZXBhcmVudCBkYXRhXG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIGxldCBwYXJlbnRTYW1wbGVkO1xuICBpZiAobWF0Y2hlc1szXSA9PT0gJzEnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IHRydWU7XG4gIH0gZWxzZSBpZiAobWF0Y2hlc1szXSA9PT0gJzAnKSB7XG4gICAgcGFyZW50U2FtcGxlZCA9IGZhbHNlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0cmFjZUlkOiBtYXRjaGVzWzFdLFxuICAgIHBhcmVudFNhbXBsZWQsXG4gICAgcGFyZW50U3BhbklkOiBtYXRjaGVzWzJdLFxuICB9O1xufVxuXG5leHBvcnQgeyBUUkFDRVBBUkVOVF9SRUdFWFAsIGV4dHJhY3RUcmFjZXBhcmVudERhdGEgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRyYWNpbmcuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/tracing.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/url.js":
/*!***********************************************!*\
  !*** ./node_modules/@sentry/utils/esm/url.js ***!
  \***********************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getNumberOfUrlSegments\": function() { return /* binding */ getNumberOfUrlSegments; },\n/* harmony export */   \"parseUrl\": function() { return /* binding */ parseUrl; },\n/* harmony export */   \"stripUrlQueryAndFragment\": function() { return /* binding */ stripUrlQueryAndFragment; }\n/* harmony export */ });\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\n\n//# sourceMappingURL=url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdXJsLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVzRTtBQUN0RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vdXJsLmpzPzBmOTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQYXJzZXMgc3RyaW5nIGZvcm0gb2YgVVJMIGludG8gYW4gb2JqZWN0XG4gKiAvLyBib3Jyb3dlZCBmcm9tIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMzOTg2I2FwcGVuZGl4LUJcbiAqIC8vIGludGVudGlvbmFsbHkgdXNpbmcgcmVnZXggYW5kIG5vdCA8YS8+IGhyZWYgcGFyc2luZyB0cmljayBiZWNhdXNlIFJlYWN0IE5hdGl2ZSBhbmQgb3RoZXJcbiAqIC8vIGVudmlyb25tZW50cyB3aGVyZSBET00gbWlnaHQgbm90IGJlIGF2YWlsYWJsZVxuICogQHJldHVybnMgcGFyc2VkIFVSTCBvYmplY3RcbiAqL1xuZnVuY3Rpb24gcGFyc2VVcmwodXJsKVxuXG4ge1xuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB7fTtcbiAgfVxuXG4gIGNvbnN0IG1hdGNoID0gdXJsLm1hdGNoKC9eKChbXjovPyNdKyk6KT8oXFwvXFwvKFteLz8jXSopKT8oW14/I10qKShcXD8oW14jXSopKT8oIyguKikpPyQvKTtcblxuICBpZiAoIW1hdGNoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9XG5cbiAgLy8gY29lcmNlIHRvIHVuZGVmaW5lZCB2YWx1ZXMgdG8gZW1wdHkgc3RyaW5nIHNvIHdlIGRvbid0IGdldCAndW5kZWZpbmVkJ1xuICBjb25zdCBxdWVyeSA9IG1hdGNoWzZdIHx8ICcnO1xuICBjb25zdCBmcmFnbWVudCA9IG1hdGNoWzhdIHx8ICcnO1xuICByZXR1cm4ge1xuICAgIGhvc3Q6IG1hdGNoWzRdLFxuICAgIHBhdGg6IG1hdGNoWzVdLFxuICAgIHByb3RvY29sOiBtYXRjaFsyXSxcbiAgICByZWxhdGl2ZTogbWF0Y2hbNV0gKyBxdWVyeSArIGZyYWdtZW50LCAvLyBldmVyeXRoaW5nIG1pbnVzIG9yaWdpblxuICB9O1xufVxuXG4vKipcbiAqIFN0cmlwIHRoZSBxdWVyeSBzdHJpbmcgYW5kIGZyYWdtZW50IG9mZiBvZiBhIGdpdmVuIFVSTCBvciBwYXRoIChpZiBwcmVzZW50KVxuICpcbiAqIEBwYXJhbSB1cmxQYXRoIEZ1bGwgVVJMIG9yIHBhdGgsIGluY2x1ZGluZyBwb3NzaWJsZSBxdWVyeSBzdHJpbmcgYW5kL29yIGZyYWdtZW50XG4gKiBAcmV0dXJucyBVUkwgb3IgcGF0aCB3aXRob3V0IHF1ZXJ5IHN0cmluZyBvciBmcmFnbWVudFxuICovXG5mdW5jdGlvbiBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQodXJsUGF0aCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1lc2NhcGVcbiAgcmV0dXJuIHVybFBhdGguc3BsaXQoL1tcXD8jXS8sIDEpWzBdO1xufVxuXG4vKipcbiAqIFJldHVybnMgbnVtYmVyIG9mIFVSTCBzZWdtZW50cyBvZiBhIHBhc3NlZCBzdHJpbmcgVVJMLlxuICovXG5mdW5jdGlvbiBnZXROdW1iZXJPZlVybFNlZ21lbnRzKHVybCkge1xuICAvLyBzcGxpdCBhdCAnLycgb3IgYXQgJ1xcLycgdG8gc3BsaXQgcmVnZXggdXJscyBjb3JyZWN0bHlcbiAgcmV0dXJuIHVybC5zcGxpdCgvXFxcXD9cXC8vKS5maWx0ZXIocyA9PiBzLmxlbmd0aCA+IDAgJiYgcyAhPT0gJywnKS5sZW5ndGg7XG59XG5cbmV4cG9ydCB7IGdldE51bWJlck9mVXJsU2VnbWVudHMsIHBhcnNlVXJsLCBzdHJpcFVybFF1ZXJ5QW5kRnJhZ21lbnQgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVybC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/url.js\n"));

/***/ }),

/***/ "./node_modules/@sentry/utils/esm/worldwide.js":
/*!*****************************************************!*\
  !*** ./node_modules/@sentry/utils/esm/worldwide.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GLOBAL_OBJ\": function() { return /* binding */ GLOBAL_OBJ; },\n/* harmony export */   \"getGlobalObject\": function() { return /* binding */ getGlobalObject; },\n/* harmony export */   \"getGlobalSingleton\": function() { return /* binding */ getGlobalSingleton; }\n/* harmony export */ });\n/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof __webpack_require__.g == 'object' && isGlobalObj(__webpack_require__.g)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\n\n//# sourceMappingURL=worldwide.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxxQkFBTSw0QkFBNEIscUJBQU07QUFDbEQ7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBOztBQUUyRDtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHNlbnRyeS91dGlscy9lc20vd29ybGR3aWRlLmpzPzAxMDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEludGVybmFsIGdsb2JhbCB3aXRoIGNvbW1vbiBwcm9wZXJ0aWVzIGFuZCBTZW50cnkgZXh0ZW5zaW9ucyAgKi9cblxuLy8gVGhlIGNvZGUgYmVsb3cgZm9yICdpc0dsb2JhbE9iaicgYW5kICdHTE9CQUxfT0JKJyB3YXMgY29waWVkIGZyb20gY29yZS1qcyBiZWZvcmUgbW9kaWZpY2F0aW9uXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9ibG9iLzFiOTQ0ZGY1NTI4MmNkYzk5YzkwZGI1ZjQ5ZWIwYjZlZGEyY2MwYTMvcGFja2FnZXMvY29yZS1qcy9pbnRlcm5hbHMvZ2xvYmFsLmpzXG4vLyBjb3JlLWpzIGhhcyB0aGUgZm9sbG93aW5nIGxpY2VuY2U6XG4vL1xuLy8gQ29weXJpZ2h0IChjKSAyMDE0LTIwMjIgRGVuaXMgUHVzaGthcmV2XG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuLyoqIFJldHVybnMgJ29iaicgaWYgaXQncyB0aGUgZ2xvYmFsIG9iamVjdCwgb3RoZXJ3aXNlIHJldHVybnMgdW5kZWZpbmVkICovXG5mdW5jdGlvbiBpc0dsb2JhbE9iaihvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouTWF0aCA9PSBNYXRoID8gb2JqIDogdW5kZWZpbmVkO1xufVxuXG4vKiogR2V0J3MgdGhlIGdsb2JhbCBvYmplY3QgZm9yIHRoZSBjdXJyZW50IEphdmFTY3JpcHQgcnVudGltZSAqL1xuY29uc3QgR0xPQkFMX09CSiA9XG4gICh0eXBlb2YgZ2xvYmFsVGhpcyA9PSAnb2JqZWN0JyAmJiBpc0dsb2JhbE9iaihnbG9iYWxUaGlzKSkgfHxcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICAodHlwZW9mIHdpbmRvdyA9PSAnb2JqZWN0JyAmJiBpc0dsb2JhbE9iaih3aW5kb3cpKSB8fFxuICAodHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgaXNHbG9iYWxPYmooc2VsZikpIHx8XG4gICh0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGlzR2xvYmFsT2JqKGdsb2JhbCkpIHx8XG4gIChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0pKCkgfHxcbiAge307XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgVXNlIEdMT0JBTF9PQkogaW5zdGVhZCBvciBXSU5ET1cgZnJvbSBAc2VudHJ5L2Jyb3dzZXIuIFRoaXMgd2lsbCBiZSByZW1vdmVkIGluIHY4XG4gKi9cbmZ1bmN0aW9uIGdldEdsb2JhbE9iamVjdCgpIHtcbiAgcmV0dXJuIEdMT0JBTF9PQkogO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBnbG9iYWwgc2luZ2xldG9uIGNvbnRhaW5lZCBpbiB0aGUgZ2xvYmFsIGBfX1NFTlRSWV9fYCBvYmplY3QuXG4gKlxuICogSWYgdGhlIHNpbmdsZXRvbiBkb2Vzbid0IGFscmVhZHkgZXhpc3QgaW4gYF9fU0VOVFJZX19gLCBpdCB3aWxsIGJlIGNyZWF0ZWQgdXNpbmcgdGhlIGdpdmVuIGZhY3RvcnlcbiAqIGZ1bmN0aW9uIGFuZCBhZGRlZCB0byB0aGUgYF9fU0VOVFJZX19gIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0gbmFtZSBuYW1lIG9mIHRoZSBnbG9iYWwgc2luZ2xldG9uIG9uIF9fU0VOVFJZX19cbiAqIEBwYXJhbSBjcmVhdG9yIGNyZWF0b3IgRmFjdG9yeSBmdW5jdGlvbiB0byBjcmVhdGUgdGhlIHNpbmdsZXRvbiBpZiBpdCBkb2Vzbid0IGFscmVhZHkgZXhpc3Qgb24gYF9fU0VOVFJZX19gXG4gKiBAcGFyYW0gb2JqIChPcHRpb25hbCkgVGhlIGdsb2JhbCBvYmplY3Qgb24gd2hpY2ggdG8gbG9vayBmb3IgYF9fU0VOVFJZX19gLCBpZiBub3QgYEdMT0JBTF9PQkpgJ3MgcmV0dXJuIHZhbHVlXG4gKiBAcmV0dXJucyB0aGUgc2luZ2xldG9uXG4gKi9cbmZ1bmN0aW9uIGdldEdsb2JhbFNpbmdsZXRvbihuYW1lLCBjcmVhdG9yLCBvYmopIHtcbiAgY29uc3QgZ2JsID0gKG9iaiB8fCBHTE9CQUxfT0JKKSA7XG4gIGNvbnN0IF9fU0VOVFJZX18gPSAoZ2JsLl9fU0VOVFJZX18gPSBnYmwuX19TRU5UUllfXyB8fCB7fSk7XG4gIGNvbnN0IHNpbmdsZXRvbiA9IF9fU0VOVFJZX19bbmFtZV0gfHwgKF9fU0VOVFJZX19bbmFtZV0gPSBjcmVhdG9yKCkpO1xuICByZXR1cm4gc2luZ2xldG9uO1xufVxuXG5leHBvcnQgeyBHTE9CQUxfT0JKLCBnZXRHbG9iYWxPYmplY3QsIGdldEdsb2JhbFNpbmdsZXRvbiB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d29ybGR3aWRlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@sentry/utils/esm/worldwide.js\n"));

/***/ }),

/***/ "./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = __webpack_require__(/*! ./common */ \"./node_modules/debug/src/common.js\")(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/debug/src/browser.js\n"));

/***/ }),

/***/ "./node_modules/debug/src/common.js":
/*!******************************************!*\
  !*** ./node_modules/debug/src/common.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = __webpack_require__(/*! ms */ \"./node_modules/ms/index.js\");\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/debug/src/common.js\n"));

/***/ }),

/***/ "./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js ***!
  \**********************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nvar reactIs = __webpack_require__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLGtEQUFVOztBQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTs7O0FBR0o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLG9CQUFvQixpQkFBaUI7QUFDckM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkxZGIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n"));

/***/ }),

/***/ "./node_modules/localforage/dist/localforage.js":
/*!******************************************************!*\
  !*** ./node_modules/localforage/dist/localforage.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(true){module.exports=f()}else { var g; }})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=undefined;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=undefined;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof __webpack_require__.g !== \"undefined\" ? __webpack_require__.g : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/localforage/dist/localforage.js\n"));

/***/ }),

/***/ "./node_modules/logdown/dist/logdown.min.js":
/*!**************************************************!*\
  !*** ./node_modules/logdown/dist/logdown.min.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("!function(t,e){ true?module.exports=e():0}(window,function(){return function(r){var n={};function o(t){if(n[t])return n[t].exports;var e=n[t]={i:t,l:!1,exports:{}};return r[t].call(e.exports,e,e.exports,o),e.l=!0,e.exports}return o.m=r,o.c=n,o.d=function(t,e,r){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},o.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,\"a\",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p=\"\",o(o.s=0)}([function(t,e,r){var n,o=r(1)(),i=r(3),s=r(5),f=r(8)();o.prefixColors=[\"#F2777A\",\"#F99157\",\"#FFCC66\",\"#99CC99\",\"#66CCCC\",\"#6699CC\",\"#CC99CC\"],o._setPrefixRegExps=function(){try{f.localStorage&&\"string\"==typeof f.localStorage.getItem(\"debug\")&&(o._prefixRegExps=[],f.localStorage.getItem(\"debug\").split(\",\").forEach(function(t){var e=\"enable\";\"-\"===(t=t.trim())[0]&&(t=t.substr(1),e=\"disable\");var r=o._prepareRegExpForPrefixSearch(t);o._prefixRegExps.push({type:e,regExp:r})}))}catch(t){}},o._getNextPrefixColor=(n=0,function(){return n+=1,o.prefixColors[n%o.prefixColors.length]}),o.prototype._getDecoratedPrefix=function(){var t=[];return s()?(t.push(\"%c\"+this.opts.prefix+\"%c \"),t.push(\"color:\"+this.opts.prefixColor+\"; font-weight:bold;\",\"\")):t.push(\"[\"+this.opts.prefix+\"] \"),t},o.prototype._prepareOutput=function(t){var e,r=this._getDecoratedPrefix();return\"string\"==typeof t[0]?this.opts.markdown&&s()?(e=i.parse(t[0]),r[0]=r[0]+e.text,r=r.concat(e.styles)):r[0]=r[0]+t[0]:r.push(t[0]),1<t.length&&(r=r.concat(t.slice(1))),r},o._setPrefixRegExps(),t.exports=o},function(t,e,r){var f=r(2);t.exports=function(){function s(t,e){return this instanceof s?s._isPrefixAlreadyInUse(t)?s._getInstanceByPrefix(t):(this.opts=s._normalizeOpts(t,e),this.state=s._getInitialState(this.opts),s._decorateLoggerMethods(this),s._instances.push(this),this):new s(t,e)}return s.transports=[],s._instances=[],s._prefixRegExps=[],s._prepareRegExpForPrefixSearch=function(t){return new RegExp(\"^\"+t.replace(/\\*/g,\".*?\")+\"$\")},s._isPrefixAlreadyInUse=function(e){return s._instances.some(function(t){return t.opts.prefix===e})},s._getInstanceByPrefix=function(e){return s._instances.filter(function(t){return t.opts.prefix===e})[0]},s._normalizeOpts=function(t,e){if(\"string\"!=typeof t)throw new TypeError(\"prefix must be a string\");var r=void 0===(e=e||{}).markdown||Boolean(e.markdown),n=e.prefixColor||s._getNextPrefixColor();return{logger:e.logger||console,markdown:r,plaintext:Boolean(e.plaintext),prefix:t,prefixColor:n}},s._getInitialState=function(t){return{isEnabled:s._getEnableState(t)}},s._getEnableState=function(e){var r=!1;return s._prefixRegExps.forEach(function(t){\"enable\"===t.type&&t.regExp.test(e.prefix)?r=!0:\"disable\"===t.type&&t.regExp.test(e.prefix)&&(r=!1)}),r},s._decorateLoggerMethods=function(t){var i=t.opts.logger,e=Object.keys(i).filter(function(t){return\"function\"==typeof i[t]});0===e.length&&(e=[\"debug\",\"log\",\"warn\",\"error\",\"info\"]),e.forEach(function(o){t[o]=function(){var e=f(arguments),r=this.opts.prefix;if(s.transports.length){var n=\"[\"+r+\"] \"+e.filter(function(t){return\"object\"!=typeof t}).join(\" \");s.transports.forEach(function(t){t({state:this.state,instance:r,level:o,args:e,msg:n})}.bind(this))}if(this.state.isEnabled){var t=this._prepareOutput(e,o);i[o].apply(i,t)}}})},s}},function(t,e){t.exports=function(t){return Array.prototype.slice.call(t,0)}},function(t,e,r){var n=[];function o(e){return function(t){return n.push(e),n.push(\"\"),\"%c\"+t+\"%c\"}}var i=new(r(4))({renderer:{\"*\":o(\"font-weight:bold;\"),_:o(\"font-style:italic;\"),\"`\":o(\"background-color:rgba(255,204,102, 0.1);color:#FFCC66;padding:2px 5px;border-radius:2px;\")}});t.exports={parse:function(t){var e={text:i.parse(t),styles:[].concat(n)};return n.length=0,e}}},function(t,e){var x=/([_*`\\\\]|[^_*`\\\\]+)/g,r=/[_*`]/;function n(t){this.renderer=t.renderer}function d(t){return r.test(t)}n.prototype.parse=function(t){if(\"\"===t)return\"\";var r,e,n,o=t.match(x),i=this.renderer,s=\"\",f=[],u={},a=0;function p(t){for(var e=\"\";r&&r.tag!==t;)e=r.tag+r.text+e,u[r.tag]=!1,r=f.pop();return e}for(;n=o[a];){if(e=\"\",a++,d(n))if(u[n])e=p(n),e=i[r.tag](r.text+e),u[n]=!1,r=f.pop();else{var c=\"\";if(\"`\"===n){var l=o.indexOf(n,a);-1!==l&&(s+=p(),c=o.slice(a,l).join(\"\"),a=l)}r&&f.push(r),u[n]=!0,r={tag:n,text:c}}else if(\"\\\\\"===(e=n)){var g=o[a];(d(g)||\"\\\\\"===g)&&(e=g,a++)}e&&(r?r.text+=e:s+=e,e=\"\")}return s+p()},t.exports=n},function(t,e,r){var n=r(6),o=r(7);t.exports=function(){return n()||o()}},function(t,e){t.exports=function(){try{return\"WebkitAppearance\"in document.documentElement.style&&!/Edge/.test(navigator.userAgent)}catch(t){return!1}}},function(t,e){t.exports=function(){try{return/firefox\\/(\\d+)/i.test(navigator.userAgent)}catch(t){return!1}}},function(r,t,e){(function(t){function e(t,e){return\"object\"==typeof t&&t.self===t&&t||\"object\"==typeof e&&e.global===e&&e||this}r.exports=e.bind(this,self,t),r.exports.getGlobal=e}).call(this,e(9))},function(ob,pb){var qb;qb=function(){return this}();try{qb=qb||Function(\"return this\")()||eval(\"this\")}catch(ob){\"object\"==typeof window&&(qb=window)}ob.exports=qb}])});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbG9nZG93bi9kaXN0L2xvZ2Rvd24ubWluLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGVBQWUsS0FBaUQsb0JBQW9CLENBQTZHLENBQUMsbUJBQW1CLG1CQUFtQixTQUFTLGNBQWMsNEJBQTRCLFlBQVkscUJBQXFCLDJEQUEyRCx1Q0FBdUMscUNBQXFDLG9CQUFvQixFQUFFLGlCQUFpQiw0RkFBNEYsZUFBZSx3Q0FBd0MsU0FBUyxFQUFFLG1CQUFtQiw4QkFBOEIscURBQXFELDBCQUEwQiw2Q0FBNkMsc0JBQXNCLDZEQUE2RCxZQUFZLGVBQWUsU0FBUyxpQkFBaUIsaUNBQWlDLGlCQUFpQixZQUFZLFVBQVUsc0JBQXNCLG1CQUFtQixpREFBaUQsaUJBQWlCLGtCQUFrQixzQ0FBc0Msc0hBQXNILElBQUksc0pBQXNKLGVBQWUsbURBQW1ELHlDQUF5Qyx1QkFBdUIsZ0JBQWdCLEVBQUUsR0FBRyxXQUFXLHVDQUF1QyxvREFBb0QsNkNBQTZDLFNBQVMseUZBQXlGLGlCQUFpQiwyQ0FBMkMsd0NBQXdDLG1DQUFtQywrS0FBK0ssbUNBQW1DLGlCQUFpQixXQUFXLHFCQUFxQixnQkFBZ0IsZ09BQWdPLHVHQUF1RyxrREFBa0QscUNBQXFDLHFDQUFxQyx5QkFBeUIsRUFBRSxvQ0FBb0MsdUNBQXVDLHlCQUF5QixLQUFLLGdDQUFnQyxxRUFBcUUsdUJBQXVCLHlFQUF5RSxPQUFPLDJGQUEyRixnQ0FBZ0MsT0FBTyxnQ0FBZ0MsK0JBQStCLFNBQVMsNENBQTRDLG9HQUFvRyxJQUFJLHNDQUFzQyx3REFBd0QsOEJBQThCLEVBQUUsOEVBQThFLGdCQUFnQixzQ0FBc0Msd0JBQXdCLHNDQUFzQyx5QkFBeUIsWUFBWSxpQ0FBaUMsR0FBRyxpREFBaUQsRUFBRSxhQUFhLHlCQUF5QiwrQkFBK0Isa0JBQWtCLEVBQUUsSUFBSSxlQUFlLHNCQUFzQix3Q0FBd0MsaUJBQWlCLFNBQVMsY0FBYyxtQkFBbUIseUNBQXlDLGlCQUFpQixVQUFVLHdCQUF3QiwwQkFBMEIsa0RBQWtELGNBQWMsZ0JBQWdCLGtCQUFrQixJQUFJLEVBQUUsV0FBVyxrQkFBa0IsT0FBTyxxQ0FBcUMsc0JBQXNCLGVBQWUsdUNBQXVDLGNBQWMseUJBQXlCLGNBQWMsaUJBQWlCLDhCQUE4QixtQkFBbUIscURBQXFELEtBQUssY0FBYyxhQUFhLGFBQWEsd0NBQXdDLFNBQVMsS0FBSyxPQUFPLEVBQUUsdUVBQXVFLEtBQUssU0FBUyxZQUFZLHFCQUFxQiw2Q0FBNkMsd0JBQXdCLGNBQWMsc0JBQXNCLFdBQVcsNEJBQTRCLDJCQUEyQixhQUFhLGFBQWEsaUJBQWlCLGtCQUFrQixxQkFBcUIsaUJBQWlCLGVBQWUscUJBQXFCLElBQUksNkZBQTZGLFNBQVMsV0FBVyxlQUFlLHFCQUFxQixJQUFJLGtEQUFrRCxTQUFTLFdBQVcsaUJBQWlCLGFBQWEsZ0JBQWdCLG1GQUFtRixvREFBb0Qsa0JBQWtCLGlCQUFpQixPQUFPLGNBQWMsWUFBWSxHQUFHLElBQUksK0NBQStDLFVBQVUscUNBQXFDLGNBQWMsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbG9nZG93bi9kaXN0L2xvZ2Rvd24ubWluLmpzPzBiZTciXSwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9ZSgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sZSk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5sb2dkb3duPWUoKTp0LmxvZ2Rvd249ZSgpfSh3aW5kb3csZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24ocil7dmFyIG49e307ZnVuY3Rpb24gbyh0KXtpZihuW3RdKXJldHVybiBuW3RdLmV4cG9ydHM7dmFyIGU9blt0XT17aTp0LGw6ITEsZXhwb3J0czp7fX07cmV0dXJuIHJbdF0uY2FsbChlLmV4cG9ydHMsZSxlLmV4cG9ydHMsbyksZS5sPSEwLGUuZXhwb3J0c31yZXR1cm4gby5tPXIsby5jPW4sby5kPWZ1bmN0aW9uKHQsZSxyKXtvLm8odCxlKXx8T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7ZW51bWVyYWJsZTohMCxnZXQ6cn0pfSxvLnI9ZnVuY3Rpb24odCl7XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLnRvU3RyaW5nVGFnJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxTeW1ib2wudG9TdHJpbmdUYWcse3ZhbHVlOlwiTW9kdWxlXCJ9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KX0sby50PWZ1bmN0aW9uKGUsdCl7aWYoMSZ0JiYoZT1vKGUpKSw4JnQpcmV0dXJuIGU7aWYoNCZ0JiZcIm9iamVjdFwiPT10eXBlb2YgZSYmZSYmZS5fX2VzTW9kdWxlKXJldHVybiBlO3ZhciByPU9iamVjdC5jcmVhdGUobnVsbCk7aWYoby5yKHIpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFwiZGVmYXVsdFwiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOmV9KSwyJnQmJlwic3RyaW5nXCIhPXR5cGVvZiBlKWZvcih2YXIgbiBpbiBlKW8uZChyLG4sZnVuY3Rpb24odCl7cmV0dXJuIGVbdF19LmJpbmQobnVsbCxuKSk7cmV0dXJuIHJ9LG8ubj1mdW5jdGlvbih0KXt2YXIgZT10JiZ0Ll9fZXNNb2R1bGU/ZnVuY3Rpb24oKXtyZXR1cm4gdC5kZWZhdWx0fTpmdW5jdGlvbigpe3JldHVybiB0fTtyZXR1cm4gby5kKGUsXCJhXCIsZSksZX0sby5vPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfSxvLnA9XCJcIixvKG8ucz0wKX0oW2Z1bmN0aW9uKHQsZSxyKXt2YXIgbixvPXIoMSkoKSxpPXIoMykscz1yKDUpLGY9cig4KSgpO28ucHJlZml4Q29sb3JzPVtcIiNGMjc3N0FcIixcIiNGOTkxNTdcIixcIiNGRkNDNjZcIixcIiM5OUNDOTlcIixcIiM2NkNDQ0NcIixcIiM2Njk5Q0NcIixcIiNDQzk5Q0NcIl0sby5fc2V0UHJlZml4UmVnRXhwcz1mdW5jdGlvbigpe3RyeXtmLmxvY2FsU3RvcmFnZSYmXCJzdHJpbmdcIj09dHlwZW9mIGYubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJkZWJ1Z1wiKSYmKG8uX3ByZWZpeFJlZ0V4cHM9W10sZi5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImRlYnVnXCIpLnNwbGl0KFwiLFwiKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPVwiZW5hYmxlXCI7XCItXCI9PT0odD10LnRyaW0oKSlbMF0mJih0PXQuc3Vic3RyKDEpLGU9XCJkaXNhYmxlXCIpO3ZhciByPW8uX3ByZXBhcmVSZWdFeHBGb3JQcmVmaXhTZWFyY2godCk7by5fcHJlZml4UmVnRXhwcy5wdXNoKHt0eXBlOmUscmVnRXhwOnJ9KX0pKX1jYXRjaCh0KXt9fSxvLl9nZXROZXh0UHJlZml4Q29sb3I9KG49MCxmdW5jdGlvbigpe3JldHVybiBuKz0xLG8ucHJlZml4Q29sb3JzW24lby5wcmVmaXhDb2xvcnMubGVuZ3RoXX0pLG8ucHJvdG90eXBlLl9nZXREZWNvcmF0ZWRQcmVmaXg9ZnVuY3Rpb24oKXt2YXIgdD1bXTtyZXR1cm4gcygpPyh0LnB1c2goXCIlY1wiK3RoaXMub3B0cy5wcmVmaXgrXCIlYyBcIiksdC5wdXNoKFwiY29sb3I6XCIrdGhpcy5vcHRzLnByZWZpeENvbG9yK1wiOyBmb250LXdlaWdodDpib2xkO1wiLFwiXCIpKTp0LnB1c2goXCJbXCIrdGhpcy5vcHRzLnByZWZpeCtcIl0gXCIpLHR9LG8ucHJvdG90eXBlLl9wcmVwYXJlT3V0cHV0PWZ1bmN0aW9uKHQpe3ZhciBlLHI9dGhpcy5fZ2V0RGVjb3JhdGVkUHJlZml4KCk7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHRbMF0/dGhpcy5vcHRzLm1hcmtkb3duJiZzKCk/KGU9aS5wYXJzZSh0WzBdKSxyWzBdPXJbMF0rZS50ZXh0LHI9ci5jb25jYXQoZS5zdHlsZXMpKTpyWzBdPXJbMF0rdFswXTpyLnB1c2godFswXSksMTx0Lmxlbmd0aCYmKHI9ci5jb25jYXQodC5zbGljZSgxKSkpLHJ9LG8uX3NldFByZWZpeFJlZ0V4cHMoKSx0LmV4cG9ydHM9b30sZnVuY3Rpb24odCxlLHIpe3ZhciBmPXIoMik7dC5leHBvcnRzPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gcyh0LGUpe3JldHVybiB0aGlzIGluc3RhbmNlb2Ygcz9zLl9pc1ByZWZpeEFscmVhZHlJblVzZSh0KT9zLl9nZXRJbnN0YW5jZUJ5UHJlZml4KHQpOih0aGlzLm9wdHM9cy5fbm9ybWFsaXplT3B0cyh0LGUpLHRoaXMuc3RhdGU9cy5fZ2V0SW5pdGlhbFN0YXRlKHRoaXMub3B0cykscy5fZGVjb3JhdGVMb2dnZXJNZXRob2RzKHRoaXMpLHMuX2luc3RhbmNlcy5wdXNoKHRoaXMpLHRoaXMpOm5ldyBzKHQsZSl9cmV0dXJuIHMudHJhbnNwb3J0cz1bXSxzLl9pbnN0YW5jZXM9W10scy5fcHJlZml4UmVnRXhwcz1bXSxzLl9wcmVwYXJlUmVnRXhwRm9yUHJlZml4U2VhcmNoPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUmVnRXhwKFwiXlwiK3QucmVwbGFjZSgvXFwqL2csXCIuKj9cIikrXCIkXCIpfSxzLl9pc1ByZWZpeEFscmVhZHlJblVzZT1mdW5jdGlvbihlKXtyZXR1cm4gcy5faW5zdGFuY2VzLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIHQub3B0cy5wcmVmaXg9PT1lfSl9LHMuX2dldEluc3RhbmNlQnlQcmVmaXg9ZnVuY3Rpb24oZSl7cmV0dXJuIHMuX2luc3RhbmNlcy5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIHQub3B0cy5wcmVmaXg9PT1lfSlbMF19LHMuX25vcm1hbGl6ZU9wdHM9ZnVuY3Rpb24odCxlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKFwicHJlZml4IG11c3QgYmUgYSBzdHJpbmdcIik7dmFyIHI9dm9pZCAwPT09KGU9ZXx8e30pLm1hcmtkb3dufHxCb29sZWFuKGUubWFya2Rvd24pLG49ZS5wcmVmaXhDb2xvcnx8cy5fZ2V0TmV4dFByZWZpeENvbG9yKCk7cmV0dXJue2xvZ2dlcjplLmxvZ2dlcnx8Y29uc29sZSxtYXJrZG93bjpyLHBsYWludGV4dDpCb29sZWFuKGUucGxhaW50ZXh0KSxwcmVmaXg6dCxwcmVmaXhDb2xvcjpufX0scy5fZ2V0SW5pdGlhbFN0YXRlPWZ1bmN0aW9uKHQpe3JldHVybntpc0VuYWJsZWQ6cy5fZ2V0RW5hYmxlU3RhdGUodCl9fSxzLl9nZXRFbmFibGVTdGF0ZT1mdW5jdGlvbihlKXt2YXIgcj0hMTtyZXR1cm4gcy5fcHJlZml4UmVnRXhwcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe1wiZW5hYmxlXCI9PT10LnR5cGUmJnQucmVnRXhwLnRlc3QoZS5wcmVmaXgpP3I9ITA6XCJkaXNhYmxlXCI9PT10LnR5cGUmJnQucmVnRXhwLnRlc3QoZS5wcmVmaXgpJiYocj0hMSl9KSxyfSxzLl9kZWNvcmF0ZUxvZ2dlck1ldGhvZHM9ZnVuY3Rpb24odCl7dmFyIGk9dC5vcHRzLmxvZ2dlcixlPU9iamVjdC5rZXlzKGkpLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBpW3RdfSk7MD09PWUubGVuZ3RoJiYoZT1bXCJkZWJ1Z1wiLFwibG9nXCIsXCJ3YXJuXCIsXCJlcnJvclwiLFwiaW5mb1wiXSksZS5mb3JFYWNoKGZ1bmN0aW9uKG8pe3Rbb109ZnVuY3Rpb24oKXt2YXIgZT1mKGFyZ3VtZW50cykscj10aGlzLm9wdHMucHJlZml4O2lmKHMudHJhbnNwb3J0cy5sZW5ndGgpe3ZhciBuPVwiW1wiK3IrXCJdIFwiK2UuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVyblwib2JqZWN0XCIhPXR5cGVvZiB0fSkuam9pbihcIiBcIik7cy50cmFuc3BvcnRzLmZvckVhY2goZnVuY3Rpb24odCl7dCh7c3RhdGU6dGhpcy5zdGF0ZSxpbnN0YW5jZTpyLGxldmVsOm8sYXJnczplLG1zZzpufSl9LmJpbmQodGhpcykpfWlmKHRoaXMuc3RhdGUuaXNFbmFibGVkKXt2YXIgdD10aGlzLl9wcmVwYXJlT3V0cHV0KGUsbyk7aVtvXS5hcHBseShpLHQpfX19KX0sc319LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKHQpe3JldHVybiBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0LDApfX0sZnVuY3Rpb24odCxlLHIpe3ZhciBuPVtdO2Z1bmN0aW9uIG8oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBuLnB1c2goZSksbi5wdXNoKFwiXCIpLFwiJWNcIit0K1wiJWNcIn19dmFyIGk9bmV3KHIoNCkpKHtyZW5kZXJlcjp7XCIqXCI6byhcImZvbnQtd2VpZ2h0OmJvbGQ7XCIpLF86byhcImZvbnQtc3R5bGU6aXRhbGljO1wiKSxcImBcIjpvKFwiYmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyMDQsMTAyLCAwLjEpO2NvbG9yOiNGRkNDNjY7cGFkZGluZzoycHggNXB4O2JvcmRlci1yYWRpdXM6MnB4O1wiKX19KTt0LmV4cG9ydHM9e3BhcnNlOmZ1bmN0aW9uKHQpe3ZhciBlPXt0ZXh0OmkucGFyc2UodCksc3R5bGVzOltdLmNvbmNhdChuKX07cmV0dXJuIG4ubGVuZ3RoPTAsZX19fSxmdW5jdGlvbih0LGUpe3ZhciB4PS8oW18qYFxcXFxdfFteXypgXFxcXF0rKS9nLHI9L1tfKmBdLztmdW5jdGlvbiBuKHQpe3RoaXMucmVuZGVyZXI9dC5yZW5kZXJlcn1mdW5jdGlvbiBkKHQpe3JldHVybiByLnRlc3QodCl9bi5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24odCl7aWYoXCJcIj09PXQpcmV0dXJuXCJcIjt2YXIgcixlLG4sbz10Lm1hdGNoKHgpLGk9dGhpcy5yZW5kZXJlcixzPVwiXCIsZj1bXSx1PXt9LGE9MDtmdW5jdGlvbiBwKHQpe2Zvcih2YXIgZT1cIlwiO3ImJnIudGFnIT09dDspZT1yLnRhZytyLnRleHQrZSx1W3IudGFnXT0hMSxyPWYucG9wKCk7cmV0dXJuIGV9Zm9yKDtuPW9bYV07KXtpZihlPVwiXCIsYSsrLGQobikpaWYodVtuXSllPXAobiksZT1pW3IudGFnXShyLnRleHQrZSksdVtuXT0hMSxyPWYucG9wKCk7ZWxzZXt2YXIgYz1cIlwiO2lmKFwiYFwiPT09bil7dmFyIGw9by5pbmRleE9mKG4sYSk7LTEhPT1sJiYocys9cCgpLGM9by5zbGljZShhLGwpLmpvaW4oXCJcIiksYT1sKX1yJiZmLnB1c2gociksdVtuXT0hMCxyPXt0YWc6bix0ZXh0OmN9fWVsc2UgaWYoXCJcXFxcXCI9PT0oZT1uKSl7dmFyIGc9b1thXTsoZChnKXx8XCJcXFxcXCI9PT1nKSYmKGU9ZyxhKyspfWUmJihyP3IudGV4dCs9ZTpzKz1lLGU9XCJcIil9cmV0dXJuIHMrcCgpfSx0LmV4cG9ydHM9bn0sZnVuY3Rpb24odCxlLHIpe3ZhciBuPXIoNiksbz1yKDcpO3QuZXhwb3J0cz1mdW5jdGlvbigpe3JldHVybiBuKCl8fG8oKX19LGZ1bmN0aW9uKHQsZSl7dC5leHBvcnRzPWZ1bmN0aW9uKCl7dHJ5e3JldHVyblwiV2Via2l0QXBwZWFyYW5jZVwiaW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlJiYhL0VkZ2UvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCl9Y2F0Y2godCl7cmV0dXJuITF9fX0sZnVuY3Rpb24odCxlKXt0LmV4cG9ydHM9ZnVuY3Rpb24oKXt0cnl7cmV0dXJuL2ZpcmVmb3hcXC8oXFxkKykvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfWNhdGNoKHQpe3JldHVybiExfX19LGZ1bmN0aW9uKHIsdCxlKXsoZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0LGUpe3JldHVyblwib2JqZWN0XCI9PXR5cGVvZiB0JiZ0LnNlbGY9PT10JiZ0fHxcIm9iamVjdFwiPT10eXBlb2YgZSYmZS5nbG9iYWw9PT1lJiZlfHx0aGlzfXIuZXhwb3J0cz1lLmJpbmQodGhpcyxzZWxmLHQpLHIuZXhwb3J0cy5nZXRHbG9iYWw9ZX0pLmNhbGwodGhpcyxlKDkpKX0sZnVuY3Rpb24ob2IscGIpe3ZhciBxYjtxYj1mdW5jdGlvbigpe3JldHVybiB0aGlzfSgpO3RyeXtxYj1xYnx8RnVuY3Rpb24oXCJyZXR1cm4gdGhpc1wiKSgpfHxldmFsKFwidGhpc1wiKX1jYXRjaChvYil7XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmKHFiPXdpbmRvdyl9b2IuZXhwb3J0cz1xYn1dKX0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/logdown/dist/logdown.min.js\n"));

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixXQUFXLFFBQVE7QUFDbkIsWUFBWSxPQUFPO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixZQUFZO0FBQ1o7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL21zL2luZGV4LmpzPzNhNzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBIZWxwZXJzLlxuICovXG5cbnZhciBzID0gMTAwMDtcbnZhciBtID0gcyAqIDYwO1xudmFyIGggPSBtICogNjA7XG52YXIgZCA9IGggKiAyNDtcbnZhciB3ID0gZCAqIDc7XG52YXIgeSA9IGQgKiAzNjUuMjU7XG5cbi8qKlxuICogUGFyc2Ugb3IgZm9ybWF0IHRoZSBnaXZlbiBgdmFsYC5cbiAqXG4gKiBPcHRpb25zOlxuICpcbiAqICAtIGBsb25nYCB2ZXJib3NlIGZvcm1hdHRpbmcgW2ZhbHNlXVxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfE51bWJlcn0gdmFsXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiBAdGhyb3dzIHtFcnJvcn0gdGhyb3cgYW4gZXJyb3IgaWYgdmFsIGlzIG5vdCBhIG5vbi1lbXB0eSBzdHJpbmcgb3IgYSBudW1iZXJcbiAqIEByZXR1cm4ge1N0cmluZ3xOdW1iZXJ9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odmFsLCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWw7XG4gIGlmICh0eXBlID09PSAnc3RyaW5nJyAmJiB2YWwubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiBwYXJzZSh2YWwpO1xuICB9IGVsc2UgaWYgKHR5cGUgPT09ICdudW1iZXInICYmIGlzRmluaXRlKHZhbCkpIHtcbiAgICByZXR1cm4gb3B0aW9ucy5sb25nID8gZm10TG9uZyh2YWwpIDogZm10U2hvcnQodmFsKTtcbiAgfVxuICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgJ3ZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgdmFsaWQgbnVtYmVyLiB2YWw9JyArXG4gICAgICBKU09OLnN0cmluZ2lmeSh2YWwpXG4gICk7XG59O1xuXG4vKipcbiAqIFBhcnNlIHRoZSBnaXZlbiBgc3RyYCBhbmQgcmV0dXJuIG1pbGxpc2Vjb25kcy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtOdW1iZXJ9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZShzdHIpIHtcbiAgc3RyID0gU3RyaW5nKHN0cik7XG4gIGlmIChzdHIubGVuZ3RoID4gMTAwKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIHZhciBtYXRjaCA9IC9eKC0/KD86XFxkKyk/XFwuP1xcZCspICoobWlsbGlzZWNvbmRzP3xtc2Vjcz98bXN8c2Vjb25kcz98c2Vjcz98c3xtaW51dGVzP3xtaW5zP3xtfGhvdXJzP3xocnM/fGh8ZGF5cz98ZHx3ZWVrcz98d3x5ZWFycz98eXJzP3x5KT8kL2kuZXhlYyhcbiAgICBzdHJcbiAgKTtcbiAgaWYgKCFtYXRjaCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbiA9IHBhcnNlRmxvYXQobWF0Y2hbMV0pO1xuICB2YXIgdHlwZSA9IChtYXRjaFsyXSB8fCAnbXMnKS50b0xvd2VyQ2FzZSgpO1xuICBzd2l0Y2ggKHR5cGUpIHtcbiAgICBjYXNlICd5ZWFycyc6XG4gICAgY2FzZSAneWVhcic6XG4gICAgY2FzZSAneXJzJzpcbiAgICBjYXNlICd5cic6XG4gICAgY2FzZSAneSc6XG4gICAgICByZXR1cm4gbiAqIHk7XG4gICAgY2FzZSAnd2Vla3MnOlxuICAgIGNhc2UgJ3dlZWsnOlxuICAgIGNhc2UgJ3cnOlxuICAgICAgcmV0dXJuIG4gKiB3O1xuICAgIGNhc2UgJ2RheXMnOlxuICAgIGNhc2UgJ2RheSc6XG4gICAgY2FzZSAnZCc6XG4gICAgICByZXR1cm4gbiAqIGQ7XG4gICAgY2FzZSAnaG91cnMnOlxuICAgIGNhc2UgJ2hvdXInOlxuICAgIGNhc2UgJ2hycyc6XG4gICAgY2FzZSAnaHInOlxuICAgIGNhc2UgJ2gnOlxuICAgICAgcmV0dXJuIG4gKiBoO1xuICAgIGNhc2UgJ21pbnV0ZXMnOlxuICAgIGNhc2UgJ21pbnV0ZSc6XG4gICAgY2FzZSAnbWlucyc6XG4gICAgY2FzZSAnbWluJzpcbiAgICBjYXNlICdtJzpcbiAgICAgIHJldHVybiBuICogbTtcbiAgICBjYXNlICdzZWNvbmRzJzpcbiAgICBjYXNlICdzZWNvbmQnOlxuICAgIGNhc2UgJ3NlY3MnOlxuICAgIGNhc2UgJ3NlYyc6XG4gICAgY2FzZSAncyc6XG4gICAgICByZXR1cm4gbiAqIHM7XG4gICAgY2FzZSAnbWlsbGlzZWNvbmRzJzpcbiAgICBjYXNlICdtaWxsaXNlY29uZCc6XG4gICAgY2FzZSAnbXNlY3MnOlxuICAgIGNhc2UgJ21zZWMnOlxuICAgIGNhc2UgJ21zJzpcbiAgICAgIHJldHVybiBuO1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8qKlxuICogU2hvcnQgZm9ybWF0IGZvciBgbXNgLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBtc1xuICogQHJldHVybiB7U3RyaW5nfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gZm10U2hvcnQobXMpIHtcbiAgdmFyIG1zQWJzID0gTWF0aC5hYnMobXMpO1xuICBpZiAobXNBYnMgPj0gZCkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gZCkgKyAnZCc7XG4gIH1cbiAgaWYgKG1zQWJzID49IGgpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGgpICsgJ2gnO1xuICB9XG4gIGlmIChtc0FicyA+PSBtKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBtKSArICdtJztcbiAgfVxuICBpZiAobXNBYnMgPj0gcykge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gcykgKyAncyc7XG4gIH1cbiAgcmV0dXJuIG1zICsgJ21zJztcbn1cblxuLyoqXG4gKiBMb25nIGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdExvbmcobXMpIHtcbiAgdmFyIG1zQWJzID0gTWF0aC5hYnMobXMpO1xuICBpZiAobXNBYnMgPj0gZCkge1xuICAgIHJldHVybiBwbHVyYWwobXMsIG1zQWJzLCBkLCAnZGF5Jyk7XG4gIH1cbiAgaWYgKG1zQWJzID49IGgpIHtcbiAgICByZXR1cm4gcGx1cmFsKG1zLCBtc0FicywgaCwgJ2hvdXInKTtcbiAgfVxuICBpZiAobXNBYnMgPj0gbSkge1xuICAgIHJldHVybiBwbHVyYWwobXMsIG1zQWJzLCBtLCAnbWludXRlJyk7XG4gIH1cbiAgaWYgKG1zQWJzID49IHMpIHtcbiAgICByZXR1cm4gcGx1cmFsKG1zLCBtc0FicywgcywgJ3NlY29uZCcpO1xuICB9XG4gIHJldHVybiBtcyArICcgbXMnO1xufVxuXG4vKipcbiAqIFBsdXJhbGl6YXRpb24gaGVscGVyLlxuICovXG5cbmZ1bmN0aW9uIHBsdXJhbChtcywgbXNBYnMsIG4sIG5hbWUpIHtcbiAgdmFyIGlzUGx1cmFsID0gbXNBYnMgPj0gbiAqIDEuNTtcbiAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBuKSArICcgJyArIG5hbWUgKyAoaXNQbHVyYWwgPyAncycgOiAnJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/ms/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/polyfills/process.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/build/polyfills/process.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar ref, ref1;\nmodule.exports = ((ref = __webpack_require__.g.process) == null ? void 0 : ref.env) && typeof ((ref1 = __webpack_require__.g.process) == null ? void 0 : ref1.env) === \"object\" ? __webpack_require__.g.process : __webpack_require__(/*! ../../compiled/process */ \"./node_modules/next/dist/compiled/process/browser.js\");\n\n//# sourceMappingURL=process.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSx5QkFBeUIscUJBQU0seURBQXlELHFCQUFNLHNEQUFzRCxxQkFBTSxXQUFXLG1CQUFPLENBQUMsb0ZBQXdCOztBQUVyTSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3BvbHlmaWxscy9wcm9jZXNzLmpzP2NhNjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgcmVmLCByZWYxO1xubW9kdWxlLmV4cG9ydHMgPSAoKHJlZiA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmLmVudikgJiYgdHlwZW9mICgocmVmMSA9IGdsb2JhbC5wcm9jZXNzKSA9PSBudWxsID8gdm9pZCAwIDogcmVmMS5lbnYpID09PSBcIm9iamVjdFwiID8gZ2xvYmFsLnByb2Nlc3MgOiByZXF1aXJlKFwiLi4vLi4vY29tcGlsZWQvcHJvY2Vzc1wiKTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHJvY2Vzcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/polyfills/process.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fhina01%2Fse-jw-next-app%2Fsrc%2Fpages%2Findex.tsx&page=%2F!":
/*!**************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fhina01%2Fse-jw-next-app%2Fsrc%2Fpages%2Findex.tsx&page=%2F! ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./src/pages/index.tsx */ \"./src/pages/index.tsx\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRmhpbmEwMSUyRnNlLWp3LW5leHQtYXBwJTJGc3JjJTJGcGFnZXMlMkZpbmRleC50c3gmcGFnZT0lMkYhLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG1CQUFPLENBQUMsb0RBQXVCO0FBQzlDO0FBQ0E7QUFDQSxPQUFPLElBQVU7QUFDakIsTUFBTSxVQUFVO0FBQ2hCO0FBQ0EsT0FBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLz8xZWJmIl0sInNvdXJjZXNDb250ZW50IjpbIlxuICAgICh3aW5kb3cuX19ORVhUX1AgPSB3aW5kb3cuX19ORVhUX1AgfHwgW10pLnB1c2goW1xuICAgICAgXCIvXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9zcmMvcGFnZXMvaW5kZXgudHN4XCIpO1xuICAgICAgfVxuICAgIF0pO1xuICAgIGlmKG1vZHVsZS5ob3QpIHtcbiAgICAgIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHdpbmRvdy5fX05FWFRfUC5wdXNoKFtcIi9cIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fhina01%2Fse-jw-next-app%2Fsrc%2Fpages%2Findex.tsx&page=%2F!\n"));

/***/ }),

/***/ "./public/tv-logo-2.svg":
/*!******************************!*\
  !*** ./public/tv-logo-2.svg ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\"src\":\"/_next/static/media/tv-logo-2.2698d7a7.svg\",\"height\":35,\"width\":196,\"blurWidth\":0,\"blurHeight\":0});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wdWJsaWMvdHYtbG9nby0yLnN2Zy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsQ0FBQyx3R0FBd0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcHVibGljL3R2LWxvZ28tMi5zdmc/OTdmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCB7XCJzcmNcIjpcIi9fbmV4dC9zdGF0aWMvbWVkaWEvdHYtbG9nby0yLjI2OThkN2E3LnN2Z1wiLFwiaGVpZ2h0XCI6MzUsXCJ3aWR0aFwiOjE5NixcImJsdXJXaWR0aFwiOjAsXCJibHVySGVpZ2h0XCI6MH07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./public/tv-logo-2.svg\n"));

/***/ }),

/***/ "./components/JwVideo/ArticleVideo/Container/index.tsx":
/*!*************************************************************!*\
  !*** ./components/JwVideo/ArticleVideo/Container/index.tsx ***!
  \*************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Container; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction Container(param) {\n    let { durationMinutes , thumbnail , title , portrait =false , children  } = param;\n    const aspectClass = portrait ? \"video_area__portrait\" : \"\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jwplayer_video-videoArea video_area \".concat(aspectClass),\n        style: {\n            \"backgroundImage\": \"url('\".concat(thumbnail, \"')\")\n        },\n        children: [\n            durationMinutes && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"jwplayer_video-time time_left\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"i\", {\n                        className: \"time_left_icon\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                            version: \"1.1\",\n                            xmlns: \"http://www.w3.org/2000/svg\",\n                            xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n                            x: \"0px\",\n                            y: \"0px\",\n                            viewBox: \"0 0 24 24\",\n                            xmlSpace: \"preserve\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    fill: \"none\",\n                                    d: \"M12,3.4c-4.7,0-8.6,3.8-8.6,8.6c0,4.7,3.8,8.6,8.6,8.6s8.6-3.8,8.6-8.6C20.6,7.3,16.7,3.4,12,3.4z M17,15 c-0.2,0.3-0.5,0.5-0.8,0.5c-0.2,0-0.3,0-0.5-0.1L11.5,13C11.2,12.8,11,12.4,11,12c0,0,0-0.1,0-0.1V5.7c0-0.5,0.4-1,1-1s1,0.4,1,1 v5.8l3.7,2.1C17.1,13.9,17.3,14.5,17,15z\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                                    lineNumber: 19,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    fill: \"currentColor\",\n                                    d: \"M12,1.5C6.2,1.5,1.5,6.2,1.5,12c0,5.8,4.7,10.5,10.5,10.5c5.8,0,10.5-4.7,10.5-10.5C22.5,6.2,17.8,1.5,12,1.5z M12,20.6 c-4.7,0-8.6-3.8-8.6-8.6c0-4.7,3.8-8.6,8.6-8.6s8.6,3.8,8.6,8.6C20.6,16.7,16.7,20.6,12,20.6z\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                                    lineNumber: 22,\n                                    columnNumber: 17\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                    fill: \"currentColor\",\n                                    d: \"M16.7,13.7L13,11.5V5.7c0-0.5-0.4-1-1-1s-1,0.4-1,1v6.2c0,0.1,0,0.1,0,0.1c0,0.4,0.1,0.7,0.5,0.9l4.2,2.4 c0.2,0.1,0.3,0.1,0.5,0.1c0.3,0,0.7-0.2,0.8-0.5C17.3,14.5,17.1,13.9,16.7,13.7z\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                                    lineNumber: 24,\n                                    columnNumber: 17\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                            lineNumber: 17,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 13\n                    }, this),\n                    durationMinutes\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                lineNumber: 15,\n                columnNumber: 11\n            }, this),\n            title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"up_next\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"up_next_title jwplayer_video-upNext-title\",\n                        children: [\n                            \"Efter reklamen: \",\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"jwplayer_video-upNext-title-text\",\n                                children: title\n                            }, void 0, false, {\n                                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                                lineNumber: 33,\n                                columnNumber: 90\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                        lineNumber: 33,\n                        columnNumber: 15\n                    }, this),\n                    durationMinutes && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"up_next_time jwplayer_video-upNext-time\",\n                        children: [\n                            \"(\",\n                            durationMinutes,\n                            \")\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                        lineNumber: 35,\n                        columnNumber: 19\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n                lineNumber: 32,\n                columnNumber: 11\n            }, this),\n            children\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Container/index.tsx\",\n        lineNumber: 13,\n        columnNumber: 9\n    }, this);\n}\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vQXJ0aWNsZVZpZGVvL0NvbnRhaW5lci9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXlCO0FBU1YsU0FBU0MsVUFBVSxLQUFzRSxFQUFFO1FBQXhFLEVBQUNDLGdCQUFlLEVBQUVDLFVBQVMsRUFBRUMsTUFBSyxFQUFFQyxVQUFXLEtBQUssR0FBRUMsU0FBUSxFQUFRLEdBQXRFO0lBQzlCLE1BQU1DLGNBQWNGLFdBQVcseUJBQXlCLEVBQUU7SUFDMUQscUJBQ0ksOERBQUNHO1FBQUlDLFdBQVcsdUNBQW1ELE9BQVpGO1FBQWVHLE9BQU87WUFBQyxtQkFBbUIsUUFBa0IsT0FBVlAsV0FBVTtRQUFHOztZQUNySEQsaUNBQ0MsOERBQUNNO2dCQUFJQyxXQUFZOztrQ0FDZiw4REFBQ0U7d0JBQUVGLFdBQVk7a0NBQ2IsNEVBQUNHOzRCQUFJQyxTQUFROzRCQUFNQyxPQUFNOzRCQUE2QkMsWUFBVzs0QkFBK0JDLEdBQUU7NEJBQU1DLEdBQUU7NEJBQ3hHQyxTQUFROzRCQUFZQyxVQUFTOzs4Q0FDN0IsOERBQUNDO29DQUFLQyxNQUFLO29DQUFPQyxHQUFFOzs7Ozs7OENBR3BCLDhEQUFDRjtvQ0FBS0MsTUFBSztvQ0FBZUMsR0FBRTs7Ozs7OzhDQUU1Qiw4REFBQ0Y7b0NBQUtDLE1BQUs7b0NBQWVDLEdBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUkvQnBCOzs7Ozs7O1lBR0pFLHVCQUNDLDhEQUFDSTtnQkFBSUMsV0FBWTs7a0NBQ2IsOERBQUNjO3dCQUFFZCxXQUFZOzs0QkFBNEM7MENBQWdCLDhEQUFDZTtnQ0FBS2YsV0FBVTswQ0FBb0NMOzs7Ozs7Ozs7Ozs7b0JBQzdIRixpQ0FDRSw4REFBQ3FCO3dCQUFFZCxXQUFZOzs0QkFBMEM7NEJBQ25EUDs0QkFBZ0I7Ozs7Ozs7Ozs7Ozs7WUFLL0JJOzs7Ozs7O0FBR1QsQ0FBQztLQWxDdUJMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSndWaWRlby9BcnRpY2xlVmlkZW8vQ29udGFpbmVyL2luZGV4LnRzeD8zOGE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmludGVyZmFjZSBQcm9wcyB7XG4gIGR1cmF0aW9uTWludXRlczogc3RyaW5nLFxuICB0aXRsZTogc3RyaW5nLFxuICB0aHVtYm5haWw6IHN0cmluZyxcbiAgcG9ydHJhaXQ/OiBib29sZWFuLFxuICBjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBDb250YWluZXIoe2R1cmF0aW9uTWludXRlcywgdGh1bWJuYWlsLCB0aXRsZSwgcG9ydHJhaXQgPSBmYWxzZSwgY2hpbGRyZW59OiBQcm9wcykge1xuICAgIGNvbnN0IGFzcGVjdENsYXNzID0gcG9ydHJhaXQgPyAndmlkZW9fYXJlYV9fcG9ydHJhaXQnIDogJydcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YGp3cGxheWVyX3ZpZGVvLXZpZGVvQXJlYSB2aWRlb19hcmVhICR7YXNwZWN0Q2xhc3N9YH0gc3R5bGU9e3snYmFja2dyb3VuZEltYWdlJzogYHVybCgnJHt0aHVtYm5haWx9JylgfX0+XG4gICAgICAgIHtkdXJhdGlvbk1pbnV0ZXMgJiYgXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Bqd3BsYXllcl92aWRlby10aW1lIHRpbWVfbGVmdGB9PlxuICAgICAgICAgICAgPGkgY2xhc3NOYW1lPXtgdGltZV9sZWZ0X2ljb25gfT5cbiAgICAgICAgICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHhtbG5zWGxpbms9XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIgeD1cIjBweFwiIHk9XCIwcHhcIlxuICAgICAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiB4bWxTcGFjZT1cInByZXNlcnZlXCI+XG4gICAgICAgICAgICAgICAgPHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTEyLDMuNGMtNC43LDAtOC42LDMuOC04LjYsOC42YzAsNC43LDMuOCw4LjYsOC42LDguNnM4LjYtMy44LDguNi04LjZDMjAuNiw3LjMsMTYuNywzLjQsMTIsMy40eiBNMTcsMTVcbiAgICAgICAgICAgICAgICAgIGMtMC4yLDAuMy0wLjUsMC41LTAuOCwwLjVjLTAuMiwwLTAuMywwLTAuNS0wLjFMMTEuNSwxM0MxMS4yLDEyLjgsMTEsMTIuNCwxMSwxMmMwLDAsMC0wLjEsMC0wLjFWNS43YzAtMC41LDAuNC0xLDEtMXMxLDAuNCwxLDFcbiAgICAgICAgICAgICAgICAgIHY1LjhsMy43LDIuMUMxNy4xLDEzLjksMTcuMywxNC41LDE3LDE1elwiLz5cbiAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk0xMiwxLjVDNi4yLDEuNSwxLjUsNi4yLDEuNSwxMmMwLDUuOCw0LjcsMTAuNSwxMC41LDEwLjVjNS44LDAsMTAuNS00LjcsMTAuNS0xMC41QzIyLjUsNi4yLDE3LjgsMS41LDEyLDEuNXogTTEyLDIwLjZcbiAgICAgICAgICAgICAgICAgIGMtNC43LDAtOC42LTMuOC04LjYtOC42YzAtNC43LDMuOC04LjYsOC42LTguNnM4LjYsMy44LDguNiw4LjZDMjAuNiwxNi43LDE2LjcsMjAuNiwxMiwyMC42elwiLz5cbiAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPVwiY3VycmVudENvbG9yXCIgZD1cIk0xNi43LDEzLjdMMTMsMTEuNVY1LjdjMC0wLjUtMC40LTEtMS0xcy0xLDAuNC0xLDF2Ni4yYzAsMC4xLDAsMC4xLDAsMC4xYzAsMC40LDAuMSwwLjcsMC41LDAuOWw0LjIsMi40XG4gICAgICAgICAgICAgICAgICBjMC4yLDAuMSwwLjMsMC4xLDAuNSwwLjFjMC4zLDAsMC43LTAuMiwwLjgtMC41QzE3LjMsMTQuNSwxNy4xLDEzLjksMTYuNywxMy43elwiLz5cbiAgICAgICAgICAgICAgPC9zdmc+XG4gICAgICAgICAgICA8L2k+XG4gICAgICAgICAgICB7ZHVyYXRpb25NaW51dGVzfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICB9XG4gICAgICAgIHt0aXRsZSAmJiBcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHVwX25leHRgfT5cbiAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPXtgdXBfbmV4dF90aXRsZSBqd3BsYXllcl92aWRlby11cE5leHQtdGl0bGVgfT5FZnRlciByZWtsYW1lbjogPHNwYW4gY2xhc3NOYW1lPVwiandwbGF5ZXJfdmlkZW8tdXBOZXh0LXRpdGxlLXRleHRcIj57dGl0bGV9PC9zcGFuPjwvcD5cbiAgICAgICAgICAgICAgIHtkdXJhdGlvbk1pbnV0ZXMgJiYgXG4gICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9e2B1cF9uZXh0X3RpbWUgandwbGF5ZXJfdmlkZW8tdXBOZXh0LXRpbWVgfT5cbiAgICAgICAgICAgICAgICAgICAgICAoe2R1cmF0aW9uTWludXRlc30pXG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgIH0gXG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIH1cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9kaXY+XG4gICAgKVxufSJdLCJuYW1lcyI6WyJSZWFjdCIsIkNvbnRhaW5lciIsImR1cmF0aW9uTWludXRlcyIsInRodW1ibmFpbCIsInRpdGxlIiwicG9ydHJhaXQiLCJjaGlsZHJlbiIsImFzcGVjdENsYXNzIiwiZGl2IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJpIiwic3ZnIiwidmVyc2lvbiIsInhtbG5zIiwieG1sbnNYbGluayIsIngiLCJ5Iiwidmlld0JveCIsInhtbFNwYWNlIiwicGF0aCIsImZpbGwiLCJkIiwicCIsInNwYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/ArticleVideo/Container/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/ArticleVideo/MetaData/index.tsx":
/*!************************************************************!*\
  !*** ./components/JwVideo/ArticleVideo/MetaData/index.tsx ***!
  \************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction MetaData(props) {\n    const { title , description , uploadDate , duration , thumbnailUrl , contentUrl  } = props;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            title && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                itemProp: \"name\",\n                content: title\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/MetaData/index.tsx\",\n                lineNumber: 17,\n                columnNumber: 23\n            }, this),\n            description && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                itemProp: \"description\",\n                content: description\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/MetaData/index.tsx\",\n                lineNumber: 18,\n                columnNumber: 29\n            }, this),\n            uploadDate && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                itemProp: \"uploadDate\",\n                content: uploadDate\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/MetaData/index.tsx\",\n                lineNumber: 19,\n                columnNumber: 28\n            }, this),\n            duration && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                itemProp: \"duration\",\n                content: duration\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/MetaData/index.tsx\",\n                lineNumber: 20,\n                columnNumber: 26\n            }, this),\n            thumbnailUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                itemProp: \"thumbnailUrl\",\n                content: thumbnailUrl\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/MetaData/index.tsx\",\n                lineNumber: 21,\n                columnNumber: 31\n            }, this),\n            contentUrl && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                itemProp: \"contentUrl\",\n                content: contentUrl\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/MetaData/index.tsx\",\n                lineNumber: 22,\n                columnNumber: 29\n            }, this)\n        ]\n    }, void 0, true);\n}\n_c = MetaData;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MetaData);\nvar _c;\n$RefreshReg$(_c, \"MetaData\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vQXJ0aWNsZVZpZGVvL01ldGFEYXRhL2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBSUEsU0FBU0EsU0FBU0MsS0FBb0IsRUFBRTtJQUNwQyxNQUFNLEVBQ0ZDLE1BQUssRUFDTEMsWUFBVyxFQUNYQyxXQUFVLEVBQ1ZDLFNBQVEsRUFDUkMsYUFBWSxFQUNaQyxXQUFVLEVBQ2IsR0FBR047SUFFSixxQkFDSTs7WUFDS0MsdUJBQVMsOERBQUNNO2dCQUFLQyxVQUFTO2dCQUFPQyxTQUFTUjs7Ozs7O1lBQ3hDQyw2QkFBZSw4REFBQ0s7Z0JBQUtDLFVBQVM7Z0JBQWNDLFNBQVNQOzs7Ozs7WUFDckRDLDRCQUFjLDhEQUFDSTtnQkFBS0MsVUFBUztnQkFBYUMsU0FBU047Ozs7OztZQUNuREMsMEJBQVksOERBQUNHO2dCQUFLQyxVQUFTO2dCQUFXQyxTQUFTTDs7Ozs7O1lBQy9DQyw4QkFBaUIsOERBQUNFO2dCQUFLQyxVQUFTO2dCQUFlQyxTQUFTSjs7Ozs7O1lBQ3hEQyw0QkFBZSw4REFBQ0M7Z0JBQUtDLFVBQVM7Z0JBQWFDLFNBQVNIOzs7Ozs7OztBQUdqRTtLQXBCU1A7QUFzQlQsK0RBQWVBLFFBQVFBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Kd1ZpZGVvL0FydGljbGVWaWRlby9NZXRhRGF0YS9pbmRleC50c3g/OWY5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWaWRlb01ldGFEYXRhIH0gZnJvbSBcIi4uLy4uL3R5cGVzL3ZpZGVvXCI7XG5cbmludGVyZmFjZSBNZXRhRGF0YVByb3BzIGV4dGVuZHMgVmlkZW9NZXRhRGF0YSB7fVxuXG5mdW5jdGlvbiBNZXRhRGF0YShwcm9wczogTWV0YURhdGFQcm9wcykge1xuICAgIGNvbnN0IHtcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICB1cGxvYWREYXRlLFxuICAgICAgICBkdXJhdGlvbixcbiAgICAgICAgdGh1bWJuYWlsVXJsLFxuICAgICAgICBjb250ZW50VXJsXG4gICAgfSA9IHByb3BzO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIHt0aXRsZSAmJiA8bWV0YSBpdGVtUHJvcD1cIm5hbWVcIiBjb250ZW50PXt0aXRsZX0vPn1cbiAgICAgICAgICAgIHtkZXNjcmlwdGlvbiAmJiA8bWV0YSBpdGVtUHJvcD1cImRlc2NyaXB0aW9uXCIgY29udGVudD17ZGVzY3JpcHRpb259Lz59XG4gICAgICAgICAgICB7dXBsb2FkRGF0ZSAmJiA8bWV0YSBpdGVtUHJvcD1cInVwbG9hZERhdGVcIiBjb250ZW50PXt1cGxvYWREYXRlfS8+fVxuICAgICAgICAgICAge2R1cmF0aW9uICYmIDxtZXRhIGl0ZW1Qcm9wPVwiZHVyYXRpb25cIiBjb250ZW50PXtkdXJhdGlvbn0gLz59XG4gICAgICAgICAgICB7dGh1bWJuYWlsVXJsICYmICA8bWV0YSBpdGVtUHJvcD1cInRodW1ibmFpbFVybFwiIGNvbnRlbnQ9e3RodW1ibmFpbFVybH0gLz59XG4gICAgICAgICAgICB7Y29udGVudFVybCAmJiAgPG1ldGEgaXRlbVByb3A9XCJjb250ZW50VXJsXCIgY29udGVudD17Y29udGVudFVybH0vPn1cbiAgICAgICAgPC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBNZXRhRGF0YSJdLCJuYW1lcyI6WyJNZXRhRGF0YSIsInByb3BzIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInVwbG9hZERhdGUiLCJkdXJhdGlvbiIsInRodW1ibmFpbFVybCIsImNvbnRlbnRVcmwiLCJtZXRhIiwiaXRlbVByb3AiLCJjb250ZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/JwVideo/ArticleVideo/MetaData/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/ArticleVideo/Title/index.tsx":
/*!*********************************************************!*\
  !*** ./components/JwVideo/ArticleVideo/Title/index.tsx ***!
  \*********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var public_tv_logo_2_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! public/tv-logo-2.svg */ \"./public/tv-logo-2.svg\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nfunction getVideoLinkLogo(showLink, ctsLabel, mediaId) {\n    const logoImage = /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n        src: public_tv_logo_2_svg__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n        alt: \"\",\n        className: \"logo logo_theme\"\n    }, void 0, false, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Title/index.tsx\",\n        lineNumber: 10,\n        columnNumber: 21\n    }, this);\n    if (showLink) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_4___default()), {\n            href: \"/video/\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"a\", {\n                className: \"logo__wrapper logo__wrapper_theme cts-impression-item\",\n                \"data-cts-label\": ctsLabel,\n                \"data-cts-name\": ctsLabel,\n                \"data-cts-id\": mediaId,\n                \"data-cts-creative\": ctsLabel,\n                \"aria-label\": \"G\\xe5 till video\",\n                children: logoImage\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Title/index.tsx\",\n                lineNumber: 15,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Title/index.tsx\",\n            lineNumber: 14,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n        className: \"logo__wrapper logo__wrapper_theme\",\n        children: logoImage\n    }, void 0, false, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Title/index.tsx\",\n        lineNumber: 28,\n        columnNumber: 10\n    }, this);\n}\nconst Title = (param)=>{\n    let { title , showLink , ctsLabel , mediaId  } = param;\n    const logo = getVideoLinkLogo(showLink, ctsLabel, mediaId);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"figcaption\", {\n        className: \"caption title\",\n        itemProp: \"headline\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"title__text title__text_theme\",\n                children: title\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Title/index.tsx\",\n                lineNumber: 42,\n                columnNumber: 7\n            }, undefined),\n            logo\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Title/index.tsx\",\n        lineNumber: 41,\n        columnNumber: 5\n    }, undefined);\n};\n_c = Title;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Title);\nvar _c;\n$RefreshReg$(_c, \"Title\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vQXJ0aWNsZVZpZGVvL1RpdGxlL2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUN5QjtBQUNLO0FBQ1c7QUFDYjtBQUk1QixTQUFTSSxpQkFBaUJDLFFBQWlCLEVBQUVDLFFBQWdCLEVBQUVDLE9BQWUsRUFBRTtJQUM5RSxNQUFNQywwQkFBWSw4REFBQ1AsbURBQUtBO1FBQUNRLEtBQUtQLDREQUFNQTtRQUFFUSxLQUFJO1FBQUdDLFdBQVk7Ozs7OztJQUV6RCxJQUFJTixVQUFVO1FBQ1oscUJBQ0UsOERBQUNGLGtEQUFJQTtZQUFDUyxNQUFLO3NCQUNULDRFQUFDQztnQkFDQ0YsV0FBWTtnQkFDWkcsa0JBQWdCUjtnQkFDaEJTLGlCQUFlVDtnQkFDZlUsZUFBYVQ7Z0JBQ2JVLHFCQUFtQlg7Z0JBQ25CWSxjQUFXOzBCQUVWVjs7Ozs7Ozs7Ozs7SUFJVCxDQUFDO0lBQ0QscUJBQU8sOERBQUNXO1FBQUtSLFdBQVk7a0JBQXFDSDs7Ozs7O0FBQ2hFO0FBU0EsTUFBTVksUUFBeUIsU0FBNEM7UUFBM0MsRUFBRUMsTUFBSyxFQUFFaEIsU0FBUSxFQUFFQyxTQUFRLEVBQUVDLFFBQU8sRUFBRTtJQUNwRSxNQUFNZSxPQUFPbEIsaUJBQWlCQyxVQUFVQyxVQUFVQztJQUNsRCxxQkFDRSw4REFBQ2dCO1FBQVdaLFdBQVk7UUFBZ0JhLFVBQVM7OzBCQUMvQyw4REFBQ0w7Z0JBQUtSLFdBQVk7MEJBQWlDVTs7Ozs7O1lBQ2xEQzs7Ozs7OztBQUdQO0tBUk1GO0FBVU4sK0RBQWVBLEtBQUtBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Kd1ZpZGVvL0FydGljbGVWaWRlby9UaXRsZS9pbmRleC50c3g/MjAxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBJbWFnZSBmcm9tICduZXh0L2ltYWdlJ1xuaW1wb3J0IHR2TG9nbyBmcm9tICdwdWJsaWMvdHYtbG9nby0yLnN2ZydcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluaydcblxuXG5cbmZ1bmN0aW9uIGdldFZpZGVvTGlua0xvZ28oc2hvd0xpbms6IGJvb2xlYW4sIGN0c0xhYmVsOiBzdHJpbmcsIG1lZGlhSWQ6IHN0cmluZykge1xuICBjb25zdCBsb2dvSW1hZ2UgPSA8SW1hZ2Ugc3JjPXt0dkxvZ299IGFsdD1cIlwiIGNsYXNzTmFtZT17YGxvZ28gbG9nb190aGVtZWB9PjwvSW1hZ2U+XG5cbiAgaWYgKHNob3dMaW5rKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxMaW5rIGhyZWY9XCIvdmlkZW8vXCI+XG4gICAgICAgIDxhXG4gICAgICAgICAgY2xhc3NOYW1lPXtgbG9nb19fd3JhcHBlciBsb2dvX193cmFwcGVyX3RoZW1lIGN0cy1pbXByZXNzaW9uLWl0ZW1gfVxuICAgICAgICAgIGRhdGEtY3RzLWxhYmVsPXtjdHNMYWJlbH1cbiAgICAgICAgICBkYXRhLWN0cy1uYW1lPXtjdHNMYWJlbH1cbiAgICAgICAgICBkYXRhLWN0cy1pZD17bWVkaWFJZH1cbiAgICAgICAgICBkYXRhLWN0cy1jcmVhdGl2ZT17Y3RzTGFiZWx9XG4gICAgICAgICAgYXJpYS1sYWJlbD1cIkfDpSB0aWxsIHZpZGVvXCJcbiAgICAgICAgPlxuICAgICAgICAgIHtsb2dvSW1hZ2V9XG4gICAgICAgIDwvYT5cbiAgICAgIDwvTGluaz5cbiAgICApXG4gIH1cbiAgcmV0dXJuIDxzcGFuIGNsYXNzTmFtZT17YGxvZ29fX3dyYXBwZXIgbG9nb19fd3JhcHBlcl90aGVtZWB9Pntsb2dvSW1hZ2V9PC9zcGFuPlxufVxuXG5pbnRlcmZhY2UgUHJvcHMge1xuICB0aXRsZTogc3RyaW5nXG4gIHNob3dMaW5rOiBib29sZWFuXG4gIGN0c0xhYmVsOiBzdHJpbmdcbiAgbWVkaWFJZDogc3RyaW5nXG59XG5cbmNvbnN0IFRpdGxlOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB0aXRsZSwgc2hvd0xpbmssIGN0c0xhYmVsLCBtZWRpYUlkIH0pID0+IHtcbiAgY29uc3QgbG9nbyA9IGdldFZpZGVvTGlua0xvZ28oc2hvd0xpbmssIGN0c0xhYmVsLCBtZWRpYUlkKVxuICByZXR1cm4gKFxuICAgIDxmaWdjYXB0aW9uIGNsYXNzTmFtZT17YGNhcHRpb24gdGl0bGVgfSBpdGVtUHJvcD1cImhlYWRsaW5lXCI+XG4gICAgICA8c3BhbiBjbGFzc05hbWU9e2B0aXRsZV9fdGV4dCB0aXRsZV9fdGV4dF90aGVtZWB9Pnt0aXRsZX08L3NwYW4+XG4gICAgICB7bG9nb31cbiAgICA8L2ZpZ2NhcHRpb24+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGl0bGVcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIkltYWdlIiwidHZMb2dvIiwiTGluayIsImdldFZpZGVvTGlua0xvZ28iLCJzaG93TGluayIsImN0c0xhYmVsIiwibWVkaWFJZCIsImxvZ29JbWFnZSIsInNyYyIsImFsdCIsImNsYXNzTmFtZSIsImhyZWYiLCJhIiwiZGF0YS1jdHMtbGFiZWwiLCJkYXRhLWN0cy1uYW1lIiwiZGF0YS1jdHMtaWQiLCJkYXRhLWN0cy1jcmVhdGl2ZSIsImFyaWEtbGFiZWwiLCJzcGFuIiwiVGl0bGUiLCJ0aXRsZSIsImxvZ28iLCJmaWdjYXB0aW9uIiwiaXRlbVByb3AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/ArticleVideo/Title/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/ArticleVideo/Unmute/index.tsx":
/*!**********************************************************!*\
  !*** ./components/JwVideo/ArticleVideo/Unmute/index.tsx ***!
  \**********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Unmute; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../constants/playEvents */ \"./components/JwVideo/constants/playEvents.ts\");\n/* harmony import */ var _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../JwPlayerContext */ \"./components/JwVideo/JwPlayerContext/index.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\nfunction Unmute(param) {\n    let { ctsLabel  } = param;\n    _s();\n    const { player , isMute , currentMedia  } = (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.useJwPlayer)();\n    const [showUnmute, setShowUnmute] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"off\");\n    const [animationClasses, setAnimationClasses] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"show\");\n    const mediaId = currentMedia ? currentMedia.mediaid : \"\";\n    if (isMute && showUnmute === \"on\") {\n        setShowUnmute(\"show\");\n    }\n    const onUnmuteClick = ()=>{\n        player.setMute(false);\n    };\n    const onPlay = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        let unmute = \"on\";\n        if (player.getMute()) {\n            unmute = \"show\";\n        }\n        setShowUnmute(unmute);\n    }, [\n        player\n    ]);\n    (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent)(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__.PLAY, onPlay);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (showUnmute !== \"show\") {\n            return ()=>{};\n        }\n        const timeouts = [];\n        timeouts.push(setTimeout(()=>setAnimationClasses(\"show expanded\"), 3000));\n        timeouts.push(setTimeout(()=>setAnimationClasses(\"show\"), 7000));\n        timeouts.push(setTimeout(()=>setAnimationClasses(\"\"), 17000));\n        return ()=>{\n            timeouts.map((t)=>clearTimeout(t));\n        };\n    }, [\n        showUnmute\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: showUnmute === \"show\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            onClick: onUnmuteClick,\n            className: \"button \".concat(animationClasses, \" \").concat(isMute ? \"\" : \"has-volume\", \" jwplayer__unmute cts-impression-item\"),\n            \"data-cts-label\": ctsLabel,\n            \"data-cts-name\": ctsLabel,\n            \"data-cts-id\": mediaId,\n            \"data-cts-creative\": ctsLabel,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"button__text\",\n                children: \"Sl\\xe5 p\\xe5 ljud\"\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Unmute/index.tsx\",\n                lineNumber: 62,\n                columnNumber: 11\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/Unmute/index.tsx\",\n            lineNumber: 54,\n            columnNumber: 9\n        }, this)\n    }, void 0, false);\n}\n_s(Unmute, \"PXWWlhuAXklS5vDrADP9ce/akw0=\", false, function() {\n    return [\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.useJwPlayer,\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent\n    ];\n});\n_c = Unmute;\nvar _c;\n$RefreshReg$(_c, \"Unmute\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vQXJ0aWNsZVZpZGVvL1VubXV0ZS9pbmRleC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQ3dEO0FBQ1A7QUFDa0I7QUFRcEQsU0FBU00sT0FBTyxLQUE2QixFQUFFO1FBQS9CLEVBQUVDLFNBQVEsRUFBbUIsR0FBN0I7O0lBQzdCLE1BQU0sRUFBRUMsT0FBTSxFQUFFQyxPQUFNLEVBQUVDLGFBQVksRUFBRSxHQUFHTiw2REFBV0E7SUFDcEQsTUFBTSxDQUFDTyxZQUFZQyxjQUFjLEdBQUdYLCtDQUFRQSxDQUFvQjtJQUNoRSxNQUFNLENBQUNZLGtCQUFrQkMsb0JBQW9CLEdBQUdiLCtDQUFRQSxDQUFDO0lBRXpELE1BQU1jLFVBQVVMLGVBQWVBLGFBQWFNLE9BQU8sR0FBRyxFQUFFO0lBRXhELElBQUlQLFVBQVVFLGVBQWUsTUFBTTtRQUNqQ0MsY0FBYztJQUNoQixDQUFDO0lBRUQsTUFBTUssZ0JBQWdCLElBQU07UUFDMUJULE9BQU9VLE9BQU8sQ0FBQyxLQUFLO0lBQ3RCO0lBRUEsTUFBTUMsU0FBU2pCLGtEQUFXQSxDQUFDLElBQU07UUFDL0IsSUFBSWtCLFNBQTRCO1FBQ2hDLElBQUlaLE9BQU9hLE9BQU8sSUFBSTtZQUNwQkQsU0FBUztRQUNYLENBQUM7UUFDRFIsY0FBY1E7SUFDaEIsR0FBRztRQUFDWjtLQUFPO0lBRVhILGdFQUFjQSxDQUFDRyxRQUFRTCx1REFBSUEsRUFBRWdCO0lBQzdCbkIsZ0RBQVNBLENBQUMsSUFBTTtRQUNkLElBQUlXLGVBQWUsUUFBUTtZQUN6QixPQUFPLElBQU0sQ0FBQztRQUNoQixDQUFDO1FBQ0QsTUFBTVcsV0FBa0MsRUFBRTtRQUUxQ0EsU0FBU0MsSUFBSSxDQUFDQyxXQUFXLElBQU1WLG9CQUFvQixrQkFBa0I7UUFDckVRLFNBQVNDLElBQUksQ0FBQ0MsV0FBVyxJQUFNVixvQkFBb0IsU0FBUztRQUM1RFEsU0FBU0MsSUFBSSxDQUFDQyxXQUFXLElBQU1WLG9CQUFvQixLQUFLO1FBRXhELE9BQU8sSUFBTTtZQUNYUSxTQUFTRyxHQUFHLENBQUMsQ0FBQ0MsSUFBTUMsYUFBYUQ7UUFDbkM7SUFDRixHQUFHO1FBQUNmO0tBQVc7SUFFZixxQkFDRTtrQkFDR0EsZUFBZSx3QkFDZCw4REFBQ2lCO1lBQ0NDLFNBQVNaO1lBQ1RhLFdBQVcsVUFBOEJyQixPQUFwQkksa0JBQWlCLEtBQThCLE9BQTNCSixTQUFTLEtBQUssWUFBWSxFQUFDO1lBQ3BFc0Isa0JBQWdCeEI7WUFDaEJ5QixpQkFBZXpCO1lBQ2YwQixlQUFhbEI7WUFDYm1CLHFCQUFtQjNCO3NCQUVuQiw0RUFBQzRCO2dCQUFLTCxXQUFZOzBCQUFlOzs7Ozs7Ozs7Ozs7QUFLM0MsQ0FBQztHQXZEdUJ4Qjs7UUFDbUJGLHlEQUFXQTtRQXNCcERDLDREQUFjQTs7O0tBdkJRQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0p3VmlkZW8vQXJ0aWNsZVZpZGVvL1VubXV0ZS9pbmRleC50c3g/NmJiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBQTEFZIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL3BsYXlFdmVudHMnXG5pbXBvcnQgeyB1c2VKd1BsYXllciwgdXNlUGxheWVyRXZlbnQgfSBmcm9tICcuLi8uLi9Kd1BsYXllckNvbnRleHQnXG5cbmludGVyZmFjZSBVbm11dGVQcm9wc1R5cGUge1xuICBjdHNMYWJlbDogc3RyaW5nXG59XG5cbnR5cGUgVW5tdXRlQnV0dG9uU3RhdGUgPSAnb2ZmJyB8ICdvbicgfCAnc2hvdydcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVW5tdXRlKHsgY3RzTGFiZWwgfTogVW5tdXRlUHJvcHNUeXBlKSB7XG4gIGNvbnN0IHsgcGxheWVyLCBpc011dGUsIGN1cnJlbnRNZWRpYSB9ID0gdXNlSndQbGF5ZXIoKVxuICBjb25zdCBbc2hvd1VubXV0ZSwgc2V0U2hvd1VubXV0ZV0gPSB1c2VTdGF0ZTxVbm11dGVCdXR0b25TdGF0ZT4oJ29mZicpXG4gIGNvbnN0IFthbmltYXRpb25DbGFzc2VzLCBzZXRBbmltYXRpb25DbGFzc2VzXSA9IHVzZVN0YXRlKCdzaG93JylcblxuICBjb25zdCBtZWRpYUlkID0gY3VycmVudE1lZGlhID8gY3VycmVudE1lZGlhLm1lZGlhaWQgOiAnJ1xuXG4gIGlmIChpc011dGUgJiYgc2hvd1VubXV0ZSA9PT0gJ29uJykge1xuICAgIHNldFNob3dVbm11dGUoJ3Nob3cnKVxuICB9XG5cbiAgY29uc3Qgb25Vbm11dGVDbGljayA9ICgpID0+IHtcbiAgICBwbGF5ZXIuc2V0TXV0ZShmYWxzZSlcbiAgfVxuXG4gIGNvbnN0IG9uUGxheSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBsZXQgdW5tdXRlOiBVbm11dGVCdXR0b25TdGF0ZSA9ICdvbidcbiAgICBpZiAocGxheWVyLmdldE11dGUoKSkge1xuICAgICAgdW5tdXRlID0gJ3Nob3cnXG4gICAgfVxuICAgIHNldFNob3dVbm11dGUodW5tdXRlKVxuICB9LCBbcGxheWVyXSlcblxuICB1c2VQbGF5ZXJFdmVudChwbGF5ZXIsIFBMQVksIG9uUGxheSlcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2hvd1VubXV0ZSAhPT0gJ3Nob3cnKSB7XG4gICAgICByZXR1cm4gKCkgPT4ge31cbiAgICB9XG4gICAgY29uc3QgdGltZW91dHM6IEFycmF5PE5vZGVKUy5UaW1lb3V0PiA9IFtdXG5cbiAgICB0aW1lb3V0cy5wdXNoKHNldFRpbWVvdXQoKCkgPT4gc2V0QW5pbWF0aW9uQ2xhc3Nlcygnc2hvdyBleHBhbmRlZCcpLCAzMDAwKSlcbiAgICB0aW1lb3V0cy5wdXNoKHNldFRpbWVvdXQoKCkgPT4gc2V0QW5pbWF0aW9uQ2xhc3Nlcygnc2hvdycpLCA3MDAwKSlcbiAgICB0aW1lb3V0cy5wdXNoKHNldFRpbWVvdXQoKCkgPT4gc2V0QW5pbWF0aW9uQ2xhc3NlcygnJyksIDE3MDAwKSlcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aW1lb3V0cy5tYXAoKHQpID0+IGNsZWFyVGltZW91dCh0KSlcbiAgICB9XG4gIH0sIFtzaG93VW5tdXRlXSlcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7c2hvd1VubXV0ZSA9PT0gJ3Nob3cnICYmIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgIG9uQ2xpY2s9e29uVW5tdXRlQ2xpY2t9XG4gICAgICAgICAgY2xhc3NOYW1lPXtgYnV0dG9uICR7YW5pbWF0aW9uQ2xhc3Nlc30gJHtpc011dGUgPyAnJyA6ICdoYXMtdm9sdW1lJ30gandwbGF5ZXJfX3VubXV0ZSBjdHMtaW1wcmVzc2lvbi1pdGVtYH1cbiAgICAgICAgICBkYXRhLWN0cy1sYWJlbD17Y3RzTGFiZWx9XG4gICAgICAgICAgZGF0YS1jdHMtbmFtZT17Y3RzTGFiZWx9XG4gICAgICAgICAgZGF0YS1jdHMtaWQ9e21lZGlhSWR9XG4gICAgICAgICAgZGF0YS1jdHMtY3JlYXRpdmU9e2N0c0xhYmVsfVxuICAgICAgICA+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXtgYnV0dG9uX190ZXh0YH0+U2zDpSBww6UgbGp1ZDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApfVxuICAgIDwvPlxuICApXG59XG4iXSwibmFtZXMiOlsidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJ1c2VDYWxsYmFjayIsIlBMQVkiLCJ1c2VKd1BsYXllciIsInVzZVBsYXllckV2ZW50IiwiVW5tdXRlIiwiY3RzTGFiZWwiLCJwbGF5ZXIiLCJpc011dGUiLCJjdXJyZW50TWVkaWEiLCJzaG93VW5tdXRlIiwic2V0U2hvd1VubXV0ZSIsImFuaW1hdGlvbkNsYXNzZXMiLCJzZXRBbmltYXRpb25DbGFzc2VzIiwibWVkaWFJZCIsIm1lZGlhaWQiLCJvblVubXV0ZUNsaWNrIiwic2V0TXV0ZSIsIm9uUGxheSIsInVubXV0ZSIsImdldE11dGUiLCJ0aW1lb3V0cyIsInB1c2giLCJzZXRUaW1lb3V0IiwibWFwIiwidCIsImNsZWFyVGltZW91dCIsImRpdiIsIm9uQ2xpY2siLCJjbGFzc05hbWUiLCJkYXRhLWN0cy1sYWJlbCIsImRhdGEtY3RzLW5hbWUiLCJkYXRhLWN0cy1pZCIsImRhdGEtY3RzLWNyZWF0aXZlIiwic3BhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/JwVideo/ArticleVideo/Unmute/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/ArticleVideo/index.tsx":
/*!***************************************************!*\
  !*** ./components/JwVideo/ArticleVideo/index.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _MetaData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MetaData */ \"./components/JwVideo/ArticleVideo/MetaData/index.tsx\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../JwPlayerContext */ \"./components/JwVideo/JwPlayerContext/index.tsx\");\n/* harmony import */ var _constants_playEvents__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/playEvents */ \"./components/JwVideo/constants/playEvents.ts\");\n/* harmony import */ var _utils_formatMinutes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/formatMinutes */ \"./components/JwVideo/utils/formatMinutes.ts\");\n/* harmony import */ var _utils_stripHtml__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/stripHtml */ \"./components/JwVideo/utils/stripHtml.ts\");\n/* harmony import */ var _JwPlayer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../JwPlayer */ \"./components/JwVideo/JwPlayer/index.tsx\");\n/* harmony import */ var _Container__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Container */ \"./components/JwVideo/ArticleVideo/Container/index.tsx\");\n/* harmony import */ var _Title__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Title */ \"./components/JwVideo/ArticleVideo/Title/index.tsx\");\n/* harmony import */ var _Unmute__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Unmute */ \"./components/JwVideo/ArticleVideo/Unmute/index.tsx\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\nconst ArticleVideo = (props)=>{\n    _s();\n    const { title , teaserLink , durationMinutes , thumbnail , enableDesc , description , fullWidth , aspectratio , videoID: mediaId , b2bInfo , link , linkText , markingText , videoMetaData  } = props;\n    const [uiClass, setUIClass] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([\n        \"jw-flag-mini-sticky\"\n    ]);\n    const [miniStickyActive, setMiniStickyActive] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(true);\n    const { player , currentMedia  } = (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.useJwPlayer)();\n    const addUIClass = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((mode)=>{\n        setUIClass((prev)=>prev.includes(mode) ? prev : [\n                ...prev,\n                mode\n            ]);\n    }, []);\n    const removeUIClass = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((mode)=>{\n        setUIClass((prev)=>prev.filter((m)=>m !== mode));\n    }, []);\n    const deactivateMiniSticky = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        if (player.getFloating() && uiClass.includes(\"jw-flag-mini-sticky\")) {\n            removeUIClass(\"jw-flag-mini-sticky\");\n            setMiniStickyActive(false);\n        }\n    }, [\n        player,\n        removeUIClass,\n        uiClass\n    ]);\n    const onPlayListItem = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((param)=>{\n        let { item  } = param;\n        if (miniStickyActive) {\n            if (item.video_advertiser) {\n                removeUIClass(\"jw-flag-mini-sticky\");\n            } else {\n                addUIClass(\"jw-flag-mini-sticky\");\n            }\n        }\n    }, [\n        addUIClass,\n        removeUIClass,\n        miniStickyActive\n    ]);\n    const onPlay = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        addUIClass(\"jw-playing\");\n    }, [\n        addUIClass\n    ]);\n    const onAdBreakStart = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        addUIClass(\"jw-ad-active\");\n    }, [\n        addUIClass\n    ]);\n    const onAdBreakEnd = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(()=>{\n        removeUIClass(\"jw-ad-active\");\n    }, [\n        removeUIClass\n    ]);\n    const showNextPopup = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)((show)=>{\n        if (show) {\n            removeUIClass(\"js_hide-next-popup\");\n        } else {\n            addUIClass(\"js_hide-next-popup\");\n        }\n    }, [\n        addUIClass,\n        removeUIClass\n    ]);\n    (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent)(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_4__.PLAY, onPlay);\n    (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent)(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_4__.AD_START, onAdBreakStart);\n    (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent)(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_4__.AD_END, onAdBreakEnd);\n    (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent)(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_4__.DISPLAY_CLICK, deactivateMiniSticky);\n    (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent)(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_4__.PLAYLIST_ITEM, onPlayListItem);\n    const figureStyleKeys = \"figure figure_layout \".concat(fullWidth ? \"\" : \"figure_max_width\");\n    const containerClasses = uiClass.join(\" \");\n    let videoTitle = (0,_utils_stripHtml__WEBPACK_IMPORTED_MODULE_6__.stripHtml)(title);\n    let videoDuration = durationMinutes;\n    let videoDescription = (0,_utils_stripHtml__WEBPACK_IMPORTED_MODULE_6__.stripHtml)(description);\n    // Don't set title on initial video, as title prop can be customized\n    // by editors in Labrador.\n    if ((currentMedia === null || currentMedia === void 0 ? void 0 : currentMedia.mediaid) !== mediaId) {\n        videoTitle = (0,_utils_stripHtml__WEBPACK_IMPORTED_MODULE_6__.stripHtml)((currentMedia === null || currentMedia === void 0 ? void 0 : currentMedia.title) || title);\n        videoDuration = (0,_utils_formatMinutes__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(currentMedia === null || currentMedia === void 0 ? void 0 : currentMedia.duration) || durationMinutes;\n        videoDescription = (0,_utils_stripHtml__WEBPACK_IMPORTED_MODULE_6__.stripHtml)((currentMedia === null || currentMedia === void 0 ? void 0 : currentMedia.description) || description);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"jwplayer_video \".concat(containerClasses, \" cts-impression-group\"),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"figure\", {\n            className: \"\".concat(figureStyleKeys),\n            itemScope: true,\n            itemType: \"https://schema.org/VideoObject\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MetaData__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n                    ...videoMetaData\n                }, void 0, false, {\n                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n                    lineNumber: 114,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Title__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    title: videoTitle,\n                    showLink: !!teaserLink,\n                    ctsLabel: \"video-title-link\",\n                    mediaId: mediaId\n                }, void 0, false, {\n                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n                    lineNumber: 115,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Container__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    durationMinutes: videoDuration,\n                    thumbnail,\n                    title: videoTitle,\n                    portrait: aspectratio === \"9/16\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_JwPlayer__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            ...props\n                        }, void 0, false, {\n                            fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n                            lineNumber: 124,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_Unmute__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                            ctsLabel: \"unmute-button\"\n                        }, void 0, false, {\n                            fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n                            lineNumber: 125,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n                    lineNumber: 116,\n                    columnNumber: 9\n                }, undefined),\n                enableDesc && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"figcaption\", {\n                    className: \"caption\",\n                    itemProp: \"caption\",\n                    children: videoDescription\n                }, void 0, false, {\n                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n                    lineNumber: 132,\n                    columnNumber: 11\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n            lineNumber: 113,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/ArticleVideo/index.tsx\",\n        lineNumber: 112,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ArticleVideo, \"DTTN+s0myBH9w4CT3PJ5N6SapEc=\", false, function() {\n    return [\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.useJwPlayer,\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent,\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent,\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent,\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent,\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.usePlayerEvent\n    ];\n});\n_c = ArticleVideo;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ArticleVideo);\nvar _c;\n$RefreshReg$(_c, \"ArticleVideo\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/JwVideo/ArticleVideo/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/JwPlayer/features/floatBehavior.ts":
/*!***************************************************************!*\
  !*** ./components/JwVideo/JwPlayer/features/floatBehavior.ts ***!
  \***************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ setup; }\n/* harmony export */ });\nlet observerInstance = null;\nconst floaters = new WeakMap();\nfunction getObserver() {\n    let threshold = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0.3;\n    if (observerInstance == null) {\n        observerInstance = createObserver(threshold);\n    }\n    return observerInstance;\n}\nfunction createObserver() {\n    let threshold = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0.3;\n    const floatObserver = new IntersectionObserver((entries)=>{\n        entries.forEach((e)=>{\n            const data = floaters.get(e.target);\n            if (!data) {\n                return;\n            }\n            // data.initialized: don't float when IntersectionObserver runs the callback immediately on page load.\n            if (data.initialized && data.shouldFloat && window.jwplayer) {\n                const jwplayer = window.jwplayer;\n                const player = jwplayer(e.target);\n                const belowScreen = e.boundingClientRect.top >= 0;\n                player.setFloating(!belowScreen && !e.isIntersecting);\n            }\n            data.initialized = true;\n        });\n    }, {\n        threshold\n    });\n    return floatObserver;\n}\nfunction setup(player, param, isMobile) {\n    let { floating , autostart  } = param;\n    if (!isMobile || floating && (!floating.mode || floating.mode === \"never\")) {\n        return {\n            preConfig: ()=>{\n                return {};\n            },\n            onReady: ()=>{}\n        };\n    }\n    // Disable built-in floating timing.\n    const preConfig = ()=>{\n        return {\n            floating: {\n                dismissible: true,\n                mode: \"never\"\n            }\n        };\n    };\n    const onReady = ()=>{\n        const container = player.getContainer();\n        floaters.set(container, {\n            shouldFloat: autostart === \"viewable\",\n            initialized: false\n        });\n        getObserver().observe(container);\n    };\n    return {\n        preConfig,\n        onReady\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvZmVhdHVyZXMvZmxvYXRCZWhhdmlvci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBR0EsSUFBSUEsbUJBQWdELElBQUk7QUFDeEQsTUFBTUMsV0FBVyxJQUFJQztBQUVyQixTQUFTQyxjQUFvRDtRQUF2Q0MsWUFBQUEsaUVBQVksR0FBRztJQUNqQyxJQUFJSixvQkFBb0IsSUFBSSxFQUFFO1FBQzFCQSxtQkFBbUJLLGVBQWVEO0lBQ3RDLENBQUM7SUFFRCxPQUFPSjtBQUNYO0FBRUEsU0FBU0ssaUJBQWdDO1FBQWpCRCxZQUFBQSxpRUFBWSxHQUFHO0lBQ3JDLE1BQU1FLGdCQUFnQixJQUFJQyxxQkFDeEIsQ0FBQ0MsVUFBWTtRQUNYQSxRQUFRQyxPQUFPLENBQUMsQ0FBQ0MsSUFBTTtZQUNyQixNQUFNQyxPQUFPVixTQUFTVyxHQUFHLENBQUNGLEVBQUVHLE1BQU07WUFDbEMsSUFBSSxDQUFDRixNQUFNO2dCQUNUO1lBQ0YsQ0FBQztZQUVELHNHQUFzRztZQUN0RyxJQUFJQSxLQUFLRyxXQUFXLElBQUlILEtBQUtJLFdBQVcsSUFBSUMsT0FBT0MsUUFBUSxFQUFFO2dCQUMzRCxNQUFNQSxXQUFXRCxPQUFPQyxRQUFRO2dCQUNoQyxNQUFNQyxTQUFTRCxTQUFTUCxFQUFFRyxNQUFNO2dCQUNoQyxNQUFNTSxjQUFjVCxFQUFFVSxrQkFBa0IsQ0FBQ0MsR0FBRyxJQUFJO2dCQUNoREgsT0FBT0ksV0FBVyxDQUFDLENBQUNILGVBQWUsQ0FBQ1QsRUFBRWEsY0FBYztZQUN0RCxDQUFDO1lBRURaLEtBQUtHLFdBQVcsR0FBRyxJQUFJO1FBQ3pCO0lBQ0YsR0FDQTtRQUFFVjtJQUFVO0lBR2QsT0FBT0U7QUFDVDtBQUVlLFNBQVNrQixNQUFNTixNQUFnQixFQUFFLEtBQXFDLEVBQUVPLFFBQWlCLEVBQWtCO1FBQTFFLEVBQUNDLFNBQVEsRUFBRUMsVUFBUyxFQUFpQixHQUFyQztJQUM5QyxJQUFJLENBQUNGLFlBQVlDLFlBQWEsRUFBQ0EsU0FBU0UsSUFBSSxJQUFJRixTQUFTRSxJQUFJLEtBQUssT0FBTSxHQUFLO1FBQ3pFLE9BQU87WUFDSEMsV0FBVyxJQUFNO2dCQUNiLE9BQU8sQ0FBQztZQUNaO1lBQ0FDLFNBQVMsSUFBTSxDQUFDO1FBQ3BCO0lBQ0YsQ0FBQztJQUVELG9DQUFvQztJQUNwQyxNQUFNRCxZQUFZLElBQU07UUFDdEIsT0FBTztZQUNISCxVQUFVO2dCQUNOSyxhQUFhLElBQUk7Z0JBQ2pCSCxNQUFNO1lBQ1Y7UUFDSjtJQUNGO0lBRUEsTUFBTUUsVUFBVSxJQUFNO1FBQ3BCLE1BQU1FLFlBQVlkLE9BQU9lLFlBQVk7UUFDckNoQyxTQUFTaUMsR0FBRyxDQUFDRixXQUFXO1lBQ3BCakIsYUFBYVksY0FBYztZQUMzQmIsYUFBYSxLQUFLO1FBQ3RCO1FBRUFYLGNBQWNnQyxPQUFPLENBQUNIO0lBQ3hCO0lBRUEsT0FBTztRQUNMSDtRQUNBQztJQUNGO0FBQ0osQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvZmVhdHVyZXMvZmxvYXRCZWhhdmlvci50cz8yMjFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEp3UGxheWVyLCBWaWRlb0ludGVyZmFjZSB9IGZyb20gXCIuLi8uLi90eXBlcy92aWRlb1wiO1xuaW1wb3J0IHsgUGxheWVyRmVhdHVyZSB9IGZyb20gXCIuL3R5cGVzXCI7XG5cbmxldCBvYnNlcnZlckluc3RhbmNlOiBJbnRlcnNlY3Rpb25PYnNlcnZlciB8IG51bGwgPSBudWxsO1xuY29uc3QgZmxvYXRlcnMgPSBuZXcgV2Vha01hcCgpO1xuXG5mdW5jdGlvbiBnZXRPYnNlcnZlciAodGhyZXNob2xkID0gMC4zKTogSW50ZXJzZWN0aW9uT2JzZXJ2ZXIge1xuICAgIGlmIChvYnNlcnZlckluc3RhbmNlID09IG51bGwpIHtcbiAgICAgICAgb2JzZXJ2ZXJJbnN0YW5jZSA9IGNyZWF0ZU9ic2VydmVyKHRocmVzaG9sZCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG9ic2VydmVySW5zdGFuY2Vcbn1cblxuZnVuY3Rpb24gY3JlYXRlT2JzZXJ2ZXIodGhyZXNob2xkID0gMC4zKSB7XG4gIGNvbnN0IGZsb2F0T2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoXG4gICAgKGVudHJpZXMpID0+IHtcbiAgICAgIGVudHJpZXMuZm9yRWFjaCgoZSkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gZmxvYXRlcnMuZ2V0KGUudGFyZ2V0KTtcbiAgICAgICAgaWYgKCFkYXRhKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZGF0YS5pbml0aWFsaXplZDogZG9uJ3QgZmxvYXQgd2hlbiBJbnRlcnNlY3Rpb25PYnNlcnZlciBydW5zIHRoZSBjYWxsYmFjayBpbW1lZGlhdGVseSBvbiBwYWdlIGxvYWQuXG4gICAgICAgIGlmIChkYXRhLmluaXRpYWxpemVkICYmIGRhdGEuc2hvdWxkRmxvYXQgJiYgd2luZG93Lmp3cGxheWVyKSB7XG4gICAgICAgICAgY29uc3QgandwbGF5ZXIgPSB3aW5kb3cuandwbGF5ZXJcbiAgICAgICAgICBjb25zdCBwbGF5ZXIgPSBqd3BsYXllcihlLnRhcmdldClcbiAgICAgICAgICBjb25zdCBiZWxvd1NjcmVlbiA9IGUuYm91bmRpbmdDbGllbnRSZWN0LnRvcCA+PSAwO1xuICAgICAgICAgIHBsYXllci5zZXRGbG9hdGluZyghYmVsb3dTY3JlZW4gJiYgIWUuaXNJbnRlcnNlY3RpbmcpXG4gICAgICAgIH1cblxuICAgICAgICBkYXRhLmluaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgeyB0aHJlc2hvbGQgfVxuICApO1xuXG4gIHJldHVybiBmbG9hdE9ic2VydmVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXR1cChwbGF5ZXI6IEp3UGxheWVyLCB7ZmxvYXRpbmcsIGF1dG9zdGFydH06IFZpZGVvSW50ZXJmYWNlLCBpc01vYmlsZTogYm9vbGVhbikgOiBQbGF5ZXJGZWF0dXJlIHtcbiAgaWYgKCFpc01vYmlsZXx8IChmbG9hdGluZyAmJiAoIWZsb2F0aW5nLm1vZGUgfHwgZmxvYXRpbmcubW9kZSA9PT0gJ25ldmVyJykpKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAgIHByZUNvbmZpZzogKCkgPT4ge1xuICAgICAgICAgICAgICByZXR1cm4ge31cbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uUmVhZHk6ICgpID0+IHt9XG4gICAgICB9O1xuICAgIH1cbiAgXG4gICAgLy8gRGlzYWJsZSBidWlsdC1pbiBmbG9hdGluZyB0aW1pbmcuXG4gICAgY29uc3QgcHJlQ29uZmlnID0gKCkgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBmbG9hdGluZzoge1xuICAgICAgICAgICAgICBkaXNtaXNzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgbW9kZTogJ25ldmVyJyxcbiAgICAgICAgICB9LFxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBjb25zdCBvblJlYWR5ID0gKCkgPT4ge1xuICAgICAgY29uc3QgY29udGFpbmVyID0gcGxheWVyLmdldENvbnRhaW5lcigpO1xuICAgICAgZmxvYXRlcnMuc2V0KGNvbnRhaW5lciwge1xuICAgICAgICAgIHNob3VsZEZsb2F0OiBhdXRvc3RhcnQgPT09ICd2aWV3YWJsZScsXG4gICAgICAgICAgaW5pdGlhbGl6ZWQ6IGZhbHNlLFxuICAgICAgfSk7XG5cbiAgICAgIGdldE9ic2VydmVyKCkub2JzZXJ2ZShjb250YWluZXIpO1xuICAgIH07XG5cbiAgICByZXR1cm4ge1xuICAgICAgcHJlQ29uZmlnLFxuICAgICAgb25SZWFkeVxuICAgIH1cbn0iXSwibmFtZXMiOlsib2JzZXJ2ZXJJbnN0YW5jZSIsImZsb2F0ZXJzIiwiV2Vha01hcCIsImdldE9ic2VydmVyIiwidGhyZXNob2xkIiwiY3JlYXRlT2JzZXJ2ZXIiLCJmbG9hdE9ic2VydmVyIiwiSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJlbnRyaWVzIiwiZm9yRWFjaCIsImUiLCJkYXRhIiwiZ2V0IiwidGFyZ2V0IiwiaW5pdGlhbGl6ZWQiLCJzaG91bGRGbG9hdCIsIndpbmRvdyIsImp3cGxheWVyIiwicGxheWVyIiwiYmVsb3dTY3JlZW4iLCJib3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJzZXRGbG9hdGluZyIsImlzSW50ZXJzZWN0aW5nIiwic2V0dXAiLCJpc01vYmlsZSIsImZsb2F0aW5nIiwiYXV0b3N0YXJ0IiwibW9kZSIsInByZUNvbmZpZyIsIm9uUmVhZHkiLCJkaXNtaXNzaWJsZSIsImNvbnRhaW5lciIsImdldENvbnRhaW5lciIsInNldCIsIm9ic2VydmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/JwPlayer/features/floatBehavior.ts\n"));

/***/ }),

/***/ "./components/JwVideo/JwPlayer/features/index.ts":
/*!*******************************************************!*\
  !*** ./components/JwVideo/JwPlayer/features/index.ts ***!
  \*******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"floatBehavior\": function() { return /* reexport safe */ _floatBehavior__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   \"mobileAspect\": function() { return /* reexport safe */ _mobileAspect__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   \"sentryTracking\": function() { return /* reexport safe */ _sentryTracking__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   \"videoAdWatch\": function() { return /* reexport safe */ _videoAdWatch__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; }\n/* harmony export */ });\n/* harmony import */ var _mobileAspect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mobileAspect */ \"./components/JwVideo/JwPlayer/features/mobileAspect.ts\");\n/* harmony import */ var _floatBehavior__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./floatBehavior */ \"./components/JwVideo/JwPlayer/features/floatBehavior.ts\");\n/* harmony import */ var _sentryTracking__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sentryTracking */ \"./components/JwVideo/JwPlayer/features/sentryTracking.ts\");\n/* harmony import */ var _videoAdWatch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./videoAdWatch */ \"./components/JwVideo/JwPlayer/features/videoAdWatch.ts\");\n\n\n\n\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvZmVhdHVyZXMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBeUM7QUFDRTtBQUNFO0FBQ0o7QUFPeEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Kd1ZpZGVvL0p3UGxheWVyL2ZlYXR1cmVzL2luZGV4LnRzPzkxYjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vYmlsZUFzcGVjdCBmcm9tICcuL21vYmlsZUFzcGVjdCdcbmltcG9ydCBmbG9hdEJlaGF2aW9yIGZyb20gJy4vZmxvYXRCZWhhdmlvcidcbmltcG9ydCBzZW50cnlUcmFja2luZyBmcm9tICcuL3NlbnRyeVRyYWNraW5nJ1xuaW1wb3J0IHZpZGVvQWRXYXRjaCBmcm9tICcuL3ZpZGVvQWRXYXRjaCdcblxuZXhwb3J0IHtcbiAgICBtb2JpbGVBc3BlY3QsXG4gICAgZmxvYXRCZWhhdmlvcixcbiAgICBzZW50cnlUcmFja2luZyxcbiAgICB2aWRlb0FkV2F0Y2gsXG59Il0sIm5hbWVzIjpbIm1vYmlsZUFzcGVjdCIsImZsb2F0QmVoYXZpb3IiLCJzZW50cnlUcmFja2luZyIsInZpZGVvQWRXYXRjaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/JwVideo/JwPlayer/features/index.ts\n"));

/***/ }),

/***/ "./components/JwVideo/JwPlayer/features/mobileAspect.ts":
/*!**************************************************************!*\
  !*** ./components/JwVideo/JwPlayer/features/mobileAspect.ts ***!
  \**************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ setup; }\n/* harmony export */ });\nfunction setup(player, param, isMobile) {\n    let { aspectratio  } = param;\n    // Force 16:9 aspect for all videos on mobile if not fullscreen\n    const overrideAspect = isMobile ? \"16:9\" : aspectratio;\n    const configOverrides = overrideAspect ? {\n        aspectratio: overrideAspect\n    } : {};\n    const onReady = ()=>{\n        player.on(\"fullscreen\", (param)=>{\n            let { fullscreen  } = param;\n            player.setConfig({\n                aspectratio: fullscreen ? aspectratio : overrideAspect\n            });\n        });\n    };\n    return {\n        preConfig: ()=>configOverrides,\n        onReady\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvZmVhdHVyZXMvbW9iaWxlQXNwZWN0LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFHZSxTQUFTQSxNQUFNQyxNQUFnQixFQUFFLEtBQStCLEVBQUVDLFFBQWlCLEVBQWlCO1FBQW5FLEVBQUVDLFlBQVcsRUFBa0IsR0FBL0I7SUFDOUMsK0RBQStEO0lBQy9ELE1BQU1DLGlCQUFpQkYsV0FBVyxTQUFTQyxXQUFXO0lBQ3RELE1BQU1FLGtCQUFrQkQsaUJBQWlCO1FBQUVELGFBQWFDO0lBQWUsSUFBSSxDQUFDLENBQUM7SUFFN0UsTUFBTUUsVUFBVSxJQUFNO1FBQ3BCTCxPQUFPTSxFQUFFLENBQUMsY0FBYyxTQUE2QztnQkFBNUMsRUFBRUMsV0FBVSxFQUEyQjtZQUM5RFAsT0FBT1EsU0FBUyxDQUFDO2dCQUNmTixhQUFhSyxhQUFhTCxjQUFjQyxjQUFjO1lBQ3hEO1FBQ0Y7SUFDRjtJQUVBLE9BQU87UUFDTE0sV0FBVyxJQUFNTDtRQUNqQkM7SUFDRjtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Kd1ZpZGVvL0p3UGxheWVyL2ZlYXR1cmVzL21vYmlsZUFzcGVjdC50cz8yOTE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEp3UGxheWVyLCBWaWRlb0ludGVyZmFjZSB9IGZyb20gXCIuLi8uLi90eXBlcy92aWRlb1wiXG5pbXBvcnQgeyBQbGF5ZXJGZWF0dXJlIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0dXAocGxheWVyOiBKd1BsYXllciwgeyBhc3BlY3RyYXRpbyB9OiBWaWRlb0ludGVyZmFjZSwgaXNNb2JpbGU6IGJvb2xlYW4pOiBQbGF5ZXJGZWF0dXJlIHtcbiAgLy8gRm9yY2UgMTY6OSBhc3BlY3QgZm9yIGFsbCB2aWRlb3Mgb24gbW9iaWxlIGlmIG5vdCBmdWxsc2NyZWVuXG4gIGNvbnN0IG92ZXJyaWRlQXNwZWN0ID0gaXNNb2JpbGUgPyAnMTY6OScgOiBhc3BlY3RyYXRpb1xuICBjb25zdCBjb25maWdPdmVycmlkZXMgPSBvdmVycmlkZUFzcGVjdCA/IHsgYXNwZWN0cmF0aW86IG92ZXJyaWRlQXNwZWN0IH0gOiB7fVxuXG4gIGNvbnN0IG9uUmVhZHkgPSAoKSA9PiB7XG4gICAgcGxheWVyLm9uKCdmdWxsc2NyZWVuJywgKHsgZnVsbHNjcmVlbiB9OiB7IGZ1bGxzY3JlZW46IGJvb2xlYW4gfSkgPT4ge1xuICAgICAgcGxheWVyLnNldENvbmZpZyh7XG4gICAgICAgIGFzcGVjdHJhdGlvOiBmdWxsc2NyZWVuID8gYXNwZWN0cmF0aW8gOiBvdmVycmlkZUFzcGVjdCxcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcHJlQ29uZmlnOiAoKSA9PiBjb25maWdPdmVycmlkZXMsXG4gICAgb25SZWFkeVxuICB9XG59XG5cbiJdLCJuYW1lcyI6WyJzZXR1cCIsInBsYXllciIsImlzTW9iaWxlIiwiYXNwZWN0cmF0aW8iLCJvdmVycmlkZUFzcGVjdCIsImNvbmZpZ092ZXJyaWRlcyIsIm9uUmVhZHkiLCJvbiIsImZ1bGxzY3JlZW4iLCJzZXRDb25maWciLCJwcmVDb25maWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/JwPlayer/features/mobileAspect.ts\n"));

/***/ }),

/***/ "./components/JwVideo/JwPlayer/features/sentryTracking.ts":
/*!****************************************************************!*\
  !*** ./components/JwVideo/JwPlayer/features/sentryTracking.ts ***!
  \****************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ setup; }\n/* harmony export */ });\n/* harmony import */ var _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/nextjs */ \"./node_modules/@sentry/nextjs/esm/index.client.js\");\n\n// https://developer.jwplayer.com/jwplayer/docs/jw8-ad-errors-reference\nconst ignoredAdErrors = {\n    303: \"ignored errors\",\n    301: \"Ad request Timeout\",\n    400: \"ignored errors\",\n    402: \"related to IMASDK and timeout\",\n    403: \"when a advertiser is trying to run a unsuppported video file, like webm or flash\",\n    900: \"This error is sent when someone is trying set us ads with an old standard\",\n    901: \"Ad Error: An unexpected error occurred within the VPAID creative.\"\n};\n// See https://developer.jwplayer.com/jwplayer/docs/jw8-player-errors-reference\nconst ignoredPlayerErrors = {\n    224003: \"Failed to play the associated resource because it is not supported by this browser. Equivalent to the HTML5 MEDIA_ERR_SRC_NOT_SUPPORTED mediaError.\",\n    303213: \"The play attempt was interrupted by a call to pause().\",\n    101102: \"Failed to load jwplayer.core.controls component\"\n};\nfunction setup(player) {\n    const onReady = ()=>{\n        player.on(\"adError\", (error)=>{\n            if (ignoredAdErrors[error === null || error === void 0 ? void 0 : error.code]) return;\n            _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.captureMessage(\"JW Video Ad Error\", {\n                tags: {\n                    code: JSON.stringify(error === null || error === void 0 ? void 0 : error.code),\n                    message: JSON.stringify(error === null || error === void 0 ? void 0 : error.message),\n                    tag: JSON.stringify(error === null || error === void 0 ? void 0 : error.tag)\n                }\n            });\n        })// Player errors\n        .on(\"error\", (error)=>{\n            if (ignoredPlayerErrors[error === null || error === void 0 ? void 0 : error.code]) return;\n            _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.captureMessage(\"Error in the Video playback process\", {\n                tags: {\n                    code: JSON.stringify(error === null || error === void 0 ? void 0 : error.code),\n                    message: JSON.stringify(error === null || error === void 0 ? void 0 : error.message),\n                    sourceError: JSON.stringify(error === null || error === void 0 ? void 0 : error.sourceError)\n                }\n            });\n        }).on(\"playAttemptFailed\", (param)=>{\n            let { error , playReason , item  } = param;\n            _sentry_nextjs__WEBPACK_IMPORTED_MODULE_0__.captureException(\"Video error: \".concat(error));\n            console.log(\"JW playAttemptFailed\", \"Video error: \".concat(error), playReason, JSON.stringify(item));\n        });\n    };\n    return {\n        preConfig: ()=>{\n            return {};\n        },\n        onReady\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvZmVhdHVyZXMvc2VudHJ5VHJhY2tpbmcudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFeUM7QUFFdkMsdUVBQXVFO0FBQ3ZFLE1BQU1DLGtCQUEyQztJQUMvQyxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7SUFDTCxLQUFLO0lBQ0wsS0FBSztJQUNMLEtBQUs7SUFDTCxLQUFLO0FBQ1A7QUFFQSwrRUFBK0U7QUFDL0UsTUFBTUMsc0JBQStDO0lBQ25ELFFBQVM7SUFDVCxRQUFRO0lBQ1IsUUFBUTtBQUNWO0FBRWEsU0FBU0MsTUFBT0MsTUFBZ0IsRUFBaUI7SUFDNUQsTUFBTUMsVUFBVSxJQUFNO1FBQ2xCRCxPQUNDRSxFQUFFLENBQUMsV0FBVyxDQUFDQyxRQUEyQjtZQUN6QyxJQUFJTixlQUFlLENBQUNNLGtCQUFBQSxtQkFBQUEsS0FBQUEsSUFBQUEsTUFBT0MsSUFBSSxDQUFDLEVBQUU7WUFFbENSLDBEQUFxQixDQUFDLHFCQUFxQjtnQkFDekNVLE1BQU07b0JBQ0pGLE1BQU1HLEtBQUtDLFNBQVMsQ0FBQ0wsa0JBQUFBLG1CQUFBQSxLQUFBQSxJQUFBQSxNQUFPQyxJQUFJO29CQUNoQ0ssU0FBU0YsS0FBS0MsU0FBUyxDQUFDTCxrQkFBQUEsbUJBQUFBLEtBQUFBLElBQUFBLE1BQU9NLE9BQU87b0JBQ3RDQyxLQUFLSCxLQUFLQyxTQUFTLENBQUNMLGtCQUFBQSxtQkFBQUEsS0FBQUEsSUFBQUEsTUFBT08sR0FBRztnQkFDaEM7WUFDRjtRQUNGLEVBRUEsZ0JBQWdCO1NBQ2ZSLEVBQUUsQ0FBQyxTQUFTLENBQUNDLFFBQXlCO1lBQ3JDLElBQUlMLG1CQUFtQixDQUFDSyxrQkFBQUEsbUJBQUFBLEtBQUFBLElBQUFBLE1BQU9DLElBQUksQ0FBQyxFQUFFO1lBRXRDUiwwREFBcUIsQ0FBQyx1Q0FBdUM7Z0JBQzNEVSxNQUFNO29CQUNKRixNQUFNRyxLQUFLQyxTQUFTLENBQUNMLGtCQUFBQSxtQkFBQUEsS0FBQUEsSUFBQUEsTUFBT0MsSUFBSTtvQkFDaENLLFNBQVNGLEtBQUtDLFNBQVMsQ0FBQ0wsa0JBQUFBLG1CQUFBQSxLQUFBQSxJQUFBQSxNQUFPTSxPQUFPO29CQUN0Q0UsYUFBYUosS0FBS0MsU0FBUyxDQUFDTCxrQkFBQUEsbUJBQUFBLEtBQUFBLElBQUFBLE1BQU9RLFdBQVc7Z0JBQ2hEO1lBQ0Y7UUFDRixHQUNDVCxFQUFFLENBQUMscUJBQXFCLFNBQW1HO2dCQUFsRyxFQUFFQyxNQUFLLEVBQUVTLFdBQVUsRUFBRUMsS0FBSSxFQUFvRTtZQUNySGpCLDREQUF1QixDQUFDLGdCQUFzQixPQUFOTztZQUN4Q1ksUUFBUUMsR0FBRyxDQUFDLHdCQUF3QixnQkFBc0IsT0FBTmIsUUFBU1MsWUFBWUwsS0FBS0MsU0FBUyxDQUFDSztRQUMxRjtJQUNKO0lBRUEsT0FBTztRQUNISSxXQUFXLElBQU07WUFBRSxPQUFPLENBQUM7UUFBRTtRQUM3QmhCO0lBQ0o7QUFDSixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSndWaWRlby9Kd1BsYXllci9mZWF0dXJlcy9zZW50cnlUcmFja2luZy50cz9iOGIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEp3UGxheWVyLCBKd1BsYXllckVycm9yLCBKd1BsYXllckFkRXJyb3IsIFBsYXlsaXN0SXRlbSwgVmlkZW9JbnRlcmZhY2UgfSBmcm9tIFwiLi4vLi4vdHlwZXMvdmlkZW9cIjtcbmltcG9ydCB7IFBsYXllckZlYXR1cmUgfSBmcm9tIFwiLi90eXBlc1wiO1xuaW1wb3J0ICogYXMgU2VudHJ5IGZyb20gXCJAc2VudHJ5L25leHRqc1wiO1xuXG4gIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLmp3cGxheWVyLmNvbS9qd3BsYXllci9kb2NzL2p3OC1hZC1lcnJvcnMtcmVmZXJlbmNlXG4gIGNvbnN0IGlnbm9yZWRBZEVycm9yczoge1trZXk6IG51bWJlcl06IHN0cmluZ30gPSB7XG4gICAgMzAzOiAnaWdub3JlZCBlcnJvcnMnLFxuICAgIDMwMTogJ0FkIHJlcXVlc3QgVGltZW91dCcsXG4gICAgNDAwOiAnaWdub3JlZCBlcnJvcnMnLFxuICAgIDQwMjogJ3JlbGF0ZWQgdG8gSU1BU0RLIGFuZCB0aW1lb3V0JyxcbiAgICA0MDM6ICd3aGVuIGEgYWR2ZXJ0aXNlciBpcyB0cnlpbmcgdG8gcnVuIGEgdW5zdXBwcG9ydGVkIHZpZGVvIGZpbGUsIGxpa2Ugd2VibSBvciBmbGFzaCcsXG4gICAgOTAwOiAnVGhpcyBlcnJvciBpcyBzZW50IHdoZW4gc29tZW9uZSBpcyB0cnlpbmcgc2V0IHVzIGFkcyB3aXRoIGFuIG9sZCBzdGFuZGFyZCcsXG4gICAgOTAxOiAnQWQgRXJyb3I6IEFuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQgd2l0aGluIHRoZSBWUEFJRCBjcmVhdGl2ZS4nLFxuICB9O1xuXG4gIC8vIFNlZSBodHRwczovL2RldmVsb3Blci5qd3BsYXllci5jb20vandwbGF5ZXIvZG9jcy9qdzgtcGxheWVyLWVycm9ycy1yZWZlcmVuY2VcbiAgY29uc3QgaWdub3JlZFBsYXllckVycm9yczoge1trZXk6IG51bWJlcl06IHN0cmluZ30gPSB7XG4gICAgMjI0MDAzOiBgRmFpbGVkIHRvIHBsYXkgdGhlIGFzc29jaWF0ZWQgcmVzb3VyY2UgYmVjYXVzZSBpdCBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgYnJvd3Nlci4gRXF1aXZhbGVudCB0byB0aGUgSFRNTDUgTUVESUFfRVJSX1NSQ19OT1RfU1VQUE9SVEVEIG1lZGlhRXJyb3IuYCxcbiAgICAzMDMyMTM6ICdUaGUgcGxheSBhdHRlbXB0IHdhcyBpbnRlcnJ1cHRlZCBieSBhIGNhbGwgdG8gcGF1c2UoKS4nLFxuICAgIDEwMTEwMjogJ0ZhaWxlZCB0byBsb2FkIGp3cGxheWVyLmNvcmUuY29udHJvbHMgY29tcG9uZW50JyxcbiAgfTtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0dXAgKHBsYXllcjogSndQbGF5ZXIpOiBQbGF5ZXJGZWF0dXJlIHtcbiAgICBjb25zdCBvblJlYWR5ID0gKCkgPT4ge1xuICAgICAgICBwbGF5ZXJcbiAgICAgICAgLm9uKCdhZEVycm9yJywgKGVycm9yOiBKd1BsYXllckFkRXJyb3IpID0+IHtcbiAgICAgICAgICBpZiAoaWdub3JlZEFkRXJyb3JzW2Vycm9yPy5jb2RlXSkgcmV0dXJuO1xuXG4gICAgICAgICAgU2VudHJ5LmNhcHR1cmVNZXNzYWdlKCdKVyBWaWRlbyBBZCBFcnJvcicsIHtcbiAgICAgICAgICAgIHRhZ3M6IHtcbiAgICAgICAgICAgICAgY29kZTogSlNPTi5zdHJpbmdpZnkoZXJyb3I/LmNvZGUpLFxuICAgICAgICAgICAgICBtZXNzYWdlOiBKU09OLnN0cmluZ2lmeShlcnJvcj8ubWVzc2FnZSksXG4gICAgICAgICAgICAgIHRhZzogSlNPTi5zdHJpbmdpZnkoZXJyb3I/LnRhZyksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgIFxuICAgICAgICAvLyBQbGF5ZXIgZXJyb3JzXG4gICAgICAgIC5vbignZXJyb3InLCAoZXJyb3I6IEp3UGxheWVyRXJyb3IpID0+IHtcbiAgICAgICAgICBpZiAoaWdub3JlZFBsYXllckVycm9yc1tlcnJvcj8uY29kZV0pIHJldHVybjtcbiAgICBcbiAgICAgICAgICBTZW50cnkuY2FwdHVyZU1lc3NhZ2UoJ0Vycm9yIGluIHRoZSBWaWRlbyBwbGF5YmFjayBwcm9jZXNzJywge1xuICAgICAgICAgICAgdGFnczogeyAgICAgICAgICAgIFxuICAgICAgICAgICAgICBjb2RlOiBKU09OLnN0cmluZ2lmeShlcnJvcj8uY29kZSksXG4gICAgICAgICAgICAgIG1lc3NhZ2U6IEpTT04uc3RyaW5naWZ5KGVycm9yPy5tZXNzYWdlKSxcbiAgICAgICAgICAgICAgc291cmNlRXJyb3I6IEpTT04uc3RyaW5naWZ5KGVycm9yPy5zb3VyY2VFcnJvciksXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5vbigncGxheUF0dGVtcHRGYWlsZWQnLCAoeyBlcnJvciwgcGxheVJlYXNvbiwgaXRlbSB9OiB7IGVycm9yOiBKd1BsYXllckVycm9yLCBwbGF5UmVhc29uOiBzdHJpbmcsIGl0ZW06IFBsYXlsaXN0SXRlbSB9KSA9PiB7XG4gICAgICAgICAgU2VudHJ5LmNhcHR1cmVFeGNlcHRpb24oYFZpZGVvIGVycm9yOiAke2Vycm9yfWApO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdKVyBwbGF5QXR0ZW1wdEZhaWxlZCcsIGBWaWRlbyBlcnJvcjogJHtlcnJvcn1gLCBwbGF5UmVhc29uLCBKU09OLnN0cmluZ2lmeShpdGVtKSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHByZUNvbmZpZzogKCkgPT4geyByZXR1cm4ge30gfSxcbiAgICAgICAgb25SZWFkeVxuICAgIH1cbn0iXSwibmFtZXMiOlsiU2VudHJ5IiwiaWdub3JlZEFkRXJyb3JzIiwiaWdub3JlZFBsYXllckVycm9ycyIsInNldHVwIiwicGxheWVyIiwib25SZWFkeSIsIm9uIiwiZXJyb3IiLCJjb2RlIiwiY2FwdHVyZU1lc3NhZ2UiLCJ0YWdzIiwiSlNPTiIsInN0cmluZ2lmeSIsIm1lc3NhZ2UiLCJ0YWciLCJzb3VyY2VFcnJvciIsInBsYXlSZWFzb24iLCJpdGVtIiwiY2FwdHVyZUV4Y2VwdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJwcmVDb25maWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/JwPlayer/features/sentryTracking.ts\n"));

/***/ }),

/***/ "./components/JwVideo/JwPlayer/features/videoAdWatch.ts":
/*!**************************************************************!*\
  !*** ./components/JwVideo/JwPlayer/features/videoAdWatch.ts ***!
  \**************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ setup; }\n/* harmony export */ });\nfunction setup(player) {\n    const onReady = ()=>{\n        player.on(\"adRequest\", (response)=>{\n            try {\n                if (response && window.adStats) {\n                    window.adStats.add([\n                        {\n                            placement: \"preroll\",\n                            gptEvent: \"slotRequested\"\n                        }\n                    ]);\n                    window.adStats.push();\n                }\n            } catch (error) {\n                console.warn(\"video adwatch error: \", error);\n            }\n        });\n    };\n    const preConfig = ()=>{\n        return {\n            video: {\n                adRequest: true\n            }\n        };\n    };\n    return {\n        preConfig,\n        onReady\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvZmVhdHVyZXMvdmlkZW9BZFdhdGNoLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFHZSxTQUFTQSxNQUFNQyxNQUFnQixFQUFpQjtJQUM3RCxNQUFNQyxVQUFVLElBQU07UUFDcEJELE9BQU9FLEVBQUUsQ0FBQyxhQUFhLENBQUNDLFdBQWtCO1lBQ3hDLElBQUk7Z0JBQ0YsSUFBSUEsWUFBWUMsT0FBT0MsT0FBTyxFQUFFO29CQUM5QkQsT0FBT0MsT0FBTyxDQUFDQyxHQUFHLENBQUM7d0JBQ2pCOzRCQUNFQyxXQUFXOzRCQUNYQyxVQUFVO3dCQUNaO3FCQUNEO29CQUNESixPQUFPQyxPQUFPLENBQUNJLElBQUk7Z0JBQ3JCLENBQUM7WUFDSCxFQUFFLE9BQU9DLE9BQU87Z0JBQ2RDLFFBQVFDLElBQUksQ0FBRSx5QkFBd0JGO1lBQ3hDO1FBQ0Y7SUFDRjtJQUNBLE1BQU1HLFlBQVksSUFBTTtRQUN0QixPQUFPO1lBQ0xDLE9BQU87Z0JBQ0xDLFdBQVcsSUFBSTtZQUNqQjtRQUNGO0lBQ0Y7SUFFQSxPQUFPO1FBQ0xGO1FBQ0FaO0lBQ0Y7QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSndWaWRlby9Kd1BsYXllci9mZWF0dXJlcy92aWRlb0FkV2F0Y2gudHM/YTJhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKd1BsYXllciB9IGZyb20gJy4uLy4uL3R5cGVzL3ZpZGVvJ1xuaW1wb3J0IHsgUGxheWVyRmVhdHVyZSB9IGZyb20gJy4vdHlwZXMnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNldHVwKHBsYXllcjogSndQbGF5ZXIpOiBQbGF5ZXJGZWF0dXJlIHtcbiAgY29uc3Qgb25SZWFkeSA9ICgpID0+IHtcbiAgICBwbGF5ZXIub24oJ2FkUmVxdWVzdCcsIChyZXNwb25zZTogYW55KSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAocmVzcG9uc2UgJiYgd2luZG93LmFkU3RhdHMpIHtcbiAgICAgICAgICB3aW5kb3cuYWRTdGF0cy5hZGQoW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBwbGFjZW1lbnQ6ICdwcmVyb2xsJyxcbiAgICAgICAgICAgICAgZ3B0RXZlbnQ6ICdzbG90UmVxdWVzdGVkJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSlcbiAgICAgICAgICB3aW5kb3cuYWRTdGF0cy5wdXNoKClcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGB2aWRlbyBhZHdhdGNoIGVycm9yOiBgLCBlcnJvcilcbiAgICAgIH1cbiAgICB9KVxuICB9XG4gIGNvbnN0IHByZUNvbmZpZyA9ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgdmlkZW86IHtcbiAgICAgICAgYWRSZXF1ZXN0OiB0cnVlLFxuICAgICAgfSxcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgIHByZUNvbmZpZyxcbiAgICBvblJlYWR5LFxuICB9XG59XG4iXSwibmFtZXMiOlsic2V0dXAiLCJwbGF5ZXIiLCJvblJlYWR5Iiwib24iLCJyZXNwb25zZSIsIndpbmRvdyIsImFkU3RhdHMiLCJhZGQiLCJwbGFjZW1lbnQiLCJncHRFdmVudCIsInB1c2giLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwicHJlQ29uZmlnIiwidmlkZW8iLCJhZFJlcXVlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/JwPlayer/features/videoAdWatch.ts\n"));

/***/ }),

/***/ "./components/JwVideo/JwPlayer/index.tsx":
/*!***********************************************!*\
  !*** ./components/JwVideo/JwPlayer/index.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ JwPlayer; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../JwPlayerContext */ \"./components/JwVideo/JwPlayerContext/index.tsx\");\n/* harmony import */ var _modules_ads_adsSetup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/ads/adsSetup */ \"./components/JwVideo/modules/ads/adsSetup.ts\");\n/* harmony import */ var _utils_lazyLog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/lazyLog */ \"./components/JwVideo/utils/lazyLog.ts\");\n/* harmony import */ var _features__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./features */ \"./components/JwVideo/JwPlayer/features/index.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst checkForUserConsentAndGetAdConfig = (param)=>{\n    let { articleInfo , autostart , ypPartId  } = param;\n    return new Promise((resolve)=>{\n        if (window.userConsent) {\n            window.userConsent.isTargetingApproved(async (response)=>{\n                if (response) {\n                    //Targetting is approved here\n                    const customAdConfig = await (0,_modules_ads_adsSetup__WEBPACK_IMPORTED_MODULE_4__.adsSetup)({\n                        articleInfo,\n                        autoStart: autostart,\n                        wasYouplay: ypPartId === null\n                    });\n                    resolve(customAdConfig);\n                } else {\n                    resolve({});\n                }\n            });\n        } else {\n            resolve({});\n        }\n    });\n};\nconst setupPlayer = async (params)=>{\n    var _playerEnv_OS;\n    const { videoID: mediaID , autostart , articleInfo , ypPartId =null  } = params;\n    const player = window.jwplayer(document.getElementById(mediaID));\n    const jwDefaults = window.jwDefaults;\n    // const customAdConfig = await checkForUserConsentAndGetAdConfig({ autostart, articleInfo, ypPartId })\n    const playerEnv = player === null || player === void 0 ? void 0 : player.getEnvironment();\n    const isMobile = playerEnv === null || playerEnv === void 0 ? void 0 : (_playerEnv_OS = playerEnv.OS) === null || _playerEnv_OS === void 0 ? void 0 : _playerEnv_OS.mobile;\n    const features = [\n        _features__WEBPACK_IMPORTED_MODULE_6__.mobileAspect,\n        _features__WEBPACK_IMPORTED_MODULE_6__.floatBehavior,\n        _features__WEBPACK_IMPORTED_MODULE_6__.sentryTracking,\n        _features__WEBPACK_IMPORTED_MODULE_6__.videoAdWatch\n    ].map((setup)=>setup(player, params, isMobile));\n    const configOverrides = features.reduce((configValues, feature)=>{\n        return {\n            ...configValues,\n            ...feature.preConfig()\n        };\n    }, {});\n    const videoPlayerConfig = {\n        ...params,\n        advertising: {\n            ...jwDefaults.advertising\n        },\n        ...configOverrides\n    };\n    (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_5__.lazyLog)(()=>\"Video config is  \".concat(JSON.stringify(videoPlayerConfig, null, 4)));\n    player.setup(videoPlayerConfig).on(\"ready\", ()=>{\n        features.forEach((feature)=>feature.onReady());\n    });\n    return player;\n};\nfunction JwPlayer(props) {\n    _s();\n    const { asPath  } = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const { player , onPlayerSet  } = (0,_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.useJwPlayer)();\n    (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_5__.setupLogging)(asPath);\n    (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(()=>{\n        const interval = setInterval(async ()=>{\n            if (window.jwplayer) {\n                clearInterval(interval);\n                const instance = await setupPlayer(props);\n                onPlayerSet(instance);\n            }\n        });\n        return ()=>clearInterval(interval);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        id: props.videoID\n    }, void 0, false, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/JwPlayer/index.tsx\",\n        lineNumber: 92,\n        columnNumber: 10\n    }, this);\n}\n_s(JwPlayer, \"79FXGyyo4E3gJRGNec+hJL+uHIs=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter,\n        _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__.useJwPlayer\n    ];\n});\n_c = JwPlayer;\nvar _c;\n$RefreshReg$(_c, \"JwPlayer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBdUM7QUFDZDtBQUNRO0FBQ2U7QUFDRTtBQUdNO0FBQzZCO0FBR3JGLE1BQU1XLG9DQUFvQyxTQVFoQztRQVJpQyxFQUN6Q0MsWUFBVyxFQUNYQyxVQUFTLEVBQ1RDLFNBQVEsRUFLVDtJQUNDLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxVQUFZO1FBQzlCLElBQUlDLE9BQU9DLFdBQVcsRUFBRTtZQUN0QkQsT0FBT0MsV0FBVyxDQUFDQyxtQkFBbUIsQ0FBQyxPQUFPQyxXQUFrQjtnQkFDOUQsSUFBSUEsVUFBVTtvQkFDWiw2QkFBNkI7b0JBQzdCLE1BQU1DLGlCQUFpQixNQUFNakIsK0RBQVFBLENBQUM7d0JBQUVRO3dCQUFhVSxXQUFXVDt3QkFBV1UsWUFBWVQsYUFBYSxJQUFJO29CQUFDO29CQUN6R0UsUUFBUUs7Z0JBQ1YsT0FBTztvQkFDTEwsUUFBUSxDQUFDO2dCQUNYLENBQUM7WUFDSDtRQUNGLE9BQU87WUFDTEEsUUFBUSxDQUFDO1FBQ1gsQ0FBQztJQUNIO0FBQ0Y7QUFFQSxNQUFNUSxjQUFjLE9BQU9DLFNBQTJCO1FBTW5DQztJQUxqQixNQUFNLEVBQUVDLFNBQVNDLFFBQU8sRUFBRWYsVUFBUyxFQUFFRCxZQUFXLEVBQUVFLFVBQVcsSUFBSSxHQUFFLEdBQUdXO0lBQ3RFLE1BQU1JLFNBQVNaLE9BQU9hLFFBQVEsQ0FBQ0MsU0FBU0MsY0FBYyxDQUFDSjtJQUN2RCxNQUFNSyxhQUFhaEIsT0FBT2dCLFVBQVU7SUFDcEMsdUdBQXVHO0lBQ3ZHLE1BQU1QLFlBQVlHLG1CQUFBQSxvQkFBQUEsS0FBQUEsSUFBQUEsT0FBUUssY0FBYztJQUN4QyxNQUFNQyxXQUFXVCxzQkFBQUEsdUJBQUFBLEtBQUFBLElBQUFBLENBQUFBLGdCQUFBQSxVQUFXVSxFQUFFLGNBQWJWLDJCQUFBQSxLQUFBQSxJQUFBQSxjQUFlVyxNQUFGO0lBRTlCLE1BQU1DLFdBQVc7UUFDZi9CLG1EQUFZQTtRQUNaQyxvREFBYUE7UUFDYkUscURBQWNBO1FBQ2RELG1EQUFZQTtLQUNiLENBQUM4QixHQUFHLENBQUNDLENBQUFBLFFBQVNBLE1BQU1YLFFBQVFKLFFBQVFVO0lBRXJDLE1BQU1NLGtCQUFrQkgsU0FBU0ksTUFBTSxDQUFDLENBQUNDLGNBQWNDLFVBQVk7UUFDakUsT0FBTztZQUNMLEdBQUdELFlBQVk7WUFDZixHQUFHQyxRQUFRQyxTQUFTLEVBQUU7UUFDeEI7SUFDRixHQUFHLENBQUM7SUFFSixNQUFNQyxvQkFBb0I7UUFDeEIsR0FBR3JCLE1BQU07UUFDVHNCLGFBQWE7WUFDWCxHQUFHZCxXQUFXYyxXQUFXO1FBRTNCO1FBQ0EsR0FBR04sZUFBZTtJQUNwQjtJQUNBcEMsdURBQU9BLENBQUMsSUFBTSxvQkFBK0QsT0FBM0MyQyxLQUFLQyxTQUFTLENBQUNILG1CQUFtQixJQUFJLEVBQUU7SUFFMUVqQixPQUFPVyxLQUFLLENBQUNNLG1CQUFtQkksRUFBRSxDQUFDLFNBQVMsSUFBMEI7UUFDcEVaLFNBQVNhLE9BQU8sQ0FBQ1AsQ0FBQUEsVUFBV0EsUUFBUVEsT0FBTztJQUM3QztJQUNBLE9BQU92QjtBQUNUO0FBRWUsU0FBU3dCLFNBQVNDLEtBQXFCLEVBQUU7O0lBQ3RELE1BQU0sRUFBRUMsT0FBTSxFQUFFLEdBQUd2RCxzREFBU0E7SUFDNUIsTUFBTSxFQUFFNkIsT0FBTSxFQUFFMkIsWUFBVyxFQUFFLEdBQUdyRCw2REFBV0E7SUFFM0NHLDREQUFZQSxDQUFDaUQ7SUFDYnJELGdEQUFTQSxDQUFDLElBQU07UUFDZCxNQUFNdUQsV0FBV0MsWUFBWSxVQUFZO1lBQ3ZDLElBQUl6QyxPQUFPYSxRQUFRLEVBQUU7Z0JBQ25CNkIsY0FBY0Y7Z0JBQ2QsTUFBTUcsV0FBVyxNQUFNcEMsWUFBWThCO2dCQUNuQ0UsWUFBWUk7WUFDZCxDQUFDO1FBQ0g7UUFDQSxPQUFPLElBQU1ELGNBQWNGO0lBQzdCLEdBQUcsRUFBRTtJQUVMLHFCQUFPLDhEQUFDSTtRQUFJQyxJQUFJUixNQUFNM0IsT0FBTzs7Ozs7O0FBQy9CLENBQUM7R0FqQnVCMEI7O1FBQ0hyRCxrREFBU0E7UUFDSUcseURBQVdBOzs7S0FGckJrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXIvaW5kZXgudHN4PzVkMTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IHVzZUp3UGxheWVyIH0gZnJvbSAnLi4vSndQbGF5ZXJDb250ZXh0J1xuaW1wb3J0IHsgYWRzU2V0dXAgfSBmcm9tICcuLi9tb2R1bGVzL2Fkcy9hZHNTZXR1cCdcbmltcG9ydCB7IEFydGljbGVJbmZvIH0gZnJvbSAnLi4vdHlwZXMvYXJ0aWNsZUluZm8nXG5pbXBvcnQgeyBWaWRlb0ludGVyZmFjZSB9IGZyb20gJy4uL3R5cGVzL3ZpZGVvJ1xuaW1wb3J0IHsgbGF6eUxvZywgc2V0dXBMb2dnaW5nIH0gZnJvbSAnLi4vdXRpbHMvbGF6eUxvZydcbmltcG9ydCB7IG1vYmlsZUFzcGVjdCwgZmxvYXRCZWhhdmlvciwgdmlkZW9BZFdhdGNoLCBzZW50cnlUcmFja2luZ30gZnJvbSAnLi9mZWF0dXJlcydcblxuXG5jb25zdCBjaGVja0ZvclVzZXJDb25zZW50QW5kR2V0QWRDb25maWcgPSAoe1xuICBhcnRpY2xlSW5mbyxcbiAgYXV0b3N0YXJ0LFxuICB5cFBhcnRJZCxcbn06IHtcbiAgYXJ0aWNsZUluZm86IEFydGljbGVJbmZvXG4gIGF1dG9zdGFydDogc3RyaW5nIHwgYm9vbGVhblxuICB5cFBhcnRJZDogc3RyaW5nIHwgbnVsbFxufSk6IHt9ID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgaWYgKHdpbmRvdy51c2VyQ29uc2VudCkge1xuICAgICAgd2luZG93LnVzZXJDb25zZW50LmlzVGFyZ2V0aW5nQXBwcm92ZWQoYXN5bmMgKHJlc3BvbnNlOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKHJlc3BvbnNlKSB7XG4gICAgICAgICAgLy9UYXJnZXR0aW5nIGlzIGFwcHJvdmVkIGhlcmVcbiAgICAgICAgICBjb25zdCBjdXN0b21BZENvbmZpZyA9IGF3YWl0IGFkc1NldHVwKHsgYXJ0aWNsZUluZm8sIGF1dG9TdGFydDogYXV0b3N0YXJ0LCB3YXNZb3VwbGF5OiB5cFBhcnRJZCA9PT0gbnVsbCB9KVxuICAgICAgICAgIHJlc29sdmUoY3VzdG9tQWRDb25maWcpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmVzb2x2ZSh7fSlcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzb2x2ZSh7fSlcbiAgICB9XG4gIH0pXG59XG5cbmNvbnN0IHNldHVwUGxheWVyID0gYXN5bmMgKHBhcmFtczogVmlkZW9JbnRlcmZhY2UpID0+IHtcbiAgY29uc3QgeyB2aWRlb0lEOiBtZWRpYUlELCBhdXRvc3RhcnQsIGFydGljbGVJbmZvLCB5cFBhcnRJZCA9IG51bGwgfSA9IHBhcmFtc1xuICBjb25zdCBwbGF5ZXIgPSB3aW5kb3cuandwbGF5ZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobWVkaWFJRCkpXG4gIGNvbnN0IGp3RGVmYXVsdHMgPSB3aW5kb3cuandEZWZhdWx0c1xuICAvLyBjb25zdCBjdXN0b21BZENvbmZpZyA9IGF3YWl0IGNoZWNrRm9yVXNlckNvbnNlbnRBbmRHZXRBZENvbmZpZyh7IGF1dG9zdGFydCwgYXJ0aWNsZUluZm8sIHlwUGFydElkIH0pXG4gIGNvbnN0IHBsYXllckVudiA9IHBsYXllcj8uZ2V0RW52aXJvbm1lbnQoKVxuICBjb25zdCBpc01vYmlsZSA9IHBsYXllckVudj8uT1M/Lm1vYmlsZVxuXG4gIGNvbnN0IGZlYXR1cmVzID0gW1xuICAgIG1vYmlsZUFzcGVjdCxcbiAgICBmbG9hdEJlaGF2aW9yLFxuICAgIHNlbnRyeVRyYWNraW5nLFxuICAgIHZpZGVvQWRXYXRjaFxuICBdLm1hcChzZXR1cCA9PiBzZXR1cChwbGF5ZXIsIHBhcmFtcywgaXNNb2JpbGUpKVxuXG4gIGNvbnN0IGNvbmZpZ092ZXJyaWRlcyA9IGZlYXR1cmVzLnJlZHVjZSgoY29uZmlnVmFsdWVzLCBmZWF0dXJlKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC4uLmNvbmZpZ1ZhbHVlcyxcbiAgICAgIC4uLmZlYXR1cmUucHJlQ29uZmlnKClcbiAgICB9XG4gIH0sIHt9KVxuXG4gIGNvbnN0IHZpZGVvUGxheWVyQ29uZmlnID0ge1xuICAgIC4uLnBhcmFtcyxcbiAgICBhZHZlcnRpc2luZzoge1xuICAgICAgLi4uandEZWZhdWx0cy5hZHZlcnRpc2luZyxcbiAgICAgIC8vIC4uLmN1c3RvbUFkQ29uZmlnLFxuICAgIH0sXG4gICAgLi4uY29uZmlnT3ZlcnJpZGVzLFxuICB9XG4gIGxhenlMb2coKCkgPT4gYFZpZGVvIGNvbmZpZyBpcyAgJHtKU09OLnN0cmluZ2lmeSh2aWRlb1BsYXllckNvbmZpZywgbnVsbCwgNCl9YClcblxuICBwbGF5ZXIuc2V0dXAodmlkZW9QbGF5ZXJDb25maWcpLm9uKCdyZWFkeScsICgvKntzZXR1cFRpbWU6IGFueX0qLykgPT4ge1xuICAgIGZlYXR1cmVzLmZvckVhY2goZmVhdHVyZSA9PiBmZWF0dXJlLm9uUmVhZHkoKSlcbiAgfSlcbiAgcmV0dXJuIHBsYXllcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSndQbGF5ZXIocHJvcHM6IFZpZGVvSW50ZXJmYWNlKSB7XG4gIGNvbnN0IHsgYXNQYXRoIH0gPSB1c2VSb3V0ZXIoKVxuICBjb25zdCB7IHBsYXllciwgb25QbGF5ZXJTZXQgfSA9IHVzZUp3UGxheWVyKClcblxuICBzZXR1cExvZ2dpbmcoYXNQYXRoKVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoYXN5bmMgKCkgPT4ge1xuICAgICAgaWYgKHdpbmRvdy5qd3BsYXllcikge1xuICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKVxuICAgICAgICBjb25zdCBpbnN0YW5jZSA9IGF3YWl0IHNldHVwUGxheWVyKHByb3BzKVxuICAgICAgICBvblBsYXllclNldChpbnN0YW5jZSlcbiAgICAgIH1cbiAgICB9KVxuICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKVxuICB9LCBbXSlcblxuICByZXR1cm4gPGRpdiBpZD17cHJvcHMudmlkZW9JRH0+PC9kaXY+XG59XG4iXSwibmFtZXMiOlsidXNlUm91dGVyIiwiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VKd1BsYXllciIsImFkc1NldHVwIiwibGF6eUxvZyIsInNldHVwTG9nZ2luZyIsIm1vYmlsZUFzcGVjdCIsImZsb2F0QmVoYXZpb3IiLCJ2aWRlb0FkV2F0Y2giLCJzZW50cnlUcmFja2luZyIsImNoZWNrRm9yVXNlckNvbnNlbnRBbmRHZXRBZENvbmZpZyIsImFydGljbGVJbmZvIiwiYXV0b3N0YXJ0IiwieXBQYXJ0SWQiLCJQcm9taXNlIiwicmVzb2x2ZSIsIndpbmRvdyIsInVzZXJDb25zZW50IiwiaXNUYXJnZXRpbmdBcHByb3ZlZCIsInJlc3BvbnNlIiwiY3VzdG9tQWRDb25maWciLCJhdXRvU3RhcnQiLCJ3YXNZb3VwbGF5Iiwic2V0dXBQbGF5ZXIiLCJwYXJhbXMiLCJwbGF5ZXJFbnYiLCJ2aWRlb0lEIiwibWVkaWFJRCIsInBsYXllciIsImp3cGxheWVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImp3RGVmYXVsdHMiLCJnZXRFbnZpcm9ubWVudCIsImlzTW9iaWxlIiwiT1MiLCJtb2JpbGUiLCJmZWF0dXJlcyIsIm1hcCIsInNldHVwIiwiY29uZmlnT3ZlcnJpZGVzIiwicmVkdWNlIiwiY29uZmlnVmFsdWVzIiwiZmVhdHVyZSIsInByZUNvbmZpZyIsInZpZGVvUGxheWVyQ29uZmlnIiwiYWR2ZXJ0aXNpbmciLCJKU09OIiwic3RyaW5naWZ5Iiwib24iLCJmb3JFYWNoIiwib25SZWFkeSIsIkp3UGxheWVyIiwicHJvcHMiLCJhc1BhdGgiLCJvblBsYXllclNldCIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwiaW5zdGFuY2UiLCJkaXYiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/JwVideo/JwPlayer/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/JwPlayerContext/index.tsx":
/*!******************************************************!*\
  !*** ./components/JwVideo/JwPlayerContext/index.tsx ***!
  \******************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JwPlayerProvider\": function() { return /* binding */ JwPlayerProvider; },\n/* harmony export */   \"useJwPlayer\": function() { return /* binding */ useJwPlayer; },\n/* harmony export */   \"usePlayerEvent\": function() { return /* binding */ usePlayerEvent; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/playEvents */ \"./components/JwVideo/constants/playEvents.ts\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$();\n\n\nconst JwPlayerContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    player: null,\n    isMute: false,\n    isPlaying: false,\n    currentMedia: null,\n    onPlayerSet: (p)=>null\n});\nfunction useJwPlayer() {\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JwPlayerContext);\n}\n_s(useJwPlayer, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction usePlayerEvent(player, event, callback) {\n    _s1();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!player) {\n            return ()=>{};\n        }\n        player.on(event, callback);\n        return ()=>{\n            player.off(event, callback);\n        };\n    }, [\n        player,\n        event,\n        callback\n    ]);\n}\n_s1(usePlayerEvent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction JwPlayerProvider(props) {\n    _s2();\n    const { children  } = props;\n    const [player, setPlayer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [currentMedia, setCurrentMedia] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isMute, setIsMute] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const onPlayerSet = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((p)=>{\n        setPlayer(p);\n        setIsMute(p.getMute());\n    }, []);\n    const onMuteEvent = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((param)=>{\n        let { mute  } = param;\n        setIsMute(mute);\n    }, []);\n    const onPlayerPlay = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setIsPlaying(true);\n    }, []);\n    const onPlayerPause = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setIsPlaying(false);\n    }, []);\n    const onPlayerStop = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        setIsPlaying(false);\n    }, []);\n    const onPlaylistItem = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((param)=>{\n        let { index , item  } = param;\n        setCurrentMedia(item);\n    }, []);\n    usePlayerEvent(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__.MUTE, onMuteEvent);\n    usePlayerEvent(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__.PLAY, onPlayerPlay);\n    usePlayerEvent(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__.PAUSE, onPlayerPause);\n    usePlayerEvent(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__.STOP, onPlayerStop);\n    usePlayerEvent(player, _constants_playEvents__WEBPACK_IMPORTED_MODULE_2__.PLAYLIST_ITEM, onPlaylistItem);\n    const contextValue = {\n        player,\n        isMute,\n        isPlaying,\n        currentMedia,\n        onPlayerSet\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(JwPlayerContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/JwPlayerContext/index.tsx\",\n        lineNumber: 89,\n        columnNumber: 10\n    }, this);\n}\n_s2(JwPlayerProvider, \"xm0VpaYPvzzCzraRqbBThTk+4xo=\", false, function() {\n    return [\n        usePlayerEvent,\n        usePlayerEvent,\n        usePlayerEvent,\n        usePlayerEvent,\n        usePlayerEvent\n    ];\n});\n_c = JwPlayerProvider;\n/* harmony default export */ __webpack_exports__[\"default\"] = (JwPlayerProvider);\nvar _c;\n$RefreshReg$(_c, \"JwPlayerProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vSndQbGF5ZXJDb250ZXh0L2luZGV4LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQW1GO0FBQ0c7QUFhdEYsTUFBTVUsZ0NBQWtCVixvREFBYUEsQ0FBc0I7SUFDekRXLFFBQVEsSUFBSTtJQUNaQyxRQUFRLEtBQUs7SUFDYkMsV0FBVyxLQUFLO0lBQ2hCQyxjQUFjLElBQUk7SUFFbEJDLGFBQWEsQ0FBQ0MsSUFBVyxJQUFJO0FBQy9CO0FBRU8sU0FBU0MsY0FBbUM7O0lBQ2pELE9BQU9oQixpREFBVUEsQ0FBQ1M7QUFDcEIsQ0FBQztHQUZlTztBQUlULFNBQVNDLGVBQWVQLE1BQVcsRUFBRVEsS0FBMkIsRUFBRUMsUUFBa0IsRUFBRTs7SUFDM0ZoQixnREFBU0EsQ0FBQyxJQUFNO1FBQ2QsSUFBSSxDQUFDTyxRQUFRO1lBQ1gsT0FBTyxJQUFNLENBQUM7UUFDaEIsQ0FBQztRQUVEQSxPQUFPVSxFQUFFLENBQUNGLE9BQU9DO1FBRWpCLE9BQU8sSUFBTTtZQUNYVCxPQUFPVyxHQUFHLENBQUNILE9BQU9DO1FBQ3BCO0lBQ0YsR0FBRztRQUFDVDtRQUFRUTtRQUFPQztLQUFTO0FBQzlCLENBQUM7SUFaZUY7QUFjVCxTQUFTSyxpQkFBaUJDLEtBQXFDLEVBQUU7O0lBQ3RFLE1BQU0sRUFBRUMsU0FBUSxFQUFFLEdBQUdEO0lBQ3JCLE1BQU0sQ0FBQ2IsUUFBUWUsVUFBVSxHQUFHeEIsK0NBQVFBLENBQU0sSUFBSTtJQUM5QyxNQUFNLENBQUNZLGNBQWNhLGdCQUFnQixHQUFHekIsK0NBQVFBLENBQXNCLElBQUk7SUFDMUUsTUFBTSxDQUFDVSxRQUFRZ0IsVUFBVSxHQUFHMUIsK0NBQVFBLENBQVUsS0FBSztJQUNuRCxNQUFNLENBQUNXLFdBQVdnQixhQUFhLEdBQUczQiwrQ0FBUUEsQ0FBVSxLQUFLO0lBRXpELE1BQU1hLGNBQWNaLGtEQUFXQSxDQUFDLENBQUNhLElBQVc7UUFDMUNVLFVBQVVWO1FBQ1ZZLFVBQVVaLEVBQUVjLE9BQU87SUFDckIsR0FBRyxFQUFFO0lBRUwsTUFBTUMsY0FBYzVCLGtEQUFXQSxDQUFDLFNBQWlDO1lBQWhDLEVBQUU2QixLQUFJLEVBQXFCO1FBQzFESixVQUFVSTtJQUNaLEdBQUcsRUFBRTtJQUVMLE1BQU1DLGVBQWU5QixrREFBV0EsQ0FBQyxJQUFNO1FBQ3JDMEIsYUFBYSxJQUFJO0lBQ25CLEdBQUcsRUFBRTtJQUVMLE1BQU1LLGdCQUFnQi9CLGtEQUFXQSxDQUFDLElBQU07UUFDdEMwQixhQUFhLEtBQUs7SUFDcEIsR0FBRyxFQUFFO0lBRUwsTUFBTU0sZUFBZWhDLGtEQUFXQSxDQUFDLElBQU07UUFDckMwQixhQUFhLEtBQUs7SUFDcEIsR0FBRyxFQUFFO0lBRUwsTUFBTU8saUJBQWlCakMsa0RBQVdBLENBQUMsU0FBNEQ7WUFBM0QsRUFBRWtDLE1BQUssRUFBRUMsS0FBSSxFQUF5QztRQUN4RlgsZ0JBQWdCVztJQUNsQixHQUFHLEVBQUU7SUFFTHBCLGVBQWVQLFFBQVFOLHVEQUFJQSxFQUFFMEI7SUFDN0JiLGVBQWVQLFFBQVFKLHVEQUFJQSxFQUFFMEI7SUFDN0JmLGVBQWVQLFFBQVFMLHdEQUFLQSxFQUFFNEI7SUFDOUJoQixlQUFlUCxRQUFRRix1REFBSUEsRUFBRTBCO0lBQzdCakIsZUFBZVAsUUFBUUgsZ0VBQWFBLEVBQUU0QjtJQUV0QyxNQUFNRyxlQUFvQztRQUN4QzVCO1FBQ0FDO1FBQ0FDO1FBQ0FDO1FBRUFDO0lBQ0Y7SUFFQSxxQkFBTyw4REFBQ0wsZ0JBQWdCOEIsUUFBUTtRQUFDQyxPQUFPRjtrQkFBZWQ7Ozs7OztBQUN6RCxDQUFDO0lBaERlRjs7UUFnQ2RMO1FBQ0FBO1FBQ0FBO1FBQ0FBO1FBQ0FBOzs7S0FwQ2NLO0FBa0RoQiwrREFBZUEsZ0JBQWdCQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSndWaWRlby9Kd1BsYXllckNvbnRleHQvaW5kZXgudHN4PzY3YTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQ29udGV4dCwgdXNlQ29udGV4dCwgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IE1VVEUsIFBBVVNFLCBQTEFZLCBQTEFZTElTVF9JVEVNLCBTVE9QLCBUSU1FIH0gZnJvbSAnLi4vY29uc3RhbnRzL3BsYXlFdmVudHMnXG5pbXBvcnQgSldQTEFZRVJfRVZFTlRfVFlQRVMgZnJvbSAnLi4vY29uc3RhbnRzL3BsYXlFdmVudFR5cGVzJ1xuaW1wb3J0IHsgUGxheWxpc3RJdGVtIH0gZnJvbSAnLi4vdHlwZXMvdmlkZW8nXG5cbmludGVyZmFjZSBKd1BsYXllckNvbnRleHRUeXBlIHtcbiAgcGxheWVyOiBhbnlcbiAgaXNNdXRlOiBib29sZWFuXG4gIGlzUGxheWluZzogYm9vbGVhblxuICBjdXJyZW50TWVkaWE6IFBsYXlsaXN0SXRlbSB8IG51bGxcblxuICBvblBsYXllclNldDogKHA6IGFueSkgPT4gdm9pZFxufVxuXG5jb25zdCBKd1BsYXllckNvbnRleHQgPSBjcmVhdGVDb250ZXh0PEp3UGxheWVyQ29udGV4dFR5cGU+KHtcbiAgcGxheWVyOiBudWxsLFxuICBpc011dGU6IGZhbHNlLFxuICBpc1BsYXlpbmc6IGZhbHNlLFxuICBjdXJyZW50TWVkaWE6IG51bGwsXG5cbiAgb25QbGF5ZXJTZXQ6IChwOiBhbnkpID0+IG51bGwsXG59KVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlSndQbGF5ZXIoKTogSndQbGF5ZXJDb250ZXh0VHlwZSB7XG4gIHJldHVybiB1c2VDb250ZXh0KEp3UGxheWVyQ29udGV4dClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVBsYXllckV2ZW50KHBsYXllcjogYW55LCBldmVudDogSldQTEFZRVJfRVZFTlRfVFlQRVMsIGNhbGxiYWNrOiBGdW5jdGlvbikge1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICghcGxheWVyKSB7XG4gICAgICByZXR1cm4gKCkgPT4ge31cbiAgICB9XG5cbiAgICBwbGF5ZXIub24oZXZlbnQsIGNhbGxiYWNrKVxuXG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHBsYXllci5vZmYoZXZlbnQsIGNhbGxiYWNrKVxuICAgIH1cbiAgfSwgW3BsYXllciwgZXZlbnQsIGNhbGxiYWNrXSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEp3UGxheWVyUHJvdmlkZXIocHJvcHM6IHsgY2hpbGRyZW4/OiBSZWFjdC5SZWFjdE5vZGUgfSkge1xuICBjb25zdCB7IGNoaWxkcmVuIH0gPSBwcm9wc1xuICBjb25zdCBbcGxheWVyLCBzZXRQbGF5ZXJdID0gdXNlU3RhdGU8YW55PihudWxsKVxuICBjb25zdCBbY3VycmVudE1lZGlhLCBzZXRDdXJyZW50TWVkaWFdID0gdXNlU3RhdGU8UGxheWxpc3RJdGVtIHwgbnVsbD4obnVsbClcbiAgY29uc3QgW2lzTXV0ZSwgc2V0SXNNdXRlXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKVxuICBjb25zdCBbaXNQbGF5aW5nLCBzZXRJc1BsYXlpbmddID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpXG5cbiAgY29uc3Qgb25QbGF5ZXJTZXQgPSB1c2VDYWxsYmFjaygocDogYW55KSA9PiB7XG4gICAgc2V0UGxheWVyKHApXG4gICAgc2V0SXNNdXRlKHAuZ2V0TXV0ZSgpKVxuICB9LCBbXSlcblxuICBjb25zdCBvbk11dGVFdmVudCA9IHVzZUNhbGxiYWNrKCh7IG11dGUgfTogeyBtdXRlOiBib29sZWFuIH0pID0+IHtcbiAgICBzZXRJc011dGUobXV0ZSlcbiAgfSwgW10pXG5cbiAgY29uc3Qgb25QbGF5ZXJQbGF5ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldElzUGxheWluZyh0cnVlKVxuICB9LCBbXSlcblxuICBjb25zdCBvblBsYXllclBhdXNlID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldElzUGxheWluZyhmYWxzZSlcbiAgfSwgW10pXG5cbiAgY29uc3Qgb25QbGF5ZXJTdG9wID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgIHNldElzUGxheWluZyhmYWxzZSlcbiAgfSwgW10pXG5cbiAgY29uc3Qgb25QbGF5bGlzdEl0ZW0gPSB1c2VDYWxsYmFjaygoeyBpbmRleCwgaXRlbSB9OiB7IGluZGV4OiBudW1iZXI7IGl0ZW06IFBsYXlsaXN0SXRlbSB9KSA9PiB7XG4gICAgc2V0Q3VycmVudE1lZGlhKGl0ZW0pXG4gIH0sIFtdKVxuXG4gIHVzZVBsYXllckV2ZW50KHBsYXllciwgTVVURSwgb25NdXRlRXZlbnQpXG4gIHVzZVBsYXllckV2ZW50KHBsYXllciwgUExBWSwgb25QbGF5ZXJQbGF5KVxuICB1c2VQbGF5ZXJFdmVudChwbGF5ZXIsIFBBVVNFLCBvblBsYXllclBhdXNlKVxuICB1c2VQbGF5ZXJFdmVudChwbGF5ZXIsIFNUT1AsIG9uUGxheWVyU3RvcClcbiAgdXNlUGxheWVyRXZlbnQocGxheWVyLCBQTEFZTElTVF9JVEVNLCBvblBsYXlsaXN0SXRlbSlcblxuICBjb25zdCBjb250ZXh0VmFsdWU6IEp3UGxheWVyQ29udGV4dFR5cGUgPSB7XG4gICAgcGxheWVyLFxuICAgIGlzTXV0ZSxcbiAgICBpc1BsYXlpbmcsXG4gICAgY3VycmVudE1lZGlhLFxuXG4gICAgb25QbGF5ZXJTZXQsXG4gIH1cblxuICByZXR1cm4gPEp3UGxheWVyQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dFZhbHVlfT57Y2hpbGRyZW59PC9Kd1BsYXllckNvbnRleHQuUHJvdmlkZXI+XG59XG5cbmV4cG9ydCBkZWZhdWx0IEp3UGxheWVyUHJvdmlkZXJcbiJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwidXNlQ29udGV4dCIsInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJ1c2VFZmZlY3QiLCJNVVRFIiwiUEFVU0UiLCJQTEFZIiwiUExBWUxJU1RfSVRFTSIsIlNUT1AiLCJKd1BsYXllckNvbnRleHQiLCJwbGF5ZXIiLCJpc011dGUiLCJpc1BsYXlpbmciLCJjdXJyZW50TWVkaWEiLCJvblBsYXllclNldCIsInAiLCJ1c2VKd1BsYXllciIsInVzZVBsYXllckV2ZW50IiwiZXZlbnQiLCJjYWxsYmFjayIsIm9uIiwib2ZmIiwiSndQbGF5ZXJQcm92aWRlciIsInByb3BzIiwiY2hpbGRyZW4iLCJzZXRQbGF5ZXIiLCJzZXRDdXJyZW50TWVkaWEiLCJzZXRJc011dGUiLCJzZXRJc1BsYXlpbmciLCJnZXRNdXRlIiwib25NdXRlRXZlbnQiLCJtdXRlIiwib25QbGF5ZXJQbGF5Iiwib25QbGF5ZXJQYXVzZSIsIm9uUGxheWVyU3RvcCIsIm9uUGxheWxpc3RJdGVtIiwiaW5kZXgiLCJpdGVtIiwiY29udGV4dFZhbHVlIiwiUHJvdmlkZXIiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./components/JwVideo/JwPlayerContext/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/constants/index.ts":
/*!***********************************************!*\
  !*** ./components/JwVideo/constants/index.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"B2B_API_ENDPOINT\": function() { return /* binding */ B2B_API_ENDPOINT; },\n/* harmony export */   \"B2B_USER_INFO\": function() { return /* binding */ B2B_USER_INFO; },\n/* harmony export */   \"JW_BASE_URL\": function() { return /* binding */ JW_BASE_URL; },\n/* harmony export */   \"JW_CDN_URL\": function() { return /* binding */ JW_CDN_URL; },\n/* harmony export */   \"JW_THUMBNAILS_URL\": function() { return /* binding */ JW_THUMBNAILS_URL; },\n/* harmony export */   \"JW_USER_ID\": function() { return /* binding */ JW_USER_ID; },\n/* harmony export */   \"videoProxyUrl\": function() { return /* binding */ videoProxyUrl; }\n/* harmony export */ });\nconst JW_BASE_URL = \"https://cdn.jwplayer.com\";\nconst JW_THUMBNAILS_URL = \"\".concat(JW_BASE_URL, \"/thumbs\");\nconst JW_CDN_URL = \"\".concat(JW_BASE_URL, \"/v2\");\nconst videoProxyUrl = \"https://se-video-data.video.allermedia.io\";\nconst B2B_API_ENDPOINT = \"\".concat(videoProxyUrl, \"/api/b2b\");\nconst B2B_USER_INFO = \"b2bUserInfo\";\nconst JW_USER_ID = \"alAVThkH\";\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vY29uc3RhbnRzL2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxjQUFjLDJCQUEyQjtBQUMvQyxNQUFNQyxvQkFBb0IsR0FBZSxPQUFaRCxhQUFZLFdBQVM7QUFDbEQsTUFBTUUsYUFBYSxHQUFlLE9BQVpGLGFBQVksT0FBSTtBQWV0QyxNQUFNRyxnQkFBZ0IsNENBQTJDO0FBQ2pFLE1BQU1DLG1CQUFtQixHQUFpQixPQUFkRCxlQUFjLFlBQVM7QUFDbkQsTUFBTUUsZ0JBQWdCLGNBQWE7QUFDbkMsTUFBTUMsYUFBYSxXQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSndWaWRlby9jb25zdGFudHMvaW5kZXgudHM/Y2ExOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgSldfQkFTRV9VUkwgPSAnaHR0cHM6Ly9jZG4uandwbGF5ZXIuY29tJztcbmV4cG9ydCBjb25zdCBKV19USFVNQk5BSUxTX1VSTCA9IGAke0pXX0JBU0VfVVJMfS90aHVtYnNgO1xuZXhwb3J0IGNvbnN0IEpXX0NETl9VUkwgPSBgJHtKV19CQVNFX1VSTH0vdjJgXG5cbmV4cG9ydCB0eXBlIGJyYW5kVHlwZSA9XG4gIHwgJ2FsbGFzJ1xuICB8ICdlbGxlJ1xuICB8ICdmZW1pbmEnXG4gIHwgJ21hYnJhJ1xuICB8ICdyZXNpZGVuY2UnXG4gIHwgJ3JlY2VwdCdcbiAgfCAnYmFhYW0nXG4gIHwgJ2ZyaWRhJ1xuICB8ICdtb3RoZXJob29kJ1xuICB8ICdoYW50J1xuICB8ICdzdmVuc2tkYW0nXG5cbmV4cG9ydCBjb25zdCB2aWRlb1Byb3h5VXJsID0gJ2h0dHBzOi8vc2UtdmlkZW8tZGF0YS52aWRlby5hbGxlcm1lZGlhLmlvJ1xuZXhwb3J0IGNvbnN0IEIyQl9BUElfRU5EUE9JTlQgPSBgJHt2aWRlb1Byb3h5VXJsfS9hcGkvYjJiYFxuZXhwb3J0IGNvbnN0IEIyQl9VU0VSX0lORk8gPSAnYjJiVXNlckluZm8nXG5leHBvcnQgY29uc3QgSldfVVNFUl9JRCA9ICdhbEFWVGhrSCdcbiJdLCJuYW1lcyI6WyJKV19CQVNFX1VSTCIsIkpXX1RIVU1CTkFJTFNfVVJMIiwiSldfQ0ROX1VSTCIsInZpZGVvUHJveHlVcmwiLCJCMkJfQVBJX0VORFBPSU5UIiwiQjJCX1VTRVJfSU5GTyIsIkpXX1VTRVJfSUQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/constants/index.ts\n"));

/***/ }),

/***/ "./components/JwVideo/constants/playEvents.ts":
/*!****************************************************!*\
  !*** ./components/JwVideo/constants/playEvents.ts ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AD_END\": function() { return /* binding */ AD_END; },\n/* harmony export */   \"AD_START\": function() { return /* binding */ AD_START; },\n/* harmony export */   \"COMPLETE\": function() { return /* binding */ COMPLETE; },\n/* harmony export */   \"DISPLAY_CLICK\": function() { return /* binding */ DISPLAY_CLICK; },\n/* harmony export */   \"MUTE\": function() { return /* binding */ MUTE; },\n/* harmony export */   \"PAUSE\": function() { return /* binding */ PAUSE; },\n/* harmony export */   \"PLAY\": function() { return /* binding */ PLAY; },\n/* harmony export */   \"PLAYLIST_ITEM\": function() { return /* binding */ PLAYLIST_ITEM; },\n/* harmony export */   \"STOP\": function() { return /* binding */ STOP; },\n/* harmony export */   \"TIME\": function() { return /* binding */ TIME; },\n/* harmony export */   \"UNMUTE\": function() { return /* binding */ UNMUTE; }\n/* harmony export */ });\nconst PLAY = \"play\";\nconst PAUSE = \"pause\";\nconst MUTE = \"mute\";\nconst UNMUTE = \"unmute\";\nconst TIME = \"time\";\nconst PLAYLIST_ITEM = \"playlistItem\";\nconst STOP = \"stop\";\nconst COMPLETE = \"complete\";\nconst AD_START = \"adBreakStart\";\nconst AD_END = \"adBreakEnd\";\nconst DISPLAY_CLICK = \"displayClick\";\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vY29uc3RhbnRzL3BsYXlFdmVudHMudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSxPQUFPO0FBQ2IsTUFBTUMsUUFBUTtBQUNkLE1BQU1DLE9BQU87QUFDYixNQUFNQyxTQUFTO0FBQ2YsTUFBTUMsT0FBTztBQUNiLE1BQU1DLGdCQUFnQjtBQUN0QixNQUFNQyxPQUFPO0FBQ2IsTUFBTUMsV0FBVztBQUNqQixNQUFNQyxXQUFXO0FBQ2pCLE1BQU1DLFNBQVM7QUFDZixNQUFNQyxnQkFBZ0I7QUFFb0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Kd1ZpZGVvL2NvbnN0YW50cy9wbGF5RXZlbnRzLnRzPzJiZDEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgUExBWSA9ICdwbGF5J1xuY29uc3QgUEFVU0UgPSAncGF1c2UnXG5jb25zdCBNVVRFID0gJ211dGUnXG5jb25zdCBVTk1VVEUgPSAndW5tdXRlJ1xuY29uc3QgVElNRSA9ICd0aW1lJ1xuY29uc3QgUExBWUxJU1RfSVRFTSA9ICdwbGF5bGlzdEl0ZW0nXG5jb25zdCBTVE9QID0gJ3N0b3AnXG5jb25zdCBDT01QTEVURSA9ICdjb21wbGV0ZSdcbmNvbnN0IEFEX1NUQVJUID0gJ2FkQnJlYWtTdGFydCdcbmNvbnN0IEFEX0VORCA9ICdhZEJyZWFrRW5kJ1xuY29uc3QgRElTUExBWV9DTElDSyA9ICdkaXNwbGF5Q2xpY2snXG5cbmV4cG9ydCB7IFBMQVksIFBBVVNFLCBNVVRFLCBVTk1VVEUsIFRJTUUsIFBMQVlMSVNUX0lURU0sIFNUT1AsIENPTVBMRVRFLCBBRF9TVEFSVCwgQURfRU5ELCBESVNQTEFZX0NMSUNLIH1cbiJdLCJuYW1lcyI6WyJQTEFZIiwiUEFVU0UiLCJNVVRFIiwiVU5NVVRFIiwiVElNRSIsIlBMQVlMSVNUX0lURU0iLCJTVE9QIiwiQ09NUExFVEUiLCJBRF9TVEFSVCIsIkFEX0VORCIsIkRJU1BMQVlfQ0xJQ0siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/constants/playEvents.ts\n"));

/***/ }),

/***/ "./components/JwVideo/index.tsx":
/*!**************************************!*\
  !*** ./components/JwVideo/index.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"standalone\": function() { return /* binding */ standalone; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/script */ \"./node_modules/next/script.js\");\n/* harmony import */ var next_script__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_script__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _ArticleVideo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ArticleVideo */ \"./components/JwVideo/ArticleVideo/index.tsx\");\n/* harmony import */ var _JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./JwPlayerContext */ \"./components/JwVideo/JwPlayerContext/index.tsx\");\n\n\n\n\nconst JwVideo = (param)=>{\n    let { data  } = param;\n    let videoContent = /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_script__WEBPACK_IMPORTED_MODULE_1___default()), {\n                src: \"https://cdn.jwplayer.com/libraries/\".concat(data.playerID, \".js\"),\n                strategy: \"lazyOnload\"\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/index.tsx\",\n                lineNumber: 18,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_JwPlayerContext__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ArticleVideo__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    ...data\n                }, void 0, false, {\n                    fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/index.tsx\",\n                    lineNumber: 20,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/index.tsx\",\n                lineNumber: 19,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bodytext\",\n        children: videoContent\n    }, void 0, false, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/index.tsx\",\n        lineNumber: 26,\n        columnNumber: 10\n    }, undefined);\n};\n_c = JwVideo;\nconst standalone = JwVideo;\nconst ContentJwVideo = (param)=>{\n    let { type , data , meta , descendants  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(JwVideo, {\n        data: data\n    }, void 0, false, {\n        fileName: \"/Users/hina01/se-jw-next-app/components/JwVideo/index.tsx\",\n        lineNumber: 32,\n        columnNumber: 10\n    }, undefined);\n};\n_c1 = ContentJwVideo;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ContentJwVideo);\nvar _c, _c1;\n$RefreshReg$(_c, \"JwVideo\");\n$RefreshReg$(_c1, \"ContentJwVideo\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQ2dDO0FBQ1M7QUFDTTtBQVUvQyxNQUFNRyxVQUFrQyxTQUFjO1FBQWIsRUFBRUMsS0FBSSxFQUFFO0lBRS9DLElBQUlDLDZCQUNBOzswQkFDRSw4REFBQ0wsb0RBQU1BO2dCQUFDTSxLQUFLLHNDQUFvRCxPQUFkRixLQUFLRyxRQUFRLEVBQUM7Z0JBQU1DLFVBQVM7Ozs7OzswQkFDaEYsOERBQUNOLHdEQUFlQTswQkFDZCw0RUFBQ0QscURBQVlBO29CQUFFLEdBQUdHLElBQUk7Ozs7Ozs7Ozs7Ozs7SUFNOUIscUJBQU8sOERBQUNLO1FBQUlDLFdBQVk7a0JBQVlMOzs7Ozs7QUFDdEM7S0FiTUY7QUFlQyxNQUFNUSxhQUFhUixRQUFPO0FBRWpDLE1BQU1TLGlCQUFrQixTQUF1QztRQUF0QyxFQUFFQyxLQUFJLEVBQUVULEtBQUksRUFBRVUsS0FBSSxFQUFFQyxZQUFXLEVBQUU7SUFDeEQscUJBQU8sOERBQUNaO1FBQVFDLE1BQU1BOzs7Ozs7QUFDeEI7TUFGTVE7QUFJTiwrREFBZUEsY0FBY0EsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0p3VmlkZW8vaW5kZXgudHN4PzNkN2IiXSwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgU2NyaXB0IGZyb20gJ25leHQvc2NyaXB0J1xuaW1wb3J0IEFydGljbGVWaWRlbyBmcm9tICcuL0FydGljbGVWaWRlbydcbmltcG9ydCBKd1BsYXllckNvbnRleHQgZnJvbSAnLi9Kd1BsYXllckNvbnRleHQnXG5pbXBvcnQgU2hvcHBhYmxlVmlkZW8gZnJvbSAnLi9TaG9wcGFibGUnXG5pbXBvcnQgVmlkZW9UZWFzZXIgZnJvbSAnLi9UZWFzZXInXG5pbXBvcnQgeyBDb250ZW50VmlkZW9EYXRhIH0gZnJvbSAnLi90eXBlcy92aWRlbydcblxuXG5pbnRlcmZhY2UgSndWaWRlb1Byb3BzIHtcbiAgZGF0YTogQ29udGVudFZpZGVvRGF0YVxufVxuXG5jb25zdCBKd1ZpZGVvOiBSZWFjdC5GQzxKd1ZpZGVvUHJvcHM+ID0gKHsgZGF0YSB9KSA9PiB7XG5cbiAgbGV0IHZpZGVvQ29udGVudCAgPSAoXG4gICAgICA8PlxuICAgICAgICA8U2NyaXB0IHNyYz17YGh0dHBzOi8vY2RuLmp3cGxheWVyLmNvbS9saWJyYXJpZXMvJHtkYXRhLnBsYXllcklEfS5qc2B9IHN0cmF0ZWd5PVwibGF6eU9ubG9hZFwiIC8+XG4gICAgICAgIDxKd1BsYXllckNvbnRleHQ+XG4gICAgICAgICAgPEFydGljbGVWaWRlbyB7Li4uZGF0YX0gLz5cbiAgICAgICAgPC9Kd1BsYXllckNvbnRleHQ+XG4gICAgICA8Lz5cbiAgICBcbiAgKVxuXG4gIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17YGJvZHl0ZXh0YH0+e3ZpZGVvQ29udGVudH08L2Rpdj5cbn1cblxuZXhwb3J0IGNvbnN0IHN0YW5kYWxvbmUgPSBKd1ZpZGVvXG5cbmNvbnN0IENvbnRlbnRKd1ZpZGVvID0gICh7IHR5cGUsIGRhdGEsIG1ldGEsIGRlc2NlbmRhbnRzIH0pID0+IHtcbiAgcmV0dXJuIDxKd1ZpZGVvIGRhdGE9e2RhdGEgYXMgQ29udGVudFZpZGVvRGF0YX0+PC9Kd1ZpZGVvPlxufVxuXG5leHBvcnQgZGVmYXVsdCBDb250ZW50SndWaWRlb1xuIl0sIm5hbWVzIjpbIlNjcmlwdCIsIkFydGljbGVWaWRlbyIsIkp3UGxheWVyQ29udGV4dCIsIkp3VmlkZW8iLCJkYXRhIiwidmlkZW9Db250ZW50Iiwic3JjIiwicGxheWVySUQiLCJzdHJhdGVneSIsImRpdiIsImNsYXNzTmFtZSIsInN0YW5kYWxvbmUiLCJDb250ZW50SndWaWRlbyIsInR5cGUiLCJtZXRhIiwiZGVzY2VuZGFudHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/index.tsx\n"));

/***/ }),

/***/ "./components/JwVideo/modules/ads/adsSetup.ts":
/*!****************************************************!*\
  !*** ./components/JwVideo/modules/ads/adsSetup.ts ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"adsSetup\": function() { return /* binding */ adsSetup; }\n/* harmony export */ });\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! query-string */ \"./node_modules/query-string/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../constants */ \"./components/JwVideo/constants/index.ts\");\n/* harmony import */ var _utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../utils/lazyLog */ \"./components/JwVideo/utils/lazyLog.ts\");\n/* harmony import */ var _e2eTest_replaceTag__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./e2eTest/replaceTag */ \"./components/JwVideo/modules/ads/e2eTest/replaceTag.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n\n\n\n\nconst addArticleDataToAdTag = (tag, articleInfo, videoData, experimentGroup, adsPpId)=>{\n    const { articleId =\"\" , articleVerticals =[]  } = articleInfo;\n    const { wasYouplay  } = videoData;\n    const { url , query: tagQuery  } = query_string__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parseUrl(tag);\n    const custParams = tagQuery.cust_params || \"\";\n    const [params] = Array.isArray(custParams) ? custParams : [\n        custParams\n    ];\n    const custParamsObj = query_string__WEBPACK_IMPORTED_MODULE_0__[\"default\"].parse(params);\n    // Add 'verticals'\n    if (articleVerticals === null || articleVerticals === void 0 ? void 0 : articleVerticals.length) {\n        // Put verticals in a set to create a list with unique values\n        const verticalsSet = new Set([\n            articleVerticals\n        ]);\n        const verticals = Array.from(verticalsSet);\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"Adding verticals to JW player ad tags: \".concat(verticals, \" for player in article #\").concat(articleId));\n        // eslint-disable-next-line\n        custParamsObj[\"Vertikal\"] = verticals.join(\",\");\n    }\n    if (experimentGroup) {\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"Set optimizeId to adTag\");\n        // eslint-disable-next-line\n        custParamsObj[\"abgroup\"] = experimentGroup;\n    }\n    if (adsPpId) {\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"Set ppid to adTag\");\n    }\n    // Add converted to youplay measurement\n    if (wasYouplay) {\n        // maybe have youplay ID here?\n        // eslint-disable-next-line\n        custParamsObj[\"videoplayer\"] = \"youplay\";\n    }\n    return adsPpId ? \"\".concat(url, \"?\").concat(query_string__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stringify({\n        ...tagQuery,\n        cust_params: query_string__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stringify(custParamsObj),\n        ppid: adsPpId\n    })) : \"\".concat(url, \"?\").concat(query_string__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stringify({\n        ...tagQuery,\n        cust_params: query_string__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stringify(custParamsObj)\n    }));\n};\nconst adsSetup = async (param)=>{\n    let { articleInfo , autoStart , wasYouplay  } = param;\n    const brand = process.env.OCELOT_SITE || \"\";\n    let adscheduleid;\n    if (brand.includes(\"residence\")) {\n        // const adsReady = () => !!(window.ads && window.ads.getAdScheduleId)\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"TRY wait for getAdScheduleId ...\");\n        const startTime = new Date().valueOf();\n        const adScheduleTimeout = 2000;\n        try {\n        // await waitFor(adsReady, { timeout: adScheduleTimeout })\n        } catch (e) {\n        // log.warn(`Timeout ${adScheduleTimeout} for window.ads.getAdScheduleId:`, e);\n        }\n        // Fetch from Ads Microservice, brand specific adscheduleid based on if a video is autoplay or click to play\n        adscheduleid = autoStart === \"viewable\" ? \"OhFmmo3F\" : \"ib9PwBrj\";\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"Using \".concat(autoStart === \"viewable\" ? \"autoplay\" : \"clickToplay\", \" \").concat(adscheduleid, \" from Ads-MS to get scheduleID\"));\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"Using \".concat(adscheduleid, \" from ads-bundle to get schedule\"));\n    }\n    if (!adscheduleid) {\n        throw new Error(\"No ad schedule Id found\");\n    }\n    const advertisingDefaults = await (await fetch(\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_1__.JW_CDN_URL, \"/advertising/schedules/\").concat(adscheduleid, \".json\"))).json();\n    const { schedule  } = advertisingDefaults;\n    if (!schedule) {\n        throw new Error(\"No ad schedule found in supplied ad config\");\n    }\n    let experimentGroup = null;\n    // Wait for ads bundle to load\n    // const adsReady = () => !!(window.ads && window.ads.getVideoExperimentGroup)\n    const adScheduleTimeout = 2000;\n    try {\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"TRY wait for getAdScheduleId ...\");\n        const startTime = new Date().valueOf();\n        // await waitFor(adsReady, { timeout: adScheduleTimeout })\n        const tDiff = new Date().valueOf() - startTime;\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"Ads ready wait time:  \".concat(Math.round(tDiff), \" milliseconds\"));\n        // experimentGroup = await window.ads.getVideoExperimentGroup().catch((reason: string) => lazyLog(() => reason))\n        const timeDiff = new Date().valueOf() - startTime;\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"AdSchedulId wait time:  \".concat(Math.round(timeDiff), \" milliseconds\"));\n        (0,_utils_lazyLog__WEBPACK_IMPORTED_MODULE_2__.lazyLog)(()=>\"window.ads.getVideoExperimentGroup()  \".concat(experimentGroup, \" \"));\n    } catch (e) {\n        console.warn(\"Timeout \".concat(adScheduleTimeout, \" for window.ads.getAdScheduleId:\"), e);\n    }\n    let adsPpId = null;\n    // const adsReadyForPpId = () => !!(window.ads && window.ads.getVideoPpId);\n    const adsTimeout = 2000;\n    try {\n    // await waitFor(adsReadyForPpId, { timeout: adsTimeout });\n    } catch (e) {\n        console.warn(\"Timeout \".concat(adsTimeout, \" for window.ads.getVideoPpId:\"), e);\n    }\n    // if (window.ads && window.ads.getVideoPpId) {\n    //   adsPpId = window.ads.getVideoPpId();\n    // }\n    const modifySchedule = ()=>{\n        const url = new URL(window.location.href);\n        const dfpIdVal = url.searchParams.get(\"dfp_id\");\n        if (dfpIdVal) {\n            //It is from a test article, show test ad.\n            return schedule.map((param)=>{\n                let { tag  } = param;\n                return {\n                    tag: (0,_e2eTest_replaceTag__WEBPACK_IMPORTED_MODULE_3__.replaceTag)(tag, dfpIdVal)\n                };\n            });\n        } else {\n            return schedule.map((param)=>{\n                let { tag  } = param;\n                return {\n                    tag: addArticleDataToAdTag(tag, articleInfo, {\n                        wasYouplay\n                    }, experimentGroup, adsPpId)\n                };\n            });\n        }\n    };\n    return {\n        schedule: modifySchedule(),\n        adscheduleid\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/JwVideo/modules/ads/adsSetup.ts\n"));

/***/ }),

/***/ "./components/JwVideo/modules/ads/e2eTest/replaceTag.ts":
/*!**************************************************************!*\
  !*** ./components/JwVideo/modules/ads/e2eTest/replaceTag.ts ***!
  \**************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"replaceTag\": function() { return /* binding */ replaceTag; }\n/* harmony export */ });\n/**\n * Adds tests setup for ads if ?dfp_id=dev-test is present in url\n * @param {*} tag  - Ads tag configured in JW - to be updated with test tag to see test ad.\n * @param {*} dfpIdVal - Test flag from url\n * @returns\n */ function replaceTag(tag, dfpIdVal) {\n    if (dfpIdVal) {\n        return tag.replace(\"hant.se\", dfpIdVal);\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vbW9kdWxlcy9hZHMvZTJlVGVzdC9yZXBsYWNlVGFnLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7Q0FLQyxHQUNNLFNBQVNBLFdBQVdDLEdBQVcsRUFBRUMsUUFBZ0IsRUFBRTtJQUN4RCxJQUFJQSxVQUFVO1FBQ1osT0FBT0QsSUFBSUUsT0FBTyxDQUFDLFdBQVdEO0lBQ2hDLENBQUM7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSndWaWRlby9tb2R1bGVzL2Fkcy9lMmVUZXN0L3JlcGxhY2VUYWcudHM/M2MzYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFkZHMgdGVzdHMgc2V0dXAgZm9yIGFkcyBpZiA/ZGZwX2lkPWRldi10ZXN0IGlzIHByZXNlbnQgaW4gdXJsXG4gKiBAcGFyYW0geyp9IHRhZyAgLSBBZHMgdGFnIGNvbmZpZ3VyZWQgaW4gSlcgLSB0byBiZSB1cGRhdGVkIHdpdGggdGVzdCB0YWcgdG8gc2VlIHRlc3QgYWQuXG4gKiBAcGFyYW0geyp9IGRmcElkVmFsIC0gVGVzdCBmbGFnIGZyb20gdXJsXG4gKiBAcmV0dXJuc1xuICovXG5leHBvcnQgZnVuY3Rpb24gcmVwbGFjZVRhZyh0YWc6IHN0cmluZywgZGZwSWRWYWw6IHN0cmluZykge1xuICBpZiAoZGZwSWRWYWwpIHtcbiAgICByZXR1cm4gdGFnLnJlcGxhY2UoJ2hhbnQuc2UnLCBkZnBJZFZhbClcbiAgfVxufVxuIl0sIm5hbWVzIjpbInJlcGxhY2VUYWciLCJ0YWciLCJkZnBJZFZhbCIsInJlcGxhY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/modules/ads/e2eTest/replaceTag.ts\n"));

/***/ }),

/***/ "./components/JwVideo/utils/formatMinutes.ts":
/*!***************************************************!*\
  !*** ./components/JwVideo/utils/formatMinutes.ts ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ formatMinutes; }\n/* harmony export */ });\nfunction formatMinutes(duration) {\n    const sec = Number.parseFloat(duration);\n    if (Number.isNaN(sec) || !Number.isFinite(sec)) {\n        return null;\n    }\n    const s = sec % 60;\n    const m = (sec - s) / 60;\n    const separator = s > 9 ? \":\" : \":0\";\n    return m + separator + Math.round(s);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vdXRpbHMvZm9ybWF0TWludXRlcy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsU0FBU0EsY0FBY0MsUUFBZ0IsRUFBaUI7SUFDckUsTUFBTUMsTUFBTUMsT0FBT0MsVUFBVSxDQUFDSDtJQUM5QixJQUFJRSxPQUFPRSxLQUFLLENBQUNILFFBQVEsQ0FBQ0MsT0FBT0csUUFBUSxDQUFDSixNQUFNO1FBQzlDLE9BQU8sSUFBSTtJQUNiLENBQUM7SUFFRCxNQUFNSyxJQUFJTCxNQUFNO0lBQ2hCLE1BQU1NLElBQUksQ0FBQ04sTUFBTUssQ0FBQUEsSUFBSztJQUN0QixNQUFNRSxZQUFZRixJQUFJLElBQUksTUFBTSxJQUFJO0lBRXBDLE9BQU9DLElBQUlDLFlBQVlDLEtBQUtDLEtBQUssQ0FBQ0o7QUFDcEMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL0p3VmlkZW8vdXRpbHMvZm9ybWF0TWludXRlcy50cz9kN2Y1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZvcm1hdE1pbnV0ZXMoZHVyYXRpb246IHN0cmluZyk6IHN0cmluZyB8IG51bGwge1xuICBjb25zdCBzZWMgPSBOdW1iZXIucGFyc2VGbG9hdChkdXJhdGlvbilcbiAgaWYgKE51bWJlci5pc05hTihzZWMpIHx8ICFOdW1iZXIuaXNGaW5pdGUoc2VjKSkge1xuICAgIHJldHVybiBudWxsXG4gIH1cblxuICBjb25zdCBzID0gc2VjICUgNjBcbiAgY29uc3QgbSA9IChzZWMgLSBzKSAvIDYwXG4gIGNvbnN0IHNlcGFyYXRvciA9IHMgPiA5ID8gJzonIDogJzowJ1xuXG4gIHJldHVybiBtICsgc2VwYXJhdG9yICsgTWF0aC5yb3VuZChzKVxufVxuIl0sIm5hbWVzIjpbImZvcm1hdE1pbnV0ZXMiLCJkdXJhdGlvbiIsInNlYyIsIk51bWJlciIsInBhcnNlRmxvYXQiLCJpc05hTiIsImlzRmluaXRlIiwicyIsIm0iLCJzZXBhcmF0b3IiLCJNYXRoIiwicm91bmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/JwVideo/utils/formatMinutes.ts\n"));

/***/ }),

/***/ "./components/JwVideo/utils/lazyLog.ts":
/*!*********************************************!*\
  !*** ./components/JwVideo/utils/lazyLog.ts ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"lazyLog\": function() { return /* binding */ lazyLog; },\n/* harmony export */   \"setupLogging\": function() { return /* binding */ setupLogging; }\n/* harmony export */ });\n/* harmony import */ var logdown__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! logdown */ \"./node_modules/logdown/dist/logdown.min.js\");\n/* harmony import */ var logdown__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(logdown__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! debug */ \"./node_modules/debug/src/browser.js\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(debug__WEBPACK_IMPORTED_MODULE_1__);\n\n\nlet log, path = \"\";\nconst isDebugEnabled = ()=>{\n    const searchParams = new URLSearchParams(path);\n    return  true || 0;\n};\nfunction lazyLog(cb) {\n    let type = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"info\";\n    if (!cb || !isDebugEnabled()) return;\n    const msg = cb();\n    if (log) {\n        //@ts-ignore\n        log[type](...Array.isArray(msg) ? msg : [\n            msg\n        ]);\n    }\n}\nfunction setupLogging(path) {\n    path = path;\n    debug__WEBPACK_IMPORTED_MODULE_1___default().enable(String(isDebugEnabled()));\n    const getLogger = function() {\n        let name = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"video\";\n        const log = logdown__WEBPACK_IMPORTED_MODULE_0___default()(name, {\n            prefixColor: \"#EC0041\"\n        });\n        log.state.isEnabled = isDebugEnabled();\n        return log;\n    };\n    log = getLogger();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vdXRpbHMvbGF6eUxvZy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNkI7QUFDSjtBQUV6QixJQUFJRSxLQUNGQyxPQUFlO0FBQ2pCLE1BQU1DLGlCQUFpQixJQUFNO0lBQzNCLE1BQU1DLGVBQWUsSUFBSUMsZ0JBQWdCSDtJQUN6QyxPQUFPSSxLQUF5QixJQUFnQixDQUFtQjtBQUNyRTtBQUVPLFNBQVNFLFFBQVFDLEVBQU8sRUFBaUI7UUFBZkMsT0FBQUEsaUVBQU8sTUFBTTtJQUM1QyxJQUFJLENBQUNELE1BQU0sQ0FBQ04sa0JBQWtCO0lBRTlCLE1BQU1RLE1BQU1GO0lBQ1osSUFBSVIsS0FBSztRQUNQLFlBQVk7UUFDWkEsR0FBRyxDQUFDUyxLQUFLLElBQUtFLE1BQU1DLE9BQU8sQ0FBQ0YsT0FBT0EsTUFBTTtZQUFDQTtTQUFJO0lBQ2hELENBQUM7QUFDSCxDQUFDO0FBRU0sU0FBU0csYUFBYVosSUFBWSxFQUFFO0lBQ3pDQSxPQUFPQTtJQUNQRixtREFBWSxDQUFDZ0IsT0FBT2I7SUFFcEIsTUFBTWMsWUFBWSxXQUFvQjtZQUFuQkMsd0VBQU87UUFDeEIsTUFBTWpCLE1BQU1GLDhDQUFPQSxDQUFDbUIsTUFBTTtZQUFFQyxhQUFjO1FBQVM7UUFDbkRsQixJQUFJbUIsS0FBSyxDQUFDQyxTQUFTLEdBQUdsQjtRQUN0QixPQUFPRjtJQUNUO0lBQ0FBLE1BQU1nQjtBQUNSLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Kd1ZpZGVvL3V0aWxzL2xhenlMb2cudHM/NDIyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nZG93biBmcm9tICdsb2dkb3duJ1xuaW1wb3J0IGRlYnVnIGZyb20gJ2RlYnVnJ1xuXG5sZXQgbG9nOiBhbnksXG4gIHBhdGg6IHN0cmluZyA9ICcnXG5jb25zdCBpc0RlYnVnRW5hYmxlZCA9ICgpID0+IHtcbiAgY29uc3Qgc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcyhwYXRoKVxuICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyB8fCAhIXNlYXJjaFBhcmFtcy5nZXQoJ2RlYnVnJylcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGxhenlMb2coY2I6IGFueSwgdHlwZSA9ICdpbmZvJykge1xuICBpZiAoIWNiIHx8ICFpc0RlYnVnRW5hYmxlZCgpKSByZXR1cm5cblxuICBjb25zdCBtc2cgPSBjYigpXG4gIGlmIChsb2cpIHtcbiAgICAvL0B0cy1pZ25vcmVcbiAgICBsb2dbdHlwZV0oLi4uKEFycmF5LmlzQXJyYXkobXNnKSA/IG1zZyA6IFttc2ddKSlcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0dXBMb2dnaW5nKHBhdGg6IHN0cmluZykge1xuICBwYXRoID0gcGF0aFxuICBkZWJ1Zy5lbmFibGUoU3RyaW5nKGlzRGVidWdFbmFibGVkKCkpKVxuXG4gIGNvbnN0IGdldExvZ2dlciA9IChuYW1lID0gJ3ZpZGVvJykgPT4ge1xuICAgIGNvbnN0IGxvZyA9IGxvZ2Rvd24obmFtZSwgeyBwcmVmaXhDb2xvcjogYCNFQzAwNDFgIH0pXG4gICAgbG9nLnN0YXRlLmlzRW5hYmxlZCA9IGlzRGVidWdFbmFibGVkKClcbiAgICByZXR1cm4gbG9nXG4gIH1cbiAgbG9nID0gZ2V0TG9nZ2VyKClcbn1cbiJdLCJuYW1lcyI6WyJsb2dkb3duIiwiZGVidWciLCJsb2ciLCJwYXRoIiwiaXNEZWJ1Z0VuYWJsZWQiLCJzZWFyY2hQYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJwcm9jZXNzIiwiZ2V0IiwibGF6eUxvZyIsImNiIiwidHlwZSIsIm1zZyIsIkFycmF5IiwiaXNBcnJheSIsInNldHVwTG9nZ2luZyIsImVuYWJsZSIsIlN0cmluZyIsImdldExvZ2dlciIsIm5hbWUiLCJwcmVmaXhDb2xvciIsInN0YXRlIiwiaXNFbmFibGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/JwVideo/utils/lazyLog.ts\n"));

/***/ }),

/***/ "./components/JwVideo/utils/stripHtml.ts":
/*!***********************************************!*\
  !*** ./components/JwVideo/utils/stripHtml.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"stripHtml\": function() { return /* binding */ stripHtml; }\n/* harmony export */ });\nconst stripHtml = (s)=>s ? s.replace(/<\\/?[^>]+(>|$)/g, \"\") : \"\";\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0p3VmlkZW8vdXRpbHMvc3RyaXBIdG1sLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQSxZQUFZLENBQUNDLElBQW1DQSxJQUFJQSxFQUFFQyxPQUFPLENBQUMsbUJBQW1CLE1BQU0sRUFBRSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvSndWaWRlby91dGlscy9zdHJpcEh0bWwudHM/ZGM5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgc3RyaXBIdG1sID0gKHM6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyA9PiAocyA/IHMucmVwbGFjZSgvPFxcLz9bXj5dKyg+fCQpL2csICcnKSA6ICcnKVxuIl0sIm5hbWVzIjpbInN0cmlwSHRtbCIsInMiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/JwVideo/utils/stripHtml.ts\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/get-domain-locale.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/client/get-domain-locale.js ***!
  \************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nconst basePath =  false || \"\";\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n    if (false) {} else {\n        return false;\n    }\n}\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=get-domain-locale.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU8sSUFBSTtBQUNmLENBQUMsRUFBQztBQUNGRCx1QkFBdUIsR0FBR0U7QUFDMUIsTUFBTUMsV0FBV0MsTUFBa0MsSUFBSTtBQUN2RCxTQUFTRixnQkFBZ0JLLElBQUksRUFBRUMsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLGFBQWEsRUFBRTtJQUMzRCxJQUFJTixLQUErQixFQUFFLEVBV3BDLE1BQU07UUFDSCxPQUFPLEtBQUs7SUFDaEIsQ0FBQztBQUNMO0FBRUEsSUFBSSxDQUFDLE9BQU9KLFFBQVF1QixPQUFPLEtBQUssY0FBZSxPQUFPdkIsUUFBUXVCLE9BQU8sS0FBSyxZQUFZdkIsUUFBUXVCLE9BQU8sS0FBSyxJQUFJLEtBQU0sT0FBT3ZCLFFBQVF1QixPQUFPLENBQUNDLFVBQVUsS0FBSyxhQUFhO0lBQ3JLMUIsT0FBT0MsY0FBYyxDQUFDQyxRQUFRdUIsT0FBTyxFQUFFLGNBQWM7UUFBRXRCLE9BQU8sSUFBSTtJQUFDO0lBQ25FSCxPQUFPMkIsTUFBTSxDQUFDekIsUUFBUXVCLE9BQU8sRUFBRXZCO0lBQy9CMEIsT0FBTzFCLE9BQU8sR0FBR0EsUUFBUXVCLE9BQU87QUFDbEMsQ0FBQyxDQUVELDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9nZXQtZG9tYWluLWxvY2FsZS5qcz81YzI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXREb21haW5Mb2NhbGUgPSBnZXREb21haW5Mb2NhbGU7XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiBnZXREb21haW5Mb2NhbGUocGF0aCwgbG9jYWxlLCBsb2NhbGVzLCBkb21haW5Mb2NhbGVzKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplTG9jYWxlUGF0aCA9IHJlcXVpcmUoJy4vbm9ybWFsaXplLWxvY2FsZS1wYXRoJykubm9ybWFsaXplTG9jYWxlUGF0aDtcbiAgICAgICAgY29uc3QgZGV0ZWN0RG9tYWluTG9jYWxlID0gcmVxdWlyZSgnLi9kZXRlY3QtZG9tYWluLWxvY2FsZScpLmRldGVjdERvbWFpbkxvY2FsZTtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gbG9jYWxlIHx8IG5vcm1hbGl6ZUxvY2FsZVBhdGgocGF0aCwgbG9jYWxlcykuZGV0ZWN0ZWRMb2NhbGU7XG4gICAgICAgIGNvbnN0IGRvbWFpbiA9IGRldGVjdERvbWFpbkxvY2FsZShkb21haW5Mb2NhbGVzLCB1bmRlZmluZWQsIHRhcmdldCk7XG4gICAgICAgIGlmIChkb21haW4pIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3RvID0gYGh0dHAke2RvbWFpbi5odHRwID8gJycgOiAncyd9Oi8vYDtcbiAgICAgICAgICAgIGNvbnN0IGZpbmFsTG9jYWxlID0gdGFyZ2V0ID09PSBkb21haW4uZGVmYXVsdExvY2FsZSA/ICcnIDogYC8ke3RhcmdldH1gO1xuICAgICAgICAgICAgcmV0dXJuIGAke3Byb3RvfSR7ZG9tYWluLmRvbWFpbn0ke2Jhc2VQYXRofSR7ZmluYWxMb2NhbGV9JHtwYXRofWA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5cbmlmICgodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ2Z1bmN0aW9uJyB8fCAodHlwZW9mIGV4cG9ydHMuZGVmYXVsdCA9PT0gJ29iamVjdCcgJiYgZXhwb3J0cy5kZWZhdWx0ICE9PSBudWxsKSkgJiYgdHlwZW9mIGV4cG9ydHMuZGVmYXVsdC5fX2VzTW9kdWxlID09PSAndW5kZWZpbmVkJykge1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cy5kZWZhdWx0LCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gIE9iamVjdC5hc3NpZ24oZXhwb3J0cy5kZWZhdWx0LCBleHBvcnRzKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzLmRlZmF1bHQ7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldERvbWFpbkxvY2FsZSIsImJhc2VQYXRoIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9ST1VURVJfQkFTRVBBVEgiLCJwYXRoIiwibG9jYWxlIiwibG9jYWxlcyIsImRvbWFpbkxvY2FsZXMiLCJfX05FWFRfSTE4Tl9TVVBQT1JUIiwibm9ybWFsaXplTG9jYWxlUGF0aCIsInJlcXVpcmUiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJ0YXJnZXQiLCJkZXRlY3RlZExvY2FsZSIsImRvbWFpbiIsInVuZGVmaW5lZCIsInByb3RvIiwiaHR0cCIsImZpbmFsTG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImRlZmF1bHQiLCJfX2VzTW9kdWxlIiwiYXNzaWduIiwibW9kdWxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/get-domain-locale.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/image.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/client/image.js ***!
  \************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _head = _interop_require_default(__webpack_require__(/*! ../shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\"));\nvar _imageBlurSvg = __webpack_require__(/*! ../shared/lib/image-blur-svg */ \"./node_modules/next/dist/shared/lib/image-blur-svg.js\");\nvar _imageConfig = __webpack_require__(/*! ../shared/lib/image-config */ \"./node_modules/next/dist/shared/lib/image-config.js\");\nvar _imageConfigContext = __webpack_require__(/*! ../shared/lib/image-config-context */ \"./node_modules/next/dist/shared/lib/image-config-context.js\");\nvar _warnOnce = __webpack_require__(/*! ../shared/lib/utils/warn-once */ \"./node_modules/next/dist/shared/lib/utils/warn-once.js\");\nvar _imageLoader = _interop_require_default(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"./node_modules/next/dist/shared/lib/image-loader.js\"));\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[]};\nconst allImgs = new Map();\nlet perfObserver;\nif (false) {}\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths(param, width, sizes) {\n    let { deviceSizes , allSizes  } = param;\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs(param) {\n    let { config , src , unoptimized , width , quality , sizes , loader  } = param;\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>\"\".concat(loader({\n                config,\n                src,\n                quality,\n                width: w\n            }), \" \").concat(kind === \"w\" ? w : i + 1).concat(kind)).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === \"number\" || typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized) {\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentElement || !img.isConnected) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === \"blur\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current(_extends({}, event, {\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            }));\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!unoptimized && (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\")) {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes'));\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has \"fill\" and parent element with invalid \"position\". Provided \"').concat(position, '\" should be one of ').concat(valid.map(String).join(\",\"), \".\"));\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.'));\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \\'width: \"auto\"\\' or \\'height: \"auto\"\\' to maintain the aspect ratio.'));\n            }\n        }\n    });\n}\nconst ImageElement = /*#__PURE__*/ (0, _react).forwardRef(_s((_param, forwardedRef)=>{\n    _s();\n    var { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadRef , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError  } = _param, rest = _object_without_properties_loose(_param, [\n        \"imgAttributes\",\n        \"heightInt\",\n        \"widthInt\",\n        \"qualityInt\",\n        \"className\",\n        \"imgStyle\",\n        \"blurStyle\",\n        \"isLazy\",\n        \"fill\",\n        \"placeholder\",\n        \"loading\",\n        \"srcString\",\n        \"config\",\n        \"unoptimized\",\n        \"loader\",\n        \"onLoadRef\",\n        \"onLoadingCompleteRef\",\n        \"setBlurComplete\",\n        \"setShowAltText\",\n        \"onLoad\",\n        \"onError\"\n    ]);\n    loading = isLazy ? \"lazy\" : loading;\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, {\n        // @ts-ignore - TODO: upgrade to `@types/react@17`\n        loading: loading,\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        style: _extends({}, imgStyle, blurStyle)\n    }, imgAttributes, {\n        ref: (0, _react).useCallback((img)=>{\n            if (forwardedRef) {\n                if (typeof forwardedRef === \"function\") forwardedRef(img);\n                else if (typeof forwardedRef === \"object\") {\n                    // @ts-ignore - .current is read only it's usually assigned by react internally\n                    forwardedRef.current = img;\n                }\n            }\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!srcString) {\n                    console.error('Image is missing required \"src\" property:', img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error('Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.');\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError,\n            unoptimized,\n            forwardedRef\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === \"blur\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    })));\n}, \"epj4qY15NHsef74wNqHIp5fdZmg=\"));\n_c = ImageElement;\nconst Image = _s1(/*#__PURE__*/ (0, _react).forwardRef(_c1 = _s1((_param, forwardedRef)=>{\n    _s1();\n    var { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoad , onLoadingComplete , placeholder =\"empty\" , blurDataURL , layout , objectFit , objectPosition , lazyBoundary , lazyRoot  } = _param, all = _object_without_properties_loose(_param, [\n        \"src\",\n        \"sizes\",\n        \"unoptimized\",\n        \"priority\",\n        \"loading\",\n        \"className\",\n        \"quality\",\n        \"width\",\n        \"height\",\n        \"fill\",\n        \"style\",\n        \"onLoad\",\n        \"onLoadingComplete\",\n        \"placeholder\",\n        \"blurDataURL\",\n        \"layout\",\n        \"objectFit\",\n        \"objectPosition\",\n        \"lazyBoundary\",\n        \"lazyRoot\"\n    ]);\n    const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n    const config = (0, _react).useMemo(()=>{\n        const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return _extends({}, c, {\n            allSizes,\n            deviceSizes\n        });\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = rest.loader || _imageLoader.default;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    // This special value indicates that the user\n    // didn't define a \"loader\" prop or \"loader\" config.\n    const isDefaultLoader = \"__next_img_default\" in loader;\n    if (isDefaultLoader) {\n        if (config.loader === \"custom\") {\n            throw new Error('Image with src \"'.concat(src, '\" is missing \"loader\" prop.') + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader\");\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        var _tmp;\n        _tmp = (obj)=>{\n            const { config: _  } = obj, opts = _object_without_properties_loose(obj, [\n                \"config\"\n            ]);\n            return customImageLoader(opts);\n        }, loader = _tmp, _tmp;\n    }\n    if (layout) {\n        if (layout === \"fill\") {\n            fill = true;\n        }\n        const layoutToStyle = {\n            intrinsic: {\n                maxWidth: \"100%\",\n                height: \"auto\"\n            },\n            responsive: {\n                width: \"100%\",\n                height: \"auto\"\n            }\n        };\n        const layoutToSizes = {\n            responsive: \"100vw\",\n            fill: \"100vw\"\n        };\n        const layoutStyle = layoutToStyle[layout];\n        if (layoutStyle) {\n            style = _extends({}, style, layoutStyle);\n        }\n        const layoutSizes = layoutToSizes[layout];\n        if (layoutSizes && !sizes) {\n            sizes = layoutSizes;\n        }\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received \".concat(JSON.stringify(staticImageData)));\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(\"An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received \".concat(JSON.stringify(staticImageData)));\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    if (isDefaultLoader && src.endsWith(\".svg\") && !config.dangerouslyAllowSVG) {\n        // Special case to make svg serve as-is to avoid proxying\n        // through the built-in Image Optimization API.\n        unoptimized = true;\n    }\n    const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n    const [showAltText, setShowAltText] = (0, _react).useState(false);\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (config.output === \"export\" && isDefaultLoader && !unoptimized) {\n            throw new Error('Image Optimization using Next.js\\' default loader is not compatible with `{ output: \"export\" }`.\\n  Possible solutions:\\n    - Configure `{ output: \"standalone\" }` or remove it to run server mode including the Image Optimization API.\\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\\n  Read more: https://nextjs.org/docs/messages/export-image-api');\n        }\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"width\" and \"fill\" properties. Only one should be used.'));\n                }\n                if (height) {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"height\" and \"fill\" properties. Only one should be used.'));\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.'));\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.'));\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error('Image with src \"'.concat(src, '\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.'));\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error('Image with src \"'.concat(src, '\" is missing required \"width\" property.'));\n                } else if (isNaN(widthInt)) {\n                    throw new Error('Image with src \"'.concat(src, '\" has invalid \"width\" property. Expected a numeric value in pixels but received \"').concat(width, '\".'));\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error('Image with src \"'.concat(src, '\" is missing required \"height\" property.'));\n                } else if (isNaN(heightInt)) {\n                    throw new Error('Image with src \"'.concat(src, '\" has invalid \"height\" property. Expected a numeric value in pixels but received \"').concat(height, '\".'));\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error('Image with src \"'.concat(src, '\" has invalid \"loading\" property. Provided \"').concat(loading, '\" should be one of ').concat(VALID_LOADING_VALUES.map(String).join(\",\"), \".\"));\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error('Image with src \"'.concat(src, '\" has both \"priority\" and \"loading=\\'lazy\\'\" properties. Only one should be used.'));\n        }\n        if (placeholder === \"blur\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" is smaller than 40x40. Consider removing the \"placeholder=\\'blur\\'\" property to improve performance.'));\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    \"jpeg\",\n                    \"png\",\n                    \"webp\",\n                    \"avif\"\n                ] // should match next-image-loader\n                ;\n                throw new Error('Image with src \"'.concat(src, '\" has \"placeholder=\\'blur\\'\" property but is missing the \"blurDataURL\" property.\\n          Possible solutions:\\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\\n            - Change the \"src\" property to a static import with one of the supported file types: ').concat(VALID_BLUR_EXT.join(\",\"), '\\n            - Remove the \"placeholder\" property, effectively no blur effect\\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url'));\n            }\n        }\n        if (\"ref\" in rest) {\n            (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.'));\n        }\n        if (!unoptimized && loader !== _imageLoader.default) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.') + \"\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width\");\n            }\n        }\n        for (const [legacyKey, legacyValue] of Object.entries({\n            layout,\n            objectFit,\n            objectPosition,\n            lazyBoundary,\n            lazyRoot\n        })){\n            if (legacyValue) {\n                (0, _warnOnce).warnOnce('Image with src \"'.concat(src, '\" has legacy prop \"').concat(legacyKey, '\". Did you forget to run the codemod?') + \"\\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13\");\n            }\n        }\n        if ( true && !perfObserver && window.PerformanceObserver) {\n            perfObserver = new PerformanceObserver((entryList)=>{\n                for (const entry of entryList.getEntries()){\n                    var ref;\n                    // @ts-ignore - missing \"LargestContentfulPaint\" class with \"element\" prop\n                    const imgSrc = (entry == null ? void 0 : (ref = entry.element) == null ? void 0 : ref.src) || \"\";\n                    const lcpImage = allImgs.get(imgSrc);\n                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder !== \"blur\" && !lcpImage.src.startsWith(\"data:\") && !lcpImage.src.startsWith(\"blob:\")) {\n                        // https://web.dev/lcp/#measure-lcp-in-javascript\n                        (0, _warnOnce).warnOnce('Image with src \"'.concat(lcpImage.src, '\" was detected as the Largest Contentful Paint (LCP). Please add the \"priority\" property if this image is above the fold.') + \"\\nRead more: https://nextjs.org/docs/api-reference/next/image#priority\");\n                    }\n                }\n            });\n            try {\n                perfObserver.observe({\n                    type: \"largest-contentful-paint\",\n                    buffered: true\n                });\n            } catch (err) {\n                // Log error but don't crash the app\n                console.error(err);\n            }\n        }\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        objectFit,\n        objectPosition\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const blurStyle = placeholder === \"blur\" && blurDataURL && !blurComplete ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage: 'url(\"data:image/svg+xml;charset=utf-8,'.concat((0, _imageBlurSvg).getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL,\n            objectFit: imgStyle.objectFit\n        }), '\")')\n    } : {};\n    if (true) {\n        if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            blurStyle.backgroundImage = 'url(\"'.concat(blurDataURL, '\")');\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (true) {\n        if (true) {\n            let fullUrl;\n            try {\n                fullUrl = new URL(imgAttributes.src);\n            } catch (e) {\n                fullUrl = new URL(imgAttributes.src, window.location.href);\n            }\n            allImgs.set(fullUrl.href, {\n                src,\n                priority,\n                placeholder\n            });\n        }\n    }\n    const linkProps = {\n        // @ts-expect-error upgrade react types to react 18\n        imageSrcSet: imgAttributes.srcSet,\n        imageSizes: imgAttributes.sizes,\n        crossOrigin: rest.crossOrigin\n    };\n    const onLoadRef = (0, _react).useRef(onLoad);\n    (0, _react).useEffect(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n    (0, _react).useEffect(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = _extends({\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText\n    }, rest);\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs, {\n        ref: forwardedRef\n    })), priority ? // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", Object.assign({\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src\n    }, linkProps))) : null);\n}, \"MNWBZtgATWANvDNCrE8t4SwDfUU=\")), \"MNWBZtgATWANvDNCrE8t4SwDfUU=\");\n_c2 = Image;\nvar _default = Image;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image.js.map\nvar _c, _c1, _c2;\n$RefreshReg$(_c, \"ImageElement\");\n$RefreshReg$(_c1, \"Image$(0, _react).forwardRef\");\n$RefreshReg$(_c2, \"Image\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/image.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_default(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\nvar _resolveHref = __webpack_require__(/*! ../shared/lib/router/utils/resolve-href */ \"./node_modules/next/dist/shared/lib/router/utils/resolve-href.js\");\nvar _isLocalUrl = __webpack_require__(/*! ../shared/lib/router/utils/is-local-url */ \"./node_modules/next/dist/shared/lib/router/utils/is-local-url.js\");\nvar _formatUrl = __webpack_require__(/*! ../shared/lib/router/utils/format-url */ \"./node_modules/next/dist/shared/lib/router/utils/format-url.js\");\nvar _utils = __webpack_require__(/*! ../shared/lib/utils */ \"./node_modules/next/dist/shared/lib/utils.js\");\nvar _addLocale = __webpack_require__(/*! ./add-locale */ \"./node_modules/next/dist/client/add-locale.js\");\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"./node_modules/next/dist/shared/lib/router-context.js\");\nvar _appRouterContext = __webpack_require__(/*! ../shared/lib/app-router-context */ \"./node_modules/next/dist/shared/lib/app-router-context.js\");\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\nvar _getDomainLocale = __webpack_require__(/*! ./get-domain-locale */ \"./node_modules/next/dist/client/get-domain-locale.js\");\nvar _addBasePath = __webpack_require__(/*! ./add-base-path */ \"./node_modules/next/dist/client/add-base-path.js\");\nconst prefetched = new Set();\nfunction prefetch(router, href, as, options, isAppRouter) {\n    if (false) {}\n    // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    if (!isAppRouter && !(0, _isLocalUrl).isLocalURL(href)) {\n        return;\n    }\n    // We should only dedupe requests when experimental.optimisticClientCache is\n    // disabled.\n    if (!options.bypassPrefetchedCheck) {\n        const locale = typeof options.locale !== \"undefined\" ? options.locale : \"locale\" in router ? router.locale : undefined;\n        const prefetchedKey = href + \"%\" + as + \"%\" + locale;\n        // If we've already fetched the key, then don't prefetch it again!\n        if (prefetched.has(prefetchedKey)) {\n            return;\n        }\n        // Mark this URL as prefetched.\n        prefetched.add(prefetchedKey);\n    }\n    // Prefetch the JSON page if asked (only in the client)\n    // We need to handle a prefetch error here since we may be\n    // loading with priority which can reject but we don't\n    // want to force navigation since this is only a prefetch\n    Promise.resolve(router.prefetch(href, as, options)).catch((err)=>{\n        if (true) {\n            // rethrow to show invalid URL errors\n            throw err;\n        }\n    });\n}\nfunction isModifiedEvent(event) {\n    const eventTarget = event.currentTarget;\n    const target = eventTarget.getAttribute(\"target\");\n    return target && target !== \"_self\" || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n    const { nodeName  } = e.currentTarget;\n    // anchors inside an svg have a lowercase nodeName\n    const isAnchorNodeName = nodeName.toUpperCase() === \"A\";\n    if (isAnchorNodeName && (isModifiedEvent(e) || // app-router supports external urls out of the box so it shouldn't short-circuit here as support for e.g. `replace` is added in the app-router.\n    !isAppRouter && !(0, _isLocalUrl).isLocalURL(href))) {\n        // ignore click for browser’s default behavior\n        return;\n    }\n    e.preventDefault();\n    const navigate = ()=>{\n        // If the router is an NextRouter instance it will have `beforePopState`\n        if (\"beforePopState\" in router) {\n            router[replace ? \"replace\" : \"push\"](href, as, {\n                shallow,\n                locale,\n                scroll\n            });\n        } else {\n            router[replace ? \"replace\" : \"push\"](as || href, {\n                forceOptimisticNavigation: !prefetchEnabled\n            });\n        }\n    };\n    if (isAppRouter) {\n        // @ts-expect-error startTransition exists.\n        _react.default.startTransition(navigate);\n    } else {\n        navigate();\n    }\n}\nfunction formatStringOrUrl(urlObjOrString) {\n    if (typeof urlObjOrString === \"string\") {\n        return urlObjOrString;\n    }\n    return (0, _formatUrl).formatUrl(urlObjOrString);\n}\n/**\n * React Component that enables client-side transitions between routes.\n */ const Link = /*#__PURE__*/ _s(_react.default.forwardRef(_c = _s(function LinkComponent(props, forwardedRef) {\n    _s();\n    if (true) {\n        function createPropError(args) {\n            return new Error(\"Failed prop type: The prop `\".concat(args.key, \"` expects a \").concat(args.expected, \" in `<Link>`, but got `\").concat(args.actual, \"` instead.\") + ( true ? \"\\nOpen your browser's console to view the Component stack trace.\" : 0));\n        }\n        // TypeScript trick for type-guarding:\n        const requiredPropsGuard = {\n            href: true\n        };\n        const requiredProps = Object.keys(requiredPropsGuard);\n        requiredProps.forEach((key)=>{\n            if (key === \"href\") {\n                if (props[key] == null || typeof props[key] !== \"string\" && typeof props[key] !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: props[key] === null ? \"null\" : typeof props[key]\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // TypeScript trick for type-guarding:\n        const optionalPropsGuard = {\n            as: true,\n            replace: true,\n            scroll: true,\n            shallow: true,\n            passHref: true,\n            prefetch: true,\n            locale: true,\n            onClick: true,\n            onMouseEnter: true,\n            onTouchStart: true,\n            legacyBehavior: true\n        };\n        const optionalProps = Object.keys(optionalPropsGuard);\n        optionalProps.forEach((key)=>{\n            const valType = typeof props[key];\n            if (key === \"as\") {\n                if (props[key] && valType !== \"string\" && valType !== \"object\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string` or `object`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"locale\") {\n                if (props[key] && valType !== \"string\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`string`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"onClick\" || key === \"onMouseEnter\" || key === \"onTouchStart\") {\n                if (props[key] && valType !== \"function\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`function`\",\n                        actual: valType\n                    });\n                }\n            } else if (key === \"replace\" || key === \"scroll\" || key === \"shallow\" || key === \"passHref\" || key === \"prefetch\" || key === \"legacyBehavior\") {\n                if (props[key] != null && valType !== \"boolean\") {\n                    throw createPropError({\n                        key,\n                        expected: \"`boolean`\",\n                        actual: valType\n                    });\n                }\n            } else {\n                // TypeScript trick for type-guarding:\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                const _ = key;\n            }\n        });\n        // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const hasWarned = _react.default.useRef(false);\n        if (props.prefetch && !hasWarned.current) {\n            hasWarned.current = true;\n            console.warn(\"Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated\");\n        }\n    }\n    let children;\n    const { href: hrefProp , as: asProp , children: childrenProp , prefetch: prefetchProp , passHref , replace , shallow , scroll , locale , onClick , onMouseEnter: onMouseEnterProp , onTouchStart: onTouchStartProp , legacyBehavior =true === false  } = props, restProps = _object_without_properties_loose(props, [\n        \"href\",\n        \"as\",\n        \"children\",\n        \"prefetch\",\n        \"passHref\",\n        \"replace\",\n        \"shallow\",\n        \"scroll\",\n        \"locale\",\n        \"onClick\",\n        \"onMouseEnter\",\n        \"onTouchStart\",\n        \"legacyBehavior\"\n    ]);\n    children = childrenProp;\n    if (legacyBehavior && (typeof children === \"string\" || typeof children === \"number\")) {\n        children = /*#__PURE__*/ _react.default.createElement(\"a\", null, children);\n    }\n    const prefetchEnabled = prefetchProp !== false;\n    const pagesRouter = _react.default.useContext(_routerContext.RouterContext);\n    const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n    const router = pagesRouter != null ? pagesRouter : appRouter;\n    // We're in the app directory if there is no pages router.\n    const isAppRouter = !pagesRouter;\n    if (true) {\n        if (isAppRouter && !asProp) {\n            let href;\n            if (typeof hrefProp === \"string\") {\n                href = hrefProp;\n            } else if (typeof hrefProp === \"object\" && typeof hrefProp.pathname === \"string\") {\n                href = hrefProp.pathname;\n            }\n            if (href) {\n                const hasDynamicSegment = href.split(\"/\").some((segment)=>segment.startsWith(\"[\") && segment.endsWith(\"]\"));\n                if (hasDynamicSegment) {\n                    throw new Error(\"Dynamic href `\".concat(href, \"` found in <Link> while using the `/app` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href\"));\n                }\n            }\n        }\n    }\n    const { href , as  } = _react.default.useMemo(()=>{\n        if (!pagesRouter) {\n            const resolvedHref = formatStringOrUrl(hrefProp);\n            return {\n                href: resolvedHref,\n                as: asProp ? formatStringOrUrl(asProp) : resolvedHref\n            };\n        }\n        const [resolvedHref, resolvedAs] = (0, _resolveHref).resolveHref(pagesRouter, hrefProp, true);\n        return {\n            href: resolvedHref,\n            as: asProp ? (0, _resolveHref).resolveHref(pagesRouter, asProp) : resolvedAs || resolvedHref\n        };\n    }, [\n        pagesRouter,\n        hrefProp,\n        asProp\n    ]);\n    const previousHref = _react.default.useRef(href);\n    const previousAs = _react.default.useRef(as);\n    // This will return the first child, if multiple are provided it will throw an error\n    let child;\n    if (legacyBehavior) {\n        if (true) {\n            if (onClick) {\n                console.warn('\"onClick\" was passed to <Link> with `href` of `'.concat(hrefProp, '` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link'));\n            }\n            if (onMouseEnterProp) {\n                console.warn('\"onMouseEnter\" was passed to <Link> with `href` of `'.concat(hrefProp, '` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link'));\n            }\n            try {\n                child = _react.default.Children.only(children);\n            } catch (err) {\n                if (!children) {\n                    throw new Error(\"No children were passed to <Link> with `href` of `\".concat(hrefProp, \"` but one child is required https://nextjs.org/docs/messages/link-no-children\"));\n                }\n                throw new Error(\"Multiple children were passed to <Link> with `href` of `\".concat(hrefProp, \"` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children\") + ( true ? \" \\nOpen your browser's console to view the Component stack trace.\" : 0));\n            }\n        } else {}\n    } else {\n        if (true) {\n            var ref;\n            if (((ref = children) == null ? void 0 : ref.type) === \"a\") {\n                throw new Error(\"Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor\");\n            }\n        }\n    }\n    const childRef = legacyBehavior ? child && typeof child === \"object\" && child.ref : forwardedRef;\n    const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n        rootMargin: \"200px\"\n    });\n    const setRef = _react.default.useCallback((el)=>{\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n            resetVisible();\n            previousAs.current = as;\n            previousHref.current = href;\n        }\n        setIntersectionRef(el);\n        if (childRef) {\n            if (typeof childRef === \"function\") childRef(el);\n            else if (typeof childRef === \"object\") {\n                childRef.current = el;\n            }\n        }\n    }, [\n        as,\n        childRef,\n        href,\n        resetVisible,\n        setIntersectionRef\n    ]);\n    // Prefetch the URL if we haven't already and it's visible.\n    _react.default.useEffect(()=>{\n        // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n        if (true) {\n            return;\n        }\n        if (!router) {\n            return;\n        }\n        // If we don't need to prefetch the URL, don't do prefetch.\n        if (!isVisible || !prefetchEnabled) {\n            return;\n        }\n        // Prefetch the URL.\n        prefetch(router, href, as, {\n            locale\n        }, isAppRouter);\n    }, [\n        as,\n        href,\n        isVisible,\n        locale,\n        prefetchEnabled,\n        pagesRouter == null ? void 0 : pagesRouter.locale,\n        router,\n        isAppRouter\n    ]);\n    const childProps = {\n        ref: setRef,\n        onClick (e) {\n            if (true) {\n                if (!e) {\n                    throw new Error('Component rendered inside next/link has to pass click event to \"onClick\" prop.');\n                }\n            }\n            if (!legacyBehavior && typeof onClick === \"function\") {\n                onClick(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onClick === \"function\") {\n                child.props.onClick(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (e.defaultPrevented) {\n                return;\n            }\n            linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled);\n        },\n        onMouseEnter (e) {\n            if (!legacyBehavior && typeof onMouseEnterProp === \"function\") {\n                onMouseEnterProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onMouseEnter === \"function\") {\n                child.props.onMouseEnter(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, isAppRouter);\n        },\n        onTouchStart (e) {\n            if (!legacyBehavior && typeof onTouchStartProp === \"function\") {\n                onTouchStartProp(e);\n            }\n            if (legacyBehavior && child.props && typeof child.props.onTouchStart === \"function\") {\n                child.props.onTouchStart(e);\n            }\n            if (!router) {\n                return;\n            }\n            if (!prefetchEnabled && isAppRouter) {\n                return;\n            }\n            prefetch(router, href, as, {\n                locale,\n                priority: true,\n                // @see {https://github.com/vercel/next.js/discussions/40268?sort=top#discussioncomment-3572642}\n                bypassPrefetchedCheck: true\n            }, isAppRouter);\n        }\n    };\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the domain and locale.\n    if ((0, _utils).isAbsoluteUrl(as)) {\n        childProps.href = as;\n    } else if (!legacyBehavior || passHref || child.type === \"a\" && !(\"href\" in child.props)) {\n        const curLocale = typeof locale !== \"undefined\" ? locale : pagesRouter == null ? void 0 : pagesRouter.locale;\n        // we only render domain locales if we are currently on a domain locale\n        // so that locale links are still visitable in development/preview envs\n        const localeDomain = (pagesRouter == null ? void 0 : pagesRouter.isLocaleDomain) && (0, _getDomainLocale).getDomainLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.locales, pagesRouter == null ? void 0 : pagesRouter.domainLocales);\n        childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, pagesRouter == null ? void 0 : pagesRouter.defaultLocale));\n    }\n    return legacyBehavior ? /*#__PURE__*/ _react.default.cloneElement(child, childProps) : /*#__PURE__*/ _react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n}, \"ann5/dOH/k5dvIvXTqfdyzq9F1A=\")), \"ann5/dOH/k5dvIvXTqfdyzq9F1A=\");\n_c1 = Link;\nvar _default = Link;\nexports[\"default\"] = _default;\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=link.js.map\nvar _c, _c1;\n$RefreshReg$(_c, \"Link$_react.default.forwardRef\");\n$RefreshReg$(_c1, \"Link\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nvar _s = $RefreshSig$();\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.useIntersection = useIntersection;\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\nconst hasIntersectionObserver = typeof IntersectionObserver === \"function\";\nconst observers = new Map();\nconst idList = [];\nfunction createObserver(options) {\n    const id = {\n        root: options.root || null,\n        margin: options.rootMargin || \"\"\n    };\n    const existing = idList.find((obj)=>obj.root === id.root && obj.margin === id.margin);\n    let instance;\n    if (existing) {\n        instance = observers.get(existing);\n        if (instance) {\n            return instance;\n        }\n    }\n    const elements = new Map();\n    const observer = new IntersectionObserver((entries)=>{\n        entries.forEach((entry)=>{\n            const callback = elements.get(entry.target);\n            const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n            if (callback && isVisible) {\n                callback(isVisible);\n            }\n        });\n    }, options);\n    instance = {\n        id,\n        observer,\n        elements\n    };\n    idList.push(id);\n    observers.set(id, instance);\n    return instance;\n}\nfunction observe(element, callback, options) {\n    const { id , observer , elements  } = createObserver(options);\n    elements.set(element, callback);\n    observer.observe(element);\n    return function unobserve() {\n        elements.delete(element);\n        observer.unobserve(element);\n        // Destroy observer when there's nothing left to watch:\n        if (elements.size === 0) {\n            observer.disconnect();\n            observers.delete(id);\n            const index = idList.findIndex((obj)=>obj.root === id.root && obj.margin === id.margin);\n            if (index > -1) {\n                idList.splice(index, 1);\n            }\n        }\n    };\n}\nfunction useIntersection(param) {\n    let { rootRef , rootMargin , disabled  } = param;\n    _s();\n    const isDisabled = disabled || !hasIntersectionObserver;\n    const [visible, setVisible] = (0, _react).useState(false);\n    const elementRef = (0, _react).useRef(null);\n    const setElement = (0, _react).useCallback((element)=>{\n        elementRef.current = element;\n    }, []);\n    (0, _react).useEffect(()=>{\n        if (hasIntersectionObserver) {\n            if (isDisabled || visible) return;\n            const element = elementRef.current;\n            if (element && element.tagName) {\n                const unobserve = observe(element, (isVisible)=>isVisible && setVisible(isVisible), {\n                    root: rootRef == null ? void 0 : rootRef.current,\n                    rootMargin\n                });\n                return unobserve;\n            }\n        } else {\n            if (!visible) {\n                const idleCallback = (0, _requestIdleCallback).requestIdleCallback(()=>setVisible(true));\n                return ()=>(0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n            }\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n        isDisabled,\n        rootMargin,\n        rootRef,\n        visible,\n        elementRef.current\n    ]);\n    const resetVisible = (0, _react).useCallback(()=>{\n        setVisible(false);\n    }, []);\n    return [\n        setElement,\n        visible,\n        resetVisible\n    ];\n}\n_s(useIntersection, \"f+30nk3/InClhhpF4v6D3kkuqlo=\");\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=use-intersection.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/image-blur-svg.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-blur-svg.js ***!
  \*************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getImageBlurSvg = getImageBlurSvg;\nfunction getImageBlurSvg(param) {\n    let { widthInt , heightInt , blurWidth , blurHeight , blurDataURL , objectFit  } = param;\n    const std = blurWidth && blurHeight ? \"1\" : \"20\";\n    const svgWidth = blurWidth || widthInt;\n    const svgHeight = blurHeight || heightInt;\n    const feComponentTransfer = blurDataURL.startsWith(\"data:image/jpeg\") ? \"%3CfeComponentTransfer%3E%3CfeFuncA type='discrete' tableValues='1 1'/%3E%3C/feComponentTransfer%3E%\" : \"\";\n    if (svgWidth && svgHeight) {\n        return \"%3Csvg xmlns='http%3A//www.w3.org/2000/svg' viewBox='0 0 \".concat(svgWidth, \" \").concat(svgHeight, \"'%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='\").concat(std, \"'/%3E\").concat(feComponentTransfer, \"%3C/filter%3E%3Cimage preserveAspectRatio='none' filter='url(%23b)' x='0' y='0' height='100%25' width='100%25' href='\").concat(blurDataURL, \"'/%3E%3C/svg%3E\");\n    }\n    const preserveAspectRatio = objectFit === \"contain\" ? \"xMidYMid\" : objectFit === \"cover\" ? \"xMidYMid slice\" : \"none\";\n    return \"%3Csvg xmlns='http%3A//www.w3.org/2000/svg'%3E%3Cimage style='filter:blur(20px)' preserveAspectRatio='\".concat(preserveAspectRatio, \"' x='0' y='0' height='100%25' width='100%25' href='\").concat(blurDataURL, \"'/%3E%3C/svg%3E\");\n} //# sourceMappingURL=image-blur-svg.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaW1hZ2UtYmx1ci1zdmcuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsdUJBQXVCLEdBQUdFO0FBQzFCLFNBQVNBLGdCQUFnQixLQUE0RSxFQUFFO1FBQTlFLEVBQUVDLFNBQVEsRUFBR0MsVUFBUyxFQUFHQyxVQUFTLEVBQUdDLFdBQVUsRUFBR0MsWUFBVyxFQUFHQyxVQUFTLEVBQUcsR0FBNUU7SUFDckIsTUFBTUMsTUFBTUosYUFBYUMsYUFBYSxNQUFNLElBQUk7SUFDaEQsTUFBTUksV0FBV0wsYUFBYUY7SUFDOUIsTUFBTVEsWUFBWUwsY0FBY0Y7SUFDaEMsTUFBTVEsc0JBQXNCTCxZQUFZTSxVQUFVLENBQUMscUJBQXNCLHlHQUF3RyxFQUFFO0lBQ25MLElBQUlILFlBQVlDLFdBQVc7UUFDdkIsT0FBTyw0REFBd0VBLE9BQVpELFVBQVMsS0FBeUdELE9BQXRHRSxXQUFVLDhGQUF1R0MsT0FBWEgsS0FBSSxTQUFrSkYsT0FBM0lLLHFCQUFvQix5SEFBbUksT0FBWkwsYUFBWTtJQUMzVixDQUFDO0lBQ0QsTUFBTU8sc0JBQXNCTixjQUFjLFlBQVksYUFBYUEsY0FBYyxVQUFVLG1CQUFtQixNQUFNO0lBQ3BILE9BQU8seUdBQWtMRCxPQUF6RU8scUJBQW9CLHVEQUFpRSxPQUFaUCxhQUFZO0FBQ3pNLEVBRUEsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1ibHVyLXN2Zy5qcz85NTcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5nZXRJbWFnZUJsdXJTdmcgPSBnZXRJbWFnZUJsdXJTdmc7XG5mdW5jdGlvbiBnZXRJbWFnZUJsdXJTdmcoeyB3aWR0aEludCAsIGhlaWdodEludCAsIGJsdXJXaWR0aCAsIGJsdXJIZWlnaHQgLCBibHVyRGF0YVVSTCAsIG9iamVjdEZpdCAgfSkge1xuICAgIGNvbnN0IHN0ZCA9IGJsdXJXaWR0aCAmJiBibHVySGVpZ2h0ID8gJzEnIDogJzIwJztcbiAgICBjb25zdCBzdmdXaWR0aCA9IGJsdXJXaWR0aCB8fCB3aWR0aEludDtcbiAgICBjb25zdCBzdmdIZWlnaHQgPSBibHVySGVpZ2h0IHx8IGhlaWdodEludDtcbiAgICBjb25zdCBmZUNvbXBvbmVudFRyYW5zZmVyID0gYmx1ckRhdGFVUkwuc3RhcnRzV2l0aCgnZGF0YTppbWFnZS9qcGVnJykgPyBgJTNDZmVDb21wb25lbnRUcmFuc2ZlciUzRSUzQ2ZlRnVuY0EgdHlwZT0nZGlzY3JldGUnIHRhYmxlVmFsdWVzPScxIDEnLyUzRSUzQy9mZUNvbXBvbmVudFRyYW5zZmVyJTNFJWAgOiAnJztcbiAgICBpZiAoc3ZnV2lkdGggJiYgc3ZnSGVpZ2h0KSB7XG4gICAgICAgIHJldHVybiBgJTNDc3ZnIHhtbG5zPSdodHRwJTNBLy93d3cudzMub3JnLzIwMDAvc3ZnJyB2aWV3Qm94PScwIDAgJHtzdmdXaWR0aH0gJHtzdmdIZWlnaHR9JyUzRSUzQ2ZpbHRlciBpZD0nYicgY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzPSdzUkdCJyUzRSUzQ2ZlR2F1c3NpYW5CbHVyIHN0ZERldmlhdGlvbj0nJHtzdGR9Jy8lM0Uke2ZlQ29tcG9uZW50VHJhbnNmZXJ9JTNDL2ZpbHRlciUzRSUzQ2ltYWdlIHByZXNlcnZlQXNwZWN0UmF0aW89J25vbmUnIGZpbHRlcj0ndXJsKCUyM2IpJyB4PScwJyB5PScwJyBoZWlnaHQ9JzEwMCUyNScgd2lkdGg9JzEwMCUyNScgaHJlZj0nJHtibHVyRGF0YVVSTH0nLyUzRSUzQy9zdmclM0VgO1xuICAgIH1cbiAgICBjb25zdCBwcmVzZXJ2ZUFzcGVjdFJhdGlvID0gb2JqZWN0Rml0ID09PSAnY29udGFpbicgPyAneE1pZFlNaWQnIDogb2JqZWN0Rml0ID09PSAnY292ZXInID8gJ3hNaWRZTWlkIHNsaWNlJyA6ICdub25lJztcbiAgICByZXR1cm4gYCUzQ3N2ZyB4bWxucz0naHR0cCUzQS8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NpbWFnZSBzdHlsZT0nZmlsdGVyOmJsdXIoMjBweCknIHByZXNlcnZlQXNwZWN0UmF0aW89JyR7cHJlc2VydmVBc3BlY3RSYXRpb30nIHg9JzAnIHk9JzAnIGhlaWdodD0nMTAwJTI1JyB3aWR0aD0nMTAwJTI1JyBocmVmPScke2JsdXJEYXRhVVJMfScvJTNFJTNDL3N2ZyUzRWA7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWltYWdlLWJsdXItc3ZnLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldEltYWdlQmx1clN2ZyIsIndpZHRoSW50IiwiaGVpZ2h0SW50IiwiYmx1cldpZHRoIiwiYmx1ckhlaWdodCIsImJsdXJEYXRhVVJMIiwib2JqZWN0Rml0Iiwic3RkIiwic3ZnV2lkdGgiLCJzdmdIZWlnaHQiLCJmZUNvbXBvbmVudFRyYW5zZmVyIiwic3RhcnRzV2l0aCIsInByZXNlcnZlQXNwZWN0UmF0aW8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/image-blur-svg.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/image-loader.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/image-loader.js ***!
  \***********************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = void 0;\nfunction defaultLoader(param) {\n    let { config , src , width , quality  } = param;\n    if (true) {\n        const missingValues = [];\n        // these should always be provided but make sure they are\n        if (!src) missingValues.push(\"src\");\n        if (!width) missingValues.push(\"width\");\n        if (missingValues.length > 0) {\n            throw new Error(\"Next Image Optimization requires \".concat(missingValues.join(\", \"), \" to be provided. Make sure you pass them as props to the `next/image` component. Received: \").concat(JSON.stringify({\n                src,\n                width,\n                quality\n            })));\n        }\n        if (src.startsWith(\"//\")) {\n            throw new Error('Failed to parse src \"'.concat(src, '\" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)'));\n        }\n        if (!src.startsWith(\"/\") && (config.domains || config.remotePatterns)) {\n            let parsedSrc;\n            try {\n                parsedSrc = new URL(src);\n            } catch (err) {\n                console.error(err);\n                throw new Error('Failed to parse src \"'.concat(src, '\" on `next/image`, if using relative image it must start with a leading slash \"/\" or be an absolute URL (http:// or https://)'));\n            }\n            if (true) {\n                // We use dynamic require because this should only error in development\n                const { hasMatch  } = __webpack_require__(/*! ./match-remote-pattern */ \"./node_modules/next/dist/shared/lib/match-remote-pattern.js\");\n                if (!hasMatch(config.domains, config.remotePatterns, parsedSrc)) {\n                    throw new Error(\"Invalid src prop (\".concat(src, ') on `next/image`, hostname \"').concat(parsedSrc.hostname, '\" is not configured under images in your `next.config.js`\\n') + \"See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host\");\n                }\n            }\n        }\n    }\n    return \"\".concat(config.path, \"?url=\").concat(encodeURIComponent(src), \"&w=\").concat(width, \"&q=\").concat(quality || 75);\n}\n// We use this to determine if the import is the default loader\n// or a custom loader defined by the user in next.config.js\ndefaultLoader.__next_img_default = true;\nvar _default = defaultLoader;\nexports[\"default\"] = _default; //# sourceMappingURL=image-loader.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvaW1hZ2UtbG9hZGVyLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUN6Q0csT0FBTyxJQUFJO0FBQ2YsQ0FBQyxFQUFDO0FBQ0ZELGtCQUFlLEdBQUcsS0FBSztBQUN2QixTQUFTRyxjQUFjLEtBQW1DLEVBQUU7UUFBckMsRUFBRUMsT0FBTSxFQUFHQyxJQUFHLEVBQUdDLE1BQUssRUFBR0MsUUFBTyxFQUFHLEdBQW5DO0lBQ25CLElBQUlDLElBQXlCLEVBQWM7UUFDdkMsTUFBTUMsZ0JBQWdCLEVBQUU7UUFDeEIseURBQXlEO1FBQ3pELElBQUksQ0FBQ0osS0FBS0ksY0FBY0MsSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQ0osT0FBT0csY0FBY0MsSUFBSSxDQUFDO1FBQy9CLElBQUlELGNBQWNFLE1BQU0sR0FBRyxHQUFHO1lBQzFCLE1BQU0sSUFBSUMsTUFBTSxvQ0FBNEpDLE9BQXhISixjQUFjSyxJQUFJLENBQUMsT0FBTSwrRkFJMUUsT0FKeUtELEtBQUtFLFNBQVMsQ0FBQztnQkFDdkxWO2dCQUNBQztnQkFDQUM7WUFDSixLQUFNO1FBQ1YsQ0FBQztRQUNELElBQUlGLElBQUlXLFVBQVUsQ0FBQyxPQUFPO1lBQ3RCLE1BQU0sSUFBSUosTUFBTSx3QkFBNEIsT0FBSlAsS0FBSSwyR0FBMkc7UUFDM0osQ0FBQztRQUNELElBQUksQ0FBQ0EsSUFBSVcsVUFBVSxDQUFDLFFBQVNaLENBQUFBLE9BQU9hLE9BQU8sSUFBSWIsT0FBT2MsY0FBYyxHQUFHO1lBQ25FLElBQUlDO1lBQ0osSUFBSTtnQkFDQUEsWUFBWSxJQUFJQyxJQUFJZjtZQUN4QixFQUFFLE9BQU9nQixLQUFLO2dCQUNWQyxRQUFRQyxLQUFLLENBQUNGO2dCQUNkLE1BQU0sSUFBSVQsTUFBTSx3QkFBNEIsT0FBSlAsS0FBSSxrSUFBa0k7WUFDbEw7WUFDQSxJQUFJRyxJQUN5QixFQUFRO2dCQUNqQyx1RUFBdUU7Z0JBQ3ZFLE1BQU0sRUFBRWtCLFNBQVEsRUFBRyxHQUFHQyxtQkFBT0EsQ0FBQztnQkFDOUIsSUFBSSxDQUFDRCxTQUFTdEIsT0FBT2EsT0FBTyxFQUFFYixPQUFPYyxjQUFjLEVBQUVDLFlBQVk7b0JBQzdELE1BQU0sSUFBSVAsTUFBTSxxQkFBMERPLE9BQXJDZCxLQUFJLGlDQUFvRCxPQUFuQmMsVUFBVVMsUUFBUSxFQUFDLGlFQUFrRSxnRkFBK0U7Z0JBQ2xQLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQztJQUNMLENBQUM7SUFDRCxPQUFPLEdBQXNCQyxPQUFuQnpCLE9BQU8wQixJQUFJLEVBQUMsU0FBb0N4QixPQUE3QnVCLG1CQUFtQnhCLE1BQUssT0FBZ0JFLE9BQVhELE9BQU0sT0FBbUIsT0FBZEMsV0FBVztBQUNwRjtBQUNBLCtEQUErRDtBQUMvRCwyREFBMkQ7QUFDM0RKLGNBQWM0QixrQkFBa0IsR0FBRyxJQUFJO0FBQ3ZDLElBQUlDLFdBQVc3QjtBQUNmSCxrQkFBZSxHQUFHZ0MsVUFFbEIsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9pbWFnZS1sb2FkZXIuanM/YzBhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbmZ1bmN0aW9uIGRlZmF1bHRMb2FkZXIoeyBjb25maWcgLCBzcmMgLCB3aWR0aCAsIHF1YWxpdHkgIH0pIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICBjb25zdCBtaXNzaW5nVmFsdWVzID0gW107XG4gICAgICAgIC8vIHRoZXNlIHNob3VsZCBhbHdheXMgYmUgcHJvdmlkZWQgYnV0IG1ha2Ugc3VyZSB0aGV5IGFyZVxuICAgICAgICBpZiAoIXNyYykgbWlzc2luZ1ZhbHVlcy5wdXNoKCdzcmMnKTtcbiAgICAgICAgaWYgKCF3aWR0aCkgbWlzc2luZ1ZhbHVlcy5wdXNoKCd3aWR0aCcpO1xuICAgICAgICBpZiAobWlzc2luZ1ZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5leHQgSW1hZ2UgT3B0aW1pemF0aW9uIHJlcXVpcmVzICR7bWlzc2luZ1ZhbHVlcy5qb2luKCcsICcpfSB0byBiZSBwcm92aWRlZC4gTWFrZSBzdXJlIHlvdSBwYXNzIHRoZW0gYXMgcHJvcHMgdG8gdGhlIFxcYG5leHQvaW1hZ2VcXGAgY29tcG9uZW50LiBSZWNlaXZlZDogJHtKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgc3JjLFxuICAgICAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgICAgIHF1YWxpdHlcbiAgICAgICAgICAgIH0pfWApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzcmMuc3RhcnRzV2l0aCgnLy8nKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcGFyc2Ugc3JjIFwiJHtzcmN9XCIgb24gXFxgbmV4dC9pbWFnZVxcYCwgcHJvdG9jb2wtcmVsYXRpdmUgVVJMICgvLykgbXVzdCBiZSBjaGFuZ2VkIHRvIGFuIGFic29sdXRlIFVSTCAoaHR0cDovLyBvciBodHRwczovLylgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNyYy5zdGFydHNXaXRoKCcvJykgJiYgKGNvbmZpZy5kb21haW5zIHx8IGNvbmZpZy5yZW1vdGVQYXR0ZXJucykpIHtcbiAgICAgICAgICAgIGxldCBwYXJzZWRTcmM7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHBhcnNlZFNyYyA9IG5ldyBVUkwoc3JjKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBwYXJzZSBzcmMgXCIke3NyY31cIiBvbiBcXGBuZXh0L2ltYWdlXFxgLCBpZiB1c2luZyByZWxhdGl2ZSBpbWFnZSBpdCBtdXN0IHN0YXJ0IHdpdGggYSBsZWFkaW5nIHNsYXNoIFwiL1wiIG9yIGJlIGFuIGFic29sdXRlIFVSTCAoaHR0cDovLyBvciBodHRwczovLylgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Rlc3QnICYmIC8vIG1pY3JvbWF0Y2ggaXNuJ3QgY29tcGF0aWJsZSB3aXRoIGVkZ2UgcnVudGltZVxuICAgICAgICAgICAgcHJvY2Vzcy5lbnYuTkVYVF9SVU5USU1FICE9PSAnZWRnZScpIHtcbiAgICAgICAgICAgICAgICAvLyBXZSB1c2UgZHluYW1pYyByZXF1aXJlIGJlY2F1c2UgdGhpcyBzaG91bGQgb25seSBlcnJvciBpbiBkZXZlbG9wbWVudFxuICAgICAgICAgICAgICAgIGNvbnN0IHsgaGFzTWF0Y2ggIH0gPSByZXF1aXJlKCcuL21hdGNoLXJlbW90ZS1wYXR0ZXJuJyk7XG4gICAgICAgICAgICAgICAgaWYgKCFoYXNNYXRjaChjb25maWcuZG9tYWlucywgY29uZmlnLnJlbW90ZVBhdHRlcm5zLCBwYXJzZWRTcmMpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBzcmMgcHJvcCAoJHtzcmN9KSBvbiBcXGBuZXh0L2ltYWdlXFxgLCBob3N0bmFtZSBcIiR7cGFyc2VkU3JjLmhvc3RuYW1lfVwiIGlzIG5vdCBjb25maWd1cmVkIHVuZGVyIGltYWdlcyBpbiB5b3VyIFxcYG5leHQuY29uZmlnLmpzXFxgXFxuYCArIGBTZWUgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9uZXh0LWltYWdlLXVuY29uZmlndXJlZC1ob3N0YCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBgJHtjb25maWcucGF0aH0/dXJsPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHNyYyl9Jnc9JHt3aWR0aH0mcT0ke3F1YWxpdHkgfHwgNzV9YDtcbn1cbi8vIFdlIHVzZSB0aGlzIHRvIGRldGVybWluZSBpZiB0aGUgaW1wb3J0IGlzIHRoZSBkZWZhdWx0IGxvYWRlclxuLy8gb3IgYSBjdXN0b20gbG9hZGVyIGRlZmluZWQgYnkgdGhlIHVzZXIgaW4gbmV4dC5jb25maWcuanNcbmRlZmF1bHRMb2FkZXIuX19uZXh0X2ltZ19kZWZhdWx0ID0gdHJ1ZTtcbnZhciBfZGVmYXVsdCA9IGRlZmF1bHRMb2FkZXI7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW1hZ2UtbG9hZGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJkZWZhdWx0TG9hZGVyIiwiY29uZmlnIiwic3JjIiwid2lkdGgiLCJxdWFsaXR5IiwicHJvY2VzcyIsIm1pc3NpbmdWYWx1ZXMiLCJwdXNoIiwibGVuZ3RoIiwiRXJyb3IiLCJKU09OIiwiam9pbiIsInN0cmluZ2lmeSIsInN0YXJ0c1dpdGgiLCJkb21haW5zIiwicmVtb3RlUGF0dGVybnMiLCJwYXJzZWRTcmMiLCJVUkwiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJlbnYiLCJORVhUX1JVTlRJTUUiLCJoYXNNYXRjaCIsInJlcXVpcmUiLCJob3N0bmFtZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInBhdGgiLCJfX25leHRfaW1nX2RlZmF1bHQiLCJfZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/image-loader.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/match-remote-pattern.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/match-remote-pattern.js ***!
  \*******************************************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.matchRemotePattern = matchRemotePattern;\nexports.hasMatch = hasMatch;\nvar _micromatch = __webpack_require__(/*! next/dist/compiled/micromatch */ \"./node_modules/next/dist/compiled/micromatch/index.js\");\nfunction matchRemotePattern(pattern, url) {\n    if (pattern.protocol !== undefined) {\n        const actualProto = url.protocol.slice(0, -1);\n        if (pattern.protocol !== actualProto) {\n            return false;\n        }\n    }\n    if (pattern.port !== undefined) {\n        if (pattern.port !== url.port) {\n            return false;\n        }\n    }\n    if (pattern.hostname === undefined) {\n        throw new Error(\"Pattern should define hostname but found\\n\".concat(JSON.stringify(pattern)));\n    } else {\n        if (!(0, _micromatch).makeRe(pattern.hostname).test(url.hostname)) {\n            return false;\n        }\n    }\n    var _pathname;\n    if (!(0, _micromatch).makeRe((_pathname = pattern.pathname) != null ? _pathname : \"**\").test(url.pathname)) {\n        return false;\n    }\n    return true;\n}\nfunction hasMatch(domains, remotePatterns, url) {\n    return domains.some((domain)=>url.hostname === domain) || remotePatterns.some((p)=>matchRemotePattern(p, url));\n} //# sourceMappingURL=match-remote-pattern.js.map\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvbWF0Y2gtcmVtb3RlLXBhdHRlcm4uanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPLElBQUk7QUFDZixDQUFDLEVBQUM7QUFDRkQsMEJBQTBCLEdBQUdFO0FBQzdCRixnQkFBZ0IsR0FBR0c7QUFDbkIsSUFBSUMsY0FBY0MsbUJBQU9BLENBQUMsNEZBQStCO0FBQ3pELFNBQVNILG1CQUFtQkksT0FBTyxFQUFFQyxHQUFHLEVBQUU7SUFDdEMsSUFBSUQsUUFBUUUsUUFBUSxLQUFLQyxXQUFXO1FBQ2hDLE1BQU1DLGNBQWNILElBQUlDLFFBQVEsQ0FBQ0csS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUMzQyxJQUFJTCxRQUFRRSxRQUFRLEtBQUtFLGFBQWE7WUFDbEMsT0FBTyxLQUFLO1FBQ2hCLENBQUM7SUFDTCxDQUFDO0lBQ0QsSUFBSUosUUFBUU0sSUFBSSxLQUFLSCxXQUFXO1FBQzVCLElBQUlILFFBQVFNLElBQUksS0FBS0wsSUFBSUssSUFBSSxFQUFFO1lBQzNCLE9BQU8sS0FBSztRQUNoQixDQUFDO0lBQ0wsQ0FBQztJQUNELElBQUlOLFFBQVFPLFFBQVEsS0FBS0osV0FBVztRQUNoQyxNQUFNLElBQUlLLE1BQU0sNkNBQXFFLE9BQXhCQyxLQUFLQyxTQUFTLENBQUNWLFdBQVk7SUFDNUYsT0FBTztRQUNILElBQUksQ0FBQyxDQUFDLEdBQUdGLFdBQVcsRUFBRWEsTUFBTSxDQUFDWCxRQUFRTyxRQUFRLEVBQUVLLElBQUksQ0FBQ1gsSUFBSU0sUUFBUSxHQUFHO1lBQy9ELE9BQU8sS0FBSztRQUNoQixDQUFDO0lBQ0wsQ0FBQztJQUNELElBQUlNO0lBQ0osSUFBSSxDQUFDLENBQUMsR0FBR2YsV0FBVyxFQUFFYSxNQUFNLENBQUMsQ0FBQ0UsWUFBWWIsUUFBUWMsUUFBUSxLQUFLLElBQUksR0FBR0QsWUFBWSxJQUFJLEVBQUVELElBQUksQ0FBQ1gsSUFBSWEsUUFBUSxHQUFHO1FBQ3hHLE9BQU8sS0FBSztJQUNoQixDQUFDO0lBQ0QsT0FBTyxJQUFJO0FBQ2Y7QUFDQSxTQUFTakIsU0FBU2tCLE9BQU8sRUFBRUMsY0FBYyxFQUFFZixHQUFHLEVBQUU7SUFDNUMsT0FBT2MsUUFBUUUsSUFBSSxDQUFDLENBQUNDLFNBQVNqQixJQUFJTSxRQUFRLEtBQUtXLFdBQVdGLGVBQWVDLElBQUksQ0FBQyxDQUFDRSxJQUFJdkIsbUJBQW1CdUIsR0FBR2xCO0FBQzdHLEVBRUEsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9tYXRjaC1yZW1vdGUtcGF0dGVybi5qcz8wYzliIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5tYXRjaFJlbW90ZVBhdHRlcm4gPSBtYXRjaFJlbW90ZVBhdHRlcm47XG5leHBvcnRzLmhhc01hdGNoID0gaGFzTWF0Y2g7XG52YXIgX21pY3JvbWF0Y2ggPSByZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL21pY3JvbWF0Y2hcIik7XG5mdW5jdGlvbiBtYXRjaFJlbW90ZVBhdHRlcm4ocGF0dGVybiwgdXJsKSB7XG4gICAgaWYgKHBhdHRlcm4ucHJvdG9jb2wgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBhY3R1YWxQcm90byA9IHVybC5wcm90b2NvbC5zbGljZSgwLCAtMSk7XG4gICAgICAgIGlmIChwYXR0ZXJuLnByb3RvY29sICE9PSBhY3R1YWxQcm90bykge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChwYXR0ZXJuLnBvcnQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBpZiAocGF0dGVybi5wb3J0ICE9PSB1cmwucG9ydCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChwYXR0ZXJuLmhvc3RuYW1lID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYXR0ZXJuIHNob3VsZCBkZWZpbmUgaG9zdG5hbWUgYnV0IGZvdW5kXFxuJHtKU09OLnN0cmluZ2lmeShwYXR0ZXJuKX1gKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoISgwLCBfbWljcm9tYXRjaCkubWFrZVJlKHBhdHRlcm4uaG9zdG5hbWUpLnRlc3QodXJsLmhvc3RuYW1lKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHZhciBfcGF0aG5hbWU7XG4gICAgaWYgKCEoMCwgX21pY3JvbWF0Y2gpLm1ha2VSZSgoX3BhdGhuYW1lID0gcGF0dGVybi5wYXRobmFtZSkgIT0gbnVsbCA/IF9wYXRobmFtZSA6ICcqKicpLnRlc3QodXJsLnBhdGhuYW1lKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaGFzTWF0Y2goZG9tYWlucywgcmVtb3RlUGF0dGVybnMsIHVybCkge1xuICAgIHJldHVybiBkb21haW5zLnNvbWUoKGRvbWFpbik9PnVybC5ob3N0bmFtZSA9PT0gZG9tYWluKSB8fCByZW1vdGVQYXR0ZXJucy5zb21lKChwKT0+bWF0Y2hSZW1vdGVQYXR0ZXJuKHAsIHVybCkpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXRjaC1yZW1vdGUtcGF0dGVybi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtYXRjaFJlbW90ZVBhdHRlcm4iLCJoYXNNYXRjaCIsIl9taWNyb21hdGNoIiwicmVxdWlyZSIsInBhdHRlcm4iLCJ1cmwiLCJwcm90b2NvbCIsInVuZGVmaW5lZCIsImFjdHVhbFByb3RvIiwic2xpY2UiLCJwb3J0IiwiaG9zdG5hbWUiLCJFcnJvciIsIkpTT04iLCJzdHJpbmdpZnkiLCJtYWtlUmUiLCJ0ZXN0IiwiX3BhdGhuYW1lIiwicGF0aG5hbWUiLCJkb21haW5zIiwicmVtb3RlUGF0dGVybnMiLCJzb21lIiwiZG9tYWluIiwicCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/match-remote-pattern.js\n"));

/***/ }),

/***/ "./src/getData/helpers/constructVideoData.ts":
/*!***************************************************!*\
  !*** ./src/getData/helpers/constructVideoData.ts ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"constructVideoData\": function() { return /* binding */ constructVideoData; }\n/* harmony export */ });\n/* harmony import */ var _getPlaylist__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getPlaylist */ \"./src/getData/helpers/getPlaylist.ts\");\n\nconst constructVideoData = (data, file, enableMovingThumbnail, startAtTime)=>{\n    const { title , mediaid , link , image , duration , pubdate , description , playerID , autostart , mute  } = data;\n    return {\n        videoID: mediaid,\n        playerID,\n        thumbnail: image,\n        mute,\n        title,\n        duration,\n        date: pubdate,\n        publishedAt: pubdate,\n        autostart,\n        playlist: (0,_getPlaylist__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(mediaid, file, enableMovingThumbnail, startAtTime),\n        floating: {\n            dismissible: true,\n            mode: \"notVisible\"\n        },\n        articleInfo: {\n            articleId: 123,\n            articleVerticals: [\n                \"beauty\",\n                \"elle\"\n            ]\n        },\n        b2bInfo: \"\",\n        link: \"\",\n        linkText: \"\",\n        markingText: \"\",\n        hintText: \"\",\n        videoMetaData: {\n            title,\n            description,\n            uploadDate: pubdate,\n            duration,\n            thumbnailUrl: image,\n            contentUrl: \"https://cdn.jwplayer.com/videos/\".concat(mediaid, \"-alAVThkH.mp4\")\n        },\n        durationMinutes: \"0:40\",\n        fullWidth: false,\n        enableShop: false,\n        enableTeaser: false,\n        stillImage: false\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2V0RGF0YS9oZWxwZXJzL2NvbnN0cnVjdFZpZGVvRGF0YS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUN3QztBQUVqQyxNQUFNQyxxQkFBcUIsQ0FBQ0MsTUFBWUMsTUFBY0MsdUJBQWdDQyxjQUEwQztJQUNuSSxNQUFNLEVBQUNDLE1BQUssRUFBRUMsUUFBTyxFQUFFQyxLQUFJLEVBQUVDLE1BQUssRUFBRUMsU0FBUSxFQUFFQyxRQUFPLEVBQUVDLFlBQVcsRUFBRUMsU0FBUSxFQUFFQyxVQUFTLEVBQUVDLEtBQUksRUFBQyxHQUFHYjtJQUNqRyxPQUFPO1FBQ0xjLFNBQVNUO1FBQ1RNO1FBQ0FJLFdBQVdSO1FBQ1hNO1FBQ0FUO1FBQ0FJO1FBQ0FRLE1BQU1QO1FBQ05RLGFBQWFSO1FBQ2JHO1FBQ0FNLFVBQVVwQix3REFBV0EsQ0FBQ08sU0FBU0osTUFBTUMsdUJBQXVCQztRQUM1RGdCLFVBQVU7WUFDUkMsYUFBYSxJQUFJO1lBQ2pCQyxNQUFNO1FBQ1I7UUFDQUMsYUFBYTtZQUNYQyxXQUFXO1lBQ1hDLGtCQUFrQjtnQkFBQztnQkFBVTthQUFPO1FBQ3RDO1FBQ0FDLFNBQVM7UUFDVG5CLE1BQU07UUFDTm9CLFVBQVU7UUFDVkMsYUFBYTtRQUNiQyxVQUFVO1FBQ1ZDLGVBQWU7WUFDYnpCO1lBQ0FNO1lBQ0FvQixZQUFZckI7WUFDWkQ7WUFDQXVCLGNBQWN4QjtZQUNkeUIsWUFBWSxtQ0FBMkMsT0FBUjNCLFNBQVE7UUFDekQ7UUFDQTRCLGlCQUFpQjtRQUNqQkMsV0FBVyxLQUFLO1FBQ2hCQyxZQUFZLEtBQUs7UUFDakJDLGNBQWEsS0FBSztRQUNsQkMsWUFBWSxLQUFLO0lBQ25CO0FBQ0YsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2V0RGF0YS9oZWxwZXJzL2NvbnN0cnVjdFZpZGVvRGF0YS50cz83YjFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRlbnRWaWRlb0RhdGEgfSBmcm9tIFwiLi4vLi4vLi4vY29tcG9uZW50cy9Kd1ZpZGVvL3R5cGVzL3ZpZGVvXCI7XG5pbXBvcnQgZ2V0UGxheWxpc3QgZnJvbSBcIi4vZ2V0UGxheWxpc3RcIjtcblxuZXhwb3J0IGNvbnN0IGNvbnN0cnVjdFZpZGVvRGF0YSA9IChkYXRhIDogYW55LCBmaWxlOiBzdHJpbmcsIGVuYWJsZU1vdmluZ1RodW1ibmFpbDogYm9vbGVhbiwgc3RhcnRBdFRpbWU6IHN0cmluZyk6IENvbnRlbnRWaWRlb0RhdGEgPT4ge1xuICAgIGNvbnN0IHt0aXRsZSwgbWVkaWFpZCwgbGluaywgaW1hZ2UsIGR1cmF0aW9uLCBwdWJkYXRlLCBkZXNjcmlwdGlvbiwgcGxheWVySUQsIGF1dG9zdGFydCwgbXV0ZX0gPSBkYXRhO1xuICAgIHJldHVybiB7XG4gICAgICB2aWRlb0lEOiBtZWRpYWlkLFxuICAgICAgcGxheWVySUQsXG4gICAgICB0aHVtYm5haWw6IGltYWdlLFxuICAgICAgbXV0ZSwgXG4gICAgICB0aXRsZSxcbiAgICAgIGR1cmF0aW9uLFxuICAgICAgZGF0ZTogcHViZGF0ZSxcbiAgICAgIHB1Ymxpc2hlZEF0OiBwdWJkYXRlLFxuICAgICAgYXV0b3N0YXJ0LFxuICAgICAgcGxheWxpc3Q6IGdldFBsYXlsaXN0KG1lZGlhaWQsIGZpbGUsIGVuYWJsZU1vdmluZ1RodW1ibmFpbCwgc3RhcnRBdFRpbWUpLFxuICAgICAgZmxvYXRpbmc6IHtcbiAgICAgICAgZGlzbWlzc2libGU6IHRydWUsXG4gICAgICAgIG1vZGU6ICdub3RWaXNpYmxlJ1xuICAgICAgfSxcbiAgICAgIGFydGljbGVJbmZvOiB7XG4gICAgICAgIGFydGljbGVJZDogMTIzLFxuICAgICAgICBhcnRpY2xlVmVydGljYWxzOiBbJ2JlYXV0eScsICdlbGxlJ11cbiAgICAgIH0sXG4gICAgICBiMmJJbmZvOiAnJyxcbiAgICAgIGxpbms6ICcnLFxuICAgICAgbGlua1RleHQ6ICcnLFxuICAgICAgbWFya2luZ1RleHQ6ICcnLFxuICAgICAgaGludFRleHQ6ICcnLFxuICAgICAgdmlkZW9NZXRhRGF0YToge1xuICAgICAgICB0aXRsZSxcbiAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgIHVwbG9hZERhdGU6IHB1YmRhdGUsXG4gICAgICAgIGR1cmF0aW9uLFxuICAgICAgICB0aHVtYm5haWxVcmw6IGltYWdlLFxuICAgICAgICBjb250ZW50VXJsOiBgaHR0cHM6Ly9jZG4uandwbGF5ZXIuY29tL3ZpZGVvcy8ke21lZGlhaWR9LWFsQVZUaGtILm1wNGAsXG4gICAgICB9LFxuICAgICAgZHVyYXRpb25NaW51dGVzOiAnMDo0MCcsXG4gICAgICBmdWxsV2lkdGg6IGZhbHNlLFxuICAgICAgZW5hYmxlU2hvcDogZmFsc2UsXG4gICAgICBlbmFibGVUZWFzZXI6ZmFsc2UsXG4gICAgICBzdGlsbEltYWdlOiBmYWxzZVxuICAgIH1cbiAgfSJdLCJuYW1lcyI6WyJnZXRQbGF5bGlzdCIsImNvbnN0cnVjdFZpZGVvRGF0YSIsImRhdGEiLCJmaWxlIiwiZW5hYmxlTW92aW5nVGh1bWJuYWlsIiwic3RhcnRBdFRpbWUiLCJ0aXRsZSIsIm1lZGlhaWQiLCJsaW5rIiwiaW1hZ2UiLCJkdXJhdGlvbiIsInB1YmRhdGUiLCJkZXNjcmlwdGlvbiIsInBsYXllcklEIiwiYXV0b3N0YXJ0IiwibXV0ZSIsInZpZGVvSUQiLCJ0aHVtYm5haWwiLCJkYXRlIiwicHVibGlzaGVkQXQiLCJwbGF5bGlzdCIsImZsb2F0aW5nIiwiZGlzbWlzc2libGUiLCJtb2RlIiwiYXJ0aWNsZUluZm8iLCJhcnRpY2xlSWQiLCJhcnRpY2xlVmVydGljYWxzIiwiYjJiSW5mbyIsImxpbmtUZXh0IiwibWFya2luZ1RleHQiLCJoaW50VGV4dCIsInZpZGVvTWV0YURhdGEiLCJ1cGxvYWREYXRlIiwidGh1bWJuYWlsVXJsIiwiY29udGVudFVybCIsImR1cmF0aW9uTWludXRlcyIsImZ1bGxXaWR0aCIsImVuYWJsZVNob3AiLCJlbmFibGVUZWFzZXIiLCJzdGlsbEltYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/getData/helpers/constructVideoData.ts\n"));

/***/ }),

/***/ "./src/getData/helpers/convertMinToSec.ts":
/*!************************************************!*\
  !*** ./src/getData/helpers/convertMinToSec.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"convertMinToSec\": function() { return /* binding */ convertMinToSec; }\n/* harmony export */ });\nconst convertMinToSec = function() {\n    let timeInMin = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n    if (!(timeInMin === null || timeInMin === void 0 ? void 0 : timeInMin.length)) {\n        return 0;\n    }\n    //If time is being input as 1:01, 1,01 or 1.01, it should work. \n    const formattedTimeInMin = timeInMin.replace(/[,|.|:]/g, \":\");\n    const timeList = formattedTimeInMin.split(\":\");\n    let hours = \"0\", minutes = \"0\", seconds = \"0\";\n    if (timeList.length === 3) {\n        [hours, minutes, seconds] = timeList;\n    } else if (timeList.length === 2) {\n        [minutes, seconds] = timeList;\n    } else {\n        [seconds] = timeList;\n    }\n    //Restrict to 2 digits for sec.\n    seconds = (seconds || \"0\").slice(0, 2);\n    return parseInt(hours) * 3600 + parseInt(minutes) * 60 + parseInt(seconds);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2V0RGF0YS9oZWxwZXJzL2NvbnZlcnRNaW5Ub1NlYy50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sTUFBTUEsa0JBQWtCLFdBQW9CO1FBQW5CQyw2RUFBWTtJQUN4QyxJQUFHLENBQUNBLENBQUFBLHNCQUFBQSx1QkFBQUEsS0FBQUEsSUFBQUEsVUFBV0MsTUFBTSxHQUFDO1FBQ3BCLE9BQU87SUFDVCxDQUFDO0lBRUQsZ0VBQWdFO0lBQ2hFLE1BQU1DLHFCQUFxQkYsVUFBVUcsT0FBTyxDQUFDLFlBQVk7SUFFekQsTUFBTUMsV0FBV0YsbUJBQW1CRyxLQUFLLENBQUM7SUFFMUMsSUFBSUMsUUFBUSxLQUFLQyxVQUFVLEtBQUtDLFVBQVU7SUFFMUMsSUFBR0osU0FBU0gsTUFBTSxLQUFLLEdBQUU7UUFDdkIsQ0FBQ0ssT0FBT0MsU0FBU0MsUUFBUSxHQUFHSjtJQUM5QixPQUFNLElBQUdBLFNBQVNILE1BQU0sS0FBSyxHQUFFO1FBQzdCLENBQUNNLFNBQVNDLFFBQVEsR0FBR0o7SUFDdkIsT0FBSztRQUNILENBQUNJLFFBQVEsR0FBR0o7SUFDZCxDQUFDO0lBRUQsK0JBQStCO0lBQy9CSSxVQUFVLENBQUNBLFdBQVcsR0FBRSxFQUFHQyxLQUFLLENBQUMsR0FBRTtJQUVuQyxPQUFPLFNBQVVILFNBQVMsT0FBU0ksU0FBU0gsV0FBVyxLQUFNRyxTQUFTRjtBQUN4RSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9nZXREYXRhL2hlbHBlcnMvY29udmVydE1pblRvU2VjLnRzPzA3MmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGNvbnZlcnRNaW5Ub1NlYyA9ICh0aW1lSW5NaW4gPSAnJykgPT4ge1xuICAgIGlmKCF0aW1lSW5NaW4/Lmxlbmd0aCl7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG4gIFxuICAgIC8vSWYgdGltZSBpcyBiZWluZyBpbnB1dCBhcyAxOjAxLCAxLDAxIG9yIDEuMDEsIGl0IHNob3VsZCB3b3JrLiBcbiAgICBjb25zdCBmb3JtYXR0ZWRUaW1lSW5NaW4gPSB0aW1lSW5NaW4ucmVwbGFjZSgvWyx8Lnw6XS9nLCAnOicpO1xuICBcbiAgICBjb25zdCB0aW1lTGlzdCA9IGZvcm1hdHRlZFRpbWVJbk1pbi5zcGxpdCgnOicpO1xuICAgIFxuICAgIGxldCBob3VycyA9ICcwJywgbWludXRlcyA9ICcwJywgc2Vjb25kcyA9ICcwJztcbiAgXG4gICAgaWYodGltZUxpc3QubGVuZ3RoID09PSAzKXtcbiAgICAgIFtob3VycywgbWludXRlcywgc2Vjb25kc10gPSB0aW1lTGlzdDtcbiAgICB9ZWxzZSBpZih0aW1lTGlzdC5sZW5ndGggPT09IDIpe1xuICAgICAgW21pbnV0ZXMsIHNlY29uZHNdID0gdGltZUxpc3Q7XG4gICAgfWVsc2V7XG4gICAgICBbc2Vjb25kc10gPSB0aW1lTGlzdDtcbiAgICB9XG4gIFxuICAgIC8vUmVzdHJpY3QgdG8gMiBkaWdpdHMgZm9yIHNlYy5cbiAgICBzZWNvbmRzID0gKHNlY29uZHMgfHwgJzAnKS5zbGljZSgwLDIpO1xuICBcbiAgICByZXR1cm4gKHBhcnNlSW50KGhvdXJzKSAqIDM2MDApICsgKHBhcnNlSW50KG1pbnV0ZXMpICogNjApICsgcGFyc2VJbnQoc2Vjb25kcyk7XG4gIH1cbiAgIl0sIm5hbWVzIjpbImNvbnZlcnRNaW5Ub1NlYyIsInRpbWVJbk1pbiIsImxlbmd0aCIsImZvcm1hdHRlZFRpbWVJbk1pbiIsInJlcGxhY2UiLCJ0aW1lTGlzdCIsInNwbGl0IiwiaG91cnMiLCJtaW51dGVzIiwic2Vjb25kcyIsInNsaWNlIiwicGFyc2VJbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/getData/helpers/convertMinToSec.ts\n"));

/***/ }),

/***/ "./src/getData/helpers/getPlaylist.ts":
/*!********************************************!*\
  !*** ./src/getData/helpers/getPlaylist.ts ***!
  \********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ getPlaylist; }\n/* harmony export */ });\n/* harmony import */ var _convertMinToSec__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./convertMinToSec */ \"./src/getData/helpers/convertMinToSec.ts\");\n\nconst updateThumbnailToConfig = function(mediaID) {\n    let file = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", enableMovingThumbnail = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, startAtTime = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"\";\n    const mediaFile = \"https://cdn.jwplayer.com/v2/media/\".concat(mediaID, \"/poster\");\n    const startAtTimeInSeconds = (0,_convertMinToSec__WEBPACK_IMPORTED_MODULE_0__.convertMinToSec)(startAtTime);\n    const baseVideoConfig = [\n        {\n            file,\n            mediaid: mediaID,\n            image: \"\".concat(mediaFile, \".jpg?width=640\"),\n            starttime: startAtTimeInSeconds\n        }\n    ];\n    return enableMovingThumbnail ? [\n        {\n            ...baseVideoConfig[0],\n            images: [\n                {\n                    src: \"\".concat(mediaFile, \".mp4?width=320\"),\n                    width: 320,\n                    type: \"video/mp4\"\n                },\n                {\n                    src: \"\".concat(mediaFile, \".mp4?width=640\"),\n                    width: 640,\n                    type: \"video/mp4\"\n                }\n            ]\n        }\n    ] : baseVideoConfig;\n};\nfunction getPlaylist(mediaID) {\n    let file = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"\", enableMovingThumbnail = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, startAtTime = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : \"\";\n    return updateThumbnailToConfig(mediaID, file, enableMovingThumbnail, startAtTime);\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2V0RGF0YS9oZWxwZXJzL2dldFBsYXlsaXN0LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9EO0FBRXBELE1BQU1DLDBCQUEwQixTQUFDQyxTQUFnRjtRQUEvREMsd0VBQU8sSUFBSUMseUZBQXdCLEtBQUssRUFBRUMsK0VBQWM7SUFDdEcsTUFBTUMsWUFBWSxxQ0FBNkMsT0FBUkosU0FBUTtJQUMvRCxNQUFNSyx1QkFBdUJQLGlFQUFlQSxDQUFDSztJQUU3QyxNQUFNRyxrQkFBbUI7UUFDdkI7WUFDRUw7WUFDQU0sU0FBU1A7WUFDVFEsT0FBTyxHQUFhLE9BQVZKLFdBQVU7WUFDcEJLLFdBQVdKO1FBQ2I7S0FDRDtJQUVELE9BQU9ILHdCQUF3QjtRQUFDO1lBQzlCLEdBQUdJLGVBQWUsQ0FBQyxFQUFFO1lBQ3JCSSxRQUFRO2dCQUNOO29CQUNFQyxLQUFLLEdBQWEsT0FBVlAsV0FBVTtvQkFDbEJRLE9BQU87b0JBQ1BDLE1BQU07Z0JBQ1I7Z0JBQ0E7b0JBQ0VGLEtBQUssR0FBYSxPQUFWUCxXQUFVO29CQUNsQlEsT0FBTztvQkFDUEMsTUFBTTtnQkFDUjthQUNEO1FBQ0g7S0FBRSxHQUFHUCxlQUFlO0FBQ3hCO0FBRWUsU0FBU1EsWUFBWWQsT0FBZSxFQUE0RDtRQUExREMsT0FBQUEsaUVBQUssRUFBRSxFQUFFQyx3QkFBQUEsaUVBQXdCLEtBQUssRUFBRUMsY0FBQUEsaUVBQWMsRUFBRTtJQUN6RyxPQUFPSix3QkFBd0JDLFNBQVNDLE1BQU1DLHVCQUF1QkM7QUFDekUsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2V0RGF0YS9oZWxwZXJzL2dldFBsYXlsaXN0LnRzPzdhNDciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29udmVydE1pblRvU2VjIH0gZnJvbSBcIi4vY29udmVydE1pblRvU2VjXCI7XG5cbmNvbnN0IHVwZGF0ZVRodW1ibmFpbFRvQ29uZmlnID0gKG1lZGlhSUQ6IHN0cmluZywgZmlsZSA9ICcnLCBlbmFibGVNb3ZpbmdUaHVtYm5haWwgPSBmYWxzZSwgc3RhcnRBdFRpbWUgPSAnJykgPT4ge1xuICAgIGNvbnN0IG1lZGlhRmlsZSA9IGBodHRwczovL2Nkbi5qd3BsYXllci5jb20vdjIvbWVkaWEvJHttZWRpYUlEfS9wb3N0ZXJgO1xuICAgIGNvbnN0IHN0YXJ0QXRUaW1lSW5TZWNvbmRzID0gY29udmVydE1pblRvU2VjKHN0YXJ0QXRUaW1lKTtcbiAgXG4gICAgY29uc3QgYmFzZVZpZGVvQ29uZmlnID0gIFtcbiAgICAgIHtcbiAgICAgICAgZmlsZSxcbiAgICAgICAgbWVkaWFpZDogbWVkaWFJRCxcbiAgICAgICAgaW1hZ2U6IGAke21lZGlhRmlsZX0uanBnP3dpZHRoPTY0MGAsXG4gICAgICAgIHN0YXJ0dGltZTogc3RhcnRBdFRpbWVJblNlY29uZHMgXG4gICAgICB9LFxuICAgIF07XG4gIFxuICAgIHJldHVybiBlbmFibGVNb3ZpbmdUaHVtYm5haWwgPyBbe1xuICAgICAgLi4uYmFzZVZpZGVvQ29uZmlnWzBdLFxuICAgICAgaW1hZ2VzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBzcmM6IGAke21lZGlhRmlsZX0ubXA0P3dpZHRoPTMyMGAsXG4gICAgICAgICAgd2lkdGg6IDMyMCxcbiAgICAgICAgICB0eXBlOiAndmlkZW8vbXA0JyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHNyYzogYCR7bWVkaWFGaWxlfS5tcDQ/d2lkdGg9NjQwYCxcbiAgICAgICAgICB3aWR0aDogNjQwLFxuICAgICAgICAgIHR5cGU6ICd2aWRlby9tcDQnLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9XSA6IGJhc2VWaWRlb0NvbmZpZztcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldFBsYXlsaXN0KG1lZGlhSUQ6IHN0cmluZywgZmlsZT0nJywgZW5hYmxlTW92aW5nVGh1bWJuYWlsID0gZmFsc2UsIHN0YXJ0QXRUaW1lID0gJycpIHtcbiAgICByZXR1cm4gdXBkYXRlVGh1bWJuYWlsVG9Db25maWcobWVkaWFJRCwgZmlsZSwgZW5hYmxlTW92aW5nVGh1bWJuYWlsLCBzdGFydEF0VGltZSk7XG59Il0sIm5hbWVzIjpbImNvbnZlcnRNaW5Ub1NlYyIsInVwZGF0ZVRodW1ibmFpbFRvQ29uZmlnIiwibWVkaWFJRCIsImZpbGUiLCJlbmFibGVNb3ZpbmdUaHVtYm5haWwiLCJzdGFydEF0VGltZSIsIm1lZGlhRmlsZSIsInN0YXJ0QXRUaW1lSW5TZWNvbmRzIiwiYmFzZVZpZGVvQ29uZmlnIiwibWVkaWFpZCIsImltYWdlIiwic3RhcnR0aW1lIiwiaW1hZ2VzIiwic3JjIiwid2lkdGgiLCJ0eXBlIiwiZ2V0UGxheWxpc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/getData/helpers/getPlaylist.ts\n"));

/***/ }),

/***/ "./src/getData/index.ts":
/*!******************************!*\
  !*** ./src/getData/index.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getMediaID\": function() { return /* binding */ getMediaID; },\n/* harmony export */   \"getVideoData\": function() { return /* binding */ getVideoData; }\n/* harmony export */ });\n/* harmony import */ var _helpers_constructVideoData__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/constructVideoData */ \"./src/getData/helpers/constructVideoData.ts\");\n\n//these are user inputs. Modify these\nconst ENABLE_MOVING_THUMBNAIL = false;\nconst START_AT_TIMESTAMP = \"\";\nconst AUTOSTART = \"viewable\";\nconst MUTE = false;\nconst PLAYER_ID = \"nxnAskAP\";\nconst MEDIA_ID = \"lFbcRC8Q\";\nconst getMediaID = ()=>MEDIA_ID;\nconst getVideoData = (data, file)=>{\n    const modifiedData = {\n        ...data[0],\n        autostart: AUTOSTART,\n        mute: MUTE,\n        playerID: PLAYER_ID\n    };\n    return (0,_helpers_constructVideoData__WEBPACK_IMPORTED_MODULE_0__.constructVideoData)(modifiedData, file, ENABLE_MOVING_THUMBNAIL, START_AT_TIMESTAMP);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2V0RGF0YS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDa0U7QUFFbEUscUNBQXFDO0FBQ3JDLE1BQU1DLDBCQUEwQixLQUFLO0FBQ3JDLE1BQU1DLHFCQUFxQjtBQUMzQixNQUFNQyxZQUFZO0FBQ2xCLE1BQU1DLE9BQU8sS0FBSztBQUNsQixNQUFNQyxZQUFZO0FBQ2xCLE1BQU1DLFdBQVc7QUFHVixNQUFNQyxhQUFhLElBQWFELFNBQVM7QUFFekMsTUFBTUUsZUFBZSxDQUFDQyxNQUFXQyxPQUFpQjtJQUN2RCxNQUFNQyxlQUFlO1FBQ25CLEdBQUdGLElBQUksQ0FBQyxFQUFFO1FBQ1ZHLFdBQVdUO1FBQ1hVLE1BQU1UO1FBQ05VLFVBQVdUO0lBQ2I7SUFDQSxPQUFPTCwrRUFBa0JBLENBQUNXLGNBQWNELE1BQU1ULHlCQUF5QkM7QUFDekUsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZ2V0RGF0YS9pbmRleC50cz8xYzc2Il0sInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgY29uc3RydWN0VmlkZW9EYXRhIH0gZnJvbSBcIi4vaGVscGVycy9jb25zdHJ1Y3RWaWRlb0RhdGFcIjtcblxuLy90aGVzZSBhcmUgdXNlciBpbnB1dHMuIE1vZGlmeSB0aGVzZVxuY29uc3QgRU5BQkxFX01PVklOR19USFVNQk5BSUwgPSBmYWxzZTtcbmNvbnN0IFNUQVJUX0FUX1RJTUVTVEFNUCA9ICcnO1xuY29uc3QgQVVUT1NUQVJUID0gJ3ZpZXdhYmxlJztcbmNvbnN0IE1VVEUgPSBmYWxzZTtcbmNvbnN0IFBMQVlFUl9JRCA9ICdueG5Bc2tBUCc7XG5jb25zdCBNRURJQV9JRCA9ICdsRmJjUkM4USc7XG5cblxuZXhwb3J0IGNvbnN0IGdldE1lZGlhSUQgPSAoKTpzdHJpbmcgPT4gTUVESUFfSUQ7XG5cbmV4cG9ydCBjb25zdCBnZXRWaWRlb0RhdGEgPSAoZGF0YTogYW55LCBmaWxlOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgbW9kaWZpZWREYXRhID0ge1xuICAgIC4uLmRhdGFbMF0sXG4gICAgYXV0b3N0YXJ0OiBBVVRPU1RBUlQsXG4gICAgbXV0ZTogTVVURSxcbiAgICBwbGF5ZXJJRCA6IFBMQVlFUl9JRFxuICB9XG4gIHJldHVybiBjb25zdHJ1Y3RWaWRlb0RhdGEobW9kaWZpZWREYXRhLCBmaWxlLCBFTkFCTEVfTU9WSU5HX1RIVU1CTkFJTCwgU1RBUlRfQVRfVElNRVNUQU1QKTtcbn1cbiJdLCJuYW1lcyI6WyJjb25zdHJ1Y3RWaWRlb0RhdGEiLCJFTkFCTEVfTU9WSU5HX1RIVU1CTkFJTCIsIlNUQVJUX0FUX1RJTUVTVEFNUCIsIkFVVE9TVEFSVCIsIk1VVEUiLCJQTEFZRVJfSUQiLCJNRURJQV9JRCIsImdldE1lZGlhSUQiLCJnZXRWaWRlb0RhdGEiLCJkYXRhIiwiZmlsZSIsIm1vZGlmaWVkRGF0YSIsImF1dG9zdGFydCIsIm11dGUiLCJwbGF5ZXJJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/getData/index.ts\n"));

/***/ }),

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__N_SSP\": function() { return /* binding */ __N_SSP; },\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_JwVideo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/JwVideo */ \"./components/JwVideo/index.tsx\");\n/* harmony import */ var _getData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/getData */ \"./src/getData/index.ts\");\n\n\n\n\nvar __N_SSP = true;\nfunction Home(param) {\n    let { data , file  } = param;\n    if (data) {\n        const videoData = (0,_getData__WEBPACK_IMPORTED_MODULE_3__.getVideoData)(data, file);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                            children: \"JW Performance testing\"\n                        }, void 0, false, {\n                            fileName: \"/Users/hina01/se-jw-next-app/src/pages/index.tsx\",\n                            lineNumber: 36,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                            name: \"description\",\n                            content: \"Generated by create next app\"\n                        }, void 0, false, {\n                            fileName: \"/Users/hina01/se-jw-next-app/src/pages/index.tsx\",\n                            lineNumber: 37,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                            name: \"viewport\",\n                            content: \"width=device-width, initial-scale=1\"\n                        }, void 0, false, {\n                            fileName: \"/Users/hina01/se-jw-next-app/src/pages/index.tsx\",\n                            lineNumber: 38,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                            rel: \"icon\",\n                            href: \"/favicon.ico\"\n                        }, void 0, false, {\n                            fileName: \"/Users/hina01/se-jw-next-app/src/pages/index.tsx\",\n                            lineNumber: 39,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/hina01/se-jw-next-app/src/pages/index.tsx\",\n                    lineNumber: 35,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        height: \"350px\",\n                        width: \"620px\"\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_JwVideo__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        data: videoData,\n                        type: \"\",\n                        meta: \"\",\n                        descendants: \"\"\n                    }, void 0, false, {\n                        fileName: \"/Users/hina01/se-jw-next-app/src/pages/index.tsx\",\n                        lineNumber: 43,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/hina01/se-jw-next-app/src/pages/index.tsx\",\n                    lineNumber: 42,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true);\n    }\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE0QjtBQUN5QjtBQUNBOztBQTJCdEMsU0FBU0csS0FBSyxLQUFxQyxFQUFFO1FBQXZDLEVBQUNDLEtBQUksRUFBRUMsS0FBSSxFQUEwQixHQUFyQztJQUMzQixJQUFHRCxNQUFLO1FBQ04sTUFBTUUsWUFBWUosc0RBQVlBLENBQUNFLE1BQU1DO1FBQ3JDLHFCQUNFOzs4QkFDRSw4REFBQ0wsa0RBQUlBOztzQ0FDSCw4REFBQ087c0NBQU07Ozs7OztzQ0FDUCw4REFBQ0M7NEJBQUtDLE1BQUs7NEJBQWNDLFNBQVE7Ozs7OztzQ0FDakMsOERBQUNGOzRCQUFLQyxNQUFLOzRCQUFXQyxTQUFROzs7Ozs7c0NBQzlCLDhEQUFDQzs0QkFBS0MsS0FBSTs0QkFBT0MsTUFBSzs7Ozs7Ozs7Ozs7OzhCQUd4Qiw4REFBQ0M7b0JBQUlDLE9BQU87d0JBQUNDLFFBQVE7d0JBQVNDLE9BQU87b0JBQU87OEJBQzFDLDRFQUFDaEIsMkRBQWNBO3dCQUFDRyxNQUFNRTt3QkFBV1ksTUFBTTt3QkFBSVYsTUFBTTt3QkFBSVcsYUFBYTs7Ozs7Ozs7Ozs7OztJQUkxRSxDQUFDO0FBRUgsQ0FBQztLQW5CdUJoQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcGFnZXMvaW5kZXgudHN4PzE5YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEhlYWQgZnJvbSAnbmV4dC9oZWFkJ1xuaW1wb3J0IENvbnRlbnRKd1ZpZGVvIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvSndWaWRlbydcbmltcG9ydCB7IGdldE1lZGlhSUQsIGdldFZpZGVvRGF0YSB9IGZyb20gJ0AvZ2V0RGF0YSc7XG5cbi8vVXBkYXRlIHRoaXMgdG8gdXBkYXRlIHRoZSB2aWRlb1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U2VydmVyU2lkZVByb3BzKCkge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9jZG4uandwbGF5ZXIuY29tL3YyL21lZGlhLyR7Z2V0TWVkaWFJRCgpfWApLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZygnUGxlYXNlIGNoZWNrIG1lZGlhSUQnKSk7XG4gIGNvbnN0IHtwbGF5bGlzdH0gPSBhd2FpdCByZXM/Lmpzb24oKTtcblxuICBsZXQgZmlsZVNvdXJjZTsgXG4gIGNvbnN0IGZpbGVSZXNvbHV0aW9uID0gWycxMDgwcCcsICc3MjBwJywgJzU0MHAnLCAnMzYwcCcsICcyNzBwJywgJzE4MHAnXVxuXG4gIGZvciAoY29uc3QgcmVzb2x1dGlvbiBvZiBmaWxlUmVzb2x1dGlvbikge1xuICAgIGZpbGVTb3VyY2UgPSBwbGF5bGlzdFswXS5zb3VyY2VzLmZpbmQoKHNvdXJjZTogYW55KSA9PiBzb3VyY2UubGFiZWwgPT09IHJlc29sdXRpb24gJiYgc291cmNlLnR5cGUuaW5jbHVkZXMoJ3ZpZGVvJykpO1xuICAgIGlmIChmaWxlU291cmNlKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4ge1xuICAgcHJvcHM6IHtcbiAgICBkYXRhOiBwbGF5bGlzdCB8fCBudWxsLFxuICAgIGZpbGU6IGZpbGVTb3VyY2U/LmZpbGVcbiAgIH1cbiAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoe2RhdGEsIGZpbGV9OntkYXRhOiBhbnksIGZpbGU6c3RyaW5nfSkge1xuICBpZihkYXRhKXtcbiAgICBjb25zdCB2aWRlb0RhdGEgPSBnZXRWaWRlb0RhdGEoZGF0YSwgZmlsZSlcbiAgICByZXR1cm4gKFxuICAgICAgPD5cbiAgICAgICAgPEhlYWQ+XG4gICAgICAgICAgPHRpdGxlPkpXIFBlcmZvcm1hbmNlIHRlc3Rpbmc8L3RpdGxlPlxuICAgICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCJHZW5lcmF0ZWQgYnkgY3JlYXRlIG5leHQgYXBwXCIgLz5cbiAgICAgICAgICA8bWV0YSBuYW1lPVwidmlld3BvcnRcIiBjb250ZW50PVwid2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTFcIiAvPlxuICAgICAgICAgIDxsaW5rIHJlbD1cImljb25cIiBocmVmPVwiL2Zhdmljb24uaWNvXCIgLz5cbiAgICAgICAgPC9IZWFkPlxuXG4gICAgICAgIDxkaXYgc3R5bGU9e3toZWlnaHQ6ICczNTBweCcsIHdpZHRoOiAnNjIwcHgnfX0+XG4gICAgICAgICAgPENvbnRlbnRKd1ZpZGVvIGRhdGE9e3ZpZGVvRGF0YX0gdHlwZT17Jyd9IG1ldGE9eycnfSBkZXNjZW5kYW50cz17Jyd9IC8+IFxuICAgICAgICA8L2Rpdj4gICAgICBcbiAgICAgIDwvPlxuICAgIClcbiAgfVxuICBcbn1cbiJdLCJuYW1lcyI6WyJIZWFkIiwiQ29udGVudEp3VmlkZW8iLCJnZXRWaWRlb0RhdGEiLCJIb21lIiwiZGF0YSIsImZpbGUiLCJ2aWRlb0RhdGEiLCJ0aXRsZSIsIm1ldGEiLCJuYW1lIiwiY29udGVudCIsImxpbmsiLCJyZWwiLCJocmVmIiwiZGl2Iiwic3R5bGUiLCJoZWlnaHQiLCJ3aWR0aCIsInR5cGUiLCJkZXNjZW5kYW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/micromatch/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/micromatch/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n(()=>{\"use strict\";var e={333:(e,t,r)=>{const n=r(137);const u=r(179);const s=r(13);const o=r(719);const braces=(e,t={})=>{let r=[];if(Array.isArray(e)){for(let n of e){let e=braces.create(n,t);if(Array.isArray(e)){r.push(...e)}else{r.push(e)}}}else{r=[].concat(braces.create(e,t))}if(t&&t.expand===true&&t.nodupes===true){r=[...new Set(r)]}return r};braces.parse=(e,t={})=>o(e,t);braces.stringify=(e,t={})=>{if(typeof e===\"string\"){return n(braces.parse(e,t),t)}return n(e,t)};braces.compile=(e,t={})=>{if(typeof e===\"string\"){e=braces.parse(e,t)}return u(e,t)};braces.expand=(e,t={})=>{if(typeof e===\"string\"){e=braces.parse(e,t)}let r=s(e,t);if(t.noempty===true){r=r.filter(Boolean)}if(t.nodupes===true){r=[...new Set(r)]}return r};braces.create=(e,t={})=>{if(e===\"\"||e.length<3){return[e]}return t.expand!==true?braces.compile(e,t):braces.expand(e,t)};e.exports=braces},179:(e,t,r)=>{const n=r(783);const u=r(617);const compile=(e,t={})=>{let walk=(e,r={})=>{let s=u.isInvalidBrace(r);let o=e.invalid===true&&t.escapeInvalid===true;let i=s===true||o===true;let a=t.escapeInvalid===true?\"\\\\\":\"\";let l=\"\";if(e.isOpen===true){return a+e.value}if(e.isClose===true){return a+e.value}if(e.type===\"open\"){return i?a+e.value:\"(\"}if(e.type===\"close\"){return i?a+e.value:\")\"}if(e.type===\"comma\"){return e.prev.type===\"comma\"?\"\":i?e.value:\"|\"}if(e.value){return e.value}if(e.nodes&&e.ranges>0){let r=u.reduce(e.nodes);let s=n(...r,{...t,wrap:false,toRegex:true});if(s.length!==0){return r.length>1&&s.length>1?`(${s})`:s}}if(e.nodes){for(let t of e.nodes){l+=walk(t,e)}}return l};return walk(e)};e.exports=compile},457:e=>{e.exports={MAX_LENGTH:1024*64,CHAR_0:\"0\",CHAR_9:\"9\",CHAR_UPPERCASE_A:\"A\",CHAR_LOWERCASE_A:\"a\",CHAR_UPPERCASE_Z:\"Z\",CHAR_LOWERCASE_Z:\"z\",CHAR_LEFT_PARENTHESES:\"(\",CHAR_RIGHT_PARENTHESES:\")\",CHAR_ASTERISK:\"*\",CHAR_AMPERSAND:\"&\",CHAR_AT:\"@\",CHAR_BACKSLASH:\"\\\\\",CHAR_BACKTICK:\"`\",CHAR_CARRIAGE_RETURN:\"\\r\",CHAR_CIRCUMFLEX_ACCENT:\"^\",CHAR_COLON:\":\",CHAR_COMMA:\",\",CHAR_DOLLAR:\"$\",CHAR_DOT:\".\",CHAR_DOUBLE_QUOTE:'\"',CHAR_EQUAL:\"=\",CHAR_EXCLAMATION_MARK:\"!\",CHAR_FORM_FEED:\"\\f\",CHAR_FORWARD_SLASH:\"/\",CHAR_HASH:\"#\",CHAR_HYPHEN_MINUS:\"-\",CHAR_LEFT_ANGLE_BRACKET:\"<\",CHAR_LEFT_CURLY_BRACE:\"{\",CHAR_LEFT_SQUARE_BRACKET:\"[\",CHAR_LINE_FEED:\"\\n\",CHAR_NO_BREAK_SPACE:\" \",CHAR_PERCENT:\"%\",CHAR_PLUS:\"+\",CHAR_QUESTION_MARK:\"?\",CHAR_RIGHT_ANGLE_BRACKET:\">\",CHAR_RIGHT_CURLY_BRACE:\"}\",CHAR_RIGHT_SQUARE_BRACKET:\"]\",CHAR_SEMICOLON:\";\",CHAR_SINGLE_QUOTE:\"'\",CHAR_SPACE:\" \",CHAR_TAB:\"\\t\",CHAR_UNDERSCORE:\"_\",CHAR_VERTICAL_LINE:\"|\",CHAR_ZERO_WIDTH_NOBREAK_SPACE:\"\\ufeff\"}},13:(e,t,r)=>{const n=r(783);const u=r(137);const s=r(617);const append=(e=\"\",t=\"\",r=false)=>{let n=[];e=[].concat(e);t=[].concat(t);if(!t.length)return e;if(!e.length){return r?s.flatten(t).map((e=>`{${e}}`)):t}for(let u of e){if(Array.isArray(u)){for(let e of u){n.push(append(e,t,r))}}else{for(let e of t){if(r===true&&typeof e===\"string\")e=`{${e}}`;n.push(Array.isArray(e)?append(u,e,r):u+e)}}}return s.flatten(n)};const expand=(e,t={})=>{let r=t.rangeLimit===void 0?1e3:t.rangeLimit;let walk=(e,o={})=>{e.queue=[];let i=o;let a=o.queue;while(i.type!==\"brace\"&&i.type!==\"root\"&&i.parent){i=i.parent;a=i.queue}if(e.invalid||e.dollar){a.push(append(a.pop(),u(e,t)));return}if(e.type===\"brace\"&&e.invalid!==true&&e.nodes.length===2){a.push(append(a.pop(),[\"{}\"]));return}if(e.nodes&&e.ranges>0){let o=s.reduce(e.nodes);if(s.exceedsLimit(...o,t.step,r)){throw new RangeError(\"expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.\")}let i=n(...o,t);if(i.length===0){i=u(e,t)}a.push(append(a.pop(),i));e.nodes=[];return}let l=s.encloseBrace(e);let c=e.queue;let p=e;while(p.type!==\"brace\"&&p.type!==\"root\"&&p.parent){p=p.parent;c=p.queue}for(let t=0;t<e.nodes.length;t++){let r=e.nodes[t];if(r.type===\"comma\"&&e.type===\"brace\"){if(t===1)c.push(\"\");c.push(\"\");continue}if(r.type===\"close\"){a.push(append(a.pop(),c,l));continue}if(r.value&&r.type!==\"open\"){c.push(append(c.pop(),r.value));continue}if(r.nodes){walk(r,e)}}return c};return s.flatten(walk(e))};e.exports=expand},719:(e,t,r)=>{const n=r(137);const{MAX_LENGTH:u,CHAR_BACKSLASH:s,CHAR_BACKTICK:o,CHAR_COMMA:i,CHAR_DOT:a,CHAR_LEFT_PARENTHESES:l,CHAR_RIGHT_PARENTHESES:c,CHAR_LEFT_CURLY_BRACE:p,CHAR_RIGHT_CURLY_BRACE:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_RIGHT_SQUARE_BRACKET:R,CHAR_DOUBLE_QUOTE:_,CHAR_SINGLE_QUOTE:h,CHAR_NO_BREAK_SPACE:g,CHAR_ZERO_WIDTH_NOBREAK_SPACE:E}=r(457);const parse=(e,t={})=>{if(typeof e!==\"string\"){throw new TypeError(\"Expected a string\")}let r=t||{};let C=typeof r.maxLength===\"number\"?Math.min(u,r.maxLength):u;if(e.length>C){throw new SyntaxError(`Input length (${e.length}), exceeds max characters (${C})`)}let y={type:\"root\",input:e,nodes:[]};let d=[y];let x=y;let b=y;let S=0;let H=e.length;let v=0;let $=0;let m;let T={};const advance=()=>e[v++];const push=e=>{if(e.type===\"text\"&&b.type===\"dot\"){b.type=\"text\"}if(b&&b.type===\"text\"&&e.type===\"text\"){b.value+=e.value;return}x.nodes.push(e);e.parent=x;e.prev=b;b=e;return e};push({type:\"bos\"});while(v<H){x=d[d.length-1];m=advance();if(m===E||m===g){continue}if(m===s){push({type:\"text\",value:(t.keepEscaping?m:\"\")+advance()});continue}if(m===R){push({type:\"text\",value:\"\\\\\"+m});continue}if(m===A){S++;let e=true;let t;while(v<H&&(t=advance())){m+=t;if(t===A){S++;continue}if(t===s){m+=advance();continue}if(t===R){S--;if(S===0){break}}}push({type:\"text\",value:m});continue}if(m===l){x=push({type:\"paren\",nodes:[]});d.push(x);push({type:\"text\",value:m});continue}if(m===c){if(x.type!==\"paren\"){push({type:\"text\",value:m});continue}x=d.pop();push({type:\"text\",value:m});x=d[d.length-1];continue}if(m===_||m===h||m===o){let e=m;let r;if(t.keepQuotes!==true){m=\"\"}while(v<H&&(r=advance())){if(r===s){m+=r+advance();continue}if(r===e){if(t.keepQuotes===true)m+=r;break}m+=r}push({type:\"text\",value:m});continue}if(m===p){$++;let e=b.value&&b.value.slice(-1)===\"$\"||x.dollar===true;let t={type:\"brace\",open:true,close:false,dollar:e,depth:$,commas:0,ranges:0,nodes:[]};x=push(t);d.push(x);push({type:\"open\",value:m});continue}if(m===f){if(x.type!==\"brace\"){push({type:\"text\",value:m});continue}let e=\"close\";x=d.pop();x.close=true;push({type:e,value:m});$--;x=d[d.length-1];continue}if(m===i&&$>0){if(x.ranges>0){x.ranges=0;let e=x.nodes.shift();x.nodes=[e,{type:\"text\",value:n(x)}]}push({type:\"comma\",value:m});x.commas++;continue}if(m===a&&$>0&&x.commas===0){let e=x.nodes;if($===0||e.length===0){push({type:\"text\",value:m});continue}if(b.type===\"dot\"){x.range=[];b.value+=m;b.type=\"range\";if(x.nodes.length!==3&&x.nodes.length!==5){x.invalid=true;x.ranges=0;b.type=\"text\";continue}x.ranges++;x.args=[];continue}if(b.type===\"range\"){e.pop();let t=e[e.length-1];t.value+=b.value+m;b=t;x.ranges--;continue}push({type:\"dot\",value:m});continue}push({type:\"text\",value:m})}do{x=d.pop();if(x.type!==\"root\"){x.nodes.forEach((e=>{if(!e.nodes){if(e.type===\"open\")e.isOpen=true;if(e.type===\"close\")e.isClose=true;if(!e.nodes)e.type=\"text\";e.invalid=true}}));let e=d[d.length-1];let t=e.nodes.indexOf(x);e.nodes.splice(t,1,...x.nodes)}}while(d.length>0);push({type:\"eos\"});return y};e.exports=parse},137:(e,t,r)=>{const n=r(617);e.exports=(e,t={})=>{let stringify=(e,r={})=>{let u=t.escapeInvalid&&n.isInvalidBrace(r);let s=e.invalid===true&&t.escapeInvalid===true;let o=\"\";if(e.value){if((u||s)&&n.isOpenOrClose(e)){return\"\\\\\"+e.value}return e.value}if(e.value){return e.value}if(e.nodes){for(let t of e.nodes){o+=stringify(t)}}return o};return stringify(e)}},617:(e,t)=>{t.isInteger=e=>{if(typeof e===\"number\"){return Number.isInteger(e)}if(typeof e===\"string\"&&e.trim()!==\"\"){return Number.isInteger(Number(e))}return false};t.find=(e,t)=>e.nodes.find((e=>e.type===t));t.exceedsLimit=(e,r,n=1,u)=>{if(u===false)return false;if(!t.isInteger(e)||!t.isInteger(r))return false;return(Number(r)-Number(e))/Number(n)>=u};t.escapeNode=(e,t=0,r)=>{let n=e.nodes[t];if(!n)return;if(r&&n.type===r||n.type===\"open\"||n.type===\"close\"){if(n.escaped!==true){n.value=\"\\\\\"+n.value;n.escaped=true}}};t.encloseBrace=e=>{if(e.type!==\"brace\")return false;if(e.commas>>0+e.ranges>>0===0){e.invalid=true;return true}return false};t.isInvalidBrace=e=>{if(e.type!==\"brace\")return false;if(e.invalid===true||e.dollar)return true;if(e.commas>>0+e.ranges>>0===0){e.invalid=true;return true}if(e.open!==true||e.close!==true){e.invalid=true;return true}return false};t.isOpenOrClose=e=>{if(e.type===\"open\"||e.type===\"close\"){return true}return e.open===true||e.close===true};t.reduce=e=>e.reduce(((e,t)=>{if(t.type===\"text\")e.push(t.value);if(t.type===\"range\")t.type=\"text\";return e}),[]);t.flatten=(...e)=>{const t=[];const flat=e=>{for(let r=0;r<e.length;r++){let n=e[r];Array.isArray(n)?flat(n,t):n!==void 0&&t.push(n)}return t};flat(e);return t}},783:(e,t,r)=>{\n/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\nconst n=r(837);const u=r(492);const isObject=e=>e!==null&&typeof e===\"object\"&&!Array.isArray(e);const transform=e=>t=>e===true?Number(t):String(t);const isValidValue=e=>typeof e===\"number\"||typeof e===\"string\"&&e!==\"\";const isNumber=e=>Number.isInteger(+e);const zeros=e=>{let t=`${e}`;let r=-1;if(t[0]===\"-\")t=t.slice(1);if(t===\"0\")return false;while(t[++r]===\"0\");return r>0};const stringify=(e,t,r)=>{if(typeof e===\"string\"||typeof t===\"string\"){return true}return r.stringify===true};const pad=(e,t,r)=>{if(t>0){let r=e[0]===\"-\"?\"-\":\"\";if(r)e=e.slice(1);e=r+e.padStart(r?t-1:t,\"0\")}if(r===false){return String(e)}return e};const toMaxLen=(e,t)=>{let r=e[0]===\"-\"?\"-\":\"\";if(r){e=e.slice(1);t--}while(e.length<t)e=\"0\"+e;return r?\"-\"+e:e};const toSequence=(e,t)=>{e.negatives.sort(((e,t)=>e<t?-1:e>t?1:0));e.positives.sort(((e,t)=>e<t?-1:e>t?1:0));let r=t.capture?\"\":\"?:\";let n=\"\";let u=\"\";let s;if(e.positives.length){n=e.positives.join(\"|\")}if(e.negatives.length){u=`-(${r}${e.negatives.join(\"|\")})`}if(n&&u){s=`${n}|${u}`}else{s=n||u}if(t.wrap){return`(${r}${s})`}return s};const toRange=(e,t,r,n)=>{if(r){return u(e,t,{wrap:false,...n})}let s=String.fromCharCode(e);if(e===t)return s;let o=String.fromCharCode(t);return`[${s}-${o}]`};const toRegex=(e,t,r)=>{if(Array.isArray(e)){let t=r.wrap===true;let n=r.capture?\"\":\"?:\";return t?`(${n}${e.join(\"|\")})`:e.join(\"|\")}return u(e,t,r)};const rangeError=(...e)=>new RangeError(\"Invalid range arguments: \"+n.inspect(...e));const invalidRange=(e,t,r)=>{if(r.strictRanges===true)throw rangeError([e,t]);return[]};const invalidStep=(e,t)=>{if(t.strictRanges===true){throw new TypeError(`Expected step \"${e}\" to be a number`)}return[]};const fillNumbers=(e,t,r=1,n={})=>{let u=Number(e);let s=Number(t);if(!Number.isInteger(u)||!Number.isInteger(s)){if(n.strictRanges===true)throw rangeError([e,t]);return[]}if(u===0)u=0;if(s===0)s=0;let o=u>s;let i=String(e);let a=String(t);let l=String(r);r=Math.max(Math.abs(r),1);let c=zeros(i)||zeros(a)||zeros(l);let p=c?Math.max(i.length,a.length,l.length):0;let f=c===false&&stringify(e,t,n)===false;let A=n.transform||transform(f);if(n.toRegex&&r===1){return toRange(toMaxLen(e,p),toMaxLen(t,p),true,n)}let R={negatives:[],positives:[]};let push=e=>R[e<0?\"negatives\":\"positives\"].push(Math.abs(e));let _=[];let h=0;while(o?u>=s:u<=s){if(n.toRegex===true&&r>1){push(u)}else{_.push(pad(A(u,h),p,f))}u=o?u-r:u+r;h++}if(n.toRegex===true){return r>1?toSequence(R,n):toRegex(_,null,{wrap:false,...n})}return _};const fillLetters=(e,t,r=1,n={})=>{if(!isNumber(e)&&e.length>1||!isNumber(t)&&t.length>1){return invalidRange(e,t,n)}let u=n.transform||(e=>String.fromCharCode(e));let s=`${e}`.charCodeAt(0);let o=`${t}`.charCodeAt(0);let i=s>o;let a=Math.min(s,o);let l=Math.max(s,o);if(n.toRegex&&r===1){return toRange(a,l,false,n)}let c=[];let p=0;while(i?s>=o:s<=o){c.push(u(s,p));s=i?s-r:s+r;p++}if(n.toRegex===true){return toRegex(c,null,{wrap:false,options:n})}return c};const fill=(e,t,r,n={})=>{if(t==null&&isValidValue(e)){return[e]}if(!isValidValue(e)||!isValidValue(t)){return invalidRange(e,t,n)}if(typeof r===\"function\"){return fill(e,t,1,{transform:r})}if(isObject(r)){return fill(e,t,0,r)}let u={...n};if(u.capture===true)u.wrap=true;r=r||u.step||1;if(!isNumber(r)){if(r!=null&&!isObject(r))return invalidStep(r,u);return fill(e,t,1,r)}if(isNumber(e)&&isNumber(t)){return fillNumbers(e,t,r,u)}return fillLetters(e,t,Math.max(Math.abs(r),1),u)};e.exports=fill},357:e=>{\n/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\ne.exports=function(e){if(typeof e===\"number\"){return e-e===0}if(typeof e===\"string\"&&e.trim()!==\"\"){return Number.isFinite?Number.isFinite(+e):isFinite(+e)}return false}},971:(e,t,r)=>{const n=r(837);const u=r(333);const s=r(251);const o=r(513);const isEmptyString=e=>e===\"\"||e===\"./\";const micromatch=(e,t,r)=>{t=[].concat(t);e=[].concat(e);let n=new Set;let u=new Set;let o=new Set;let i=0;let onResult=e=>{o.add(e.output);if(r&&r.onResult){r.onResult(e)}};for(let o=0;o<t.length;o++){let a=s(String(t[o]),{...r,onResult:onResult},true);let l=a.state.negated||a.state.negatedExtglob;if(l)i++;for(let t of e){let e=a(t,true);let r=l?!e.isMatch:e.isMatch;if(!r)continue;if(l){n.add(e.output)}else{n.delete(e.output);u.add(e.output)}}}let a=i===t.length?[...o]:[...u];let l=a.filter((e=>!n.has(e)));if(r&&l.length===0){if(r.failglob===true){throw new Error(`No matches found for \"${t.join(\", \")}\"`)}if(r.nonull===true||r.nullglob===true){return r.unescape?t.map((e=>e.replace(/\\\\/g,\"\"))):t}}return l};micromatch.match=micromatch;micromatch.matcher=(e,t)=>s(e,t);micromatch.isMatch=(e,t,r)=>s(t,r)(e);micromatch.any=micromatch.isMatch;micromatch.not=(e,t,r={})=>{t=[].concat(t).map(String);let n=new Set;let u=[];let onResult=e=>{if(r.onResult)r.onResult(e);u.push(e.output)};let s=micromatch(e,t,{...r,onResult:onResult});for(let e of u){if(!s.includes(e)){n.add(e)}}return[...n]};micromatch.contains=(e,t,r)=>{if(typeof e!==\"string\"){throw new TypeError(`Expected a string: \"${n.inspect(e)}\"`)}if(Array.isArray(t)){return t.some((t=>micromatch.contains(e,t,r)))}if(typeof t===\"string\"){if(isEmptyString(e)||isEmptyString(t)){return false}if(e.includes(t)||e.startsWith(\"./\")&&e.slice(2).includes(t)){return true}}return micromatch.isMatch(e,t,{...r,contains:true})};micromatch.matchKeys=(e,t,r)=>{if(!o.isObject(e)){throw new TypeError(\"Expected the first argument to be an object\")}let n=micromatch(Object.keys(e),t,r);let u={};for(let t of n)u[t]=e[t];return u};micromatch.some=(e,t,r)=>{let n=[].concat(e);for(let e of[].concat(t)){let t=s(String(e),r);if(n.some((e=>t(e)))){return true}}return false};micromatch.every=(e,t,r)=>{let n=[].concat(e);for(let e of[].concat(t)){let t=s(String(e),r);if(!n.every((e=>t(e)))){return false}}return true};micromatch.all=(e,t,r)=>{if(typeof e!==\"string\"){throw new TypeError(`Expected a string: \"${n.inspect(e)}\"`)}return[].concat(t).every((t=>s(t,r)(e)))};micromatch.capture=(e,t,r)=>{let n=o.isWindows(r);let u=s.makeRe(String(e),{...r,capture:true});let i=u.exec(n?o.toPosixSlashes(t):t);if(i){return i.slice(1).map((e=>e===void 0?\"\":e))}};micromatch.makeRe=(...e)=>s.makeRe(...e);micromatch.scan=(...e)=>s.scan(...e);micromatch.parse=(e,t)=>{let r=[];for(let n of[].concat(e||[])){for(let e of u(String(n),t)){r.push(s.parse(e,t))}}return r};micromatch.braces=(e,t)=>{if(typeof e!==\"string\")throw new TypeError(\"Expected a string\");if(t&&t.nobrace===true||!/\\{.*\\}/.test(e)){return[e]}return u(e,t)};micromatch.braceExpand=(e,t)=>{if(typeof e!==\"string\")throw new TypeError(\"Expected a string\");return micromatch.braces(e,{...t,expand:true})};e.exports=micromatch},251:(e,t,r)=>{e.exports=r(683)},356:(e,t,r)=>{const n=r(17);const u=\"\\\\\\\\/\";const s=`[^${u}]`;const o=\"\\\\.\";const i=\"\\\\+\";const a=\"\\\\?\";const l=\"\\\\/\";const c=\"(?=.)\";const p=\"[^/]\";const f=`(?:${l}|$)`;const A=`(?:^|${l})`;const R=`${o}{1,2}${f}`;const _=`(?!${o})`;const h=`(?!${A}${R})`;const g=`(?!${o}{0,1}${f})`;const E=`(?!${R})`;const C=`[^.${l}]`;const y=`${p}*?`;const d={DOT_LITERAL:o,PLUS_LITERAL:i,QMARK_LITERAL:a,SLASH_LITERAL:l,ONE_CHAR:c,QMARK:p,END_ANCHOR:f,DOTS_SLASH:R,NO_DOT:_,NO_DOTS:h,NO_DOT_SLASH:g,NO_DOTS_SLASH:E,QMARK_NO_DOT:C,STAR:y,START_ANCHOR:A};const x={...d,SLASH_LITERAL:`[${u}]`,QMARK:s,STAR:`${s}*?`,DOTS_SLASH:`${o}{1,2}(?:[${u}]|$)`,NO_DOT:`(?!${o})`,NO_DOTS:`(?!(?:^|[${u}])${o}{1,2}(?:[${u}]|$))`,NO_DOT_SLASH:`(?!${o}{0,1}(?:[${u}]|$))`,NO_DOTS_SLASH:`(?!${o}{1,2}(?:[${u}]|$))`,QMARK_NO_DOT:`[^.${u}]`,START_ANCHOR:`(?:^|[${u}])`,END_ANCHOR:`(?:[${u}]|$)`};const b={alnum:\"a-zA-Z0-9\",alpha:\"a-zA-Z\",ascii:\"\\\\x00-\\\\x7F\",blank:\" \\\\t\",cntrl:\"\\\\x00-\\\\x1F\\\\x7F\",digit:\"0-9\",graph:\"\\\\x21-\\\\x7E\",lower:\"a-z\",print:\"\\\\x20-\\\\x7E \",punct:\"\\\\-!\\\"#$%&'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~\",space:\" \\\\t\\\\r\\\\n\\\\v\\\\f\",upper:\"A-Z\",word:\"A-Za-z0-9_\",xdigit:\"A-Fa-f0-9\"};e.exports={MAX_LENGTH:1024*64,POSIX_REGEX_SOURCE:b,REGEX_BACKSLASH:/\\\\(?![*+?^${}(|)[\\]])/g,REGEX_NON_SPECIAL_CHARS:/^[^@![\\].,$*+?^{}()|\\\\/]+/,REGEX_SPECIAL_CHARS:/[-*+?.^${}(|)[\\]]/,REGEX_SPECIAL_CHARS_BACKREF:/(\\\\?)((\\W)(\\3*))/g,REGEX_SPECIAL_CHARS_GLOBAL:/([-*+?.^${}(|)[\\]])/g,REGEX_REMOVE_BACKSLASH:/(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,REPLACEMENTS:{\"***\":\"*\",\"**/**\":\"**\",\"**/**/**\":\"**\"},CHAR_0:48,CHAR_9:57,CHAR_UPPERCASE_A:65,CHAR_LOWERCASE_A:97,CHAR_UPPERCASE_Z:90,CHAR_LOWERCASE_Z:122,CHAR_LEFT_PARENTHESES:40,CHAR_RIGHT_PARENTHESES:41,CHAR_ASTERISK:42,CHAR_AMPERSAND:38,CHAR_AT:64,CHAR_BACKWARD_SLASH:92,CHAR_CARRIAGE_RETURN:13,CHAR_CIRCUMFLEX_ACCENT:94,CHAR_COLON:58,CHAR_COMMA:44,CHAR_DOT:46,CHAR_DOUBLE_QUOTE:34,CHAR_EQUAL:61,CHAR_EXCLAMATION_MARK:33,CHAR_FORM_FEED:12,CHAR_FORWARD_SLASH:47,CHAR_GRAVE_ACCENT:96,CHAR_HASH:35,CHAR_HYPHEN_MINUS:45,CHAR_LEFT_ANGLE_BRACKET:60,CHAR_LEFT_CURLY_BRACE:123,CHAR_LEFT_SQUARE_BRACKET:91,CHAR_LINE_FEED:10,CHAR_NO_BREAK_SPACE:160,CHAR_PERCENT:37,CHAR_PLUS:43,CHAR_QUESTION_MARK:63,CHAR_RIGHT_ANGLE_BRACKET:62,CHAR_RIGHT_CURLY_BRACE:125,CHAR_RIGHT_SQUARE_BRACKET:93,CHAR_SEMICOLON:59,CHAR_SINGLE_QUOTE:39,CHAR_SPACE:32,CHAR_TAB:9,CHAR_UNDERSCORE:95,CHAR_VERTICAL_LINE:124,CHAR_ZERO_WIDTH_NOBREAK_SPACE:65279,SEP:n.sep,extglobChars(e){return{\"!\":{type:\"negate\",open:\"(?:(?!(?:\",close:`))${e.STAR})`},\"?\":{type:\"qmark\",open:\"(?:\",close:\")?\"},\"+\":{type:\"plus\",open:\"(?:\",close:\")+\"},\"*\":{type:\"star\",open:\"(?:\",close:\")*\"},\"@\":{type:\"at\",open:\"(?:\",close:\")\"}}},globChars(e){return e===true?x:d}}},754:(e,t,r)=>{const n=r(356);const u=r(513);const{MAX_LENGTH:s,POSIX_REGEX_SOURCE:o,REGEX_NON_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_BACKREF:a,REPLACEMENTS:l}=n;const expandRange=(e,t)=>{if(typeof t.expandRange===\"function\"){return t.expandRange(...e,t)}e.sort();const r=`[${e.join(\"-\")}]`;try{new RegExp(r)}catch(t){return e.map((e=>u.escapeRegex(e))).join(\"..\")}return r};const syntaxError=(e,t)=>`Missing ${e}: \"${t}\" - use \"\\\\\\\\${t}\" to match literal characters`;const parse=(e,t)=>{if(typeof e!==\"string\"){throw new TypeError(\"Expected a string\")}e=l[e]||e;const r={...t};const c=typeof r.maxLength===\"number\"?Math.min(s,r.maxLength):s;let p=e.length;if(p>c){throw new SyntaxError(`Input length: ${p}, exceeds maximum allowed length: ${c}`)}const f={type:\"bos\",value:\"\",output:r.prepend||\"\"};const A=[f];const R=r.capture?\"\":\"?:\";const _=u.isWindows(t);const h=n.globChars(_);const g=n.extglobChars(h);const{DOT_LITERAL:E,PLUS_LITERAL:C,SLASH_LITERAL:y,ONE_CHAR:d,DOTS_SLASH:x,NO_DOT:b,NO_DOT_SLASH:S,NO_DOTS_SLASH:H,QMARK:v,QMARK_NO_DOT:$,STAR:m,START_ANCHOR:T}=h;const globstar=e=>`(${R}(?:(?!${T}${e.dot?x:E}).)*?)`;const L=r.dot?\"\":b;const O=r.dot?v:$;let w=r.bash===true?globstar(r):m;if(r.capture){w=`(${w})`}if(typeof r.noext===\"boolean\"){r.noextglob=r.noext}const N={input:e,index:-1,start:0,dot:r.dot===true,consumed:\"\",output:\"\",prefix:\"\",backtrack:false,negated:false,brackets:0,braces:0,parens:0,quotes:0,globstar:false,tokens:A};e=u.removePrefix(e,N);p=e.length;const k=[];const I=[];const M=[];let P=f;let B;const eos=()=>N.index===p-1;const G=N.peek=(t=1)=>e[N.index+t];const D=N.advance=()=>e[++N.index];const remaining=()=>e.slice(N.index+1);const consume=(e=\"\",t=0)=>{N.consumed+=e;N.index+=t};const append=e=>{N.output+=e.output!=null?e.output:e.value;consume(e.value)};const negate=()=>{let e=1;while(G()===\"!\"&&(G(2)!==\"(\"||G(3)===\"?\")){D();N.start++;e++}if(e%2===0){return false}N.negated=true;N.start++;return true};const increment=e=>{N[e]++;M.push(e)};const decrement=e=>{N[e]--;M.pop()};const push=e=>{if(P.type===\"globstar\"){const t=N.braces>0&&(e.type===\"comma\"||e.type===\"brace\");const r=e.extglob===true||k.length&&(e.type===\"pipe\"||e.type===\"paren\");if(e.type!==\"slash\"&&e.type!==\"paren\"&&!t&&!r){N.output=N.output.slice(0,-P.output.length);P.type=\"star\";P.value=\"*\";P.output=w;N.output+=P.output}}if(k.length&&e.type!==\"paren\"&&!g[e.value]){k[k.length-1].inner+=e.value}if(e.value||e.output)append(e);if(P&&P.type===\"text\"&&e.type===\"text\"){P.value+=e.value;P.output=(P.output||\"\")+e.value;return}e.prev=P;A.push(e);P=e};const extglobOpen=(e,t)=>{const n={...g[t],conditions:1,inner:\"\"};n.prev=P;n.parens=N.parens;n.output=N.output;const u=(r.capture?\"(\":\"\")+n.open;increment(\"parens\");push({type:e,value:t,output:N.output?\"\":d});push({type:\"paren\",extglob:true,value:D(),output:u});k.push(n)};const extglobClose=e=>{let t=e.close+(r.capture?\")\":\"\");if(e.type===\"negate\"){let n=w;if(e.inner&&e.inner.length>1&&e.inner.includes(\"/\")){n=globstar(r)}if(n!==w||eos()||/^\\)+$/.test(remaining())){t=e.close=`)$))${n}`}if(e.prev.type===\"bos\"){N.negatedExtglob=true}}push({type:\"paren\",extglob:true,value:B,output:t});decrement(\"parens\")};if(r.fastpaths!==false&&!/(^[*!]|[/()[\\]{}\"])/.test(e)){let n=false;let s=e.replace(a,((e,t,r,u,s,o)=>{if(u===\"\\\\\"){n=true;return e}if(u===\"?\"){if(t){return t+u+(s?v.repeat(s.length):\"\")}if(o===0){return O+(s?v.repeat(s.length):\"\")}return v.repeat(r.length)}if(u===\".\"){return E.repeat(r.length)}if(u===\"*\"){if(t){return t+u+(s?w:\"\")}return w}return t?e:`\\\\${e}`}));if(n===true){if(r.unescape===true){s=s.replace(/\\\\/g,\"\")}else{s=s.replace(/\\\\+/g,(e=>e.length%2===0?\"\\\\\\\\\":e?\"\\\\\":\"\"))}}if(s===e&&r.contains===true){N.output=e;return N}N.output=u.wrapOutput(s,N,t);return N}while(!eos()){B=D();if(B===\"\\0\"){continue}if(B===\"\\\\\"){const e=G();if(e===\"/\"&&r.bash!==true){continue}if(e===\".\"||e===\";\"){continue}if(!e){B+=\"\\\\\";push({type:\"text\",value:B});continue}const t=/^\\\\+/.exec(remaining());let n=0;if(t&&t[0].length>2){n=t[0].length;N.index+=n;if(n%2!==0){B+=\"\\\\\"}}if(r.unescape===true){B=D()||\"\"}else{B+=D()||\"\"}if(N.brackets===0){push({type:\"text\",value:B});continue}}if(N.brackets>0&&(B!==\"]\"||P.value===\"[\"||P.value===\"[^\")){if(r.posix!==false&&B===\":\"){const e=P.value.slice(1);if(e.includes(\"[\")){P.posix=true;if(e.includes(\":\")){const e=P.value.lastIndexOf(\"[\");const t=P.value.slice(0,e);const r=P.value.slice(e+2);const n=o[r];if(n){P.value=t+n;N.backtrack=true;D();if(!f.output&&A.indexOf(P)===1){f.output=d}continue}}}}if(B===\"[\"&&G()!==\":\"||B===\"-\"&&G()===\"]\"){B=`\\\\${B}`}if(B===\"]\"&&(P.value===\"[\"||P.value===\"[^\")){B=`\\\\${B}`}if(r.posix===true&&B===\"!\"&&P.value===\"[\"){B=\"^\"}P.value+=B;append({value:B});continue}if(N.quotes===1&&B!=='\"'){B=u.escapeRegex(B);P.value+=B;append({value:B});continue}if(B==='\"'){N.quotes=N.quotes===1?0:1;if(r.keepQuotes===true){push({type:\"text\",value:B})}continue}if(B===\"(\"){increment(\"parens\");push({type:\"paren\",value:B});continue}if(B===\")\"){if(N.parens===0&&r.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"(\"))}const e=k[k.length-1];if(e&&N.parens===e.parens+1){extglobClose(k.pop());continue}push({type:\"paren\",value:B,output:N.parens?\")\":\"\\\\)\"});decrement(\"parens\");continue}if(B===\"[\"){if(r.nobracket===true||!remaining().includes(\"]\")){if(r.nobracket!==true&&r.strictBrackets===true){throw new SyntaxError(syntaxError(\"closing\",\"]\"))}B=`\\\\${B}`}else{increment(\"brackets\")}push({type:\"bracket\",value:B});continue}if(B===\"]\"){if(r.nobracket===true||P&&P.type===\"bracket\"&&P.value.length===1){push({type:\"text\",value:B,output:`\\\\${B}`});continue}if(N.brackets===0){if(r.strictBrackets===true){throw new SyntaxError(syntaxError(\"opening\",\"[\"))}push({type:\"text\",value:B,output:`\\\\${B}`});continue}decrement(\"brackets\");const e=P.value.slice(1);if(P.posix!==true&&e[0]===\"^\"&&!e.includes(\"/\")){B=`/${B}`}P.value+=B;append({value:B});if(r.literalBrackets===false||u.hasRegexChars(e)){continue}const t=u.escapeRegex(P.value);N.output=N.output.slice(0,-P.value.length);if(r.literalBrackets===true){N.output+=t;P.value=t;continue}P.value=`(${R}${t}|${P.value})`;N.output+=P.value;continue}if(B===\"{\"&&r.nobrace!==true){increment(\"braces\");const e={type:\"brace\",value:B,output:\"(\",outputIndex:N.output.length,tokensIndex:N.tokens.length};I.push(e);push(e);continue}if(B===\"}\"){const e=I[I.length-1];if(r.nobrace===true||!e){push({type:\"text\",value:B,output:B});continue}let t=\")\";if(e.dots===true){const e=A.slice();const n=[];for(let t=e.length-1;t>=0;t--){A.pop();if(e[t].type===\"brace\"){break}if(e[t].type!==\"dots\"){n.unshift(e[t].value)}}t=expandRange(n,r);N.backtrack=true}if(e.comma!==true&&e.dots!==true){const r=N.output.slice(0,e.outputIndex);const n=N.tokens.slice(e.tokensIndex);e.value=e.output=\"\\\\{\";B=t=\"\\\\}\";N.output=r;for(const e of n){N.output+=e.output||e.value}}push({type:\"brace\",value:B,output:t});decrement(\"braces\");I.pop();continue}if(B===\"|\"){if(k.length>0){k[k.length-1].conditions++}push({type:\"text\",value:B});continue}if(B===\",\"){let e=B;const t=I[I.length-1];if(t&&M[M.length-1]===\"braces\"){t.comma=true;e=\"|\"}push({type:\"comma\",value:B,output:e});continue}if(B===\"/\"){if(P.type===\"dot\"&&N.index===N.start+1){N.start=N.index+1;N.consumed=\"\";N.output=\"\";A.pop();P=f;continue}push({type:\"slash\",value:B,output:y});continue}if(B===\".\"){if(N.braces>0&&P.type===\"dot\"){if(P.value===\".\")P.output=E;const e=I[I.length-1];P.type=\"dots\";P.output+=B;P.value+=B;e.dots=true;continue}if(N.braces+N.parens===0&&P.type!==\"bos\"&&P.type!==\"slash\"){push({type:\"text\",value:B,output:E});continue}push({type:\"dot\",value:B,output:E});continue}if(B===\"?\"){const e=P&&P.value===\"(\";if(!e&&r.noextglob!==true&&G()===\"(\"&&G(2)!==\"?\"){extglobOpen(\"qmark\",B);continue}if(P&&P.type===\"paren\"){const e=G();let t=B;if(e===\"<\"&&!u.supportsLookbehinds()){throw new Error(\"Node.js v10 or higher is required for regex lookbehinds\")}if(P.value===\"(\"&&!/[!=<:]/.test(e)||e===\"<\"&&!/<([!=]|\\w+>)/.test(remaining())){t=`\\\\${B}`}push({type:\"text\",value:B,output:t});continue}if(r.dot!==true&&(P.type===\"slash\"||P.type===\"bos\")){push({type:\"qmark\",value:B,output:$});continue}push({type:\"qmark\",value:B,output:v});continue}if(B===\"!\"){if(r.noextglob!==true&&G()===\"(\"){if(G(2)!==\"?\"||!/[!=<:]/.test(G(3))){extglobOpen(\"negate\",B);continue}}if(r.nonegate!==true&&N.index===0){negate();continue}}if(B===\"+\"){if(r.noextglob!==true&&G()===\"(\"&&G(2)!==\"?\"){extglobOpen(\"plus\",B);continue}if(P&&P.value===\"(\"||r.regex===false){push({type:\"plus\",value:B,output:C});continue}if(P&&(P.type===\"bracket\"||P.type===\"paren\"||P.type===\"brace\")||N.parens>0){push({type:\"plus\",value:B});continue}push({type:\"plus\",value:C});continue}if(B===\"@\"){if(r.noextglob!==true&&G()===\"(\"&&G(2)!==\"?\"){push({type:\"at\",extglob:true,value:B,output:\"\"});continue}push({type:\"text\",value:B});continue}if(B!==\"*\"){if(B===\"$\"||B===\"^\"){B=`\\\\${B}`}const e=i.exec(remaining());if(e){B+=e[0];N.index+=e[0].length}push({type:\"text\",value:B});continue}if(P&&(P.type===\"globstar\"||P.star===true)){P.type=\"star\";P.star=true;P.value+=B;P.output=w;N.backtrack=true;N.globstar=true;consume(B);continue}let t=remaining();if(r.noextglob!==true&&/^\\([^?]/.test(t)){extglobOpen(\"star\",B);continue}if(P.type===\"star\"){if(r.noglobstar===true){consume(B);continue}const n=P.prev;const u=n.prev;const s=n.type===\"slash\"||n.type===\"bos\";const o=u&&(u.type===\"star\"||u.type===\"globstar\");if(r.bash===true&&(!s||t[0]&&t[0]!==\"/\")){push({type:\"star\",value:B,output:\"\"});continue}const i=N.braces>0&&(n.type===\"comma\"||n.type===\"brace\");const a=k.length&&(n.type===\"pipe\"||n.type===\"paren\");if(!s&&n.type!==\"paren\"&&!i&&!a){push({type:\"star\",value:B,output:\"\"});continue}while(t.slice(0,3)===\"/**\"){const r=e[N.index+4];if(r&&r!==\"/\"){break}t=t.slice(3);consume(\"/**\",3)}if(n.type===\"bos\"&&eos()){P.type=\"globstar\";P.value+=B;P.output=globstar(r);N.output=P.output;N.globstar=true;consume(B);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&!o&&eos()){N.output=N.output.slice(0,-(n.output+P.output).length);n.output=`(?:${n.output}`;P.type=\"globstar\";P.output=globstar(r)+(r.strictSlashes?\")\":\"|$)\");P.value+=B;N.globstar=true;N.output+=n.output+P.output;consume(B);continue}if(n.type===\"slash\"&&n.prev.type!==\"bos\"&&t[0]===\"/\"){const e=t[1]!==void 0?\"|$\":\"\";N.output=N.output.slice(0,-(n.output+P.output).length);n.output=`(?:${n.output}`;P.type=\"globstar\";P.output=`${globstar(r)}${y}|${y}${e})`;P.value+=B;N.output+=n.output+P.output;N.globstar=true;consume(B+D());push({type:\"slash\",value:\"/\",output:\"\"});continue}if(n.type===\"bos\"&&t[0]===\"/\"){P.type=\"globstar\";P.value+=B;P.output=`(?:^|${y}|${globstar(r)}${y})`;N.output=P.output;N.globstar=true;consume(B+D());push({type:\"slash\",value:\"/\",output:\"\"});continue}N.output=N.output.slice(0,-P.output.length);P.type=\"globstar\";P.output=globstar(r);P.value+=B;N.output+=P.output;N.globstar=true;consume(B);continue}const n={type:\"star\",value:B,output:w};if(r.bash===true){n.output=\".*?\";if(P.type===\"bos\"||P.type===\"slash\"){n.output=L+n.output}push(n);continue}if(P&&(P.type===\"bracket\"||P.type===\"paren\")&&r.regex===true){n.output=B;push(n);continue}if(N.index===N.start||P.type===\"slash\"||P.type===\"dot\"){if(P.type===\"dot\"){N.output+=S;P.output+=S}else if(r.dot===true){N.output+=H;P.output+=H}else{N.output+=L;P.output+=L}if(G()!==\"*\"){N.output+=d;P.output+=d}}push(n)}while(N.brackets>0){if(r.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"]\"));N.output=u.escapeLast(N.output,\"[\");decrement(\"brackets\")}while(N.parens>0){if(r.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\")\"));N.output=u.escapeLast(N.output,\"(\");decrement(\"parens\")}while(N.braces>0){if(r.strictBrackets===true)throw new SyntaxError(syntaxError(\"closing\",\"}\"));N.output=u.escapeLast(N.output,\"{\");decrement(\"braces\")}if(r.strictSlashes!==true&&(P.type===\"star\"||P.type===\"bracket\")){push({type:\"maybe_slash\",value:\"\",output:`${y}?`})}if(N.backtrack===true){N.output=\"\";for(const e of N.tokens){N.output+=e.output!=null?e.output:e.value;if(e.suffix){N.output+=e.suffix}}}return N};parse.fastpaths=(e,t)=>{const r={...t};const o=typeof r.maxLength===\"number\"?Math.min(s,r.maxLength):s;const i=e.length;if(i>o){throw new SyntaxError(`Input length: ${i}, exceeds maximum allowed length: ${o}`)}e=l[e]||e;const a=u.isWindows(t);const{DOT_LITERAL:c,SLASH_LITERAL:p,ONE_CHAR:f,DOTS_SLASH:A,NO_DOT:R,NO_DOTS:_,NO_DOTS_SLASH:h,STAR:g,START_ANCHOR:E}=n.globChars(a);const C=r.dot?_:R;const y=r.dot?h:R;const d=r.capture?\"\":\"?:\";const x={negated:false,prefix:\"\"};let b=r.bash===true?\".*?\":g;if(r.capture){b=`(${b})`}const globstar=e=>{if(e.noglobstar===true)return b;return`(${d}(?:(?!${E}${e.dot?A:c}).)*?)`};const create=e=>{switch(e){case\"*\":return`${C}${f}${b}`;case\".*\":return`${c}${f}${b}`;case\"*.*\":return`${C}${b}${c}${f}${b}`;case\"*/*\":return`${C}${b}${p}${f}${y}${b}`;case\"**\":return C+globstar(r);case\"**/*\":return`(?:${C}${globstar(r)}${p})?${y}${f}${b}`;case\"**/*.*\":return`(?:${C}${globstar(r)}${p})?${y}${b}${c}${f}${b}`;case\"**/.*\":return`(?:${C}${globstar(r)}${p})?${c}${f}${b}`;default:{const t=/^(.*?)\\.(\\w+)$/.exec(e);if(!t)return;const r=create(t[1]);if(!r)return;return r+c+t[2]}}};const S=u.removePrefix(e,x);let H=create(S);if(H&&r.strictSlashes!==true){H+=`${p}?`}return H};e.exports=parse},683:(e,t,r)=>{const n=r(17);const u=r(700);const s=r(754);const o=r(513);const i=r(356);const isObject=e=>e&&typeof e===\"object\"&&!Array.isArray(e);const picomatch=(e,t,r=false)=>{if(Array.isArray(e)){const n=e.map((e=>picomatch(e,t,r)));const arrayMatcher=e=>{for(const t of n){const r=t(e);if(r)return r}return false};return arrayMatcher}const n=isObject(e)&&e.tokens&&e.input;if(e===\"\"||typeof e!==\"string\"&&!n){throw new TypeError(\"Expected pattern to be a non-empty string\")}const u=t||{};const s=o.isWindows(t);const i=n?picomatch.compileRe(e,t):picomatch.makeRe(e,t,false,true);const a=i.state;delete i.state;let isIgnored=()=>false;if(u.ignore){const e={...t,ignore:null,onMatch:null,onResult:null};isIgnored=picomatch(u.ignore,e,r)}const matcher=(r,n=false)=>{const{isMatch:o,match:l,output:c}=picomatch.test(r,i,t,{glob:e,posix:s});const p={glob:e,state:a,regex:i,posix:s,input:r,output:c,match:l,isMatch:o};if(typeof u.onResult===\"function\"){u.onResult(p)}if(o===false){p.isMatch=false;return n?p:false}if(isIgnored(r)){if(typeof u.onIgnore===\"function\"){u.onIgnore(p)}p.isMatch=false;return n?p:false}if(typeof u.onMatch===\"function\"){u.onMatch(p)}return n?p:true};if(r){matcher.state=a}return matcher};picomatch.test=(e,t,r,{glob:n,posix:u}={})=>{if(typeof e!==\"string\"){throw new TypeError(\"Expected input to be a string\")}if(e===\"\"){return{isMatch:false,output:\"\"}}const s=r||{};const i=s.format||(u?o.toPosixSlashes:null);let a=e===n;let l=a&&i?i(e):e;if(a===false){l=i?i(e):e;a=l===n}if(a===false||s.capture===true){if(s.matchBase===true||s.basename===true){a=picomatch.matchBase(e,t,r,u)}else{a=t.exec(l)}}return{isMatch:Boolean(a),match:a,output:l}};picomatch.matchBase=(e,t,r,u=o.isWindows(r))=>{const s=t instanceof RegExp?t:picomatch.makeRe(t,r);return s.test(n.basename(e))};picomatch.isMatch=(e,t,r)=>picomatch(t,r)(e);picomatch.parse=(e,t)=>{if(Array.isArray(e))return e.map((e=>picomatch.parse(e,t)));return s(e,{...t,fastpaths:false})};picomatch.scan=(e,t)=>u(e,t);picomatch.compileRe=(e,t,r=false,n=false)=>{if(r===true){return e.output}const u=t||{};const s=u.contains?\"\":\"^\";const o=u.contains?\"\":\"$\";let i=`${s}(?:${e.output})${o}`;if(e&&e.negated===true){i=`^(?!${i}).*$`}const a=picomatch.toRegex(i,t);if(n===true){a.state=e}return a};picomatch.makeRe=(e,t,r=false,n=false)=>{if(!e||typeof e!==\"string\"){throw new TypeError(\"Expected a non-empty string\")}const u=t||{};let o={negated:false,fastpaths:true};let i=\"\";let a;if(e.startsWith(\"./\")){e=e.slice(2);i=o.prefix=\"./\"}if(u.fastpaths!==false&&(e[0]===\".\"||e[0]===\"*\")){a=s.fastpaths(e,t)}if(a===undefined){o=s(e,t);o.prefix=i+(o.prefix||\"\")}else{o.output=a}return picomatch.compileRe(o,t,r,n)};picomatch.toRegex=(e,t)=>{try{const r=t||{};return new RegExp(e,r.flags||(r.nocase?\"i\":\"\"))}catch(e){if(t&&t.debug===true)throw e;return/$^/}};picomatch.constants=i;e.exports=picomatch},700:(e,t,r)=>{const n=r(513);const{CHAR_ASTERISK:u,CHAR_AT:s,CHAR_BACKWARD_SLASH:o,CHAR_COMMA:i,CHAR_DOT:a,CHAR_EXCLAMATION_MARK:l,CHAR_FORWARD_SLASH:c,CHAR_LEFT_CURLY_BRACE:p,CHAR_LEFT_PARENTHESES:f,CHAR_LEFT_SQUARE_BRACKET:A,CHAR_PLUS:R,CHAR_QUESTION_MARK:_,CHAR_RIGHT_CURLY_BRACE:h,CHAR_RIGHT_PARENTHESES:g,CHAR_RIGHT_SQUARE_BRACKET:E}=r(356);const isPathSeparator=e=>e===c||e===o;const depth=e=>{if(e.isPrefix!==true){e.depth=e.isGlobstar?Infinity:1}};const scan=(e,t)=>{const r=t||{};const C=e.length-1;const y=r.parts===true||r.scanToEnd===true;const d=[];const x=[];const b=[];let S=e;let H=-1;let v=0;let $=0;let m=false;let T=false;let L=false;let O=false;let w=false;let N=false;let k=false;let I=false;let M=false;let P=0;let B;let G;let D={value:\"\",depth:0,isGlob:false};const eos=()=>H>=C;const peek=()=>S.charCodeAt(H+1);const advance=()=>{B=G;return S.charCodeAt(++H)};while(H<C){G=advance();let e;if(G===o){k=D.backslashes=true;G=advance();if(G===p){N=true}continue}if(N===true||G===p){P++;while(eos()!==true&&(G=advance())){if(G===o){k=D.backslashes=true;advance();continue}if(G===p){P++;continue}if(N!==true&&G===a&&(G=advance())===a){m=D.isBrace=true;L=D.isGlob=true;M=true;if(y===true){continue}break}if(N!==true&&G===i){m=D.isBrace=true;L=D.isGlob=true;M=true;if(y===true){continue}break}if(G===h){P--;if(P===0){N=false;m=D.isBrace=true;M=true;break}}}if(y===true){continue}break}if(G===c){d.push(H);x.push(D);D={value:\"\",depth:0,isGlob:false};if(M===true)continue;if(B===a&&H===v+1){v+=2;continue}$=H+1;continue}if(r.noext!==true){const e=G===R||G===s||G===u||G===_||G===l;if(e===true&&peek()===f){L=D.isGlob=true;O=D.isExtglob=true;M=true;if(y===true){while(eos()!==true&&(G=advance())){if(G===o){k=D.backslashes=true;G=advance();continue}if(G===g){L=D.isGlob=true;M=true;break}}continue}break}}if(G===u){if(B===u)w=D.isGlobstar=true;L=D.isGlob=true;M=true;if(y===true){continue}break}if(G===_){L=D.isGlob=true;M=true;if(y===true){continue}break}if(G===A){while(eos()!==true&&(e=advance())){if(e===o){k=D.backslashes=true;advance();continue}if(e===E){T=D.isBracket=true;L=D.isGlob=true;M=true;break}}if(y===true){continue}break}if(r.nonegate!==true&&G===l&&H===v){I=D.negated=true;v++;continue}if(r.noparen!==true&&G===f){L=D.isGlob=true;if(y===true){while(eos()!==true&&(G=advance())){if(G===f){k=D.backslashes=true;G=advance();continue}if(G===g){M=true;break}}continue}break}if(L===true){M=true;if(y===true){continue}break}}if(r.noext===true){O=false;L=false}let U=S;let K=\"\";let F=\"\";if(v>0){K=S.slice(0,v);S=S.slice(v);$-=v}if(U&&L===true&&$>0){U=S.slice(0,$);F=S.slice($)}else if(L===true){U=\"\";F=S}else{U=S}if(U&&U!==\"\"&&U!==\"/\"&&U!==S){if(isPathSeparator(U.charCodeAt(U.length-1))){U=U.slice(0,-1)}}if(r.unescape===true){if(F)F=n.removeBackslashes(F);if(U&&k===true){U=n.removeBackslashes(U)}}const Q={prefix:K,input:e,start:v,base:U,glob:F,isBrace:m,isBracket:T,isGlob:L,isExtglob:O,isGlobstar:w,negated:I};if(r.tokens===true){Q.maxDepth=0;if(!isPathSeparator(G)){x.push(D)}Q.tokens=x}if(r.parts===true||r.tokens===true){let t;for(let n=0;n<d.length;n++){const u=t?t+1:v;const s=d[n];const o=e.slice(u,s);if(r.tokens){if(n===0&&v!==0){x[n].isPrefix=true;x[n].value=K}else{x[n].value=o}depth(x[n]);Q.maxDepth+=x[n].depth}if(n!==0||o!==\"\"){b.push(o)}t=s}if(t&&t+1<e.length){const n=e.slice(t+1);b.push(n);if(r.tokens){x[x.length-1].value=n;depth(x[x.length-1]);Q.maxDepth+=x[x.length-1].depth}}Q.slashes=d;Q.parts=b}return Q};e.exports=scan},513:(e,t,r)=>{const n=r(17);const u=process.platform===\"win32\";const{REGEX_BACKSLASH:s,REGEX_REMOVE_BACKSLASH:o,REGEX_SPECIAL_CHARS:i,REGEX_SPECIAL_CHARS_GLOBAL:a}=r(356);t.isObject=e=>e!==null&&typeof e===\"object\"&&!Array.isArray(e);t.hasRegexChars=e=>i.test(e);t.isRegexChar=e=>e.length===1&&t.hasRegexChars(e);t.escapeRegex=e=>e.replace(a,\"\\\\$1\");t.toPosixSlashes=e=>e.replace(s,\"/\");t.removeBackslashes=e=>e.replace(o,(e=>e===\"\\\\\"?\"\":e));t.supportsLookbehinds=()=>{const e=process.version.slice(1).split(\".\").map(Number);if(e.length===3&&e[0]>=9||e[0]===8&&e[1]>=10){return true}return false};t.isWindows=e=>{if(e&&typeof e.windows===\"boolean\"){return e.windows}return u===true||n.sep===\"\\\\\"};t.escapeLast=(e,r,n)=>{const u=e.lastIndexOf(r,n);if(u===-1)return e;if(e[u-1]===\"\\\\\")return t.escapeLast(e,r,u-1);return`${e.slice(0,u)}\\\\${e.slice(u)}`};t.removePrefix=(e,t={})=>{let r=e;if(r.startsWith(\"./\")){r=r.slice(2);t.prefix=\"./\"}return r};t.wrapOutput=(e,t={},r={})=>{const n=r.contains?\"\":\"^\";const u=r.contains?\"\":\"$\";let s=`${n}(?:${e})${u}`;if(t.negated===true){s=`(?:^(?!${s}).*$)`}return s}},492:(e,t,r)=>{\n/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\nconst n=r(357);const toRegexRange=(e,t,r)=>{if(n(e)===false){throw new TypeError(\"toRegexRange: expected the first argument to be a number\")}if(t===void 0||e===t){return String(e)}if(n(t)===false){throw new TypeError(\"toRegexRange: expected the second argument to be a number.\")}let u={relaxZeros:true,...r};if(typeof u.strictZeros===\"boolean\"){u.relaxZeros=u.strictZeros===false}let s=String(u.relaxZeros);let o=String(u.shorthand);let i=String(u.capture);let a=String(u.wrap);let l=e+\":\"+t+\"=\"+s+o+i+a;if(toRegexRange.cache.hasOwnProperty(l)){return toRegexRange.cache[l].result}let c=Math.min(e,t);let p=Math.max(e,t);if(Math.abs(c-p)===1){let r=e+\"|\"+t;if(u.capture){return`(${r})`}if(u.wrap===false){return r}return`(?:${r})`}let f=hasPadding(e)||hasPadding(t);let A={min:e,max:t,a:c,b:p};let R=[];let _=[];if(f){A.isPadded=f;A.maxLen=String(A.max).length}if(c<0){let e=p<0?Math.abs(p):1;_=splitToPatterns(e,Math.abs(c),A,u);c=A.a=0}if(p>=0){R=splitToPatterns(c,p,A,u)}A.negatives=_;A.positives=R;A.result=collatePatterns(_,R,u);if(u.capture===true){A.result=`(${A.result})`}else if(u.wrap!==false&&R.length+_.length>1){A.result=`(?:${A.result})`}toRegexRange.cache[l]=A;return A.result};function collatePatterns(e,t,r){let n=filterPatterns(e,t,\"-\",false,r)||[];let u=filterPatterns(t,e,\"\",false,r)||[];let s=filterPatterns(e,t,\"-?\",true,r)||[];let o=n.concat(s).concat(u);return o.join(\"|\")}function splitToRanges(e,t){let r=1;let n=1;let u=countNines(e,r);let s=new Set([t]);while(e<=u&&u<=t){s.add(u);r+=1;u=countNines(e,r)}u=countZeros(t+1,n)-1;while(e<u&&u<=t){s.add(u);n+=1;u=countZeros(t+1,n)-1}s=[...s];s.sort(compare);return s}function rangeToPattern(e,t,r){if(e===t){return{pattern:e,count:[],digits:0}}let n=zip(e,t);let u=n.length;let s=\"\";let o=0;for(let e=0;e<u;e++){let[t,u]=n[e];if(t===u){s+=t}else if(t!==\"0\"||u!==\"9\"){s+=toCharacterClass(t,u,r)}else{o++}}if(o){s+=r.shorthand===true?\"\\\\d\":\"[0-9]\"}return{pattern:s,count:[o],digits:u}}function splitToPatterns(e,t,r,n){let u=splitToRanges(e,t);let s=[];let o=e;let i;for(let e=0;e<u.length;e++){let t=u[e];let a=rangeToPattern(String(o),String(t),n);let l=\"\";if(!r.isPadded&&i&&i.pattern===a.pattern){if(i.count.length>1){i.count.pop()}i.count.push(a.count[0]);i.string=i.pattern+toQuantifier(i.count);o=t+1;continue}if(r.isPadded){l=padZeros(t,r,n)}a.string=l+a.pattern+toQuantifier(a.count);s.push(a);o=t+1;i=a}return s}function filterPatterns(e,t,r,n,u){let s=[];for(let u of e){let{string:e}=u;if(!n&&!contains(t,\"string\",e)){s.push(r+e)}if(n&&contains(t,\"string\",e)){s.push(r+e)}}return s}function zip(e,t){let r=[];for(let n=0;n<e.length;n++)r.push([e[n],t[n]]);return r}function compare(e,t){return e>t?1:t>e?-1:0}function contains(e,t,r){return e.some((e=>e[t]===r))}function countNines(e,t){return Number(String(e).slice(0,-t)+\"9\".repeat(t))}function countZeros(e,t){return e-e%Math.pow(10,t)}function toQuantifier(e){let[t=0,r=\"\"]=e;if(r||t>1){return`{${t+(r?\",\"+r:\"\")}}`}return\"\"}function toCharacterClass(e,t,r){return`[${e}${t-e===1?\"\":\"-\"}${t}]`}function hasPadding(e){return/^-?(0+)\\d/.test(e)}function padZeros(e,t,r){if(!t.isPadded){return e}let n=Math.abs(t.maxLen-String(e).length);let u=r.relaxZeros!==false;switch(n){case 0:return\"\";case 1:return u?\"0?\":\"0\";case 2:return u?\"0{0,2}\":\"00\";default:{return u?`0{0,${n}}`:`0{${n}}`}}}toRegexRange.cache={};toRegexRange.clearCache=()=>toRegexRange.cache={};e.exports=toRegexRange},17:e=>{e.exports=__webpack_require__(/*! path */ \"./node_modules/next/dist/compiled/path-browserify/index.js\")},837:e=>{e.exports=__webpack_require__(/*! util */ \"./node_modules/next/dist/compiled/util/util.js\")}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var u=t[r]={exports:{}};var s=true;try{e[r](u,u.exports,__nccwpck_require__);s=false}finally{if(s)delete t[r]}return u.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(971);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/micromatch/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/path-browserify/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-browserify/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){\"use strict\";var e={114:function(e){function assertPath(e){if(typeof e!==\"string\"){throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(e))}}function normalizeStringPosix(e,r){var t=\"\";var i=0;var n=-1;var a=0;var f;for(var l=0;l<=e.length;++l){if(l<e.length)f=e.charCodeAt(l);else if(f===47)break;else f=47;if(f===47){if(n===l-1||a===1){}else if(n!==l-1&&a===2){if(t.length<2||i!==2||t.charCodeAt(t.length-1)!==46||t.charCodeAt(t.length-2)!==46){if(t.length>2){var s=t.lastIndexOf(\"/\");if(s!==t.length-1){if(s===-1){t=\"\";i=0}else{t=t.slice(0,s);i=t.length-1-t.lastIndexOf(\"/\")}n=l;a=0;continue}}else if(t.length===2||t.length===1){t=\"\";i=0;n=l;a=0;continue}}if(r){if(t.length>0)t+=\"/..\";else t=\"..\";i=2}}else{if(t.length>0)t+=\"/\"+e.slice(n+1,l);else t=e.slice(n+1,l);i=l-n-1}n=l;a=0}else if(f===46&&a!==-1){++a}else{a=-1}}return t}function _format(e,r){var t=r.dir||r.root;var i=r.base||(r.name||\"\")+(r.ext||\"\");if(!t){return i}if(t===r.root){return t+i}return t+e+i}var r={resolve:function resolve(){var e=\"\";var r=false;var t;for(var i=arguments.length-1;i>=-1&&!r;i--){var n;if(i>=0)n=arguments[i];else{if(t===undefined)t=\"\";n=t}assertPath(n);if(n.length===0){continue}e=n+\"/\"+e;r=n.charCodeAt(0)===47}e=normalizeStringPosix(e,!r);if(r){if(e.length>0)return\"/\"+e;else return\"/\"}else if(e.length>0){return e}else{return\".\"}},normalize:function normalize(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0)===47;var t=e.charCodeAt(e.length-1)===47;e=normalizeStringPosix(e,!r);if(e.length===0&&!r)e=\".\";if(e.length>0&&t)e+=\"/\";if(r)return\"/\"+e;return e},isAbsolute:function isAbsolute(e){assertPath(e);return e.length>0&&e.charCodeAt(0)===47},join:function join(){if(arguments.length===0)return\".\";var e;for(var t=0;t<arguments.length;++t){var i=arguments[t];assertPath(i);if(i.length>0){if(e===undefined)e=i;else e+=\"/\"+i}}if(e===undefined)return\".\";return r.normalize(e)},relative:function relative(e,t){assertPath(e);assertPath(t);if(e===t)return\"\";e=r.resolve(e);t=r.resolve(t);if(e===t)return\"\";var i=1;for(;i<e.length;++i){if(e.charCodeAt(i)!==47)break}var n=e.length;var a=n-i;var f=1;for(;f<t.length;++f){if(t.charCodeAt(f)!==47)break}var l=t.length;var s=l-f;var o=a<s?a:s;var u=-1;var h=0;for(;h<=o;++h){if(h===o){if(s>o){if(t.charCodeAt(f+h)===47){return t.slice(f+h+1)}else if(h===0){return t.slice(f+h)}}else if(a>o){if(e.charCodeAt(i+h)===47){u=h}else if(h===0){u=0}}break}var c=e.charCodeAt(i+h);var v=t.charCodeAt(f+h);if(c!==v)break;else if(c===47)u=h}var g=\"\";for(h=i+u+1;h<=n;++h){if(h===n||e.charCodeAt(h)===47){if(g.length===0)g+=\"..\";else g+=\"/..\"}}if(g.length>0)return g+t.slice(f+u);else{f+=u;if(t.charCodeAt(f)===47)++f;return t.slice(f)}},_makeLong:function _makeLong(e){return e},dirname:function dirname(e){assertPath(e);if(e.length===0)return\".\";var r=e.charCodeAt(0);var t=r===47;var i=-1;var n=true;for(var a=e.length-1;a>=1;--a){r=e.charCodeAt(a);if(r===47){if(!n){i=a;break}}else{n=false}}if(i===-1)return t?\"/\":\".\";if(t&&i===1)return\"//\";return e.slice(0,i)},basename:function basename(e,r){if(r!==undefined&&typeof r!==\"string\")throw new TypeError('\"ext\" argument must be a string');assertPath(e);var t=0;var i=-1;var n=true;var a;if(r!==undefined&&r.length>0&&r.length<=e.length){if(r.length===e.length&&r===e)return\"\";var f=r.length-1;var l=-1;for(a=e.length-1;a>=0;--a){var s=e.charCodeAt(a);if(s===47){if(!n){t=a+1;break}}else{if(l===-1){n=false;l=a+1}if(f>=0){if(s===r.charCodeAt(f)){if(--f===-1){i=a}}else{f=-1;i=l}}}}if(t===i)i=l;else if(i===-1)i=e.length;return e.slice(t,i)}else{for(a=e.length-1;a>=0;--a){if(e.charCodeAt(a)===47){if(!n){t=a+1;break}}else if(i===-1){n=false;i=a+1}}if(i===-1)return\"\";return e.slice(t,i)}},extname:function extname(e){assertPath(e);var r=-1;var t=0;var i=-1;var n=true;var a=0;for(var f=e.length-1;f>=0;--f){var l=e.charCodeAt(f);if(l===47){if(!n){t=f+1;break}continue}if(i===-1){n=false;i=f+1}if(l===46){if(r===-1)r=f;else if(a!==1)a=1}else if(r!==-1){a=-1}}if(r===-1||i===-1||a===0||a===1&&r===i-1&&r===t+1){return\"\"}return e.slice(r,i)},format:function format(e){if(e===null||typeof e!==\"object\"){throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof e)}return _format(\"/\",e)},parse:function parse(e){assertPath(e);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(e.length===0)return r;var t=e.charCodeAt(0);var i=t===47;var n;if(i){r.root=\"/\";n=1}else{n=0}var a=-1;var f=0;var l=-1;var s=true;var o=e.length-1;var u=0;for(;o>=n;--o){t=e.charCodeAt(o);if(t===47){if(!s){f=o+1;break}continue}if(l===-1){s=false;l=o+1}if(t===46){if(a===-1)a=o;else if(u!==1)u=1}else if(a!==-1){u=-1}}if(a===-1||l===-1||u===0||u===1&&a===l-1&&a===f+1){if(l!==-1){if(f===0&&i)r.base=r.name=e.slice(1,l);else r.base=r.name=e.slice(f,l)}}else{if(f===0&&i){r.name=e.slice(1,a);r.base=e.slice(1,l)}else{r.name=e.slice(f,a);r.base=e.slice(f,l)}r.ext=e.slice(a,l)}if(f>0)r.dir=e.slice(0,f-1);else if(i)r.dir=\"/\";return r},sep:\"/\",delimiter:\":\",win32:null,posix:null};r.posix=r;e.exports=r}};var r={};function __nccwpck_require__(t){var i=r[t];if(i!==undefined){return i.exports}var n=r[t]={exports:{}};var a=true;try{e[t](n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(114);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/path-browserify/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/process/browser.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/compiled/process/browser.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={229:function(e){var t=e.exports={};var r;var n;function defaultSetTimout(){throw new Error(\"setTimeout has not been defined\")}function defaultClearTimeout(){throw new Error(\"clearTimeout has not been defined\")}(function(){try{if(typeof setTimeout===\"function\"){r=setTimeout}else{r=defaultSetTimout}}catch(e){r=defaultSetTimout}try{if(typeof clearTimeout===\"function\"){n=clearTimeout}else{n=defaultClearTimeout}}catch(e){n=defaultClearTimeout}})();function runTimeout(e){if(r===setTimeout){return setTimeout(e,0)}if((r===defaultSetTimout||!r)&&setTimeout){r=setTimeout;return setTimeout(e,0)}try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}function runClearTimeout(e){if(n===clearTimeout){return clearTimeout(e)}if((n===defaultClearTimeout||!n)&&clearTimeout){n=clearTimeout;return clearTimeout(e)}try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}var i=[];var o=false;var u;var a=-1;function cleanUpNextTick(){if(!o||!u){return}o=false;if(u.length){i=u.concat(i)}else{a=-1}if(i.length){drainQueue()}}function drainQueue(){if(o){return}var e=runTimeout(cleanUpNextTick);o=true;var t=i.length;while(t){u=i;i=[];while(++a<t){if(u){u[a].run()}}a=-1;t=i.length}u=null;o=false;runClearTimeout(e)}t.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1){for(var r=1;r<arguments.length;r++){t[r-1]=arguments[r]}}i.push(new Item(e,t));if(i.length===1&&!o){runTimeout(drainQueue)}};function Item(e,t){this.fun=e;this.array=t}Item.prototype.run=function(){this.fun.apply(null,this.array)};t.title=\"browser\";t.browser=true;t.env={};t.argv=[];t.version=\"\";t.versions={};function noop(){}t.on=noop;t.addListener=noop;t.once=noop;t.off=noop;t.removeListener=noop;t.removeAllListeners=noop;t.emit=noop;t.prependListener=noop;t.prependOnceListener=noop;t.listeners=function(e){return[]};t.binding=function(e){throw new Error(\"process.binding is not supported\")};t.cwd=function(){return\"/\"};t.chdir=function(e){throw new Error(\"process.chdir is not supported\")};t.umask=function(){return 0}}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var o=true;try{e[r](i,i.exports,__nccwpck_require__);o=false}finally{if(o)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(229);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Byb2Nlc3MvYnJvd3Nlci5qcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixtQkFBbUIsTUFBTSxNQUFNLDRCQUE0QixtREFBbUQsK0JBQStCLHFEQUFxRCxZQUFZLElBQUksbUNBQW1DLGFBQWEsS0FBSyxvQkFBb0IsU0FBUyxtQkFBbUIsSUFBSSxxQ0FBcUMsZUFBZSxLQUFLLHVCQUF1QixTQUFTLHVCQUF1QixJQUFJLHVCQUF1QixtQkFBbUIsdUJBQXVCLDJDQUEyQyxhQUFhLHVCQUF1QixJQUFJLGNBQWMsU0FBUyxJQUFJLHdCQUF3QixTQUFTLDBCQUEwQiw0QkFBNEIscUJBQXFCLHVCQUF1QixnREFBZ0QsZUFBZSx1QkFBdUIsSUFBSSxZQUFZLFNBQVMsSUFBSSxzQkFBc0IsU0FBUyx3QkFBd0IsU0FBUyxZQUFZLE1BQU0sU0FBUywyQkFBMkIsV0FBVyxPQUFPLFFBQVEsYUFBYSxjQUFjLEtBQUssS0FBSyxhQUFhLGNBQWMsc0JBQXNCLE1BQU0sT0FBTyxrQ0FBa0MsT0FBTyxlQUFlLFNBQVMsSUFBSSxLQUFLLGFBQWEsTUFBTSxZQUFZLEtBQUssV0FBVyxPQUFPLFFBQVEsbUJBQW1CLHVCQUF1QixvQ0FBb0MsdUJBQXVCLFlBQVksbUJBQW1CLEtBQUsscUJBQXFCLHNCQUFzQixxQkFBcUIseUJBQXlCLG1CQUFtQixXQUFXLGFBQWEsOEJBQThCLGlDQUFpQyxrQkFBa0IsZUFBZSxTQUFTLFVBQVUsYUFBYSxjQUFjLGlCQUFpQixVQUFVLG1CQUFtQixZQUFZLFdBQVcsc0JBQXNCLDBCQUEwQixZQUFZLHVCQUF1QiwyQkFBMkIsd0JBQXdCLFVBQVUsc0JBQXNCLHFEQUFxRCxpQkFBaUIsV0FBVyxvQkFBb0IsbURBQW1ELG1CQUFtQixZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLCtCQUErQixpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9wcm9jZXNzL2Jyb3dzZXIuanM/MWIxZCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17MjI5OmZ1bmN0aW9uKGUpe3ZhciB0PWUuZXhwb3J0cz17fTt2YXIgcjt2YXIgbjtmdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwic2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZFwiKX1mdW5jdGlvbiBkZWZhdWx0Q2xlYXJUaW1lb3V0KCl7dGhyb3cgbmV3IEVycm9yKFwiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkXCIpfShmdW5jdGlvbigpe3RyeXtpZih0eXBlb2Ygc2V0VGltZW91dD09PVwiZnVuY3Rpb25cIil7cj1zZXRUaW1lb3V0fWVsc2V7cj1kZWZhdWx0U2V0VGltb3V0fX1jYXRjaChlKXtyPWRlZmF1bHRTZXRUaW1vdXR9dHJ5e2lmKHR5cGVvZiBjbGVhclRpbWVvdXQ9PT1cImZ1bmN0aW9uXCIpe249Y2xlYXJUaW1lb3V0fWVsc2V7bj1kZWZhdWx0Q2xlYXJUaW1lb3V0fX1jYXRjaChlKXtuPWRlZmF1bHRDbGVhclRpbWVvdXR9fSkoKTtmdW5jdGlvbiBydW5UaW1lb3V0KGUpe2lmKHI9PT1zZXRUaW1lb3V0KXtyZXR1cm4gc2V0VGltZW91dChlLDApfWlmKChyPT09ZGVmYXVsdFNldFRpbW91dHx8IXIpJiZzZXRUaW1lb3V0KXtyPXNldFRpbWVvdXQ7cmV0dXJuIHNldFRpbWVvdXQoZSwwKX10cnl7cmV0dXJuIHIoZSwwKX1jYXRjaCh0KXt0cnl7cmV0dXJuIHIuY2FsbChudWxsLGUsMCl9Y2F0Y2godCl7cmV0dXJuIHIuY2FsbCh0aGlzLGUsMCl9fX1mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQoZSl7aWYobj09PWNsZWFyVGltZW91dCl7cmV0dXJuIGNsZWFyVGltZW91dChlKX1pZigobj09PWRlZmF1bHRDbGVhclRpbWVvdXR8fCFuKSYmY2xlYXJUaW1lb3V0KXtuPWNsZWFyVGltZW91dDtyZXR1cm4gY2xlYXJUaW1lb3V0KGUpfXRyeXtyZXR1cm4gbihlKX1jYXRjaCh0KXt0cnl7cmV0dXJuIG4uY2FsbChudWxsLGUpfWNhdGNoKHQpe3JldHVybiBuLmNhbGwodGhpcyxlKX19fXZhciBpPVtdO3ZhciBvPWZhbHNlO3ZhciB1O3ZhciBhPS0xO2Z1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpe2lmKCFvfHwhdSl7cmV0dXJufW89ZmFsc2U7aWYodS5sZW5ndGgpe2k9dS5jb25jYXQoaSl9ZWxzZXthPS0xfWlmKGkubGVuZ3RoKXtkcmFpblF1ZXVlKCl9fWZ1bmN0aW9uIGRyYWluUXVldWUoKXtpZihvKXtyZXR1cm59dmFyIGU9cnVuVGltZW91dChjbGVhblVwTmV4dFRpY2spO289dHJ1ZTt2YXIgdD1pLmxlbmd0aDt3aGlsZSh0KXt1PWk7aT1bXTt3aGlsZSgrK2E8dCl7aWYodSl7dVthXS5ydW4oKX19YT0tMTt0PWkubGVuZ3RofXU9bnVsbDtvPWZhbHNlO3J1bkNsZWFyVGltZW91dChlKX10Lm5leHRUaWNrPWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSl7Zm9yKHZhciByPTE7cjxhcmd1bWVudHMubGVuZ3RoO3IrKyl7dFtyLTFdPWFyZ3VtZW50c1tyXX19aS5wdXNoKG5ldyBJdGVtKGUsdCkpO2lmKGkubGVuZ3RoPT09MSYmIW8pe3J1blRpbWVvdXQoZHJhaW5RdWV1ZSl9fTtmdW5jdGlvbiBJdGVtKGUsdCl7dGhpcy5mdW49ZTt0aGlzLmFycmF5PXR9SXRlbS5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07dC50aXRsZT1cImJyb3dzZXJcIjt0LmJyb3dzZXI9dHJ1ZTt0LmVudj17fTt0LmFyZ3Y9W107dC52ZXJzaW9uPVwiXCI7dC52ZXJzaW9ucz17fTtmdW5jdGlvbiBub29wKCl7fXQub249bm9vcDt0LmFkZExpc3RlbmVyPW5vb3A7dC5vbmNlPW5vb3A7dC5vZmY9bm9vcDt0LnJlbW92ZUxpc3RlbmVyPW5vb3A7dC5yZW1vdmVBbGxMaXN0ZW5lcnM9bm9vcDt0LmVtaXQ9bm9vcDt0LnByZXBlbmRMaXN0ZW5lcj1ub29wO3QucHJlcGVuZE9uY2VMaXN0ZW5lcj1ub29wO3QubGlzdGVuZXJzPWZ1bmN0aW9uKGUpe3JldHVybltdfTt0LmJpbmRpbmc9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5iaW5kaW5nIGlzIG5vdCBzdXBwb3J0ZWRcIil9O3QuY3dkPWZ1bmN0aW9uKCl7cmV0dXJuXCIvXCJ9O3QuY2hkaXI9ZnVuY3Rpb24oZSl7dGhyb3cgbmV3IEVycm9yKFwicHJvY2Vzcy5jaGRpciBpcyBub3Qgc3VwcG9ydGVkXCIpfTt0LnVtYXNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9fX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgbj10W3JdO2lmKG4hPT11bmRlZmluZWQpe3JldHVybiBuLmV4cG9ydHN9dmFyIGk9dFtyXT17ZXhwb3J0czp7fX07dmFyIG89dHJ1ZTt0cnl7ZVtyXShpLGkuZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTtvPWZhbHNlfWZpbmFsbHl7aWYobylkZWxldGUgdFtyXX1yZXR1cm4gaS5leHBvcnRzfWlmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgcj1fX25jY3dwY2tfcmVxdWlyZV9fKDIyOSk7bW9kdWxlLmV4cG9ydHM9cn0pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/process/browser.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/compiled/util/util.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/compiled/util/util.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"./node_modules/next/dist/build/polyfills/process.js\");\n(function(){var r={992:function(r){r.exports=function(r,t,n){if(r.filter)return r.filter(t,n);if(void 0===r||null===r)throw new TypeError;if(\"function\"!=typeof t)throw new TypeError;var o=[];for(var i=0;i<r.length;i++){if(!e.call(r,i))continue;var a=r[i];if(t.call(n,a,i,r))o.push(a)}return o};var e=Object.prototype.hasOwnProperty},256:function(r,e,t){\"use strict\";var n=t(500);var o=t(139);var i=o(n(\"String.prototype.indexOf\"));r.exports=function callBoundIntrinsic(r,e){var t=n(r,!!e);if(typeof t===\"function\"&&i(r,\".prototype.\")>-1){return o(t)}return t}},139:function(r,e,t){\"use strict\";var n=t(174);var o=t(500);var i=o(\"%Function.prototype.apply%\");var a=o(\"%Function.prototype.call%\");var f=o(\"%Reflect.apply%\",true)||n.call(a,i);var u=o(\"%Object.getOwnPropertyDescriptor%\",true);var s=o(\"%Object.defineProperty%\",true);var y=o(\"%Math.max%\");if(s){try{s({},\"a\",{value:1})}catch(r){s=null}}r.exports=function callBind(r){var e=f(n,a,arguments);if(u&&s){var t=u(e,\"length\");if(t.configurable){s(e,\"length\",{value:1+y(0,r.length-(arguments.length-1))})}}return e};var c=function applyBind(){return f(n,i,arguments)};if(s){s(r.exports,\"apply\",{value:c})}else{r.exports.apply=c}},144:function(r){var e=Object.prototype.hasOwnProperty;var t=Object.prototype.toString;r.exports=function forEach(r,n,o){if(t.call(n)!==\"[object Function]\"){throw new TypeError(\"iterator must be a function\")}var i=r.length;if(i===+i){for(var a=0;a<i;a++){n.call(o,r[a],a,r)}}else{for(var f in r){if(e.call(r,f)){n.call(o,r[f],f,r)}}}}},426:function(r){\"use strict\";var e=\"Function.prototype.bind called on incompatible \";var t=Array.prototype.slice;var n=Object.prototype.toString;var o=\"[object Function]\";r.exports=function bind(r){var i=this;if(typeof i!==\"function\"||n.call(i)!==o){throw new TypeError(e+i)}var a=t.call(arguments,1);var f;var binder=function(){if(this instanceof f){var e=i.apply(this,a.concat(t.call(arguments)));if(Object(e)===e){return e}return this}else{return i.apply(r,a.concat(t.call(arguments)))}};var u=Math.max(0,i.length-a.length);var s=[];for(var y=0;y<u;y++){s.push(\"$\"+y)}f=Function(\"binder\",\"return function (\"+s.join(\",\")+\"){ return binder.apply(this,arguments); }\")(binder);if(i.prototype){var c=function Empty(){};c.prototype=i.prototype;f.prototype=new c;c.prototype=null}return f}},174:function(r,e,t){\"use strict\";var n=t(426);r.exports=Function.prototype.bind||n},500:function(r,e,t){\"use strict\";var n;var o=SyntaxError;var i=Function;var a=TypeError;var getEvalledConstructor=function(r){try{return i('\"use strict\"; return ('+r+\").constructor;\")()}catch(r){}};var f=Object.getOwnPropertyDescriptor;if(f){try{f({},\"\")}catch(r){f=null}}var throwTypeError=function(){throw new a};var u=f?function(){try{arguments.callee;return throwTypeError}catch(r){try{return f(arguments,\"callee\").get}catch(r){return throwTypeError}}}():throwTypeError;var s=t(115)();var y=Object.getPrototypeOf||function(r){return r.__proto__};var c={};var p=typeof Uint8Array===\"undefined\"?n:y(Uint8Array);var l={\"%AggregateError%\":typeof AggregateError===\"undefined\"?n:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer===\"undefined\"?n:ArrayBuffer,\"%ArrayIteratorPrototype%\":s?y([][Symbol.iterator]()):n,\"%AsyncFromSyncIteratorPrototype%\":n,\"%AsyncFunction%\":c,\"%AsyncGenerator%\":c,\"%AsyncGeneratorFunction%\":c,\"%AsyncIteratorPrototype%\":c,\"%Atomics%\":typeof Atomics===\"undefined\"?n:Atomics,\"%BigInt%\":typeof BigInt===\"undefined\"?n:BigInt,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView===\"undefined\"?n:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array===\"undefined\"?n:Float32Array,\"%Float64Array%\":typeof Float64Array===\"undefined\"?n:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry===\"undefined\"?n:FinalizationRegistry,\"%Function%\":i,\"%GeneratorFunction%\":c,\"%Int8Array%\":typeof Int8Array===\"undefined\"?n:Int8Array,\"%Int16Array%\":typeof Int16Array===\"undefined\"?n:Int16Array,\"%Int32Array%\":typeof Int32Array===\"undefined\"?n:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":s?y(y([][Symbol.iterator]())):n,\"%JSON%\":typeof JSON===\"object\"?JSON:n,\"%Map%\":typeof Map===\"undefined\"?n:Map,\"%MapIteratorPrototype%\":typeof Map===\"undefined\"||!s?n:y((new Map)[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise===\"undefined\"?n:Promise,\"%Proxy%\":typeof Proxy===\"undefined\"?n:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect===\"undefined\"?n:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set===\"undefined\"?n:Set,\"%SetIteratorPrototype%\":typeof Set===\"undefined\"||!s?n:y((new Set)[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer===\"undefined\"?n:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":s?y(\"\"[Symbol.iterator]()):n,\"%Symbol%\":s?Symbol:n,\"%SyntaxError%\":o,\"%ThrowTypeError%\":u,\"%TypedArray%\":p,\"%TypeError%\":a,\"%Uint8Array%\":typeof Uint8Array===\"undefined\"?n:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray===\"undefined\"?n:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array===\"undefined\"?n:Uint16Array,\"%Uint32Array%\":typeof Uint32Array===\"undefined\"?n:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap===\"undefined\"?n:WeakMap,\"%WeakRef%\":typeof WeakRef===\"undefined\"?n:WeakRef,\"%WeakSet%\":typeof WeakSet===\"undefined\"?n:WeakSet};var g=function doEval(r){var e;if(r===\"%AsyncFunction%\"){e=getEvalledConstructor(\"async function () {}\")}else if(r===\"%GeneratorFunction%\"){e=getEvalledConstructor(\"function* () {}\")}else if(r===\"%AsyncGeneratorFunction%\"){e=getEvalledConstructor(\"async function* () {}\")}else if(r===\"%AsyncGenerator%\"){var t=doEval(\"%AsyncGeneratorFunction%\");if(t){e=t.prototype}}else if(r===\"%AsyncIteratorPrototype%\"){var n=doEval(\"%AsyncGenerator%\");if(n){e=y(n.prototype)}}l[r]=e;return e};var b={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]};var d=t(174);var v=t(101);var m=d.call(Function.call,Array.prototype.concat);var S=d.call(Function.apply,Array.prototype.splice);var A=d.call(Function.call,String.prototype.replace);var h=d.call(Function.call,String.prototype.slice);var O=d.call(Function.call,RegExp.prototype.exec);var j=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;var w=/\\\\(\\\\)?/g;var P=function stringToPath(r){var e=h(r,0,1);var t=h(r,-1);if(e===\"%\"&&t!==\"%\"){throw new o(\"invalid intrinsic syntax, expected closing `%`\")}else if(t===\"%\"&&e!==\"%\"){throw new o(\"invalid intrinsic syntax, expected opening `%`\")}var n=[];A(r,j,(function(r,e,t,o){n[n.length]=t?A(o,w,\"$1\"):e||r}));return n};var E=function getBaseIntrinsic(r,e){var t=r;var n;if(v(b,t)){n=b[t];t=\"%\"+n[0]+\"%\"}if(v(l,t)){var i=l[t];if(i===c){i=g(t)}if(typeof i===\"undefined\"&&!e){throw new a(\"intrinsic \"+r+\" exists, but is not available. Please file an issue!\")}return{alias:n,name:t,value:i}}throw new o(\"intrinsic \"+r+\" does not exist!\")};r.exports=function GetIntrinsic(r,e){if(typeof r!==\"string\"||r.length===0){throw new a(\"intrinsic name must be a non-empty string\")}if(arguments.length>1&&typeof e!==\"boolean\"){throw new a('\"allowMissing\" argument must be a boolean')}if(O(/^%?[^%]*%?$/g,r)===null){throw new o(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\")}var t=P(r);var i=t.length>0?t[0]:\"\";var u=E(\"%\"+i+\"%\",e);var s=u.name;var y=u.value;var c=false;var p=u.alias;if(p){i=p[0];S(t,m([0,1],p))}for(var g=1,b=true;g<t.length;g+=1){var d=t[g];var A=h(d,0,1);var j=h(d,-1);if((A==='\"'||A===\"'\"||A===\"`\"||(j==='\"'||j===\"'\"||j===\"`\"))&&A!==j){throw new o(\"property names with quotes must have matching quotes\")}if(d===\"constructor\"||!b){c=true}i+=\".\"+d;s=\"%\"+i+\"%\";if(v(l,s)){y=l[s]}else if(y!=null){if(!(d in y)){if(!e){throw new a(\"base intrinsic for \"+r+\" exists, but the property is not available.\")}return void n}if(f&&g+1>=t.length){var w=f(y,d);b=!!w;if(b&&\"get\"in w&&!(\"originalValue\"in w.get)){y=w.get}else{y=y[d]}}else{b=v(y,d);y=y[d]}if(b&&!c){l[s]=y}}}return y}},942:function(r,e,t){\"use strict\";var n=typeof Symbol!==\"undefined\"&&Symbol;var o=t(773);r.exports=function hasNativeSymbols(){if(typeof n!==\"function\"){return false}if(typeof Symbol!==\"function\"){return false}if(typeof n(\"foo\")!==\"symbol\"){return false}if(typeof Symbol(\"bar\")!==\"symbol\"){return false}return o()}},773:function(r){\"use strict\";r.exports=function hasSymbols(){if(typeof Symbol!==\"function\"||typeof Object.getOwnPropertySymbols!==\"function\"){return false}if(typeof Symbol.iterator===\"symbol\"){return true}var r={};var e=Symbol(\"test\");var t=Object(e);if(typeof e===\"string\"){return false}if(Object.prototype.toString.call(e)!==\"[object Symbol]\"){return false}if(Object.prototype.toString.call(t)!==\"[object Symbol]\"){return false}var n=42;r[e]=n;for(e in r){return false}if(typeof Object.keys===\"function\"&&Object.keys(r).length!==0){return false}if(typeof Object.getOwnPropertyNames===\"function\"&&Object.getOwnPropertyNames(r).length!==0){return false}var o=Object.getOwnPropertySymbols(r);if(o.length!==1||o[0]!==e){return false}if(!Object.prototype.propertyIsEnumerable.call(r,e)){return false}if(typeof Object.getOwnPropertyDescriptor===\"function\"){var i=Object.getOwnPropertyDescriptor(r,e);if(i.value!==n||i.enumerable!==true){return false}}return true}},115:function(r,e,t){\"use strict\";var n=typeof Symbol!==\"undefined\"&&Symbol;var o=t(832);r.exports=function hasNativeSymbols(){if(typeof n!==\"function\"){return false}if(typeof Symbol!==\"function\"){return false}if(typeof n(\"foo\")!==\"symbol\"){return false}if(typeof Symbol(\"bar\")!==\"symbol\"){return false}return o()}},832:function(r){\"use strict\";r.exports=function hasSymbols(){if(typeof Symbol!==\"function\"||typeof Object.getOwnPropertySymbols!==\"function\"){return false}if(typeof Symbol.iterator===\"symbol\"){return true}var r={};var e=Symbol(\"test\");var t=Object(e);if(typeof e===\"string\"){return false}if(Object.prototype.toString.call(e)!==\"[object Symbol]\"){return false}if(Object.prototype.toString.call(t)!==\"[object Symbol]\"){return false}var n=42;r[e]=n;for(e in r){return false}if(typeof Object.keys===\"function\"&&Object.keys(r).length!==0){return false}if(typeof Object.getOwnPropertyNames===\"function\"&&Object.getOwnPropertyNames(r).length!==0){return false}var o=Object.getOwnPropertySymbols(r);if(o.length!==1||o[0]!==e){return false}if(!Object.prototype.propertyIsEnumerable.call(r,e)){return false}if(typeof Object.getOwnPropertyDescriptor===\"function\"){var i=Object.getOwnPropertyDescriptor(r,e);if(i.value!==n||i.enumerable!==true){return false}}return true}},101:function(r,e,t){\"use strict\";var n=t(174);r.exports=n.call(Function.call,Object.prototype.hasOwnProperty)},782:function(r){if(typeof Object.create===\"function\"){r.exports=function inherits(r,e){if(e){r.super_=e;r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:false,writable:true,configurable:true}})}}}else{r.exports=function inherits(r,e){if(e){r.super_=e;var TempCtor=function(){};TempCtor.prototype=e.prototype;r.prototype=new TempCtor;r.prototype.constructor=r}}}},157:function(r){\"use strict\";var e=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var t=Object.prototype.toString;var n=function isArguments(r){if(e&&r&&typeof r===\"object\"&&Symbol.toStringTag in r){return false}return t.call(r)===\"[object Arguments]\"};var o=function isArguments(r){if(n(r)){return true}return r!==null&&typeof r===\"object\"&&typeof r.length===\"number\"&&r.length>=0&&t.call(r)!==\"[object Array]\"&&t.call(r.callee)===\"[object Function]\"};var i=function(){return n(arguments)}();n.isLegacyArguments=o;r.exports=i?n:o},391:function(r){\"use strict\";var e=Object.prototype.toString;var t=Function.prototype.toString;var n=/^\\s*(?:function)?\\*/;var o=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var i=Object.getPrototypeOf;var getGeneratorFunc=function(){if(!o){return false}try{return Function(\"return function*() {}\")()}catch(r){}};var a=getGeneratorFunc();var f=a?i(a):{};r.exports=function isGeneratorFunction(r){if(typeof r!==\"function\"){return false}if(n.test(t.call(r))){return true}if(!o){var a=e.call(r);return a===\"[object GeneratorFunction]\"}return i(r)===f}},994:function(r,e,t){\"use strict\";var n=t(144);var o=t(349);var i=t(256);var a=i(\"Object.prototype.toString\");var f=t(942)();var u=f&&typeof Symbol.toStringTag===\"symbol\";var s=o();var y=i(\"Array.prototype.indexOf\",true)||function indexOf(r,e){for(var t=0;t<r.length;t+=1){if(r[t]===e){return t}}return-1};var c=i(\"String.prototype.slice\");var p={};var l=t(466);var g=Object.getPrototypeOf;if(u&&l&&g){n(s,(function(r){var e=new __webpack_require__.g[r];if(!(Symbol.toStringTag in e)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+r+\" does not have the property! Please report this.\")}var t=g(e);var n=l(t,Symbol.toStringTag);if(!n){var o=g(t);n=l(o,Symbol.toStringTag)}p[r]=n.get}))}var b=function tryAllTypedArrays(r){var e=false;n(p,(function(t,n){if(!e){try{e=t.call(r)===n}catch(r){}}}));return e};r.exports=function isTypedArray(r){if(!r||typeof r!==\"object\"){return false}if(!u){var e=c(a(r),8,-1);return y(s,e)>-1}if(!l){return false}return b(r)}},369:function(r){r.exports=function isBuffer(r){return r instanceof Buffer}},584:function(r,e,t){\"use strict\";var n=t(157);var o=t(391);var i=t(490);var a=t(994);function uncurryThis(r){return r.call.bind(r)}var f=typeof BigInt!==\"undefined\";var u=typeof Symbol!==\"undefined\";var s=uncurryThis(Object.prototype.toString);var y=uncurryThis(Number.prototype.valueOf);var c=uncurryThis(String.prototype.valueOf);var p=uncurryThis(Boolean.prototype.valueOf);if(f){var l=uncurryThis(BigInt.prototype.valueOf)}if(u){var g=uncurryThis(Symbol.prototype.valueOf)}function checkBoxedPrimitive(r,e){if(typeof r!==\"object\"){return false}try{e(r);return true}catch(r){return false}}e.isArgumentsObject=n;e.isGeneratorFunction=o;e.isTypedArray=a;function isPromise(r){return typeof Promise!==\"undefined\"&&r instanceof Promise||r!==null&&typeof r===\"object\"&&typeof r.then===\"function\"&&typeof r.catch===\"function\"}e.isPromise=isPromise;function isArrayBufferView(r){if(typeof ArrayBuffer!==\"undefined\"&&ArrayBuffer.isView){return ArrayBuffer.isView(r)}return a(r)||isDataView(r)}e.isArrayBufferView=isArrayBufferView;function isUint8Array(r){return i(r)===\"Uint8Array\"}e.isUint8Array=isUint8Array;function isUint8ClampedArray(r){return i(r)===\"Uint8ClampedArray\"}e.isUint8ClampedArray=isUint8ClampedArray;function isUint16Array(r){return i(r)===\"Uint16Array\"}e.isUint16Array=isUint16Array;function isUint32Array(r){return i(r)===\"Uint32Array\"}e.isUint32Array=isUint32Array;function isInt8Array(r){return i(r)===\"Int8Array\"}e.isInt8Array=isInt8Array;function isInt16Array(r){return i(r)===\"Int16Array\"}e.isInt16Array=isInt16Array;function isInt32Array(r){return i(r)===\"Int32Array\"}e.isInt32Array=isInt32Array;function isFloat32Array(r){return i(r)===\"Float32Array\"}e.isFloat32Array=isFloat32Array;function isFloat64Array(r){return i(r)===\"Float64Array\"}e.isFloat64Array=isFloat64Array;function isBigInt64Array(r){return i(r)===\"BigInt64Array\"}e.isBigInt64Array=isBigInt64Array;function isBigUint64Array(r){return i(r)===\"BigUint64Array\"}e.isBigUint64Array=isBigUint64Array;function isMapToString(r){return s(r)===\"[object Map]\"}isMapToString.working=typeof Map!==\"undefined\"&&isMapToString(new Map);function isMap(r){if(typeof Map===\"undefined\"){return false}return isMapToString.working?isMapToString(r):r instanceof Map}e.isMap=isMap;function isSetToString(r){return s(r)===\"[object Set]\"}isSetToString.working=typeof Set!==\"undefined\"&&isSetToString(new Set);function isSet(r){if(typeof Set===\"undefined\"){return false}return isSetToString.working?isSetToString(r):r instanceof Set}e.isSet=isSet;function isWeakMapToString(r){return s(r)===\"[object WeakMap]\"}isWeakMapToString.working=typeof WeakMap!==\"undefined\"&&isWeakMapToString(new WeakMap);function isWeakMap(r){if(typeof WeakMap===\"undefined\"){return false}return isWeakMapToString.working?isWeakMapToString(r):r instanceof WeakMap}e.isWeakMap=isWeakMap;function isWeakSetToString(r){return s(r)===\"[object WeakSet]\"}isWeakSetToString.working=typeof WeakSet!==\"undefined\"&&isWeakSetToString(new WeakSet);function isWeakSet(r){return isWeakSetToString(r)}e.isWeakSet=isWeakSet;function isArrayBufferToString(r){return s(r)===\"[object ArrayBuffer]\"}isArrayBufferToString.working=typeof ArrayBuffer!==\"undefined\"&&isArrayBufferToString(new ArrayBuffer);function isArrayBuffer(r){if(typeof ArrayBuffer===\"undefined\"){return false}return isArrayBufferToString.working?isArrayBufferToString(r):r instanceof ArrayBuffer}e.isArrayBuffer=isArrayBuffer;function isDataViewToString(r){return s(r)===\"[object DataView]\"}isDataViewToString.working=typeof ArrayBuffer!==\"undefined\"&&typeof DataView!==\"undefined\"&&isDataViewToString(new DataView(new ArrayBuffer(1),0,1));function isDataView(r){if(typeof DataView===\"undefined\"){return false}return isDataViewToString.working?isDataViewToString(r):r instanceof DataView}e.isDataView=isDataView;var b=typeof SharedArrayBuffer!==\"undefined\"?SharedArrayBuffer:undefined;function isSharedArrayBufferToString(r){return s(r)===\"[object SharedArrayBuffer]\"}function isSharedArrayBuffer(r){if(typeof b===\"undefined\"){return false}if(typeof isSharedArrayBufferToString.working===\"undefined\"){isSharedArrayBufferToString.working=isSharedArrayBufferToString(new b)}return isSharedArrayBufferToString.working?isSharedArrayBufferToString(r):r instanceof b}e.isSharedArrayBuffer=isSharedArrayBuffer;function isAsyncFunction(r){return s(r)===\"[object AsyncFunction]\"}e.isAsyncFunction=isAsyncFunction;function isMapIterator(r){return s(r)===\"[object Map Iterator]\"}e.isMapIterator=isMapIterator;function isSetIterator(r){return s(r)===\"[object Set Iterator]\"}e.isSetIterator=isSetIterator;function isGeneratorObject(r){return s(r)===\"[object Generator]\"}e.isGeneratorObject=isGeneratorObject;function isWebAssemblyCompiledModule(r){return s(r)===\"[object WebAssembly.Module]\"}e.isWebAssemblyCompiledModule=isWebAssemblyCompiledModule;function isNumberObject(r){return checkBoxedPrimitive(r,y)}e.isNumberObject=isNumberObject;function isStringObject(r){return checkBoxedPrimitive(r,c)}e.isStringObject=isStringObject;function isBooleanObject(r){return checkBoxedPrimitive(r,p)}e.isBooleanObject=isBooleanObject;function isBigIntObject(r){return f&&checkBoxedPrimitive(r,l)}e.isBigIntObject=isBigIntObject;function isSymbolObject(r){return u&&checkBoxedPrimitive(r,g)}e.isSymbolObject=isSymbolObject;function isBoxedPrimitive(r){return isNumberObject(r)||isStringObject(r)||isBooleanObject(r)||isBigIntObject(r)||isSymbolObject(r)}e.isBoxedPrimitive=isBoxedPrimitive;function isAnyArrayBuffer(r){return typeof Uint8Array!==\"undefined\"&&(isArrayBuffer(r)||isSharedArrayBuffer(r))}e.isAnyArrayBuffer=isAnyArrayBuffer;[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach((function(r){Object.defineProperty(e,r,{enumerable:false,value:function(){throw new Error(r+\" is not supported in userland\")}})}))},177:function(r,e,t){var n=Object.getOwnPropertyDescriptors||function getOwnPropertyDescriptors(r){var e=Object.keys(r);var t={};for(var n=0;n<e.length;n++){t[e[n]]=Object.getOwnPropertyDescriptor(r,e[n])}return t};var o=/%[sdj%]/g;e.format=function(r){if(!isString(r)){var e=[];for(var t=0;t<arguments.length;t++){e.push(inspect(arguments[t]))}return e.join(\" \")}var t=1;var n=arguments;var i=n.length;var a=String(r).replace(o,(function(r){if(r===\"%%\")return\"%\";if(t>=i)return r;switch(r){case\"%s\":return String(n[t++]);case\"%d\":return Number(n[t++]);case\"%j\":try{return JSON.stringify(n[t++])}catch(r){return\"[Circular]\"}default:return r}}));for(var f=n[t];t<i;f=n[++t]){if(isNull(f)||!isObject(f)){a+=\" \"+f}else{a+=\" \"+inspect(f)}}return a};e.deprecate=function(r,t){if(typeof process!==\"undefined\"&&process.noDeprecation===true){return r}if(typeof process===\"undefined\"){return function(){return e.deprecate(r,t).apply(this,arguments)}}var n=false;function deprecated(){if(!n){if(process.throwDeprecation){throw new Error(t)}else if(process.traceDeprecation){console.trace(t)}else{console.error(t)}n=true}return r.apply(this,arguments)}return deprecated};var i={};var a=/^$/;if(process.env.NODE_DEBUG){var f=process.env.NODE_DEBUG;f=f.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase();a=new RegExp(\"^\"+f+\"$\",\"i\")}e.debuglog=function(r){r=r.toUpperCase();if(!i[r]){if(a.test(r)){var t=process.pid;i[r]=function(){var n=e.format.apply(e,arguments);console.error(\"%s %d: %s\",r,t,n)}}else{i[r]=function(){}}}return i[r]};function inspect(r,t){var n={seen:[],stylize:stylizeNoColor};if(arguments.length>=3)n.depth=arguments[2];if(arguments.length>=4)n.colors=arguments[3];if(isBoolean(t)){n.showHidden=t}else if(t){e._extend(n,t)}if(isUndefined(n.showHidden))n.showHidden=false;if(isUndefined(n.depth))n.depth=2;if(isUndefined(n.colors))n.colors=false;if(isUndefined(n.customInspect))n.customInspect=true;if(n.colors)n.stylize=stylizeWithColor;return formatValue(n,r,n.depth)}e.inspect=inspect;inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]};inspect.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"};function stylizeWithColor(r,e){var t=inspect.styles[e];if(t){return\"\u001b[\"+inspect.colors[t][0]+\"m\"+r+\"\u001b[\"+inspect.colors[t][1]+\"m\"}else{return r}}function stylizeNoColor(r,e){return r}function arrayToHash(r){var e={};r.forEach((function(r,t){e[r]=true}));return e}function formatValue(r,t,n){if(r.customInspect&&t&&isFunction(t.inspect)&&t.inspect!==e.inspect&&!(t.constructor&&t.constructor.prototype===t)){var o=t.inspect(n,r);if(!isString(o)){o=formatValue(r,o,n)}return o}var i=formatPrimitive(r,t);if(i){return i}var a=Object.keys(t);var f=arrayToHash(a);if(r.showHidden){a=Object.getOwnPropertyNames(t)}if(isError(t)&&(a.indexOf(\"message\")>=0||a.indexOf(\"description\")>=0)){return formatError(t)}if(a.length===0){if(isFunction(t)){var u=t.name?\": \"+t.name:\"\";return r.stylize(\"[Function\"+u+\"]\",\"special\")}if(isRegExp(t)){return r.stylize(RegExp.prototype.toString.call(t),\"regexp\")}if(isDate(t)){return r.stylize(Date.prototype.toString.call(t),\"date\")}if(isError(t)){return formatError(t)}}var s=\"\",y=false,c=[\"{\",\"}\"];if(isArray(t)){y=true;c=[\"[\",\"]\"]}if(isFunction(t)){var p=t.name?\": \"+t.name:\"\";s=\" [Function\"+p+\"]\"}if(isRegExp(t)){s=\" \"+RegExp.prototype.toString.call(t)}if(isDate(t)){s=\" \"+Date.prototype.toUTCString.call(t)}if(isError(t)){s=\" \"+formatError(t)}if(a.length===0&&(!y||t.length==0)){return c[0]+s+c[1]}if(n<0){if(isRegExp(t)){return r.stylize(RegExp.prototype.toString.call(t),\"regexp\")}else{return r.stylize(\"[Object]\",\"special\")}}r.seen.push(t);var l;if(y){l=formatArray(r,t,n,f,a)}else{l=a.map((function(e){return formatProperty(r,t,n,f,e,y)}))}r.seen.pop();return reduceToSingleString(l,s,c)}function formatPrimitive(r,e){if(isUndefined(e))return r.stylize(\"undefined\",\"undefined\");if(isString(e)){var t=\"'\"+JSON.stringify(e).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return r.stylize(t,\"string\")}if(isNumber(e))return r.stylize(\"\"+e,\"number\");if(isBoolean(e))return r.stylize(\"\"+e,\"boolean\");if(isNull(e))return r.stylize(\"null\",\"null\")}function formatError(r){return\"[\"+Error.prototype.toString.call(r)+\"]\"}function formatArray(r,e,t,n,o){var i=[];for(var a=0,f=e.length;a<f;++a){if(hasOwnProperty(e,String(a))){i.push(formatProperty(r,e,t,n,String(a),true))}else{i.push(\"\")}}o.forEach((function(o){if(!o.match(/^\\d+$/)){i.push(formatProperty(r,e,t,n,o,true))}}));return i}function formatProperty(r,e,t,n,o,i){var a,f,u;u=Object.getOwnPropertyDescriptor(e,o)||{value:e[o]};if(u.get){if(u.set){f=r.stylize(\"[Getter/Setter]\",\"special\")}else{f=r.stylize(\"[Getter]\",\"special\")}}else{if(u.set){f=r.stylize(\"[Setter]\",\"special\")}}if(!hasOwnProperty(n,o)){a=\"[\"+o+\"]\"}if(!f){if(r.seen.indexOf(u.value)<0){if(isNull(t)){f=formatValue(r,u.value,null)}else{f=formatValue(r,u.value,t-1)}if(f.indexOf(\"\\n\")>-1){if(i){f=f.split(\"\\n\").map((function(r){return\"  \"+r})).join(\"\\n\").substr(2)}else{f=\"\\n\"+f.split(\"\\n\").map((function(r){return\"   \"+r})).join(\"\\n\")}}}else{f=r.stylize(\"[Circular]\",\"special\")}}if(isUndefined(a)){if(i&&o.match(/^\\d+$/)){return f}a=JSON.stringify(\"\"+o);if(a.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)){a=a.substr(1,a.length-2);a=r.stylize(a,\"name\")}else{a=a.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\");a=r.stylize(a,\"string\")}}return a+\": \"+f}function reduceToSingleString(r,e,t){var n=0;var o=r.reduce((function(r,e){n++;if(e.indexOf(\"\\n\")>=0)n++;return r+e.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1}),0);if(o>60){return t[0]+(e===\"\"?\"\":e+\"\\n \")+\" \"+r.join(\",\\n  \")+\" \"+t[1]}return t[0]+e+\" \"+r.join(\", \")+\" \"+t[1]}e.types=t(584);function isArray(r){return Array.isArray(r)}e.isArray=isArray;function isBoolean(r){return typeof r===\"boolean\"}e.isBoolean=isBoolean;function isNull(r){return r===null}e.isNull=isNull;function isNullOrUndefined(r){return r==null}e.isNullOrUndefined=isNullOrUndefined;function isNumber(r){return typeof r===\"number\"}e.isNumber=isNumber;function isString(r){return typeof r===\"string\"}e.isString=isString;function isSymbol(r){return typeof r===\"symbol\"}e.isSymbol=isSymbol;function isUndefined(r){return r===void 0}e.isUndefined=isUndefined;function isRegExp(r){return isObject(r)&&objectToString(r)===\"[object RegExp]\"}e.isRegExp=isRegExp;e.types.isRegExp=isRegExp;function isObject(r){return typeof r===\"object\"&&r!==null}e.isObject=isObject;function isDate(r){return isObject(r)&&objectToString(r)===\"[object Date]\"}e.isDate=isDate;e.types.isDate=isDate;function isError(r){return isObject(r)&&(objectToString(r)===\"[object Error]\"||r instanceof Error)}e.isError=isError;e.types.isNativeError=isError;function isFunction(r){return typeof r===\"function\"}e.isFunction=isFunction;function isPrimitive(r){return r===null||typeof r===\"boolean\"||typeof r===\"number\"||typeof r===\"string\"||typeof r===\"symbol\"||typeof r===\"undefined\"}e.isPrimitive=isPrimitive;e.isBuffer=t(369);function objectToString(r){return Object.prototype.toString.call(r)}function pad(r){return r<10?\"0\"+r.toString(10):r.toString(10)}var u=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function timestamp(){var r=new Date;var e=[pad(r.getHours()),pad(r.getMinutes()),pad(r.getSeconds())].join(\":\");return[r.getDate(),u[r.getMonth()],e].join(\" \")}e.log=function(){console.log(\"%s - %s\",timestamp(),e.format.apply(e,arguments))};e.inherits=t(782);e._extend=function(r,e){if(!e||!isObject(e))return r;var t=Object.keys(e);var n=t.length;while(n--){r[t[n]]=e[t[n]]}return r};function hasOwnProperty(r,e){return Object.prototype.hasOwnProperty.call(r,e)}var s=typeof Symbol!==\"undefined\"?Symbol(\"util.promisify.custom\"):undefined;e.promisify=function promisify(r){if(typeof r!==\"function\")throw new TypeError('The \"original\" argument must be of type Function');if(s&&r[s]){var e=r[s];if(typeof e!==\"function\"){throw new TypeError('The \"util.promisify.custom\" argument must be of type Function')}Object.defineProperty(e,s,{value:e,enumerable:false,writable:false,configurable:true});return e}function e(){var e,t;var n=new Promise((function(r,n){e=r;t=n}));var o=[];for(var i=0;i<arguments.length;i++){o.push(arguments[i])}o.push((function(r,n){if(r){t(r)}else{e(n)}}));try{r.apply(this,o)}catch(r){t(r)}return n}Object.setPrototypeOf(e,Object.getPrototypeOf(r));if(s)Object.defineProperty(e,s,{value:e,enumerable:false,writable:false,configurable:true});return Object.defineProperties(e,n(r))};e.promisify.custom=s;function callbackifyOnRejected(r,e){if(!r){var t=new Error(\"Promise was rejected with a falsy value\");t.reason=r;r=t}return e(r)}function callbackify(r){if(typeof r!==\"function\"){throw new TypeError('The \"original\" argument must be of type Function')}function callbackified(){var e=[];for(var t=0;t<arguments.length;t++){e.push(arguments[t])}var n=e.pop();if(typeof n!==\"function\"){throw new TypeError(\"The last argument must be of type Function\")}var o=this;var cb=function(){return n.apply(o,arguments)};r.apply(this,e).then((function(r){process.nextTick(cb.bind(null,null,r))}),(function(r){process.nextTick(callbackifyOnRejected.bind(null,r,cb))}))}Object.setPrototypeOf(callbackified,Object.getPrototypeOf(r));Object.defineProperties(callbackified,n(r));return callbackified}e.callbackify=callbackify},490:function(r,e,t){\"use strict\";var n=t(144);var o=t(349);var i=t(256);var a=i(\"Object.prototype.toString\");var f=t(942)();var u=f&&typeof Symbol.toStringTag===\"symbol\";var s=o();var y=i(\"String.prototype.slice\");var c={};var p=t(466);var l=Object.getPrototypeOf;if(u&&p&&l){n(s,(function(r){if(typeof __webpack_require__.g[r]===\"function\"){var e=new __webpack_require__.g[r];if(!(Symbol.toStringTag in e)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+r+\" does not have the property! Please report this.\")}var t=l(e);var n=p(t,Symbol.toStringTag);if(!n){var o=l(t);n=p(o,Symbol.toStringTag)}c[r]=n.get}}))}var g=function tryAllTypedArrays(r){var e=false;n(c,(function(t,n){if(!e){try{var o=t.call(r);if(o===n){e=o}}catch(r){}}}));return e};var b=t(994);r.exports=function whichTypedArray(r){if(!b(r)){return false}if(!u){return y(a(r),8,-1)}return g(r)}},349:function(r,e,t){\"use strict\";var n=t(992);r.exports=function availableTypedArrays(){return n([\"BigInt64Array\",\"BigUint64Array\",\"Float32Array\",\"Float64Array\",\"Int16Array\",\"Int32Array\",\"Int8Array\",\"Uint16Array\",\"Uint32Array\",\"Uint8Array\",\"Uint8ClampedArray\"],(function(r){return typeof __webpack_require__.g[r]===\"function\"}))}},466:function(r,e,t){\"use strict\";var n=t(500);var o=n(\"%Object.getOwnPropertyDescriptor%\",true);if(o){try{o([],\"length\")}catch(r){o=null}}r.exports=o}};var e={};function __nccwpck_require__(t){var n=e[t];if(n!==undefined){return n.exports}var o=e[t]={exports:{}};var i=true;try{r[t](o,o.exports,__nccwpck_require__);i=false}finally{if(i)delete e[t]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(177);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/compiled/util/util.js\n"));

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlIQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzPzg4NDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9oZWFkJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n"));

/***/ }),

/***/ "./node_modules/next/image.js":
/*!************************************!*\
  !*** ./node_modules/next/image.js ***!
  \************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/image */ \"./node_modules/next/dist/client/image.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9pbWFnZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyR0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvaW1hZ2UuanM/MDUzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9jbGllbnQvaW1hZ2UnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/image.js\n"));

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzPzc1YjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2xpbmsnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n"));

/***/ }),

/***/ "./node_modules/next/router.js":
/*!*************************************!*\
  !*** ./node_modules/next/router.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/router */ \"./node_modules/next/dist/client/router.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9yb3V0ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3JvdXRlci5qcz8xYmI2Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9yb3V0ZXInKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/router.js\n"));

/***/ }),

/***/ "./node_modules/next/script.js":
/*!*************************************!*\
  !*** ./node_modules/next/script.js ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/client/script */ \"./node_modules/next/dist/client/script.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9zY3JpcHQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsNkdBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L3NjcmlwdC5qcz9lNGJhIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9zY3JpcHQnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/script.js\n"));

/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-is/cjs/react-is.development.js\n"));

/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsSUFBSSxLQUFxQyxFQUFFLEVBRTFDLENBQUM7QUFDRixFQUFFLGdJQUF5RDtBQUMzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/YjMxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/react-is/index.js\n"));

/***/ }),

/***/ "./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js":
/*!***********************************************************************!*\
  !*** ./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js ***!
  \***********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"parse\": function() { return /* binding */ parse; }\n/* harmony export */ });\nvar UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3RhY2t0cmFjZS1wYXJzZXIvZGlzdC9zdGFjay10cmFjZS1wYXJzZXIuZXNtLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsK0RBQStEOztBQUUvRCwyREFBMkQ7O0FBRTNEOztBQUVBO0FBQ0E7QUFDQSw0QkFBNEI7O0FBRTVCLDRCQUE0Qjs7QUFFNUIsNEJBQTRCO0FBQzVCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9zdGFja3RyYWNlLXBhcnNlci9kaXN0L3N0YWNrLXRyYWNlLXBhcnNlci5lc20uanM/NmE0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgVU5LTk9XTl9GVU5DVElPTiA9ICc8dW5rbm93bj4nO1xuLyoqXG4gKiBUaGlzIHBhcnNlcyB0aGUgZGlmZmVyZW50IHN0YWNrIHRyYWNlcyBhbmQgcHV0cyB0aGVtIGludG8gb25lIGZvcm1hdFxuICogVGhpcyBib3Jyb3dzIGhlYXZpbHkgZnJvbSBUcmFjZUtpdCAoaHR0cHM6Ly9naXRodWIuY29tL2Nzbm92ZXIvVHJhY2VLaXQpXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RhY2tTdHJpbmcpIHtcbiAgdmFyIGxpbmVzID0gc3RhY2tTdHJpbmcuc3BsaXQoJ1xcbicpO1xuICByZXR1cm4gbGluZXMucmVkdWNlKGZ1bmN0aW9uIChzdGFjaywgbGluZSkge1xuICAgIHZhciBwYXJzZVJlc3VsdCA9IHBhcnNlQ2hyb21lKGxpbmUpIHx8IHBhcnNlV2luanMobGluZSkgfHwgcGFyc2VHZWNrbyhsaW5lKSB8fCBwYXJzZU5vZGUobGluZSkgfHwgcGFyc2VKU0MobGluZSk7XG5cbiAgICBpZiAocGFyc2VSZXN1bHQpIHtcbiAgICAgIHN0YWNrLnB1c2gocGFyc2VSZXN1bHQpO1xuICAgIH1cblxuICAgIHJldHVybiBzdGFjaztcbiAgfSwgW10pO1xufVxudmFyIGNocm9tZVJlID0gL15cXHMqYXQgKC4qPykgP1xcKCgoPzpmaWxlfGh0dHBzP3xibG9ifGNocm9tZS1leHRlbnNpb258bmF0aXZlfGV2YWx8d2VicGFja3w8YW5vbnltb3VzPnxcXC98W2Etel06XFxcXHxcXFxcXFxcXCkuKj8pKD86OihcXGQrKSk/KD86OihcXGQrKSk/XFwpP1xccyokL2k7XG52YXIgY2hyb21lRXZhbFJlID0gL1xcKChcXFMqKSg/OjooXFxkKykpKD86OihcXGQrKSlcXCkvO1xuXG5mdW5jdGlvbiBwYXJzZUNocm9tZShsaW5lKSB7XG4gIHZhciBwYXJ0cyA9IGNocm9tZVJlLmV4ZWMobGluZSk7XG5cbiAgaWYgKCFwYXJ0cykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIGlzTmF0aXZlID0gcGFydHNbMl0gJiYgcGFydHNbMl0uaW5kZXhPZignbmF0aXZlJykgPT09IDA7IC8vIHN0YXJ0IG9mIGxpbmVcblxuICB2YXIgaXNFdmFsID0gcGFydHNbMl0gJiYgcGFydHNbMl0uaW5kZXhPZignZXZhbCcpID09PSAwOyAvLyBzdGFydCBvZiBsaW5lXG5cbiAgdmFyIHN1Ym1hdGNoID0gY2hyb21lRXZhbFJlLmV4ZWMocGFydHNbMl0pO1xuXG4gIGlmIChpc0V2YWwgJiYgc3VibWF0Y2ggIT0gbnVsbCkge1xuICAgIC8vIHRocm93IG91dCBldmFsIGxpbmUvY29sdW1uIGFuZCB1c2UgdG9wLW1vc3QgbGluZS9jb2x1bW4gbnVtYmVyXG4gICAgcGFydHNbMl0gPSBzdWJtYXRjaFsxXTsgLy8gdXJsXG5cbiAgICBwYXJ0c1szXSA9IHN1Ym1hdGNoWzJdOyAvLyBsaW5lXG5cbiAgICBwYXJ0c1s0XSA9IHN1Ym1hdGNoWzNdOyAvLyBjb2x1bW5cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZmlsZTogIWlzTmF0aXZlID8gcGFydHNbMl0gOiBudWxsLFxuICAgIG1ldGhvZE5hbWU6IHBhcnRzWzFdIHx8IFVOS05PV05fRlVOQ1RJT04sXG4gICAgYXJndW1lbnRzOiBpc05hdGl2ZSA/IFtwYXJ0c1syXV0gOiBbXSxcbiAgICBsaW5lTnVtYmVyOiBwYXJ0c1szXSA/ICtwYXJ0c1szXSA6IG51bGwsXG4gICAgY29sdW1uOiBwYXJ0c1s0XSA/ICtwYXJ0c1s0XSA6IG51bGxcbiAgfTtcbn1cblxudmFyIHdpbmpzUmUgPSAvXlxccyphdCAoPzooKD86XFxbb2JqZWN0IG9iamVjdFxcXSk/LispICk/XFwoPygoPzpmaWxlfG1zLWFwcHh8aHR0cHM/fHdlYnBhY2t8YmxvYik6Lio/KTooXFxkKykoPzo6KFxcZCspKT9cXCk/XFxzKiQvaTtcblxuZnVuY3Rpb24gcGFyc2VXaW5qcyhsaW5lKSB7XG4gIHZhciBwYXJ0cyA9IHdpbmpzUmUuZXhlYyhsaW5lKTtcblxuICBpZiAoIXBhcnRzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZpbGU6IHBhcnRzWzJdLFxuICAgIG1ldGhvZE5hbWU6IHBhcnRzWzFdIHx8IFVOS05PV05fRlVOQ1RJT04sXG4gICAgYXJndW1lbnRzOiBbXSxcbiAgICBsaW5lTnVtYmVyOiArcGFydHNbM10sXG4gICAgY29sdW1uOiBwYXJ0c1s0XSA/ICtwYXJ0c1s0XSA6IG51bGxcbiAgfTtcbn1cblxudmFyIGdlY2tvUmUgPSAvXlxccyooLio/KSg/OlxcKCguKj8pXFwpKT8oPzpefEApKCg/OmZpbGV8aHR0cHM/fGJsb2J8Y2hyb21lfHdlYnBhY2t8cmVzb3VyY2V8XFxbbmF0aXZlKS4qP3xbXkBdKmJ1bmRsZSkoPzo6KFxcZCspKT8oPzo6KFxcZCspKT9cXHMqJC9pO1xudmFyIGdlY2tvRXZhbFJlID0gLyhcXFMrKSBsaW5lIChcXGQrKSg/OiA+IGV2YWwgbGluZSBcXGQrKSogPiBldmFsL2k7XG5cbmZ1bmN0aW9uIHBhcnNlR2Vja28obGluZSkge1xuICB2YXIgcGFydHMgPSBnZWNrb1JlLmV4ZWMobGluZSk7XG5cbiAgaWYgKCFwYXJ0cykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgdmFyIGlzRXZhbCA9IHBhcnRzWzNdICYmIHBhcnRzWzNdLmluZGV4T2YoJyA+IGV2YWwnKSA+IC0xO1xuICB2YXIgc3VibWF0Y2ggPSBnZWNrb0V2YWxSZS5leGVjKHBhcnRzWzNdKTtcblxuICBpZiAoaXNFdmFsICYmIHN1Ym1hdGNoICE9IG51bGwpIHtcbiAgICAvLyB0aHJvdyBvdXQgZXZhbCBsaW5lL2NvbHVtbiBhbmQgdXNlIHRvcC1tb3N0IGxpbmUgbnVtYmVyXG4gICAgcGFydHNbM10gPSBzdWJtYXRjaFsxXTtcbiAgICBwYXJ0c1s0XSA9IHN1Ym1hdGNoWzJdO1xuICAgIHBhcnRzWzVdID0gbnVsbDsgLy8gbm8gY29sdW1uIHdoZW4gZXZhbFxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmaWxlOiBwYXJ0c1szXSxcbiAgICBtZXRob2ROYW1lOiBwYXJ0c1sxXSB8fCBVTktOT1dOX0ZVTkNUSU9OLFxuICAgIGFyZ3VtZW50czogcGFydHNbMl0gPyBwYXJ0c1syXS5zcGxpdCgnLCcpIDogW10sXG4gICAgbGluZU51bWJlcjogcGFydHNbNF0gPyArcGFydHNbNF0gOiBudWxsLFxuICAgIGNvbHVtbjogcGFydHNbNV0gPyArcGFydHNbNV0gOiBudWxsXG4gIH07XG59XG5cbnZhciBqYXZhU2NyaXB0Q29yZVJlID0gL15cXHMqKD86KFteQF0qKSg/OlxcKCguKj8pXFwpKT9AKT8oXFxTLio/KTooXFxkKykoPzo6KFxcZCspKT9cXHMqJC9pO1xuXG5mdW5jdGlvbiBwYXJzZUpTQyhsaW5lKSB7XG4gIHZhciBwYXJ0cyA9IGphdmFTY3JpcHRDb3JlUmUuZXhlYyhsaW5lKTtcblxuICBpZiAoIXBhcnRzKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGZpbGU6IHBhcnRzWzNdLFxuICAgIG1ldGhvZE5hbWU6IHBhcnRzWzFdIHx8IFVOS05PV05fRlVOQ1RJT04sXG4gICAgYXJndW1lbnRzOiBbXSxcbiAgICBsaW5lTnVtYmVyOiArcGFydHNbNF0sXG4gICAgY29sdW1uOiBwYXJ0c1s1XSA/ICtwYXJ0c1s1XSA6IG51bGxcbiAgfTtcbn1cblxudmFyIG5vZGVSZSA9IC9eXFxzKmF0ICg/OigoPzpcXFtvYmplY3Qgb2JqZWN0XFxdKT9bXlxcXFwvXSsoPzogXFxbYXMgXFxTK1xcXSk/KSApP1xcKD8oLio/KTooXFxkKykoPzo6KFxcZCspKT9cXCk/XFxzKiQvaTtcblxuZnVuY3Rpb24gcGFyc2VOb2RlKGxpbmUpIHtcbiAgdmFyIHBhcnRzID0gbm9kZVJlLmV4ZWMobGluZSk7XG5cbiAgaWYgKCFwYXJ0cykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBmaWxlOiBwYXJ0c1syXSxcbiAgICBtZXRob2ROYW1lOiBwYXJ0c1sxXSB8fCBVTktOT1dOX0ZVTkNUSU9OLFxuICAgIGFyZ3VtZW50czogW10sXG4gICAgbGluZU51bWJlcjogK3BhcnRzWzNdLFxuICAgIGNvbHVtbjogcGFydHNbNF0gPyArcGFydHNbNF0gOiBudWxsXG4gIH07XG59XG5cbmV4cG9ydCB7IHBhcnNlIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js\n"));

/***/ }),

/***/ "./node_modules/decode-uri-component/index.js":
/*!****************************************************!*\
  !*** ./node_modules/decode-uri-component/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ decodeUriComponent; }\n/* harmony export */ });\nconst token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nfunction decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZGVjb2RlLXVyaS1jb21wb25lbnQvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHlCQUF5QixFQUFFO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLGtCQUFrQixtQkFBbUI7QUFDckM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRWU7QUFDZjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9kZWNvZGUtdXJpLWNvbXBvbmVudC9pbmRleC5qcz9lODIxIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRva2VuID0gJyVbYS1mMC05XXsyfSc7XG5jb25zdCBzaW5nbGVNYXRjaGVyID0gbmV3IFJlZ0V4cCgnKCcgKyB0b2tlbiArICcpfChbXiVdKz8pJywgJ2dpJyk7XG5jb25zdCBtdWx0aU1hdGNoZXIgPSBuZXcgUmVnRXhwKCcoJyArIHRva2VuICsgJykrJywgJ2dpJyk7XG5cbmZ1bmN0aW9uIGRlY29kZUNvbXBvbmVudHMoY29tcG9uZW50cywgc3BsaXQpIHtcblx0dHJ5IHtcblx0XHQvLyBUcnkgdG8gZGVjb2RlIHRoZSBlbnRpcmUgc3RyaW5nIGZpcnN0XG5cdFx0cmV0dXJuIFtkZWNvZGVVUklDb21wb25lbnQoY29tcG9uZW50cy5qb2luKCcnKSldO1xuXHR9IGNhdGNoIHtcblx0XHQvLyBEbyBub3RoaW5nXG5cdH1cblxuXHRpZiAoY29tcG9uZW50cy5sZW5ndGggPT09IDEpIHtcblx0XHRyZXR1cm4gY29tcG9uZW50cztcblx0fVxuXG5cdHNwbGl0ID0gc3BsaXQgfHwgMTtcblxuXHQvLyBTcGxpdCB0aGUgYXJyYXkgaW4gMiBwYXJ0c1xuXHRjb25zdCBsZWZ0ID0gY29tcG9uZW50cy5zbGljZSgwLCBzcGxpdCk7XG5cdGNvbnN0IHJpZ2h0ID0gY29tcG9uZW50cy5zbGljZShzcGxpdCk7XG5cblx0cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuY2FsbChbXSwgZGVjb2RlQ29tcG9uZW50cyhsZWZ0KSwgZGVjb2RlQ29tcG9uZW50cyhyaWdodCkpO1xufVxuXG5mdW5jdGlvbiBkZWNvZGUoaW5wdXQpIHtcblx0dHJ5IHtcblx0XHRyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGlucHV0KTtcblx0fSBjYXRjaCB7XG5cdFx0bGV0IHRva2VucyA9IGlucHV0Lm1hdGNoKHNpbmdsZU1hdGNoZXIpIHx8IFtdO1xuXG5cdFx0Zm9yIChsZXQgaSA9IDE7IGkgPCB0b2tlbnMubGVuZ3RoOyBpKyspIHtcblx0XHRcdGlucHV0ID0gZGVjb2RlQ29tcG9uZW50cyh0b2tlbnMsIGkpLmpvaW4oJycpO1xuXG5cdFx0XHR0b2tlbnMgPSBpbnB1dC5tYXRjaChzaW5nbGVNYXRjaGVyKSB8fCBbXTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaW5wdXQ7XG5cdH1cbn1cblxuZnVuY3Rpb24gY3VzdG9tRGVjb2RlVVJJQ29tcG9uZW50KGlucHV0KSB7XG5cdC8vIEtlZXAgdHJhY2sgb2YgYWxsIHRoZSByZXBsYWNlbWVudHMgYW5kIHByZWZpbGwgdGhlIG1hcCB3aXRoIHRoZSBgQk9NYFxuXHRjb25zdCByZXBsYWNlTWFwID0ge1xuXHRcdCclRkUlRkYnOiAnXFx1RkZGRFxcdUZGRkQnLFxuXHRcdCclRkYlRkUnOiAnXFx1RkZGRFxcdUZGRkQnLFxuXHR9O1xuXG5cdGxldCBtYXRjaCA9IG11bHRpTWF0Y2hlci5leGVjKGlucHV0KTtcblx0d2hpbGUgKG1hdGNoKSB7XG5cdFx0dHJ5IHtcblx0XHRcdC8vIERlY29kZSBhcyBiaWcgY2h1bmtzIGFzIHBvc3NpYmxlXG5cdFx0XHRyZXBsYWNlTWFwW21hdGNoWzBdXSA9IGRlY29kZVVSSUNvbXBvbmVudChtYXRjaFswXSk7XG5cdFx0fSBjYXRjaCB7XG5cdFx0XHRjb25zdCByZXN1bHQgPSBkZWNvZGUobWF0Y2hbMF0pO1xuXG5cdFx0XHRpZiAocmVzdWx0ICE9PSBtYXRjaFswXSkge1xuXHRcdFx0XHRyZXBsYWNlTWFwW21hdGNoWzBdXSA9IHJlc3VsdDtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRtYXRjaCA9IG11bHRpTWF0Y2hlci5leGVjKGlucHV0KTtcblx0fVxuXG5cdC8vIEFkZCBgJUMyYCBhdCB0aGUgZW5kIG9mIHRoZSBtYXAgdG8gbWFrZSBzdXJlIGl0IGRvZXMgbm90IHJlcGxhY2UgdGhlIGNvbWJpbmF0b3IgYmVmb3JlIGV2ZXJ5dGhpbmcgZWxzZVxuXHRyZXBsYWNlTWFwWyclQzInXSA9ICdcXHVGRkZEJztcblxuXHRjb25zdCBlbnRyaWVzID0gT2JqZWN0LmtleXMocmVwbGFjZU1hcCk7XG5cblx0Zm9yIChjb25zdCBrZXkgb2YgZW50cmllcykge1xuXHRcdC8vIFJlcGxhY2UgYWxsIGRlY29kZWQgY29tcG9uZW50c1xuXHRcdGlucHV0ID0gaW5wdXQucmVwbGFjZShuZXcgUmVnRXhwKGtleSwgJ2cnKSwgcmVwbGFjZU1hcFtrZXldKTtcblx0fVxuXG5cdHJldHVybiBpbnB1dDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGVjb2RlVXJpQ29tcG9uZW50KGVuY29kZWRVUkkpIHtcblx0aWYgKHR5cGVvZiBlbmNvZGVkVVJJICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIGBlbmNvZGVkVVJJYCB0byBiZSBvZiB0eXBlIGBzdHJpbmdgLCBnb3QgYCcgKyB0eXBlb2YgZW5jb2RlZFVSSSArICdgJyk7XG5cdH1cblxuXHR0cnkge1xuXHRcdC8vIFRyeSB0aGUgYnVpbHQgaW4gZGVjb2RlciBmaXJzdFxuXHRcdHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoZW5jb2RlZFVSSSk7XG5cdH0gY2F0Y2gge1xuXHRcdC8vIEZhbGxiYWNrIHRvIGEgbW9yZSBhZHZhbmNlZCBkZWNvZGVyXG5cdFx0cmV0dXJuIGN1c3RvbURlY29kZVVSSUNvbXBvbmVudChlbmNvZGVkVVJJKTtcblx0fVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/decode-uri-component/index.js\n"));

/***/ }),

/***/ "./node_modules/filter-obj/index.js":
/*!******************************************!*\
  !*** ./node_modules/filter-obj/index.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"excludeKeys\": function() { return /* binding */ excludeKeys; },\n/* harmony export */   \"includeKeys\": function() { return /* binding */ includeKeys; }\n/* harmony export */ });\nfunction includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlsdGVyLW9iai9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvZmlsdGVyLW9iai9pbmRleC5qcz8zNTUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpbmNsdWRlS2V5cyhvYmplY3QsIHByZWRpY2F0ZSkge1xuXHRjb25zdCByZXN1bHQgPSB7fTtcblxuXHRpZiAoQXJyYXkuaXNBcnJheShwcmVkaWNhdGUpKSB7XG5cdFx0Zm9yIChjb25zdCBrZXkgb2YgcHJlZGljYXRlKSB7XG5cdFx0XHRjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIGtleSk7XG5cdFx0XHRpZiAoZGVzY3JpcHRvcj8uZW51bWVyYWJsZSkge1xuXHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkocmVzdWx0LCBrZXksIGRlc2NyaXB0b3IpO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIHtcblx0XHQvLyBgUmVmbGVjdC5vd25LZXlzKClgIGlzIHJlcXVpcmVkIHRvIHJldHJpZXZlIHN5bWJvbCBwcm9wZXJ0aWVzXG5cdFx0Zm9yIChjb25zdCBrZXkgb2YgUmVmbGVjdC5vd25LZXlzKG9iamVjdCkpIHtcblx0XHRcdGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwga2V5KTtcblx0XHRcdGlmIChkZXNjcmlwdG9yLmVudW1lcmFibGUpIHtcblx0XHRcdFx0Y29uc3QgdmFsdWUgPSBvYmplY3Rba2V5XTtcblx0XHRcdFx0aWYgKHByZWRpY2F0ZShrZXksIHZhbHVlLCBvYmplY3QpKSB7XG5cdFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KHJlc3VsdCwga2V5LCBkZXNjcmlwdG9yKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGNsdWRlS2V5cyhvYmplY3QsIHByZWRpY2F0ZSkge1xuXHRpZiAoQXJyYXkuaXNBcnJheShwcmVkaWNhdGUpKSB7XG5cdFx0Y29uc3Qgc2V0ID0gbmV3IFNldChwcmVkaWNhdGUpO1xuXHRcdHJldHVybiBpbmNsdWRlS2V5cyhvYmplY3QsIGtleSA9PiAhc2V0LmhhcyhrZXkpKTtcblx0fVxuXG5cdHJldHVybiBpbmNsdWRlS2V5cyhvYmplY3QsIChrZXksIHZhbHVlLCBvYmplY3QpID0+ICFwcmVkaWNhdGUoa2V5LCB2YWx1ZSwgb2JqZWN0KSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/filter-obj/index.js\n"));

/***/ }),

/***/ "./node_modules/query-string/base.js":
/*!*******************************************!*\
  !*** ./node_modules/query-string/base.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"exclude\": function() { return /* binding */ exclude; },\n/* harmony export */   \"extract\": function() { return /* binding */ extract; },\n/* harmony export */   \"parse\": function() { return /* binding */ parse; },\n/* harmony export */   \"parseUrl\": function() { return /* binding */ parseUrl; },\n/* harmony export */   \"pick\": function() { return /* binding */ pick; },\n/* harmony export */   \"stringify\": function() { return /* binding */ stringify; },\n/* harmony export */   \"stringifyUrl\": function() { return /* binding */ stringifyUrl; }\n/* harmony export */ });\n/* harmony import */ var decode_uri_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! decode-uri-component */ \"./node_modules/decode-uri-component/index.js\");\n/* harmony import */ var split_on_first__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! split-on-first */ \"./node_modules/split-on-first/index.js\");\n/* harmony import */ var filter_obj__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! filter-obj */ \"./node_modules/filter-obj/index.js\");\n\n\n\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn (0,decode_uri_component__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = (0,split_on_first__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nfunction stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nfunction parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = (0,split_on_first__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nfunction stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nfunction pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: (0,filter_obj__WEBPACK_IMPORTED_MODULE_2__.includeKeys)(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nfunction exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/query-string/base.js\n"));

/***/ }),

/***/ "./node_modules/query-string/index.js":
/*!********************************************!*\
  !*** ./node_modules/query-string/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"./node_modules/query-string/base.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_base_js__WEBPACK_IMPORTED_MODULE_0__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcXVlcnktc3RyaW5nL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7O0FBQXlDOztBQUV6QywrREFBZSxxQ0FBVyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9xdWVyeS1zdHJpbmcvaW5kZXguanM/MGE2OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBxdWVyeVN0cmluZyBmcm9tICcuL2Jhc2UuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBxdWVyeVN0cmluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/query-string/index.js\n"));

/***/ }),

/***/ "./node_modules/split-on-first/index.js":
/*!**********************************************!*\
  !*** ./node_modules/split-on-first/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ splitOnFirst; }\n/* harmony export */ });\nfunction splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3BsaXQtb24tZmlyc3QvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvc3BsaXQtb24tZmlyc3QvaW5kZXguanM/OTAzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzcGxpdE9uRmlyc3Qoc3RyaW5nLCBzZXBhcmF0b3IpIHtcblx0aWYgKCEodHlwZW9mIHN0cmluZyA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHNlcGFyYXRvciA9PT0gJ3N0cmluZycpKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgdGhlIGFyZ3VtZW50cyB0byBiZSBvZiB0eXBlIGBzdHJpbmdgJyk7XG5cdH1cblxuXHRpZiAoc3RyaW5nID09PSAnJyB8fCBzZXBhcmF0b3IgPT09ICcnKSB7XG5cdFx0cmV0dXJuIFtdO1xuXHR9XG5cblx0Y29uc3Qgc2VwYXJhdG9ySW5kZXggPSBzdHJpbmcuaW5kZXhPZihzZXBhcmF0b3IpO1xuXG5cdGlmIChzZXBhcmF0b3JJbmRleCA9PT0gLTEpIHtcblx0XHRyZXR1cm4gW107XG5cdH1cblxuXHRyZXR1cm4gW1xuXHRcdHN0cmluZy5zbGljZSgwLCBzZXBhcmF0b3JJbmRleCksXG5cdFx0c3RyaW5nLnNsaWNlKHNlcGFyYXRvckluZGV4ICsgc2VwYXJhdG9yLmxlbmd0aClcblx0XTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/split-on-first/index.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fhina01%2Fse-jw-next-app%2Fsrc%2Fpages%2Findex.tsx&page=%2F!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);